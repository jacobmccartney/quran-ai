import {
  __export
} from "./chunk-HKJ2B2AA.js";

// ../../../node_modules/vue/dist/vue.runtime.esm-bundler.js
var vue_runtime_esm_bundler_exports = {};
__export(vue_runtime_esm_bundler_exports, {
  BaseTransition: () => BaseTransition,
  BaseTransitionPropsValidators: () => BaseTransitionPropsValidators,
  Comment: () => Comment,
  DeprecationTypes: () => DeprecationTypes,
  EffectScope: () => EffectScope,
  ErrorCodes: () => ErrorCodes,
  ErrorTypeStrings: () => ErrorTypeStrings,
  Fragment: () => Fragment,
  KeepAlive: () => KeepAlive,
  ReactiveEffect: () => ReactiveEffect,
  Static: () => Static,
  Suspense: () => Suspense,
  Teleport: () => Teleport,
  Text: () => Text,
  TrackOpTypes: () => TrackOpTypes,
  Transition: () => Transition,
  TransitionGroup: () => TransitionGroup,
  TriggerOpTypes: () => TriggerOpTypes,
  VueElement: () => VueElement,
  assertNumber: () => assertNumber,
  callWithAsyncErrorHandling: () => callWithAsyncErrorHandling,
  callWithErrorHandling: () => callWithErrorHandling,
  camelize: () => camelize,
  capitalize: () => capitalize,
  cloneVNode: () => cloneVNode,
  compatUtils: () => compatUtils,
  compile: () => compile2,
  computed: () => computed2,
  createApp: () => createApp,
  createBlock: () => createBlock,
  createCommentVNode: () => createCommentVNode,
  createElementBlock: () => createElementBlock,
  createElementVNode: () => createBaseVNode,
  createHydrationRenderer: () => createHydrationRenderer,
  createPropsRestProxy: () => createPropsRestProxy,
  createRenderer: () => createRenderer,
  createSSRApp: () => createSSRApp,
  createSlots: () => createSlots,
  createStaticVNode: () => createStaticVNode,
  createTextVNode: () => createTextVNode,
  createVNode: () => createVNode,
  customRef: () => customRef,
  defineAsyncComponent: () => defineAsyncComponent,
  defineComponent: () => defineComponent,
  defineCustomElement: () => defineCustomElement,
  defineEmits: () => defineEmits,
  defineExpose: () => defineExpose,
  defineModel: () => defineModel,
  defineOptions: () => defineOptions,
  defineProps: () => defineProps,
  defineSSRCustomElement: () => defineSSRCustomElement,
  defineSlots: () => defineSlots,
  devtools: () => devtools,
  effect: () => effect,
  effectScope: () => effectScope,
  getCurrentInstance: () => getCurrentInstance,
  getCurrentScope: () => getCurrentScope,
  getCurrentWatcher: () => getCurrentWatcher,
  getTransitionRawChildren: () => getTransitionRawChildren,
  guardReactiveProps: () => guardReactiveProps,
  h: () => h,
  handleError: () => handleError,
  hasInjectionContext: () => hasInjectionContext,
  hydrate: () => hydrate,
  hydrateOnIdle: () => hydrateOnIdle,
  hydrateOnInteraction: () => hydrateOnInteraction,
  hydrateOnMediaQuery: () => hydrateOnMediaQuery,
  hydrateOnVisible: () => hydrateOnVisible,
  initCustomFormatter: () => initCustomFormatter,
  initDirectivesForSSR: () => initDirectivesForSSR,
  inject: () => inject,
  isMemoSame: () => isMemoSame,
  isProxy: () => isProxy,
  isReactive: () => isReactive,
  isReadonly: () => isReadonly,
  isRef: () => isRef2,
  isRuntimeOnly: () => isRuntimeOnly,
  isShallow: () => isShallow,
  isVNode: () => isVNode,
  markRaw: () => markRaw,
  mergeDefaults: () => mergeDefaults,
  mergeModels: () => mergeModels,
  mergeProps: () => mergeProps,
  nextTick: () => nextTick,
  normalizeClass: () => normalizeClass,
  normalizeProps: () => normalizeProps,
  normalizeStyle: () => normalizeStyle,
  onActivated: () => onActivated,
  onBeforeMount: () => onBeforeMount,
  onBeforeUnmount: () => onBeforeUnmount,
  onBeforeUpdate: () => onBeforeUpdate,
  onDeactivated: () => onDeactivated,
  onErrorCaptured: () => onErrorCaptured,
  onMounted: () => onMounted,
  onRenderTracked: () => onRenderTracked,
  onRenderTriggered: () => onRenderTriggered,
  onScopeDispose: () => onScopeDispose,
  onServerPrefetch: () => onServerPrefetch,
  onUnmounted: () => onUnmounted,
  onUpdated: () => onUpdated,
  onWatcherCleanup: () => onWatcherCleanup,
  openBlock: () => openBlock,
  popScopeId: () => popScopeId,
  provide: () => provide,
  proxyRefs: () => proxyRefs,
  pushScopeId: () => pushScopeId,
  queuePostFlushCb: () => queuePostFlushCb,
  reactive: () => reactive,
  readonly: () => readonly,
  ref: () => ref,
  registerRuntimeCompiler: () => registerRuntimeCompiler,
  render: () => render,
  renderList: () => renderList,
  renderSlot: () => renderSlot,
  resolveComponent: () => resolveComponent,
  resolveDirective: () => resolveDirective,
  resolveDynamicComponent: () => resolveDynamicComponent,
  resolveFilter: () => resolveFilter,
  resolveTransitionHooks: () => resolveTransitionHooks,
  setBlockTracking: () => setBlockTracking,
  setDevtoolsHook: () => setDevtoolsHook,
  setTransitionHooks: () => setTransitionHooks,
  shallowReactive: () => shallowReactive,
  shallowReadonly: () => shallowReadonly,
  shallowRef: () => shallowRef,
  ssrContextKey: () => ssrContextKey,
  ssrUtils: () => ssrUtils,
  stop: () => stop,
  toDisplayString: () => toDisplayString,
  toHandlerKey: () => toHandlerKey,
  toHandlers: () => toHandlers,
  toRaw: () => toRaw,
  toRef: () => toRef,
  toRefs: () => toRefs,
  toValue: () => toValue,
  transformVNodeArgs: () => transformVNodeArgs,
  triggerRef: () => triggerRef,
  unref: () => unref,
  useAttrs: () => useAttrs,
  useCssModule: () => useCssModule,
  useCssVars: () => useCssVars,
  useHost: () => useHost,
  useId: () => useId,
  useModel: () => useModel,
  useSSRContext: () => useSSRContext,
  useShadowRoot: () => useShadowRoot,
  useSlots: () => useSlots,
  useTemplateRef: () => useTemplateRef,
  useTransitionState: () => useTransitionState,
  vModelCheckbox: () => vModelCheckbox,
  vModelDynamic: () => vModelDynamic,
  vModelRadio: () => vModelRadio,
  vModelSelect: () => vModelSelect,
  vModelText: () => vModelText,
  vShow: () => vShow,
  version: () => version,
  warn: () => warn2,
  watch: () => watch2,
  watchEffect: () => watchEffect,
  watchPostEffect: () => watchPostEffect,
  watchSyncEffect: () => watchSyncEffect,
  withAsyncContext: () => withAsyncContext,
  withCtx: () => withCtx,
  withDefaults: () => withDefaults,
  withDirectives: () => withDirectives,
  withKeys: () => withKeys,
  withMemo: () => withMemo,
  withModifiers: () => withModifiers,
  withScopeId: () => withScopeId
});

// ../../../node_modules/@vue/shared/dist/shared.esm-bundler.js
function makeMap(str) {
  const map2 = /* @__PURE__ */ Object.create(null);
  for (const key2 of str.split(",")) map2[key2] = 1;
  return (val) => val in map2;
}
var EMPTY_OBJ = true ? Object.freeze({}) : {};
var EMPTY_ARR = true ? Object.freeze([]) : [];
var NOOP = () => {
};
var NO = () => false;
var isOn = (key2) => key2.charCodeAt(0) === 111 && key2.charCodeAt(1) === 110 && // uppercase letter
(key2.charCodeAt(2) > 122 || key2.charCodeAt(2) < 97);
var isModelListener = (key2) => key2.startsWith("onUpdate:");
var extend = Object.assign;
var remove = (arr, el) => {
  const i = arr.indexOf(el);
  if (i > -1) {
    arr.splice(i, 1);
  }
};
var hasOwnProperty = Object.prototype.hasOwnProperty;
var hasOwn = (val, key2) => hasOwnProperty.call(val, key2);
var isArray = Array.isArray;
var isMap = (val) => toTypeString(val) === "[object Map]";
var isSet = (val) => toTypeString(val) === "[object Set]";
var isDate = (val) => toTypeString(val) === "[object Date]";
var isRegExp = (val) => toTypeString(val) === "[object RegExp]";
var isFunction = (val) => typeof val === "function";
var isString = (val) => typeof val === "string";
var isSymbol = (val) => typeof val === "symbol";
var isObject = (val) => val !== null && typeof val === "object";
var isPromise = (val) => {
  return (isObject(val) || isFunction(val)) && isFunction(val.then) && isFunction(val.catch);
};
var objectToString = Object.prototype.toString;
var toTypeString = (value) => objectToString.call(value);
var toRawType = (value) => {
  return toTypeString(value).slice(8, -1);
};
var isPlainObject = (val) => toTypeString(val) === "[object Object]";
var isIntegerKey = (key2) => isString(key2) && key2 !== "NaN" && key2[0] !== "-" && "" + parseInt(key2, 10) === key2;
var isReservedProp = makeMap(
  // the leading comma is intentional so empty string "" is also included
  ",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"
);
var isBuiltInDirective = makeMap(
  "bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo"
);
var cacheStringFunction = (fn2) => {
  const cache = /* @__PURE__ */ Object.create(null);
  return ((str) => {
    const hit = cache[str];
    return hit || (cache[str] = fn2(str));
  });
};
var camelizeRE = /-\w/g;
var camelize = cacheStringFunction(
  (str) => {
    return str.replace(camelizeRE, (c2) => c2.slice(1).toUpperCase());
  }
);
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = cacheStringFunction(
  (str) => str.replace(hyphenateRE, "-$1").toLowerCase()
);
var capitalize = cacheStringFunction((str) => {
  return str.charAt(0).toUpperCase() + str.slice(1);
});
var toHandlerKey = cacheStringFunction(
  (str) => {
    const s = str ? `on${capitalize(str)}` : ``;
    return s;
  }
);
var hasChanged = (value, oldValue) => !Object.is(value, oldValue);
var invokeArrayFns = (fns, ...arg) => {
  for (let i = 0; i < fns.length; i++) {
    fns[i](...arg);
  }
};
var def = (obj, key2, value, writable = false) => {
  Object.defineProperty(obj, key2, {
    configurable: true,
    enumerable: false,
    writable,
    value
  });
};
var looseToNumber = (val) => {
  const n = parseFloat(val);
  return isNaN(n) ? val : n;
};
var toNumber = (val) => {
  const n = isString(val) ? Number(val) : NaN;
  return isNaN(n) ? val : n;
};
var _globalThis;
var getGlobalThis = () => {
  return _globalThis || (_globalThis = typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {});
};
var GLOBALS_ALLOWED = "Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,console,Error,Symbol";
var isGloballyAllowed = makeMap(GLOBALS_ALLOWED);
function normalizeStyle(value) {
  if (isArray(value)) {
    const res = {};
    for (let i = 0; i < value.length; i++) {
      const item = value[i];
      const normalized = isString(item) ? parseStringStyle(item) : normalizeStyle(item);
      if (normalized) {
        for (const key2 in normalized) {
          res[key2] = normalized[key2];
        }
      }
    }
    return res;
  } else if (isString(value) || isObject(value)) {
    return value;
  }
}
var listDelimiterRE = /;(?![^(]*\))/g;
var propertyDelimiterRE = /:([^]+)/;
var styleCommentRE = /\/\*[^]*?\*\//g;
function parseStringStyle(cssText) {
  const ret = {};
  cssText.replace(styleCommentRE, "").split(listDelimiterRE).forEach((item) => {
    if (item) {
      const tmp = item.split(propertyDelimiterRE);
      tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return ret;
}
function stringifyStyle(styles) {
  if (!styles) return "";
  if (isString(styles)) return styles;
  let ret = "";
  for (const key2 in styles) {
    const value = styles[key2];
    if (isString(value) || typeof value === "number") {
      const normalizedKey = key2.startsWith(`--`) ? key2 : hyphenate(key2);
      ret += `${normalizedKey}:${value};`;
    }
  }
  return ret;
}
function normalizeClass(value) {
  let res = "";
  if (isString(value)) {
    res = value;
  } else if (isArray(value)) {
    for (let i = 0; i < value.length; i++) {
      const normalized = normalizeClass(value[i]);
      if (normalized) {
        res += normalized + " ";
      }
    }
  } else if (isObject(value)) {
    for (const name in value) {
      if (value[name]) {
        res += name + " ";
      }
    }
  }
  return res.trim();
}
function normalizeProps(props) {
  if (!props) return null;
  let { class: klass, style } = props;
  if (klass && !isString(klass)) {
    props.class = normalizeClass(klass);
  }
  if (style) {
    props.style = normalizeStyle(style);
  }
  return props;
}
var HTML_TAGS = "html,body,base,head,link,meta,style,title,address,article,aside,footer,header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot";
var SVG_TAGS = "svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistantLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view";
var MATH_TAGS = "annotation,annotation-xml,maction,maligngroup,malignmark,math,menclose,merror,mfenced,mfrac,mfraction,mglyph,mi,mlabeledtr,mlongdiv,mmultiscripts,mn,mo,mover,mpadded,mphantom,mprescripts,mroot,mrow,ms,mscarries,mscarry,msgroup,msline,mspace,msqrt,msrow,mstack,mstyle,msub,msubsup,msup,mtable,mtd,mtext,mtr,munder,munderover,none,semantics";
var VOID_TAGS = "area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr";
var isHTMLTag = makeMap(HTML_TAGS);
var isSVGTag = makeMap(SVG_TAGS);
var isMathMLTag = makeMap(MATH_TAGS);
var isVoidTag = makeMap(VOID_TAGS);
var specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;
var isSpecialBooleanAttr = makeMap(specialBooleanAttrs);
var isBooleanAttr = makeMap(
  specialBooleanAttrs + `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,inert,loop,open,required,reversed,scoped,seamless,checked,muted,multiple,selected`
);
function includeBooleanAttr(value) {
  return !!value || value === "";
}
var isKnownHtmlAttr = makeMap(
  `accept,accept-charset,accesskey,action,align,allow,alt,async,autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,border,buffered,capture,challenge,charset,checked,cite,class,code,codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,formaction,formenctype,formmethod,formnovalidate,formtarget,headers,height,hidden,high,href,hreflang,http-equiv,icon,id,importance,inert,integrity,ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,start,step,style,summary,tabindex,target,title,translate,type,usemap,value,width,wrap`
);
var isKnownSvgAttr = makeMap(
  `xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,color-interpolation-filters,color-profile,color-rendering,contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,font-family,font-size,font-size-adjust,font-stretch,font-style,font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,overflow,overline-position,overline-thickness,panose-1,paint-order,path,pathLength,patternContentUnits,patternTransform,patternUnits,ping,pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,specularConstant,specularExponent,speed,spreadMethod,startOffset,stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,string,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,text-decoration,text-rendering,textLength,to,transform,transform-origin,type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xmlns:xlink,xml:base,xml:lang,xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`
);
var isKnownMathMLAttr = makeMap(
  `accent,accentunder,actiontype,align,alignmentscope,altimg,altimg-height,altimg-valign,altimg-width,alttext,bevelled,close,columnsalign,columnlines,columnspan,denomalign,depth,dir,display,displaystyle,encoding,equalcolumns,equalrows,fence,fontstyle,fontweight,form,frame,framespacing,groupalign,height,href,id,indentalign,indentalignfirst,indentalignlast,indentshift,indentshiftfirst,indentshiftlast,indextype,justify,largetop,largeop,lquote,lspace,mathbackground,mathcolor,mathsize,mathvariant,maxsize,minlabelspacing,mode,other,overflow,position,rowalign,rowlines,rowspan,rquote,rspace,scriptlevel,scriptminsize,scriptsizemultiplier,selection,separator,separators,shift,side,src,stackalign,stretchy,subscriptshift,superscriptshift,symmetric,voffset,width,widths,xlink:href,xlink:show,xlink:type,xmlns`
);
function isRenderableAttrValue(value) {
  if (value == null) {
    return false;
  }
  const type = typeof value;
  return type === "string" || type === "number" || type === "boolean";
}
var cssVarNameEscapeSymbolsRE = /[ !"#$%&'()*+,./:;<=>?@[\\\]^`{|}~]/g;
function getEscapedCssVarName(key2, doubleEscape) {
  return key2.replace(
    cssVarNameEscapeSymbolsRE,
    (s) => doubleEscape ? s === '"' ? '\\\\\\"' : `\\\\${s}` : `\\${s}`
  );
}
function looseCompareArrays(a2, b2) {
  if (a2.length !== b2.length) return false;
  let equal = true;
  for (let i = 0; equal && i < a2.length; i++) {
    equal = looseEqual(a2[i], b2[i]);
  }
  return equal;
}
function looseEqual(a2, b2) {
  if (a2 === b2) return true;
  let aValidType = isDate(a2);
  let bValidType = isDate(b2);
  if (aValidType || bValidType) {
    return aValidType && bValidType ? a2.getTime() === b2.getTime() : false;
  }
  aValidType = isSymbol(a2);
  bValidType = isSymbol(b2);
  if (aValidType || bValidType) {
    return a2 === b2;
  }
  aValidType = isArray(a2);
  bValidType = isArray(b2);
  if (aValidType || bValidType) {
    return aValidType && bValidType ? looseCompareArrays(a2, b2) : false;
  }
  aValidType = isObject(a2);
  bValidType = isObject(b2);
  if (aValidType || bValidType) {
    if (!aValidType || !bValidType) {
      return false;
    }
    const aKeysCount = Object.keys(a2).length;
    const bKeysCount = Object.keys(b2).length;
    if (aKeysCount !== bKeysCount) {
      return false;
    }
    for (const key2 in a2) {
      const aHasKey = a2.hasOwnProperty(key2);
      const bHasKey = b2.hasOwnProperty(key2);
      if (aHasKey && !bHasKey || !aHasKey && bHasKey || !looseEqual(a2[key2], b2[key2])) {
        return false;
      }
    }
  }
  return String(a2) === String(b2);
}
function looseIndexOf(arr, val) {
  return arr.findIndex((item) => looseEqual(item, val));
}
var isRef = (val) => {
  return !!(val && val["__v_isRef"] === true);
};
var toDisplayString = (val) => {
  return isString(val) ? val : val == null ? "" : isArray(val) || isObject(val) && (val.toString === objectToString || !isFunction(val.toString)) ? isRef(val) ? toDisplayString(val.value) : JSON.stringify(val, replacer, 2) : String(val);
};
var replacer = (_key, val) => {
  if (isRef(val)) {
    return replacer(_key, val.value);
  } else if (isMap(val)) {
    return {
      [`Map(${val.size})`]: [...val.entries()].reduce(
        (entries, [key2, val2], i) => {
          entries[stringifySymbol(key2, i) + " =>"] = val2;
          return entries;
        },
        {}
      )
    };
  } else if (isSet(val)) {
    return {
      [`Set(${val.size})`]: [...val.values()].map((v2) => stringifySymbol(v2))
    };
  } else if (isSymbol(val)) {
    return stringifySymbol(val);
  } else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {
    return String(val);
  }
  return val;
};
var stringifySymbol = (v2, i = "") => {
  var _a;
  return (
    // Symbol.description in es2019+ so we need to cast here to pass
    // the lib: es2016 check
    isSymbol(v2) ? `Symbol(${(_a = v2.description) != null ? _a : i})` : v2
  );
};
function normalizeCssVarValue(value) {
  if (value == null) {
    return "initial";
  }
  if (typeof value === "string") {
    return value === "" ? " " : value;
  }
  if (typeof value !== "number" || !Number.isFinite(value)) {
    if (true) {
      console.warn(
        "[Vue warn] Invalid value used for CSS binding. Expected a string or a finite number but received:",
        value
      );
    }
  }
  return String(value);
}

// ../../../node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js
function warn(msg, ...args) {
  console.warn(`[Vue warn] ${msg}`, ...args);
}
var activeEffectScope;
var EffectScope = class {
  constructor(detached = false) {
    this.detached = detached;
    this._active = true;
    this._on = 0;
    this.effects = [];
    this.cleanups = [];
    this._isPaused = false;
    this.parent = activeEffectScope;
    if (!detached && activeEffectScope) {
      this.index = (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(
        this
      ) - 1;
    }
  }
  get active() {
    return this._active;
  }
  pause() {
    if (this._active) {
      this._isPaused = true;
      let i, l;
      if (this.scopes) {
        for (i = 0, l = this.scopes.length; i < l; i++) {
          this.scopes[i].pause();
        }
      }
      for (i = 0, l = this.effects.length; i < l; i++) {
        this.effects[i].pause();
      }
    }
  }
  /**
   * Resumes the effect scope, including all child scopes and effects.
   */
  resume() {
    if (this._active) {
      if (this._isPaused) {
        this._isPaused = false;
        let i, l;
        if (this.scopes) {
          for (i = 0, l = this.scopes.length; i < l; i++) {
            this.scopes[i].resume();
          }
        }
        for (i = 0, l = this.effects.length; i < l; i++) {
          this.effects[i].resume();
        }
      }
    }
  }
  run(fn2) {
    if (this._active) {
      const currentEffectScope = activeEffectScope;
      try {
        activeEffectScope = this;
        return fn2();
      } finally {
        activeEffectScope = currentEffectScope;
      }
    } else if (true) {
      warn(`cannot run an inactive effect scope.`);
    }
  }
  /**
   * This should only be called on non-detached scopes
   * @internal
   */
  on() {
    if (++this._on === 1) {
      this.prevScope = activeEffectScope;
      activeEffectScope = this;
    }
  }
  /**
   * This should only be called on non-detached scopes
   * @internal
   */
  off() {
    if (this._on > 0 && --this._on === 0) {
      activeEffectScope = this.prevScope;
      this.prevScope = void 0;
    }
  }
  stop(fromParent) {
    if (this._active) {
      this._active = false;
      let i, l;
      for (i = 0, l = this.effects.length; i < l; i++) {
        this.effects[i].stop();
      }
      this.effects.length = 0;
      for (i = 0, l = this.cleanups.length; i < l; i++) {
        this.cleanups[i]();
      }
      this.cleanups.length = 0;
      if (this.scopes) {
        for (i = 0, l = this.scopes.length; i < l; i++) {
          this.scopes[i].stop(true);
        }
        this.scopes.length = 0;
      }
      if (!this.detached && this.parent && !fromParent) {
        const last = this.parent.scopes.pop();
        if (last && last !== this) {
          this.parent.scopes[this.index] = last;
          last.index = this.index;
        }
      }
      this.parent = void 0;
    }
  }
};
function effectScope(detached) {
  return new EffectScope(detached);
}
function getCurrentScope() {
  return activeEffectScope;
}
function onScopeDispose(fn2, failSilently = false) {
  if (activeEffectScope) {
    activeEffectScope.cleanups.push(fn2);
  } else if (!failSilently) {
    warn(
      `onScopeDispose() is called when there is no active effect scope to be associated with.`
    );
  }
}
var activeSub;
var pausedQueueEffects = /* @__PURE__ */ new WeakSet();
var ReactiveEffect = class {
  constructor(fn2) {
    this.fn = fn2;
    this.deps = void 0;
    this.depsTail = void 0;
    this.flags = 1 | 4;
    this.next = void 0;
    this.cleanup = void 0;
    this.scheduler = void 0;
    if (activeEffectScope && activeEffectScope.active) {
      activeEffectScope.effects.push(this);
    }
  }
  pause() {
    this.flags |= 64;
  }
  resume() {
    if (this.flags & 64) {
      this.flags &= -65;
      if (pausedQueueEffects.has(this)) {
        pausedQueueEffects.delete(this);
        this.trigger();
      }
    }
  }
  /**
   * @internal
   */
  notify() {
    if (this.flags & 2 && !(this.flags & 32)) {
      return;
    }
    if (!(this.flags & 8)) {
      batch(this);
    }
  }
  run() {
    if (!(this.flags & 1)) {
      return this.fn();
    }
    this.flags |= 2;
    cleanupEffect(this);
    prepareDeps(this);
    const prevEffect = activeSub;
    const prevShouldTrack = shouldTrack;
    activeSub = this;
    shouldTrack = true;
    try {
      return this.fn();
    } finally {
      if (activeSub !== this) {
        warn(
          "Active effect was not restored correctly - this is likely a Vue internal bug."
        );
      }
      cleanupDeps(this);
      activeSub = prevEffect;
      shouldTrack = prevShouldTrack;
      this.flags &= -3;
    }
  }
  stop() {
    if (this.flags & 1) {
      for (let link2 = this.deps; link2; link2 = link2.nextDep) {
        removeSub(link2);
      }
      this.deps = this.depsTail = void 0;
      cleanupEffect(this);
      this.onStop && this.onStop();
      this.flags &= -2;
    }
  }
  trigger() {
    if (this.flags & 64) {
      pausedQueueEffects.add(this);
    } else if (this.scheduler) {
      this.scheduler();
    } else {
      this.runIfDirty();
    }
  }
  /**
   * @internal
   */
  runIfDirty() {
    if (isDirty(this)) {
      this.run();
    }
  }
  get dirty() {
    return isDirty(this);
  }
};
var batchDepth = 0;
var batchedSub;
var batchedComputed;
function batch(sub, isComputed = false) {
  sub.flags |= 8;
  if (isComputed) {
    sub.next = batchedComputed;
    batchedComputed = sub;
    return;
  }
  sub.next = batchedSub;
  batchedSub = sub;
}
function startBatch() {
  batchDepth++;
}
function endBatch() {
  if (--batchDepth > 0) {
    return;
  }
  if (batchedComputed) {
    let e = batchedComputed;
    batchedComputed = void 0;
    while (e) {
      const next = e.next;
      e.next = void 0;
      e.flags &= -9;
      e = next;
    }
  }
  let error;
  while (batchedSub) {
    let e = batchedSub;
    batchedSub = void 0;
    while (e) {
      const next = e.next;
      e.next = void 0;
      e.flags &= -9;
      if (e.flags & 1) {
        try {
          ;
          e.trigger();
        } catch (err) {
          if (!error) error = err;
        }
      }
      e = next;
    }
  }
  if (error) throw error;
}
function prepareDeps(sub) {
  for (let link2 = sub.deps; link2; link2 = link2.nextDep) {
    link2.version = -1;
    link2.prevActiveLink = link2.dep.activeLink;
    link2.dep.activeLink = link2;
  }
}
function cleanupDeps(sub) {
  let head;
  let tail = sub.depsTail;
  let link2 = tail;
  while (link2) {
    const prev = link2.prevDep;
    if (link2.version === -1) {
      if (link2 === tail) tail = prev;
      removeSub(link2);
      removeDep(link2);
    } else {
      head = link2;
    }
    link2.dep.activeLink = link2.prevActiveLink;
    link2.prevActiveLink = void 0;
    link2 = prev;
  }
  sub.deps = head;
  sub.depsTail = tail;
}
function isDirty(sub) {
  for (let link2 = sub.deps; link2; link2 = link2.nextDep) {
    if (link2.dep.version !== link2.version || link2.dep.computed && (refreshComputed(link2.dep.computed) || link2.dep.version !== link2.version)) {
      return true;
    }
  }
  if (sub._dirty) {
    return true;
  }
  return false;
}
function refreshComputed(computed3) {
  if (computed3.flags & 4 && !(computed3.flags & 16)) {
    return;
  }
  computed3.flags &= -17;
  if (computed3.globalVersion === globalVersion) {
    return;
  }
  computed3.globalVersion = globalVersion;
  if (!computed3.isSSR && computed3.flags & 128 && (!computed3.deps && !computed3._dirty || !isDirty(computed3))) {
    return;
  }
  computed3.flags |= 2;
  const dep = computed3.dep;
  const prevSub = activeSub;
  const prevShouldTrack = shouldTrack;
  activeSub = computed3;
  shouldTrack = true;
  try {
    prepareDeps(computed3);
    const value = computed3.fn(computed3._value);
    if (dep.version === 0 || hasChanged(value, computed3._value)) {
      computed3.flags |= 128;
      computed3._value = value;
      dep.version++;
    }
  } catch (err) {
    dep.version++;
    throw err;
  } finally {
    activeSub = prevSub;
    shouldTrack = prevShouldTrack;
    cleanupDeps(computed3);
    computed3.flags &= -3;
  }
}
function removeSub(link2, soft = false) {
  const { dep, prevSub, nextSub } = link2;
  if (prevSub) {
    prevSub.nextSub = nextSub;
    link2.prevSub = void 0;
  }
  if (nextSub) {
    nextSub.prevSub = prevSub;
    link2.nextSub = void 0;
  }
  if (dep.subsHead === link2) {
    dep.subsHead = nextSub;
  }
  if (dep.subs === link2) {
    dep.subs = prevSub;
    if (!prevSub && dep.computed) {
      dep.computed.flags &= -5;
      for (let l = dep.computed.deps; l; l = l.nextDep) {
        removeSub(l, true);
      }
    }
  }
  if (!soft && !--dep.sc && dep.map) {
    dep.map.delete(dep.key);
  }
}
function removeDep(link2) {
  const { prevDep, nextDep } = link2;
  if (prevDep) {
    prevDep.nextDep = nextDep;
    link2.prevDep = void 0;
  }
  if (nextDep) {
    nextDep.prevDep = prevDep;
    link2.nextDep = void 0;
  }
}
function effect(fn2, options) {
  if (fn2.effect instanceof ReactiveEffect) {
    fn2 = fn2.effect.fn;
  }
  const e = new ReactiveEffect(fn2);
  if (options) {
    extend(e, options);
  }
  try {
    e.run();
  } catch (err) {
    e.stop();
    throw err;
  }
  const runner2 = e.run.bind(e);
  runner2.effect = e;
  return runner2;
}
function stop(runner2) {
  runner2.effect.stop();
}
var shouldTrack = true;
var trackStack = [];
function pauseTracking() {
  trackStack.push(shouldTrack);
  shouldTrack = false;
}
function resetTracking() {
  const last = trackStack.pop();
  shouldTrack = last === void 0 ? true : last;
}
function cleanupEffect(e) {
  const { cleanup } = e;
  e.cleanup = void 0;
  if (cleanup) {
    const prevSub = activeSub;
    activeSub = void 0;
    try {
      cleanup();
    } finally {
      activeSub = prevSub;
    }
  }
}
var globalVersion = 0;
var Link = class {
  constructor(sub, dep) {
    this.sub = sub;
    this.dep = dep;
    this.version = dep.version;
    this.nextDep = this.prevDep = this.nextSub = this.prevSub = this.prevActiveLink = void 0;
  }
};
var Dep = class {
  // TODO isolatedDeclarations "__v_skip"
  constructor(computed3) {
    this.computed = computed3;
    this.version = 0;
    this.activeLink = void 0;
    this.subs = void 0;
    this.map = void 0;
    this.key = void 0;
    this.sc = 0;
    this.__v_skip = true;
    if (true) {
      this.subsHead = void 0;
    }
  }
  track(debugInfo) {
    if (!activeSub || !shouldTrack || activeSub === this.computed) {
      return;
    }
    let link2 = this.activeLink;
    if (link2 === void 0 || link2.sub !== activeSub) {
      link2 = this.activeLink = new Link(activeSub, this);
      if (!activeSub.deps) {
        activeSub.deps = activeSub.depsTail = link2;
      } else {
        link2.prevDep = activeSub.depsTail;
        activeSub.depsTail.nextDep = link2;
        activeSub.depsTail = link2;
      }
      addSub(link2);
    } else if (link2.version === -1) {
      link2.version = this.version;
      if (link2.nextDep) {
        const next = link2.nextDep;
        next.prevDep = link2.prevDep;
        if (link2.prevDep) {
          link2.prevDep.nextDep = next;
        }
        link2.prevDep = activeSub.depsTail;
        link2.nextDep = void 0;
        activeSub.depsTail.nextDep = link2;
        activeSub.depsTail = link2;
        if (activeSub.deps === link2) {
          activeSub.deps = next;
        }
      }
    }
    if (activeSub.onTrack) {
      activeSub.onTrack(
        extend(
          {
            effect: activeSub
          },
          debugInfo
        )
      );
    }
    return link2;
  }
  trigger(debugInfo) {
    this.version++;
    globalVersion++;
    this.notify(debugInfo);
  }
  notify(debugInfo) {
    startBatch();
    try {
      if (true) {
        for (let head = this.subsHead; head; head = head.nextSub) {
          if (head.sub.onTrigger && !(head.sub.flags & 8)) {
            head.sub.onTrigger(
              extend(
                {
                  effect: head.sub
                },
                debugInfo
              )
            );
          }
        }
      }
      for (let link2 = this.subs; link2; link2 = link2.prevSub) {
        if (link2.sub.notify()) {
          ;
          link2.sub.dep.notify();
        }
      }
    } finally {
      endBatch();
    }
  }
};
function addSub(link2) {
  link2.dep.sc++;
  if (link2.sub.flags & 4) {
    const computed3 = link2.dep.computed;
    if (computed3 && !link2.dep.subs) {
      computed3.flags |= 4 | 16;
      for (let l = computed3.deps; l; l = l.nextDep) {
        addSub(l);
      }
    }
    const currentTail = link2.dep.subs;
    if (currentTail !== link2) {
      link2.prevSub = currentTail;
      if (currentTail) currentTail.nextSub = link2;
    }
    if (link2.dep.subsHead === void 0) {
      link2.dep.subsHead = link2;
    }
    link2.dep.subs = link2;
  }
}
var targetMap = /* @__PURE__ */ new WeakMap();
var ITERATE_KEY = Symbol(
  true ? "Object iterate" : ""
);
var MAP_KEY_ITERATE_KEY = Symbol(
  true ? "Map keys iterate" : ""
);
var ARRAY_ITERATE_KEY = Symbol(
  true ? "Array iterate" : ""
);
function track(target, type, key2) {
  if (shouldTrack && activeSub) {
    let depsMap = targetMap.get(target);
    if (!depsMap) {
      targetMap.set(target, depsMap = /* @__PURE__ */ new Map());
    }
    let dep = depsMap.get(key2);
    if (!dep) {
      depsMap.set(key2, dep = new Dep());
      dep.map = depsMap;
      dep.key = key2;
    }
    if (true) {
      dep.track({
        target,
        type,
        key: key2
      });
    } else {
      dep.track();
    }
  }
}
function trigger(target, type, key2, newValue, oldValue, oldTarget) {
  const depsMap = targetMap.get(target);
  if (!depsMap) {
    globalVersion++;
    return;
  }
  const run = (dep) => {
    if (dep) {
      if (true) {
        dep.trigger({
          target,
          type,
          key: key2,
          newValue,
          oldValue,
          oldTarget
        });
      } else {
        dep.trigger();
      }
    }
  };
  startBatch();
  if (type === "clear") {
    depsMap.forEach(run);
  } else {
    const targetIsArray = isArray(target);
    const isArrayIndex = targetIsArray && isIntegerKey(key2);
    if (targetIsArray && key2 === "length") {
      const newLength = Number(newValue);
      depsMap.forEach((dep, key22) => {
        if (key22 === "length" || key22 === ARRAY_ITERATE_KEY || !isSymbol(key22) && key22 >= newLength) {
          run(dep);
        }
      });
    } else {
      if (key2 !== void 0 || depsMap.has(void 0)) {
        run(depsMap.get(key2));
      }
      if (isArrayIndex) {
        run(depsMap.get(ARRAY_ITERATE_KEY));
      }
      switch (type) {
        case "add":
          if (!targetIsArray) {
            run(depsMap.get(ITERATE_KEY));
            if (isMap(target)) {
              run(depsMap.get(MAP_KEY_ITERATE_KEY));
            }
          } else if (isArrayIndex) {
            run(depsMap.get("length"));
          }
          break;
        case "delete":
          if (!targetIsArray) {
            run(depsMap.get(ITERATE_KEY));
            if (isMap(target)) {
              run(depsMap.get(MAP_KEY_ITERATE_KEY));
            }
          }
          break;
        case "set":
          if (isMap(target)) {
            run(depsMap.get(ITERATE_KEY));
          }
          break;
      }
    }
  }
  endBatch();
}
function getDepFromReactive(object, key2) {
  const depMap = targetMap.get(object);
  return depMap && depMap.get(key2);
}
function reactiveReadArray(array) {
  const raw = toRaw(array);
  if (raw === array) return raw;
  track(raw, "iterate", ARRAY_ITERATE_KEY);
  return isShallow(array) ? raw : raw.map(toReactive);
}
function shallowReadArray(arr) {
  track(arr = toRaw(arr), "iterate", ARRAY_ITERATE_KEY);
  return arr;
}
var arrayInstrumentations = {
  __proto__: null,
  [Symbol.iterator]() {
    return iterator(this, Symbol.iterator, toReactive);
  },
  concat(...args) {
    return reactiveReadArray(this).concat(
      ...args.map((x) => isArray(x) ? reactiveReadArray(x) : x)
    );
  },
  entries() {
    return iterator(this, "entries", (value) => {
      value[1] = toReactive(value[1]);
      return value;
    });
  },
  every(fn2, thisArg) {
    return apply(this, "every", fn2, thisArg, void 0, arguments);
  },
  filter(fn2, thisArg) {
    return apply(this, "filter", fn2, thisArg, (v2) => v2.map(toReactive), arguments);
  },
  find(fn2, thisArg) {
    return apply(this, "find", fn2, thisArg, toReactive, arguments);
  },
  findIndex(fn2, thisArg) {
    return apply(this, "findIndex", fn2, thisArg, void 0, arguments);
  },
  findLast(fn2, thisArg) {
    return apply(this, "findLast", fn2, thisArg, toReactive, arguments);
  },
  findLastIndex(fn2, thisArg) {
    return apply(this, "findLastIndex", fn2, thisArg, void 0, arguments);
  },
  // flat, flatMap could benefit from ARRAY_ITERATE but are not straight-forward to implement
  forEach(fn2, thisArg) {
    return apply(this, "forEach", fn2, thisArg, void 0, arguments);
  },
  includes(...args) {
    return searchProxy(this, "includes", args);
  },
  indexOf(...args) {
    return searchProxy(this, "indexOf", args);
  },
  join(separator) {
    return reactiveReadArray(this).join(separator);
  },
  // keys() iterator only reads `length`, no optimization required
  lastIndexOf(...args) {
    return searchProxy(this, "lastIndexOf", args);
  },
  map(fn2, thisArg) {
    return apply(this, "map", fn2, thisArg, void 0, arguments);
  },
  pop() {
    return noTracking(this, "pop");
  },
  push(...args) {
    return noTracking(this, "push", args);
  },
  reduce(fn2, ...args) {
    return reduce(this, "reduce", fn2, args);
  },
  reduceRight(fn2, ...args) {
    return reduce(this, "reduceRight", fn2, args);
  },
  shift() {
    return noTracking(this, "shift");
  },
  // slice could use ARRAY_ITERATE but also seems to beg for range tracking
  some(fn2, thisArg) {
    return apply(this, "some", fn2, thisArg, void 0, arguments);
  },
  splice(...args) {
    return noTracking(this, "splice", args);
  },
  toReversed() {
    return reactiveReadArray(this).toReversed();
  },
  toSorted(comparer) {
    return reactiveReadArray(this).toSorted(comparer);
  },
  toSpliced(...args) {
    return reactiveReadArray(this).toSpliced(...args);
  },
  unshift(...args) {
    return noTracking(this, "unshift", args);
  },
  values() {
    return iterator(this, "values", toReactive);
  }
};
function iterator(self2, method, wrapValue) {
  const arr = shallowReadArray(self2);
  const iter = arr[method]();
  if (arr !== self2 && !isShallow(self2)) {
    iter._next = iter.next;
    iter.next = () => {
      const result = iter._next();
      if (!result.done) {
        result.value = wrapValue(result.value);
      }
      return result;
    };
  }
  return iter;
}
var arrayProto = Array.prototype;
function apply(self2, method, fn2, thisArg, wrappedRetFn, args) {
  const arr = shallowReadArray(self2);
  const needsWrap = arr !== self2 && !isShallow(self2);
  const methodFn = arr[method];
  if (methodFn !== arrayProto[method]) {
    const result2 = methodFn.apply(self2, args);
    return needsWrap ? toReactive(result2) : result2;
  }
  let wrappedFn = fn2;
  if (arr !== self2) {
    if (needsWrap) {
      wrappedFn = function(item, index) {
        return fn2.call(this, toReactive(item), index, self2);
      };
    } else if (fn2.length > 2) {
      wrappedFn = function(item, index) {
        return fn2.call(this, item, index, self2);
      };
    }
  }
  const result = methodFn.call(arr, wrappedFn, thisArg);
  return needsWrap && wrappedRetFn ? wrappedRetFn(result) : result;
}
function reduce(self2, method, fn2, args) {
  const arr = shallowReadArray(self2);
  let wrappedFn = fn2;
  if (arr !== self2) {
    if (!isShallow(self2)) {
      wrappedFn = function(acc, item, index) {
        return fn2.call(this, acc, toReactive(item), index, self2);
      };
    } else if (fn2.length > 3) {
      wrappedFn = function(acc, item, index) {
        return fn2.call(this, acc, item, index, self2);
      };
    }
  }
  return arr[method](wrappedFn, ...args);
}
function searchProxy(self2, method, args) {
  const arr = toRaw(self2);
  track(arr, "iterate", ARRAY_ITERATE_KEY);
  const res = arr[method](...args);
  if ((res === -1 || res === false) && isProxy(args[0])) {
    args[0] = toRaw(args[0]);
    return arr[method](...args);
  }
  return res;
}
function noTracking(self2, method, args = []) {
  pauseTracking();
  startBatch();
  const res = toRaw(self2)[method].apply(self2, args);
  endBatch();
  resetTracking();
  return res;
}
var isNonTrackableKeys = makeMap(`__proto__,__v_isRef,__isVue`);
var builtInSymbols = new Set(
  Object.getOwnPropertyNames(Symbol).filter((key2) => key2 !== "arguments" && key2 !== "caller").map((key2) => Symbol[key2]).filter(isSymbol)
);
function hasOwnProperty2(key2) {
  if (!isSymbol(key2)) key2 = String(key2);
  const obj = toRaw(this);
  track(obj, "has", key2);
  return obj.hasOwnProperty(key2);
}
var BaseReactiveHandler = class {
  constructor(_isReadonly = false, _isShallow = false) {
    this._isReadonly = _isReadonly;
    this._isShallow = _isShallow;
  }
  get(target, key2, receiver) {
    if (key2 === "__v_skip") return target["__v_skip"];
    const isReadonly2 = this._isReadonly, isShallow2 = this._isShallow;
    if (key2 === "__v_isReactive") {
      return !isReadonly2;
    } else if (key2 === "__v_isReadonly") {
      return isReadonly2;
    } else if (key2 === "__v_isShallow") {
      return isShallow2;
    } else if (key2 === "__v_raw") {
      if (receiver === (isReadonly2 ? isShallow2 ? shallowReadonlyMap : readonlyMap : isShallow2 ? shallowReactiveMap : reactiveMap).get(target) || // receiver is not the reactive proxy, but has the same prototype
      // this means the receiver is a user proxy of the reactive proxy
      Object.getPrototypeOf(target) === Object.getPrototypeOf(receiver)) {
        return target;
      }
      return;
    }
    const targetIsArray = isArray(target);
    if (!isReadonly2) {
      let fn2;
      if (targetIsArray && (fn2 = arrayInstrumentations[key2])) {
        return fn2;
      }
      if (key2 === "hasOwnProperty") {
        return hasOwnProperty2;
      }
    }
    const res = Reflect.get(
      target,
      key2,
      // if this is a proxy wrapping a ref, return methods using the raw ref
      // as receiver so that we don't have to call `toRaw` on the ref in all
      // its class methods
      isRef2(target) ? target : receiver
    );
    if (isSymbol(key2) ? builtInSymbols.has(key2) : isNonTrackableKeys(key2)) {
      return res;
    }
    if (!isReadonly2) {
      track(target, "get", key2);
    }
    if (isShallow2) {
      return res;
    }
    if (isRef2(res)) {
      const value = targetIsArray && isIntegerKey(key2) ? res : res.value;
      return isReadonly2 && isObject(value) ? readonly(value) : value;
    }
    if (isObject(res)) {
      return isReadonly2 ? readonly(res) : reactive(res);
    }
    return res;
  }
};
var MutableReactiveHandler = class extends BaseReactiveHandler {
  constructor(isShallow2 = false) {
    super(false, isShallow2);
  }
  set(target, key2, value, receiver) {
    let oldValue = target[key2];
    if (!this._isShallow) {
      const isOldValueReadonly = isReadonly(oldValue);
      if (!isShallow(value) && !isReadonly(value)) {
        oldValue = toRaw(oldValue);
        value = toRaw(value);
      }
      if (!isArray(target) && isRef2(oldValue) && !isRef2(value)) {
        if (isOldValueReadonly) {
          if (true) {
            warn(
              `Set operation on key "${String(key2)}" failed: target is readonly.`,
              target[key2]
            );
          }
          return true;
        } else {
          oldValue.value = value;
          return true;
        }
      }
    }
    const hadKey = isArray(target) && isIntegerKey(key2) ? Number(key2) < target.length : hasOwn(target, key2);
    const result = Reflect.set(
      target,
      key2,
      value,
      isRef2(target) ? target : receiver
    );
    if (target === toRaw(receiver)) {
      if (!hadKey) {
        trigger(target, "add", key2, value);
      } else if (hasChanged(value, oldValue)) {
        trigger(target, "set", key2, value, oldValue);
      }
    }
    return result;
  }
  deleteProperty(target, key2) {
    const hadKey = hasOwn(target, key2);
    const oldValue = target[key2];
    const result = Reflect.deleteProperty(target, key2);
    if (result && hadKey) {
      trigger(target, "delete", key2, void 0, oldValue);
    }
    return result;
  }
  has(target, key2) {
    const result = Reflect.has(target, key2);
    if (!isSymbol(key2) || !builtInSymbols.has(key2)) {
      track(target, "has", key2);
    }
    return result;
  }
  ownKeys(target) {
    track(
      target,
      "iterate",
      isArray(target) ? "length" : ITERATE_KEY
    );
    return Reflect.ownKeys(target);
  }
};
var ReadonlyReactiveHandler = class extends BaseReactiveHandler {
  constructor(isShallow2 = false) {
    super(true, isShallow2);
  }
  set(target, key2) {
    if (true) {
      warn(
        `Set operation on key "${String(key2)}" failed: target is readonly.`,
        target
      );
    }
    return true;
  }
  deleteProperty(target, key2) {
    if (true) {
      warn(
        `Delete operation on key "${String(key2)}" failed: target is readonly.`,
        target
      );
    }
    return true;
  }
};
var mutableHandlers = new MutableReactiveHandler();
var readonlyHandlers = new ReadonlyReactiveHandler();
var shallowReactiveHandlers = new MutableReactiveHandler(true);
var shallowReadonlyHandlers = new ReadonlyReactiveHandler(true);
var toShallow = (value) => value;
var getProto = (v2) => Reflect.getPrototypeOf(v2);
function createIterableMethod(method, isReadonly2, isShallow2) {
  return function(...args) {
    const target = this["__v_raw"];
    const rawTarget = toRaw(target);
    const targetIsMap = isMap(rawTarget);
    const isPair = method === "entries" || method === Symbol.iterator && targetIsMap;
    const isKeyOnly = method === "keys" && targetIsMap;
    const innerIterator = target[method](...args);
    const wrap = isShallow2 ? toShallow : isReadonly2 ? toReadonly : toReactive;
    !isReadonly2 && track(
      rawTarget,
      "iterate",
      isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY
    );
    return {
      // iterator protocol
      next() {
        const { value, done } = innerIterator.next();
        return done ? { value, done } : {
          value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),
          done
        };
      },
      // iterable protocol
      [Symbol.iterator]() {
        return this;
      }
    };
  };
}
function createReadonlyMethod(type) {
  return function(...args) {
    if (true) {
      const key2 = args[0] ? `on key "${args[0]}" ` : ``;
      warn(
        `${capitalize(type)} operation ${key2}failed: target is readonly.`,
        toRaw(this)
      );
    }
    return type === "delete" ? false : type === "clear" ? void 0 : this;
  };
}
function createInstrumentations(readonly2, shallow) {
  const instrumentations = {
    get(key2) {
      const target = this["__v_raw"];
      const rawTarget = toRaw(target);
      const rawKey = toRaw(key2);
      if (!readonly2) {
        if (hasChanged(key2, rawKey)) {
          track(rawTarget, "get", key2);
        }
        track(rawTarget, "get", rawKey);
      }
      const { has } = getProto(rawTarget);
      const wrap = shallow ? toShallow : readonly2 ? toReadonly : toReactive;
      if (has.call(rawTarget, key2)) {
        return wrap(target.get(key2));
      } else if (has.call(rawTarget, rawKey)) {
        return wrap(target.get(rawKey));
      } else if (target !== rawTarget) {
        target.get(key2);
      }
    },
    get size() {
      const target = this["__v_raw"];
      !readonly2 && track(toRaw(target), "iterate", ITERATE_KEY);
      return target.size;
    },
    has(key2) {
      const target = this["__v_raw"];
      const rawTarget = toRaw(target);
      const rawKey = toRaw(key2);
      if (!readonly2) {
        if (hasChanged(key2, rawKey)) {
          track(rawTarget, "has", key2);
        }
        track(rawTarget, "has", rawKey);
      }
      return key2 === rawKey ? target.has(key2) : target.has(key2) || target.has(rawKey);
    },
    forEach(callback, thisArg) {
      const observed = this;
      const target = observed["__v_raw"];
      const rawTarget = toRaw(target);
      const wrap = shallow ? toShallow : readonly2 ? toReadonly : toReactive;
      !readonly2 && track(rawTarget, "iterate", ITERATE_KEY);
      return target.forEach((value, key2) => {
        return callback.call(thisArg, wrap(value), wrap(key2), observed);
      });
    }
  };
  extend(
    instrumentations,
    readonly2 ? {
      add: createReadonlyMethod("add"),
      set: createReadonlyMethod("set"),
      delete: createReadonlyMethod("delete"),
      clear: createReadonlyMethod("clear")
    } : {
      add(value) {
        if (!shallow && !isShallow(value) && !isReadonly(value)) {
          value = toRaw(value);
        }
        const target = toRaw(this);
        const proto = getProto(target);
        const hadKey = proto.has.call(target, value);
        if (!hadKey) {
          target.add(value);
          trigger(target, "add", value, value);
        }
        return this;
      },
      set(key2, value) {
        if (!shallow && !isShallow(value) && !isReadonly(value)) {
          value = toRaw(value);
        }
        const target = toRaw(this);
        const { has, get } = getProto(target);
        let hadKey = has.call(target, key2);
        if (!hadKey) {
          key2 = toRaw(key2);
          hadKey = has.call(target, key2);
        } else if (true) {
          checkIdentityKeys(target, has, key2);
        }
        const oldValue = get.call(target, key2);
        target.set(key2, value);
        if (!hadKey) {
          trigger(target, "add", key2, value);
        } else if (hasChanged(value, oldValue)) {
          trigger(target, "set", key2, value, oldValue);
        }
        return this;
      },
      delete(key2) {
        const target = toRaw(this);
        const { has, get } = getProto(target);
        let hadKey = has.call(target, key2);
        if (!hadKey) {
          key2 = toRaw(key2);
          hadKey = has.call(target, key2);
        } else if (true) {
          checkIdentityKeys(target, has, key2);
        }
        const oldValue = get ? get.call(target, key2) : void 0;
        const result = target.delete(key2);
        if (hadKey) {
          trigger(target, "delete", key2, void 0, oldValue);
        }
        return result;
      },
      clear() {
        const target = toRaw(this);
        const hadItems = target.size !== 0;
        const oldTarget = true ? isMap(target) ? new Map(target) : new Set(target) : void 0;
        const result = target.clear();
        if (hadItems) {
          trigger(
            target,
            "clear",
            void 0,
            void 0,
            oldTarget
          );
        }
        return result;
      }
    }
  );
  const iteratorMethods = [
    "keys",
    "values",
    "entries",
    Symbol.iterator
  ];
  iteratorMethods.forEach((method) => {
    instrumentations[method] = createIterableMethod(method, readonly2, shallow);
  });
  return instrumentations;
}
function createInstrumentationGetter(isReadonly2, shallow) {
  const instrumentations = createInstrumentations(isReadonly2, shallow);
  return (target, key2, receiver) => {
    if (key2 === "__v_isReactive") {
      return !isReadonly2;
    } else if (key2 === "__v_isReadonly") {
      return isReadonly2;
    } else if (key2 === "__v_raw") {
      return target;
    }
    return Reflect.get(
      hasOwn(instrumentations, key2) && key2 in target ? instrumentations : target,
      key2,
      receiver
    );
  };
}
var mutableCollectionHandlers = {
  get: createInstrumentationGetter(false, false)
};
var shallowCollectionHandlers = {
  get: createInstrumentationGetter(false, true)
};
var readonlyCollectionHandlers = {
  get: createInstrumentationGetter(true, false)
};
var shallowReadonlyCollectionHandlers = {
  get: createInstrumentationGetter(true, true)
};
function checkIdentityKeys(target, has, key2) {
  const rawKey = toRaw(key2);
  if (rawKey !== key2 && has.call(target, rawKey)) {
    const type = toRawType(target);
    warn(
      `Reactive ${type} contains both the raw and reactive versions of the same object${type === `Map` ? ` as keys` : ``}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`
    );
  }
}
var reactiveMap = /* @__PURE__ */ new WeakMap();
var shallowReactiveMap = /* @__PURE__ */ new WeakMap();
var readonlyMap = /* @__PURE__ */ new WeakMap();
var shallowReadonlyMap = /* @__PURE__ */ new WeakMap();
function targetTypeMap(rawType) {
  switch (rawType) {
    case "Object":
    case "Array":
      return 1;
    case "Map":
    case "Set":
    case "WeakMap":
    case "WeakSet":
      return 2;
    default:
      return 0;
  }
}
function getTargetType(value) {
  return value["__v_skip"] || !Object.isExtensible(value) ? 0 : targetTypeMap(toRawType(value));
}
function reactive(target) {
  if (isReadonly(target)) {
    return target;
  }
  return createReactiveObject(
    target,
    false,
    mutableHandlers,
    mutableCollectionHandlers,
    reactiveMap
  );
}
function shallowReactive(target) {
  return createReactiveObject(
    target,
    false,
    shallowReactiveHandlers,
    shallowCollectionHandlers,
    shallowReactiveMap
  );
}
function readonly(target) {
  return createReactiveObject(
    target,
    true,
    readonlyHandlers,
    readonlyCollectionHandlers,
    readonlyMap
  );
}
function shallowReadonly(target) {
  return createReactiveObject(
    target,
    true,
    shallowReadonlyHandlers,
    shallowReadonlyCollectionHandlers,
    shallowReadonlyMap
  );
}
function createReactiveObject(target, isReadonly2, baseHandlers, collectionHandlers, proxyMap) {
  if (!isObject(target)) {
    if (true) {
      warn(
        `value cannot be made ${isReadonly2 ? "readonly" : "reactive"}: ${String(
          target
        )}`
      );
    }
    return target;
  }
  if (target["__v_raw"] && !(isReadonly2 && target["__v_isReactive"])) {
    return target;
  }
  const targetType = getTargetType(target);
  if (targetType === 0) {
    return target;
  }
  const existingProxy = proxyMap.get(target);
  if (existingProxy) {
    return existingProxy;
  }
  const proxy = new Proxy(
    target,
    targetType === 2 ? collectionHandlers : baseHandlers
  );
  proxyMap.set(target, proxy);
  return proxy;
}
function isReactive(value) {
  if (isReadonly(value)) {
    return isReactive(value["__v_raw"]);
  }
  return !!(value && value["__v_isReactive"]);
}
function isReadonly(value) {
  return !!(value && value["__v_isReadonly"]);
}
function isShallow(value) {
  return !!(value && value["__v_isShallow"]);
}
function isProxy(value) {
  return value ? !!value["__v_raw"] : false;
}
function toRaw(observed) {
  const raw = observed && observed["__v_raw"];
  return raw ? toRaw(raw) : observed;
}
function markRaw(value) {
  if (!hasOwn(value, "__v_skip") && Object.isExtensible(value)) {
    def(value, "__v_skip", true);
  }
  return value;
}
var toReactive = (value) => isObject(value) ? reactive(value) : value;
var toReadonly = (value) => isObject(value) ? readonly(value) : value;
function isRef2(r) {
  return r ? r["__v_isRef"] === true : false;
}
function ref(value) {
  return createRef(value, false);
}
function shallowRef(value) {
  return createRef(value, true);
}
function createRef(rawValue, shallow) {
  if (isRef2(rawValue)) {
    return rawValue;
  }
  return new RefImpl(rawValue, shallow);
}
var RefImpl = class {
  constructor(value, isShallow2) {
    this.dep = new Dep();
    this["__v_isRef"] = true;
    this["__v_isShallow"] = false;
    this._rawValue = isShallow2 ? value : toRaw(value);
    this._value = isShallow2 ? value : toReactive(value);
    this["__v_isShallow"] = isShallow2;
  }
  get value() {
    if (true) {
      this.dep.track({
        target: this,
        type: "get",
        key: "value"
      });
    } else {
      this.dep.track();
    }
    return this._value;
  }
  set value(newValue) {
    const oldValue = this._rawValue;
    const useDirectValue = this["__v_isShallow"] || isShallow(newValue) || isReadonly(newValue);
    newValue = useDirectValue ? newValue : toRaw(newValue);
    if (hasChanged(newValue, oldValue)) {
      this._rawValue = newValue;
      this._value = useDirectValue ? newValue : toReactive(newValue);
      if (true) {
        this.dep.trigger({
          target: this,
          type: "set",
          key: "value",
          newValue,
          oldValue
        });
      } else {
        this.dep.trigger();
      }
    }
  }
};
function triggerRef(ref2) {
  if (ref2.dep) {
    if (true) {
      ref2.dep.trigger({
        target: ref2,
        type: "set",
        key: "value",
        newValue: ref2._value
      });
    } else {
      ref2.dep.trigger();
    }
  }
}
function unref(ref2) {
  return isRef2(ref2) ? ref2.value : ref2;
}
function toValue(source) {
  return isFunction(source) ? source() : unref(source);
}
var shallowUnwrapHandlers = {
  get: (target, key2, receiver) => key2 === "__v_raw" ? target : unref(Reflect.get(target, key2, receiver)),
  set: (target, key2, value, receiver) => {
    const oldValue = target[key2];
    if (isRef2(oldValue) && !isRef2(value)) {
      oldValue.value = value;
      return true;
    } else {
      return Reflect.set(target, key2, value, receiver);
    }
  }
};
function proxyRefs(objectWithRefs) {
  return isReactive(objectWithRefs) ? objectWithRefs : new Proxy(objectWithRefs, shallowUnwrapHandlers);
}
var CustomRefImpl = class {
  constructor(factory2) {
    this["__v_isRef"] = true;
    this._value = void 0;
    const dep = this.dep = new Dep();
    const { get, set: set2 } = factory2(dep.track.bind(dep), dep.trigger.bind(dep));
    this._get = get;
    this._set = set2;
  }
  get value() {
    return this._value = this._get();
  }
  set value(newVal) {
    this._set(newVal);
  }
};
function customRef(factory2) {
  return new CustomRefImpl(factory2);
}
function toRefs(object) {
  if (!isProxy(object)) {
    warn(`toRefs() expects a reactive object but received a plain one.`);
  }
  const ret = isArray(object) ? new Array(object.length) : {};
  for (const key2 in object) {
    ret[key2] = propertyToRef(object, key2);
  }
  return ret;
}
var ObjectRefImpl = class {
  constructor(_object, _key, _defaultValue) {
    this._object = _object;
    this._key = _key;
    this._defaultValue = _defaultValue;
    this["__v_isRef"] = true;
    this._value = void 0;
  }
  get value() {
    const val = this._object[this._key];
    return this._value = val === void 0 ? this._defaultValue : val;
  }
  set value(newVal) {
    this._object[this._key] = newVal;
  }
  get dep() {
    return getDepFromReactive(toRaw(this._object), this._key);
  }
};
var GetterRefImpl = class {
  constructor(_getter) {
    this._getter = _getter;
    this["__v_isRef"] = true;
    this["__v_isReadonly"] = true;
    this._value = void 0;
  }
  get value() {
    return this._value = this._getter();
  }
};
function toRef(source, key2, defaultValue) {
  if (isRef2(source)) {
    return source;
  } else if (isFunction(source)) {
    return new GetterRefImpl(source);
  } else if (isObject(source) && arguments.length > 1) {
    return propertyToRef(source, key2, defaultValue);
  } else {
    return ref(source);
  }
}
function propertyToRef(source, key2, defaultValue) {
  const val = source[key2];
  return isRef2(val) ? val : new ObjectRefImpl(source, key2, defaultValue);
}
var ComputedRefImpl = class {
  constructor(fn2, setter, isSSR) {
    this.fn = fn2;
    this.setter = setter;
    this._value = void 0;
    this.dep = new Dep(this);
    this.__v_isRef = true;
    this.deps = void 0;
    this.depsTail = void 0;
    this.flags = 16;
    this.globalVersion = globalVersion - 1;
    this.next = void 0;
    this.effect = this;
    this["__v_isReadonly"] = !setter;
    this.isSSR = isSSR;
  }
  /**
   * @internal
   */
  notify() {
    this.flags |= 16;
    if (!(this.flags & 8) && // avoid infinite self recursion
    activeSub !== this) {
      batch(this, true);
      return true;
    } else if (true) ;
  }
  get value() {
    const link2 = true ? this.dep.track({
      target: this,
      type: "get",
      key: "value"
    }) : this.dep.track();
    refreshComputed(this);
    if (link2) {
      link2.version = this.dep.version;
    }
    return this._value;
  }
  set value(newValue) {
    if (this.setter) {
      this.setter(newValue);
    } else if (true) {
      warn("Write operation failed: computed value is readonly");
    }
  }
};
function computed(getterOrOptions, debugOptions, isSSR = false) {
  let getter;
  let setter;
  if (isFunction(getterOrOptions)) {
    getter = getterOrOptions;
  } else {
    getter = getterOrOptions.get;
    setter = getterOrOptions.set;
  }
  const cRef = new ComputedRefImpl(getter, setter, isSSR);
  if (debugOptions && !isSSR) {
    cRef.onTrack = debugOptions.onTrack;
    cRef.onTrigger = debugOptions.onTrigger;
  }
  return cRef;
}
var TrackOpTypes = {
  "GET": "get",
  "HAS": "has",
  "ITERATE": "iterate"
};
var TriggerOpTypes = {
  "SET": "set",
  "ADD": "add",
  "DELETE": "delete",
  "CLEAR": "clear"
};
var INITIAL_WATCHER_VALUE = {};
var cleanupMap = /* @__PURE__ */ new WeakMap();
var activeWatcher = void 0;
function getCurrentWatcher() {
  return activeWatcher;
}
function onWatcherCleanup(cleanupFn, failSilently = false, owner = activeWatcher) {
  if (owner) {
    let cleanups = cleanupMap.get(owner);
    if (!cleanups) cleanupMap.set(owner, cleanups = []);
    cleanups.push(cleanupFn);
  } else if (!failSilently) {
    warn(
      `onWatcherCleanup() was called when there was no active watcher to associate with.`
    );
  }
}
function watch(source, cb, options = EMPTY_OBJ) {
  const { immediate, deep, once, scheduler, augmentJob, call } = options;
  const warnInvalidSource = (s) => {
    (options.onWarn || warn)(
      `Invalid watch source: `,
      s,
      `A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types.`
    );
  };
  const reactiveGetter = (source2) => {
    if (deep) return source2;
    if (isShallow(source2) || deep === false || deep === 0)
      return traverse(source2, 1);
    return traverse(source2);
  };
  let effect2;
  let getter;
  let cleanup;
  let boundCleanup;
  let forceTrigger = false;
  let isMultiSource = false;
  if (isRef2(source)) {
    getter = () => source.value;
    forceTrigger = isShallow(source);
  } else if (isReactive(source)) {
    getter = () => reactiveGetter(source);
    forceTrigger = true;
  } else if (isArray(source)) {
    isMultiSource = true;
    forceTrigger = source.some((s) => isReactive(s) || isShallow(s));
    getter = () => source.map((s) => {
      if (isRef2(s)) {
        return s.value;
      } else if (isReactive(s)) {
        return reactiveGetter(s);
      } else if (isFunction(s)) {
        return call ? call(s, 2) : s();
      } else {
        warnInvalidSource(s);
      }
    });
  } else if (isFunction(source)) {
    if (cb) {
      getter = call ? () => call(source, 2) : source;
    } else {
      getter = () => {
        if (cleanup) {
          pauseTracking();
          try {
            cleanup();
          } finally {
            resetTracking();
          }
        }
        const currentEffect = activeWatcher;
        activeWatcher = effect2;
        try {
          return call ? call(source, 3, [boundCleanup]) : source(boundCleanup);
        } finally {
          activeWatcher = currentEffect;
        }
      };
    }
  } else {
    getter = NOOP;
    warnInvalidSource(source);
  }
  if (cb && deep) {
    const baseGetter = getter;
    const depth = deep === true ? Infinity : deep;
    getter = () => traverse(baseGetter(), depth);
  }
  const scope = getCurrentScope();
  const watchHandle = () => {
    effect2.stop();
    if (scope && scope.active) {
      remove(scope.effects, effect2);
    }
  };
  if (once && cb) {
    const _cb = cb;
    cb = (...args) => {
      _cb(...args);
      watchHandle();
    };
  }
  let oldValue = isMultiSource ? new Array(source.length).fill(INITIAL_WATCHER_VALUE) : INITIAL_WATCHER_VALUE;
  const job = (immediateFirstRun) => {
    if (!(effect2.flags & 1) || !effect2.dirty && !immediateFirstRun) {
      return;
    }
    if (cb) {
      const newValue = effect2.run();
      if (deep || forceTrigger || (isMultiSource ? newValue.some((v2, i) => hasChanged(v2, oldValue[i])) : hasChanged(newValue, oldValue))) {
        if (cleanup) {
          cleanup();
        }
        const currentWatcher = activeWatcher;
        activeWatcher = effect2;
        try {
          const args = [
            newValue,
            // pass undefined as the old value when it's changed for the first time
            oldValue === INITIAL_WATCHER_VALUE ? void 0 : isMultiSource && oldValue[0] === INITIAL_WATCHER_VALUE ? [] : oldValue,
            boundCleanup
          ];
          oldValue = newValue;
          call ? call(cb, 3, args) : (
            // @ts-expect-error
            cb(...args)
          );
        } finally {
          activeWatcher = currentWatcher;
        }
      }
    } else {
      effect2.run();
    }
  };
  if (augmentJob) {
    augmentJob(job);
  }
  effect2 = new ReactiveEffect(getter);
  effect2.scheduler = scheduler ? () => scheduler(job, false) : job;
  boundCleanup = (fn2) => onWatcherCleanup(fn2, false, effect2);
  cleanup = effect2.onStop = () => {
    const cleanups = cleanupMap.get(effect2);
    if (cleanups) {
      if (call) {
        call(cleanups, 4);
      } else {
        for (const cleanup2 of cleanups) cleanup2();
      }
      cleanupMap.delete(effect2);
    }
  };
  if (true) {
    effect2.onTrack = options.onTrack;
    effect2.onTrigger = options.onTrigger;
  }
  if (cb) {
    if (immediate) {
      job(true);
    } else {
      oldValue = effect2.run();
    }
  } else if (scheduler) {
    scheduler(job.bind(null, true), true);
  } else {
    effect2.run();
  }
  watchHandle.pause = effect2.pause.bind(effect2);
  watchHandle.resume = effect2.resume.bind(effect2);
  watchHandle.stop = watchHandle;
  return watchHandle;
}
function traverse(value, depth = Infinity, seen) {
  if (depth <= 0 || !isObject(value) || value["__v_skip"]) {
    return value;
  }
  seen = seen || /* @__PURE__ */ new Map();
  if ((seen.get(value) || 0) >= depth) {
    return value;
  }
  seen.set(value, depth);
  depth--;
  if (isRef2(value)) {
    traverse(value.value, depth, seen);
  } else if (isArray(value)) {
    for (let i = 0; i < value.length; i++) {
      traverse(value[i], depth, seen);
    }
  } else if (isSet(value) || isMap(value)) {
    value.forEach((v2) => {
      traverse(v2, depth, seen);
    });
  } else if (isPlainObject(value)) {
    for (const key2 in value) {
      traverse(value[key2], depth, seen);
    }
    for (const key2 of Object.getOwnPropertySymbols(value)) {
      if (Object.prototype.propertyIsEnumerable.call(value, key2)) {
        traverse(value[key2], depth, seen);
      }
    }
  }
  return value;
}

// ../../../node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js
var stack = [];
function pushWarningContext(vnode) {
  stack.push(vnode);
}
function popWarningContext() {
  stack.pop();
}
var isWarning = false;
function warn$1(msg, ...args) {
  if (isWarning) return;
  isWarning = true;
  pauseTracking();
  const instance = stack.length ? stack[stack.length - 1].component : null;
  const appWarnHandler = instance && instance.appContext.config.warnHandler;
  const trace = getComponentTrace();
  if (appWarnHandler) {
    callWithErrorHandling(
      appWarnHandler,
      instance,
      11,
      [
        // eslint-disable-next-line no-restricted-syntax
        msg + args.map((a2) => {
          var _a, _b;
          return (_b = (_a = a2.toString) == null ? void 0 : _a.call(a2)) != null ? _b : JSON.stringify(a2);
        }).join(""),
        instance && instance.proxy,
        trace.map(
          ({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`
        ).join("\n"),
        trace
      ]
    );
  } else {
    const warnArgs = [`[Vue warn]: ${msg}`, ...args];
    if (trace.length && // avoid spamming console during tests
    true) {
      warnArgs.push(`
`, ...formatTrace(trace));
    }
    console.warn(...warnArgs);
  }
  resetTracking();
  isWarning = false;
}
function getComponentTrace() {
  let currentVNode = stack[stack.length - 1];
  if (!currentVNode) {
    return [];
  }
  const normalizedStack = [];
  while (currentVNode) {
    const last = normalizedStack[0];
    if (last && last.vnode === currentVNode) {
      last.recurseCount++;
    } else {
      normalizedStack.push({
        vnode: currentVNode,
        recurseCount: 0
      });
    }
    const parentInstance = currentVNode.component && currentVNode.component.parent;
    currentVNode = parentInstance && parentInstance.vnode;
  }
  return normalizedStack;
}
function formatTrace(trace) {
  const logs = [];
  trace.forEach((entry, i) => {
    logs.push(...i === 0 ? [] : [`
`], ...formatTraceEntry(entry));
  });
  return logs;
}
function formatTraceEntry({ vnode, recurseCount }) {
  const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;
  const isRoot = vnode.component ? vnode.component.parent == null : false;
  const open = ` at <${formatComponentName(
    vnode.component,
    vnode.type,
    isRoot
  )}`;
  const close = `>` + postfix;
  return vnode.props ? [open, ...formatProps(vnode.props), close] : [open + close];
}
function formatProps(props) {
  const res = [];
  const keys2 = Object.keys(props);
  keys2.slice(0, 3).forEach((key2) => {
    res.push(...formatProp(key2, props[key2]));
  });
  if (keys2.length > 3) {
    res.push(` ...`);
  }
  return res;
}
function formatProp(key2, value, raw) {
  if (isString(value)) {
    value = JSON.stringify(value);
    return raw ? value : [`${key2}=${value}`];
  } else if (typeof value === "number" || typeof value === "boolean" || value == null) {
    return raw ? value : [`${key2}=${value}`];
  } else if (isRef2(value)) {
    value = formatProp(key2, toRaw(value.value), true);
    return raw ? value : [`${key2}=Ref<`, value, `>`];
  } else if (isFunction(value)) {
    return [`${key2}=fn${value.name ? `<${value.name}>` : ``}`];
  } else {
    value = toRaw(value);
    return raw ? value : [`${key2}=`, value];
  }
}
function assertNumber(val, type) {
  if (false) return;
  if (val === void 0) {
    return;
  } else if (typeof val !== "number") {
    warn$1(`${type} is not a valid number - got ${JSON.stringify(val)}.`);
  } else if (isNaN(val)) {
    warn$1(`${type} is NaN - the duration expression might be incorrect.`);
  }
}
var ErrorCodes = {
  "SETUP_FUNCTION": 0,
  "0": "SETUP_FUNCTION",
  "RENDER_FUNCTION": 1,
  "1": "RENDER_FUNCTION",
  "NATIVE_EVENT_HANDLER": 5,
  "5": "NATIVE_EVENT_HANDLER",
  "COMPONENT_EVENT_HANDLER": 6,
  "6": "COMPONENT_EVENT_HANDLER",
  "VNODE_HOOK": 7,
  "7": "VNODE_HOOK",
  "DIRECTIVE_HOOK": 8,
  "8": "DIRECTIVE_HOOK",
  "TRANSITION_HOOK": 9,
  "9": "TRANSITION_HOOK",
  "APP_ERROR_HANDLER": 10,
  "10": "APP_ERROR_HANDLER",
  "APP_WARN_HANDLER": 11,
  "11": "APP_WARN_HANDLER",
  "FUNCTION_REF": 12,
  "12": "FUNCTION_REF",
  "ASYNC_COMPONENT_LOADER": 13,
  "13": "ASYNC_COMPONENT_LOADER",
  "SCHEDULER": 14,
  "14": "SCHEDULER",
  "COMPONENT_UPDATE": 15,
  "15": "COMPONENT_UPDATE",
  "APP_UNMOUNT_CLEANUP": 16,
  "16": "APP_UNMOUNT_CLEANUP"
};
var ErrorTypeStrings$1 = {
  ["sp"]: "serverPrefetch hook",
  ["bc"]: "beforeCreate hook",
  ["c"]: "created hook",
  ["bm"]: "beforeMount hook",
  ["m"]: "mounted hook",
  ["bu"]: "beforeUpdate hook",
  ["u"]: "updated",
  ["bum"]: "beforeUnmount hook",
  ["um"]: "unmounted hook",
  ["a"]: "activated hook",
  ["da"]: "deactivated hook",
  ["ec"]: "errorCaptured hook",
  ["rtc"]: "renderTracked hook",
  ["rtg"]: "renderTriggered hook",
  [0]: "setup function",
  [1]: "render function",
  [2]: "watcher getter",
  [3]: "watcher callback",
  [4]: "watcher cleanup function",
  [5]: "native event handler",
  [6]: "component event handler",
  [7]: "vnode hook",
  [8]: "directive hook",
  [9]: "transition hook",
  [10]: "app errorHandler",
  [11]: "app warnHandler",
  [12]: "ref function",
  [13]: "async component loader",
  [14]: "scheduler flush",
  [15]: "component update",
  [16]: "app unmount cleanup function"
};
function callWithErrorHandling(fn2, instance, type, args) {
  try {
    return args ? fn2(...args) : fn2();
  } catch (err) {
    handleError(err, instance, type);
  }
}
function callWithAsyncErrorHandling(fn2, instance, type, args) {
  if (isFunction(fn2)) {
    const res = callWithErrorHandling(fn2, instance, type, args);
    if (res && isPromise(res)) {
      res.catch((err) => {
        handleError(err, instance, type);
      });
    }
    return res;
  }
  if (isArray(fn2)) {
    const values = [];
    for (let i = 0; i < fn2.length; i++) {
      values.push(callWithAsyncErrorHandling(fn2[i], instance, type, args));
    }
    return values;
  } else if (true) {
    warn$1(
      `Invalid value type passed to callWithAsyncErrorHandling(): ${typeof fn2}`
    );
  }
}
function handleError(err, instance, type, throwInDev = true) {
  const contextVNode = instance ? instance.vnode : null;
  const { errorHandler, throwUnhandledErrorInProduction } = instance && instance.appContext.config || EMPTY_OBJ;
  if (instance) {
    let cur = instance.parent;
    const exposedInstance = instance.proxy;
    const errorInfo = true ? ErrorTypeStrings$1[type] : `https://vuejs.org/error-reference/#runtime-${type}`;
    while (cur) {
      const errorCapturedHooks = cur.ec;
      if (errorCapturedHooks) {
        for (let i = 0; i < errorCapturedHooks.length; i++) {
          if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {
            return;
          }
        }
      }
      cur = cur.parent;
    }
    if (errorHandler) {
      pauseTracking();
      callWithErrorHandling(errorHandler, null, 10, [
        err,
        exposedInstance,
        errorInfo
      ]);
      resetTracking();
      return;
    }
  }
  logError(err, type, contextVNode, throwInDev, throwUnhandledErrorInProduction);
}
function logError(err, type, contextVNode, throwInDev = true, throwInProd = false) {
  if (true) {
    const info = ErrorTypeStrings$1[type];
    if (contextVNode) {
      pushWarningContext(contextVNode);
    }
    warn$1(`Unhandled error${info ? ` during execution of ${info}` : ``}`);
    if (contextVNode) {
      popWarningContext();
    }
    if (throwInDev) {
      throw err;
    } else {
      console.error(err);
    }
  } else if (throwInProd) {
    throw err;
  } else {
    console.error(err);
  }
}
var queue = [];
var flushIndex = -1;
var pendingPostFlushCbs = [];
var activePostFlushCbs = null;
var postFlushIndex = 0;
var resolvedPromise = Promise.resolve();
var currentFlushPromise = null;
var RECURSION_LIMIT = 100;
function nextTick(fn2) {
  const p2 = currentFlushPromise || resolvedPromise;
  return fn2 ? p2.then(this ? fn2.bind(this) : fn2) : p2;
}
function findInsertionIndex(id2) {
  let start = flushIndex + 1;
  let end2 = queue.length;
  while (start < end2) {
    const middle = start + end2 >>> 1;
    const middleJob = queue[middle];
    const middleJobId = getId(middleJob);
    if (middleJobId < id2 || middleJobId === id2 && middleJob.flags & 2) {
      start = middle + 1;
    } else {
      end2 = middle;
    }
  }
  return start;
}
function queueJob(job) {
  if (!(job.flags & 1)) {
    const jobId = getId(job);
    const lastJob = queue[queue.length - 1];
    if (!lastJob || // fast path when the job id is larger than the tail
    !(job.flags & 2) && jobId >= getId(lastJob)) {
      queue.push(job);
    } else {
      queue.splice(findInsertionIndex(jobId), 0, job);
    }
    job.flags |= 1;
    queueFlush();
  }
}
function queueFlush() {
  if (!currentFlushPromise) {
    currentFlushPromise = resolvedPromise.then(flushJobs);
  }
}
function queuePostFlushCb(cb) {
  if (!isArray(cb)) {
    if (activePostFlushCbs && cb.id === -1) {
      activePostFlushCbs.splice(postFlushIndex + 1, 0, cb);
    } else if (!(cb.flags & 1)) {
      pendingPostFlushCbs.push(cb);
      cb.flags |= 1;
    }
  } else {
    pendingPostFlushCbs.push(...cb);
  }
  queueFlush();
}
function flushPreFlushCbs(instance, seen, i = flushIndex + 1) {
  if (true) {
    seen = seen || /* @__PURE__ */ new Map();
  }
  for (; i < queue.length; i++) {
    const cb = queue[i];
    if (cb && cb.flags & 2) {
      if (instance && cb.id !== instance.uid) {
        continue;
      }
      if (checkRecursiveUpdates(seen, cb)) {
        continue;
      }
      queue.splice(i, 1);
      i--;
      if (cb.flags & 4) {
        cb.flags &= -2;
      }
      cb();
      if (!(cb.flags & 4)) {
        cb.flags &= -2;
      }
    }
  }
}
function flushPostFlushCbs(seen) {
  if (pendingPostFlushCbs.length) {
    const deduped = [...new Set(pendingPostFlushCbs)].sort(
      (a2, b2) => getId(a2) - getId(b2)
    );
    pendingPostFlushCbs.length = 0;
    if (activePostFlushCbs) {
      activePostFlushCbs.push(...deduped);
      return;
    }
    activePostFlushCbs = deduped;
    if (true) {
      seen = seen || /* @__PURE__ */ new Map();
    }
    for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {
      const cb = activePostFlushCbs[postFlushIndex];
      if (checkRecursiveUpdates(seen, cb)) {
        continue;
      }
      if (cb.flags & 4) {
        cb.flags &= -2;
      }
      if (!(cb.flags & 8)) cb();
      cb.flags &= -2;
    }
    activePostFlushCbs = null;
    postFlushIndex = 0;
  }
}
var getId = (job) => job.id == null ? job.flags & 2 ? -1 : Infinity : job.id;
function flushJobs(seen) {
  if (true) {
    seen = seen || /* @__PURE__ */ new Map();
  }
  const check = true ? (job) => checkRecursiveUpdates(seen, job) : NOOP;
  try {
    for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {
      const job = queue[flushIndex];
      if (job && !(job.flags & 8)) {
        if (check(job)) {
          continue;
        }
        if (job.flags & 4) {
          job.flags &= ~1;
        }
        callWithErrorHandling(
          job,
          job.i,
          job.i ? 15 : 14
        );
        if (!(job.flags & 4)) {
          job.flags &= ~1;
        }
      }
    }
  } finally {
    for (; flushIndex < queue.length; flushIndex++) {
      const job = queue[flushIndex];
      if (job) {
        job.flags &= -2;
      }
    }
    flushIndex = -1;
    queue.length = 0;
    flushPostFlushCbs(seen);
    currentFlushPromise = null;
    if (queue.length || pendingPostFlushCbs.length) {
      flushJobs(seen);
    }
  }
}
function checkRecursiveUpdates(seen, fn2) {
  const count = seen.get(fn2) || 0;
  if (count > RECURSION_LIMIT) {
    const instance = fn2.i;
    const componentName = instance && getComponentName(instance.type);
    handleError(
      `Maximum recursive updates exceeded${componentName ? ` in component <${componentName}>` : ``}. This means you have a reactive effect that is mutating its own dependencies and thus recursively triggering itself. Possible sources include component template, render function, updated hook or watcher source function.`,
      null,
      10
    );
    return true;
  }
  seen.set(fn2, count + 1);
  return false;
}
var isHmrUpdating = false;
var hmrDirtyComponents = /* @__PURE__ */ new Map();
if (true) {
  getGlobalThis().__VUE_HMR_RUNTIME__ = {
    createRecord: tryWrap(createRecord),
    rerender: tryWrap(rerender),
    reload: tryWrap(reload)
  };
}
var map = /* @__PURE__ */ new Map();
function registerHMR(instance) {
  const id2 = instance.type.__hmrId;
  let record = map.get(id2);
  if (!record) {
    createRecord(id2, instance.type);
    record = map.get(id2);
  }
  record.instances.add(instance);
}
function unregisterHMR(instance) {
  map.get(instance.type.__hmrId).instances.delete(instance);
}
function createRecord(id2, initialDef) {
  if (map.has(id2)) {
    return false;
  }
  map.set(id2, {
    initialDef: normalizeClassComponent(initialDef),
    instances: /* @__PURE__ */ new Set()
  });
  return true;
}
function normalizeClassComponent(component) {
  return isClassComponent(component) ? component.__vccOpts : component;
}
function rerender(id2, newRender) {
  const record = map.get(id2);
  if (!record) {
    return;
  }
  record.initialDef.render = newRender;
  [...record.instances].forEach((instance) => {
    if (newRender) {
      instance.render = newRender;
      normalizeClassComponent(instance.type).render = newRender;
    }
    instance.renderCache = [];
    isHmrUpdating = true;
    if (!(instance.job.flags & 8)) {
      instance.update();
    }
    isHmrUpdating = false;
  });
}
function reload(id2, newComp) {
  const record = map.get(id2);
  if (!record) return;
  newComp = normalizeClassComponent(newComp);
  updateComponentDef(record.initialDef, newComp);
  const instances = [...record.instances];
  for (let i = 0; i < instances.length; i++) {
    const instance = instances[i];
    const oldComp = normalizeClassComponent(instance.type);
    let dirtyInstances = hmrDirtyComponents.get(oldComp);
    if (!dirtyInstances) {
      if (oldComp !== record.initialDef) {
        updateComponentDef(oldComp, newComp);
      }
      hmrDirtyComponents.set(oldComp, dirtyInstances = /* @__PURE__ */ new Set());
    }
    dirtyInstances.add(instance);
    instance.appContext.propsCache.delete(instance.type);
    instance.appContext.emitsCache.delete(instance.type);
    instance.appContext.optionsCache.delete(instance.type);
    if (instance.ceReload) {
      dirtyInstances.add(instance);
      instance.ceReload(newComp.styles);
      dirtyInstances.delete(instance);
    } else if (instance.parent) {
      queueJob(() => {
        if (!(instance.job.flags & 8)) {
          isHmrUpdating = true;
          instance.parent.update();
          isHmrUpdating = false;
          dirtyInstances.delete(instance);
        }
      });
    } else if (instance.appContext.reload) {
      instance.appContext.reload();
    } else if (typeof window !== "undefined") {
      window.location.reload();
    } else {
      console.warn(
        "[HMR] Root or manually mounted instance modified. Full reload required."
      );
    }
    if (instance.root.ce && instance !== instance.root) {
      instance.root.ce._removeChildStyle(oldComp);
    }
  }
  queuePostFlushCb(() => {
    hmrDirtyComponents.clear();
  });
}
function updateComponentDef(oldComp, newComp) {
  extend(oldComp, newComp);
  for (const key2 in oldComp) {
    if (key2 !== "__file" && !(key2 in newComp)) {
      delete oldComp[key2];
    }
  }
}
function tryWrap(fn2) {
  return (id2, arg) => {
    try {
      return fn2(id2, arg);
    } catch (e) {
      console.error(e);
      console.warn(
        `[HMR] Something went wrong during Vue component hot-reload. Full reload required.`
      );
    }
  };
}
var devtools$1;
var buffer = [];
var devtoolsNotInstalled = false;
function emit$1(event, ...args) {
  if (devtools$1) {
    devtools$1.emit(event, ...args);
  } else if (!devtoolsNotInstalled) {
    buffer.push({ event, args });
  }
}
function setDevtoolsHook$1(hook2, target) {
  var _a, _b;
  devtools$1 = hook2;
  if (devtools$1) {
    devtools$1.enabled = true;
    buffer.forEach(({ event, args }) => devtools$1.emit(event, ...args));
    buffer = [];
  } else if (
    // handle late devtools injection - only do this if we are in an actual
    // browser environment to avoid the timer handle stalling test runner exit
    // (#4815)
    typeof window !== "undefined" && // some envs mock window but not fully
    window.HTMLElement && // also exclude jsdom
    // eslint-disable-next-line no-restricted-syntax
    !((_b = (_a = window.navigator) == null ? void 0 : _a.userAgent) == null ? void 0 : _b.includes("jsdom"))
  ) {
    const replay = target.__VUE_DEVTOOLS_HOOK_REPLAY__ = target.__VUE_DEVTOOLS_HOOK_REPLAY__ || [];
    replay.push((newHook) => {
      setDevtoolsHook$1(newHook, target);
    });
    setTimeout(() => {
      if (!devtools$1) {
        target.__VUE_DEVTOOLS_HOOK_REPLAY__ = null;
        devtoolsNotInstalled = true;
        buffer = [];
      }
    }, 3e3);
  } else {
    devtoolsNotInstalled = true;
    buffer = [];
  }
}
function devtoolsInitApp(app, version2) {
  emit$1("app:init", app, version2, {
    Fragment,
    Text,
    Comment,
    Static
  });
}
function devtoolsUnmountApp(app) {
  emit$1("app:unmount", app);
}
var devtoolsComponentAdded = createDevtoolsComponentHook(
  "component:added"
  /* COMPONENT_ADDED */
);
var devtoolsComponentUpdated = createDevtoolsComponentHook(
  "component:updated"
  /* COMPONENT_UPDATED */
);
var _devtoolsComponentRemoved = createDevtoolsComponentHook(
  "component:removed"
  /* COMPONENT_REMOVED */
);
var devtoolsComponentRemoved = (component) => {
  if (devtools$1 && typeof devtools$1.cleanupBuffer === "function" && // remove the component if it wasn't buffered
  !devtools$1.cleanupBuffer(component)) {
    _devtoolsComponentRemoved(component);
  }
};
function createDevtoolsComponentHook(hook2) {
  return (component) => {
    emit$1(
      hook2,
      component.appContext.app,
      component.uid,
      component.parent ? component.parent.uid : void 0,
      component
    );
  };
}
var devtoolsPerfStart = createDevtoolsPerformanceHook(
  "perf:start"
  /* PERFORMANCE_START */
);
var devtoolsPerfEnd = createDevtoolsPerformanceHook(
  "perf:end"
  /* PERFORMANCE_END */
);
function createDevtoolsPerformanceHook(hook2) {
  return (component, type, time) => {
    emit$1(hook2, component.appContext.app, component.uid, component, type, time);
  };
}
function devtoolsComponentEmit(component, event, params) {
  emit$1(
    "component:emit",
    component.appContext.app,
    component,
    event,
    params
  );
}
var currentRenderingInstance = null;
var currentScopeId = null;
function setCurrentRenderingInstance(instance) {
  const prev = currentRenderingInstance;
  currentRenderingInstance = instance;
  currentScopeId = instance && instance.type.__scopeId || null;
  return prev;
}
function pushScopeId(id2) {
  currentScopeId = id2;
}
function popScopeId() {
  currentScopeId = null;
}
var withScopeId = (_id) => withCtx;
function withCtx(fn2, ctx = currentRenderingInstance, isNonScopedSlot) {
  if (!ctx) return fn2;
  if (fn2._n) {
    return fn2;
  }
  const renderFnWithContext = (...args) => {
    if (renderFnWithContext._d) {
      setBlockTracking(-1);
    }
    const prevInstance = setCurrentRenderingInstance(ctx);
    let res;
    try {
      res = fn2(...args);
    } finally {
      setCurrentRenderingInstance(prevInstance);
      if (renderFnWithContext._d) {
        setBlockTracking(1);
      }
    }
    if (true) {
      devtoolsComponentUpdated(ctx);
    }
    return res;
  };
  renderFnWithContext._n = true;
  renderFnWithContext._c = true;
  renderFnWithContext._d = true;
  return renderFnWithContext;
}
function validateDirectiveName(name) {
  if (isBuiltInDirective(name)) {
    warn$1("Do not use built-in directive ids as custom directive id: " + name);
  }
}
function withDirectives(vnode, directives) {
  if (currentRenderingInstance === null) {
    warn$1(`withDirectives can only be used inside render functions.`);
    return vnode;
  }
  const instance = getComponentPublicInstance(currentRenderingInstance);
  const bindings = vnode.dirs || (vnode.dirs = []);
  for (let i = 0; i < directives.length; i++) {
    let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];
    if (dir) {
      if (isFunction(dir)) {
        dir = {
          mounted: dir,
          updated: dir
        };
      }
      if (dir.deep) {
        traverse(value);
      }
      bindings.push({
        dir,
        instance,
        value,
        oldValue: void 0,
        arg,
        modifiers
      });
    }
  }
  return vnode;
}
function invokeDirectiveHook(vnode, prevVNode, instance, name) {
  const bindings = vnode.dirs;
  const oldBindings = prevVNode && prevVNode.dirs;
  for (let i = 0; i < bindings.length; i++) {
    const binding = bindings[i];
    if (oldBindings) {
      binding.oldValue = oldBindings[i].value;
    }
    let hook2 = binding.dir[name];
    if (hook2) {
      pauseTracking();
      callWithAsyncErrorHandling(hook2, instance, 8, [
        vnode.el,
        binding,
        vnode,
        prevVNode
      ]);
      resetTracking();
    }
  }
}
var TeleportEndKey = Symbol("_vte");
var isTeleport = (type) => type.__isTeleport;
var isTeleportDisabled = (props) => props && (props.disabled || props.disabled === "");
var isTeleportDeferred = (props) => props && (props.defer || props.defer === "");
var isTargetSVG = (target) => typeof SVGElement !== "undefined" && target instanceof SVGElement;
var isTargetMathML = (target) => typeof MathMLElement === "function" && target instanceof MathMLElement;
var resolveTarget = (props, select) => {
  const targetSelector = props && props.to;
  if (isString(targetSelector)) {
    if (!select) {
      warn$1(
        `Current renderer does not support string target for Teleports. (missing querySelector renderer option)`
      );
      return null;
    } else {
      const target = select(targetSelector);
      if (!target && !isTeleportDisabled(props)) {
        warn$1(
          `Failed to locate Teleport target with selector "${targetSelector}". Note the target element must exist before the component is mounted - i.e. the target cannot be rendered by the component itself, and ideally should be outside of the entire Vue component tree.`
        );
      }
      return target;
    }
  } else {
    if (!targetSelector && !isTeleportDisabled(props)) {
      warn$1(`Invalid Teleport target: ${targetSelector}`);
    }
    return targetSelector;
  }
};
var TeleportImpl = {
  name: "Teleport",
  __isTeleport: true,
  process(n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, internals) {
    const {
      mc: mountChildren,
      pc: patchChildren,
      pbc: patchBlockChildren,
      o: { insert, querySelector, createText, createComment }
    } = internals;
    const disabled = isTeleportDisabled(n2.props);
    let { shapeFlag, children, dynamicChildren } = n2;
    if (isHmrUpdating) {
      optimized = false;
      dynamicChildren = null;
    }
    if (n1 == null) {
      const placeholder = n2.el = true ? createComment("teleport start") : createText("");
      const mainAnchor = n2.anchor = true ? createComment("teleport end") : createText("");
      insert(placeholder, container, anchor);
      insert(mainAnchor, container, anchor);
      const mount = (container2, anchor2) => {
        if (shapeFlag & 16) {
          mountChildren(
            children,
            container2,
            anchor2,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized
          );
        }
      };
      const mountToTarget = () => {
        const target = n2.target = resolveTarget(n2.props, querySelector);
        const targetAnchor = prepareAnchor(target, n2, createText, insert);
        if (target) {
          if (namespace !== "svg" && isTargetSVG(target)) {
            namespace = "svg";
          } else if (namespace !== "mathml" && isTargetMathML(target)) {
            namespace = "mathml";
          }
          if (parentComponent && parentComponent.isCE) {
            (parentComponent.ce._teleportTargets || (parentComponent.ce._teleportTargets = /* @__PURE__ */ new Set())).add(target);
          }
          if (!disabled) {
            mount(target, targetAnchor);
            updateCssVars(n2, false);
          }
        } else if (!disabled) {
          warn$1(
            "Invalid Teleport target on mount:",
            target,
            `(${typeof target})`
          );
        }
      };
      if (disabled) {
        mount(container, mainAnchor);
        updateCssVars(n2, true);
      }
      if (isTeleportDeferred(n2.props)) {
        n2.el.__isMounted = false;
        queuePostRenderEffect(() => {
          mountToTarget();
          delete n2.el.__isMounted;
        }, parentSuspense);
      } else {
        mountToTarget();
      }
    } else {
      if (isTeleportDeferred(n2.props) && n1.el.__isMounted === false) {
        queuePostRenderEffect(() => {
          TeleportImpl.process(
            n1,
            n2,
            container,
            anchor,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized,
            internals
          );
        }, parentSuspense);
        return;
      }
      n2.el = n1.el;
      n2.targetStart = n1.targetStart;
      const mainAnchor = n2.anchor = n1.anchor;
      const target = n2.target = n1.target;
      const targetAnchor = n2.targetAnchor = n1.targetAnchor;
      const wasDisabled = isTeleportDisabled(n1.props);
      const currentContainer = wasDisabled ? container : target;
      const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;
      if (namespace === "svg" || isTargetSVG(target)) {
        namespace = "svg";
      } else if (namespace === "mathml" || isTargetMathML(target)) {
        namespace = "mathml";
      }
      if (dynamicChildren) {
        patchBlockChildren(
          n1.dynamicChildren,
          dynamicChildren,
          currentContainer,
          parentComponent,
          parentSuspense,
          namespace,
          slotScopeIds
        );
        traverseStaticChildren(n1, n2, false);
      } else if (!optimized) {
        patchChildren(
          n1,
          n2,
          currentContainer,
          currentAnchor,
          parentComponent,
          parentSuspense,
          namespace,
          slotScopeIds,
          false
        );
      }
      if (disabled) {
        if (!wasDisabled) {
          moveTeleport(
            n2,
            container,
            mainAnchor,
            internals,
            1
          );
        } else {
          if (n2.props && n1.props && n2.props.to !== n1.props.to) {
            n2.props.to = n1.props.to;
          }
        }
      } else {
        if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {
          const nextTarget = n2.target = resolveTarget(
            n2.props,
            querySelector
          );
          if (nextTarget) {
            moveTeleport(
              n2,
              nextTarget,
              null,
              internals,
              0
            );
          } else if (true) {
            warn$1(
              "Invalid Teleport target on update:",
              target,
              `(${typeof target})`
            );
          }
        } else if (wasDisabled) {
          moveTeleport(
            n2,
            target,
            targetAnchor,
            internals,
            1
          );
        }
      }
      updateCssVars(n2, disabled);
    }
  },
  remove(vnode, parentComponent, parentSuspense, { um: unmount, o: { remove: hostRemove } }, doRemove) {
    const {
      shapeFlag,
      children,
      anchor,
      targetStart,
      targetAnchor,
      target,
      props
    } = vnode;
    if (target) {
      hostRemove(targetStart);
      hostRemove(targetAnchor);
    }
    doRemove && hostRemove(anchor);
    if (shapeFlag & 16) {
      const shouldRemove = doRemove || !isTeleportDisabled(props);
      for (let i = 0; i < children.length; i++) {
        const child2 = children[i];
        unmount(
          child2,
          parentComponent,
          parentSuspense,
          shouldRemove,
          !!child2.dynamicChildren
        );
      }
    }
  },
  move: moveTeleport,
  hydrate: hydrateTeleport
};
function moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2) {
  if (moveType === 0) {
    insert(vnode.targetAnchor, container, parentAnchor);
  }
  const { el, anchor, shapeFlag, children, props } = vnode;
  const isReorder = moveType === 2;
  if (isReorder) {
    insert(el, container, parentAnchor);
  }
  if (!isReorder || isTeleportDisabled(props)) {
    if (shapeFlag & 16) {
      for (let i = 0; i < children.length; i++) {
        move(
          children[i],
          container,
          parentAnchor,
          2
        );
      }
    }
  }
  if (isReorder) {
    insert(anchor, container, parentAnchor);
  }
}
function hydrateTeleport(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, {
  o: { nextSibling, parentNode, querySelector, insert, createText }
}, hydrateChildren) {
  function hydrateDisabledTeleport(node2, vnode2, targetStart, targetAnchor) {
    vnode2.anchor = hydrateChildren(
      nextSibling(node2),
      vnode2,
      parentNode(node2),
      parentComponent,
      parentSuspense,
      slotScopeIds,
      optimized
    );
    vnode2.targetStart = targetStart;
    vnode2.targetAnchor = targetAnchor;
  }
  const target = vnode.target = resolveTarget(
    vnode.props,
    querySelector
  );
  const disabled = isTeleportDisabled(vnode.props);
  if (target) {
    const targetNode = target._lpa || target.firstChild;
    if (vnode.shapeFlag & 16) {
      if (disabled) {
        hydrateDisabledTeleport(
          node,
          vnode,
          targetNode,
          targetNode && nextSibling(targetNode)
        );
      } else {
        vnode.anchor = nextSibling(node);
        let targetAnchor = targetNode;
        while (targetAnchor) {
          if (targetAnchor && targetAnchor.nodeType === 8) {
            if (targetAnchor.data === "teleport start anchor") {
              vnode.targetStart = targetAnchor;
            } else if (targetAnchor.data === "teleport anchor") {
              vnode.targetAnchor = targetAnchor;
              target._lpa = vnode.targetAnchor && nextSibling(vnode.targetAnchor);
              break;
            }
          }
          targetAnchor = nextSibling(targetAnchor);
        }
        if (!vnode.targetAnchor) {
          prepareAnchor(target, vnode, createText, insert);
        }
        hydrateChildren(
          targetNode && nextSibling(targetNode),
          vnode,
          target,
          parentComponent,
          parentSuspense,
          slotScopeIds,
          optimized
        );
      }
    }
    updateCssVars(vnode, disabled);
  } else if (disabled) {
    if (vnode.shapeFlag & 16) {
      hydrateDisabledTeleport(node, vnode, node, nextSibling(node));
    }
  }
  return vnode.anchor && nextSibling(vnode.anchor);
}
var Teleport = TeleportImpl;
function updateCssVars(vnode, isDisabled) {
  const ctx = vnode.ctx;
  if (ctx && ctx.ut) {
    let node, anchor;
    if (isDisabled) {
      node = vnode.el;
      anchor = vnode.anchor;
    } else {
      node = vnode.targetStart;
      anchor = vnode.targetAnchor;
    }
    while (node && node !== anchor) {
      if (node.nodeType === 1) node.setAttribute("data-v-owner", ctx.uid);
      node = node.nextSibling;
    }
    ctx.ut();
  }
}
function prepareAnchor(target, vnode, createText, insert) {
  const targetStart = vnode.targetStart = createText("");
  const targetAnchor = vnode.targetAnchor = createText("");
  targetStart[TeleportEndKey] = targetAnchor;
  if (target) {
    insert(targetStart, target);
    insert(targetAnchor, target);
  }
  return targetAnchor;
}
var leaveCbKey = Symbol("_leaveCb");
var enterCbKey = Symbol("_enterCb");
function useTransitionState() {
  const state = {
    isMounted: false,
    isLeaving: false,
    isUnmounting: false,
    leavingVNodes: /* @__PURE__ */ new Map()
  };
  onMounted(() => {
    state.isMounted = true;
  });
  onBeforeUnmount(() => {
    state.isUnmounting = true;
  });
  return state;
}
var TransitionHookValidator = [Function, Array];
var BaseTransitionPropsValidators = {
  mode: String,
  appear: Boolean,
  persisted: Boolean,
  // enter
  onBeforeEnter: TransitionHookValidator,
  onEnter: TransitionHookValidator,
  onAfterEnter: TransitionHookValidator,
  onEnterCancelled: TransitionHookValidator,
  // leave
  onBeforeLeave: TransitionHookValidator,
  onLeave: TransitionHookValidator,
  onAfterLeave: TransitionHookValidator,
  onLeaveCancelled: TransitionHookValidator,
  // appear
  onBeforeAppear: TransitionHookValidator,
  onAppear: TransitionHookValidator,
  onAfterAppear: TransitionHookValidator,
  onAppearCancelled: TransitionHookValidator
};
var recursiveGetSubtree = (instance) => {
  const subTree = instance.subTree;
  return subTree.component ? recursiveGetSubtree(subTree.component) : subTree;
};
var BaseTransitionImpl = {
  name: `BaseTransition`,
  props: BaseTransitionPropsValidators,
  setup(props, { slots }) {
    const instance = getCurrentInstance();
    const state = useTransitionState();
    return () => {
      const children = slots.default && getTransitionRawChildren(slots.default(), true);
      if (!children || !children.length) {
        return;
      }
      const child2 = findNonCommentChild(children);
      const rawProps = toRaw(props);
      const { mode } = rawProps;
      if (mode && mode !== "in-out" && mode !== "out-in" && mode !== "default") {
        warn$1(`invalid <transition> mode: ${mode}`);
      }
      if (state.isLeaving) {
        return emptyPlaceholder(child2);
      }
      const innerChild = getInnerChild$1(child2);
      if (!innerChild) {
        return emptyPlaceholder(child2);
      }
      let enterHooks = resolveTransitionHooks(
        innerChild,
        rawProps,
        state,
        instance,
        // #11061, ensure enterHooks is fresh after clone
        (hooks) => enterHooks = hooks
      );
      if (innerChild.type !== Comment) {
        setTransitionHooks(innerChild, enterHooks);
      }
      let oldInnerChild = instance.subTree && getInnerChild$1(instance.subTree);
      if (oldInnerChild && oldInnerChild.type !== Comment && !isSameVNodeType(oldInnerChild, innerChild) && recursiveGetSubtree(instance).type !== Comment) {
        let leavingHooks = resolveTransitionHooks(
          oldInnerChild,
          rawProps,
          state,
          instance
        );
        setTransitionHooks(oldInnerChild, leavingHooks);
        if (mode === "out-in" && innerChild.type !== Comment) {
          state.isLeaving = true;
          leavingHooks.afterLeave = () => {
            state.isLeaving = false;
            if (!(instance.job.flags & 8)) {
              instance.update();
            }
            delete leavingHooks.afterLeave;
            oldInnerChild = void 0;
          };
          return emptyPlaceholder(child2);
        } else if (mode === "in-out" && innerChild.type !== Comment) {
          leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {
            const leavingVNodesCache = getLeavingNodesForType(
              state,
              oldInnerChild
            );
            leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;
            el[leaveCbKey] = () => {
              earlyRemove();
              el[leaveCbKey] = void 0;
              delete enterHooks.delayedLeave;
              oldInnerChild = void 0;
            };
            enterHooks.delayedLeave = () => {
              delayedLeave();
              delete enterHooks.delayedLeave;
              oldInnerChild = void 0;
            };
          };
        } else {
          oldInnerChild = void 0;
        }
      } else if (oldInnerChild) {
        oldInnerChild = void 0;
      }
      return child2;
    };
  }
};
function findNonCommentChild(children) {
  let child2 = children[0];
  if (children.length > 1) {
    let hasFound = false;
    for (const c2 of children) {
      if (c2.type !== Comment) {
        if (hasFound) {
          warn$1(
            "<transition> can only be used on a single element or component. Use <transition-group> for lists."
          );
          break;
        }
        child2 = c2;
        hasFound = true;
        if (false) break;
      }
    }
  }
  return child2;
}
var BaseTransition = BaseTransitionImpl;
function getLeavingNodesForType(state, vnode) {
  const { leavingVNodes } = state;
  let leavingVNodesCache = leavingVNodes.get(vnode.type);
  if (!leavingVNodesCache) {
    leavingVNodesCache = /* @__PURE__ */ Object.create(null);
    leavingVNodes.set(vnode.type, leavingVNodesCache);
  }
  return leavingVNodesCache;
}
function resolveTransitionHooks(vnode, props, state, instance, postClone) {
  const {
    appear,
    mode,
    persisted = false,
    onBeforeEnter,
    onEnter,
    onAfterEnter,
    onEnterCancelled,
    onBeforeLeave,
    onLeave,
    onAfterLeave,
    onLeaveCancelled,
    onBeforeAppear,
    onAppear,
    onAfterAppear,
    onAppearCancelled
  } = props;
  const key2 = String(vnode.key);
  const leavingVNodesCache = getLeavingNodesForType(state, vnode);
  const callHook3 = (hook2, args) => {
    hook2 && callWithAsyncErrorHandling(
      hook2,
      instance,
      9,
      args
    );
  };
  const callAsyncHook = (hook2, args) => {
    const done = args[1];
    callHook3(hook2, args);
    if (isArray(hook2)) {
      if (hook2.every((hook22) => hook22.length <= 1)) done();
    } else if (hook2.length <= 1) {
      done();
    }
  };
  const hooks = {
    mode,
    persisted,
    beforeEnter(el) {
      let hook2 = onBeforeEnter;
      if (!state.isMounted) {
        if (appear) {
          hook2 = onBeforeAppear || onBeforeEnter;
        } else {
          return;
        }
      }
      if (el[leaveCbKey]) {
        el[leaveCbKey](
          true
          /* cancelled */
        );
      }
      const leavingVNode = leavingVNodesCache[key2];
      if (leavingVNode && isSameVNodeType(vnode, leavingVNode) && leavingVNode.el[leaveCbKey]) {
        leavingVNode.el[leaveCbKey]();
      }
      callHook3(hook2, [el]);
    },
    enter(el) {
      let hook2 = onEnter;
      let afterHook = onAfterEnter;
      let cancelHook = onEnterCancelled;
      if (!state.isMounted) {
        if (appear) {
          hook2 = onAppear || onEnter;
          afterHook = onAfterAppear || onAfterEnter;
          cancelHook = onAppearCancelled || onEnterCancelled;
        } else {
          return;
        }
      }
      let called = false;
      const done = el[enterCbKey] = (cancelled) => {
        if (called) return;
        called = true;
        if (cancelled) {
          callHook3(cancelHook, [el]);
        } else {
          callHook3(afterHook, [el]);
        }
        if (hooks.delayedLeave) {
          hooks.delayedLeave();
        }
        el[enterCbKey] = void 0;
      };
      if (hook2) {
        callAsyncHook(hook2, [el, done]);
      } else {
        done();
      }
    },
    leave(el, remove2) {
      const key22 = String(vnode.key);
      if (el[enterCbKey]) {
        el[enterCbKey](
          true
          /* cancelled */
        );
      }
      if (state.isUnmounting) {
        return remove2();
      }
      callHook3(onBeforeLeave, [el]);
      let called = false;
      const done = el[leaveCbKey] = (cancelled) => {
        if (called) return;
        called = true;
        remove2();
        if (cancelled) {
          callHook3(onLeaveCancelled, [el]);
        } else {
          callHook3(onAfterLeave, [el]);
        }
        el[leaveCbKey] = void 0;
        if (leavingVNodesCache[key22] === vnode) {
          delete leavingVNodesCache[key22];
        }
      };
      leavingVNodesCache[key22] = vnode;
      if (onLeave) {
        callAsyncHook(onLeave, [el, done]);
      } else {
        done();
      }
    },
    clone(vnode2) {
      const hooks2 = resolveTransitionHooks(
        vnode2,
        props,
        state,
        instance,
        postClone
      );
      if (postClone) postClone(hooks2);
      return hooks2;
    }
  };
  return hooks;
}
function emptyPlaceholder(vnode) {
  if (isKeepAlive(vnode)) {
    vnode = cloneVNode(vnode);
    vnode.children = null;
    return vnode;
  }
}
function getInnerChild$1(vnode) {
  if (!isKeepAlive(vnode)) {
    if (isTeleport(vnode.type) && vnode.children) {
      return findNonCommentChild(vnode.children);
    }
    return vnode;
  }
  if (vnode.component) {
    return vnode.component.subTree;
  }
  const { shapeFlag, children } = vnode;
  if (children) {
    if (shapeFlag & 16) {
      return children[0];
    }
    if (shapeFlag & 32 && isFunction(children.default)) {
      return children.default();
    }
  }
}
function setTransitionHooks(vnode, hooks) {
  if (vnode.shapeFlag & 6 && vnode.component) {
    vnode.transition = hooks;
    setTransitionHooks(vnode.component.subTree, hooks);
  } else if (vnode.shapeFlag & 128) {
    vnode.ssContent.transition = hooks.clone(vnode.ssContent);
    vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);
  } else {
    vnode.transition = hooks;
  }
}
function getTransitionRawChildren(children, keepComment = false, parentKey) {
  let ret = [];
  let keyedFragmentCount = 0;
  for (let i = 0; i < children.length; i++) {
    let child2 = children[i];
    const key2 = parentKey == null ? child2.key : String(parentKey) + String(child2.key != null ? child2.key : i);
    if (child2.type === Fragment) {
      if (child2.patchFlag & 128) keyedFragmentCount++;
      ret = ret.concat(
        getTransitionRawChildren(child2.children, keepComment, key2)
      );
    } else if (keepComment || child2.type !== Comment) {
      ret.push(key2 != null ? cloneVNode(child2, { key: key2 }) : child2);
    }
  }
  if (keyedFragmentCount > 1) {
    for (let i = 0; i < ret.length; i++) {
      ret[i].patchFlag = -2;
    }
  }
  return ret;
}
function defineComponent(options, extraOptions) {
  return isFunction(options) ? (
    // #8236: extend call and options.name access are considered side-effects
    // by Rollup, so we have to wrap it in a pure-annotated IIFE.
    (() => extend({ name: options.name }, extraOptions, { setup: options }))()
  ) : options;
}
function useId() {
  const i = getCurrentInstance();
  if (i) {
    return (i.appContext.config.idPrefix || "v") + "-" + i.ids[0] + i.ids[1]++;
  } else if (true) {
    warn$1(
      `useId() is called when there is no active component instance to be associated with.`
    );
  }
  return "";
}
function markAsyncBoundary(instance) {
  instance.ids = [instance.ids[0] + instance.ids[2]++ + "-", 0, 0];
}
var knownTemplateRefs = /* @__PURE__ */ new WeakSet();
function useTemplateRef(key2) {
  const i = getCurrentInstance();
  const r = shallowRef(null);
  if (i) {
    const refs = i.refs === EMPTY_OBJ ? i.refs = {} : i.refs;
    let desc;
    if ((desc = Object.getOwnPropertyDescriptor(refs, key2)) && !desc.configurable) {
      warn$1(`useTemplateRef('${key2}') already exists.`);
    } else {
      Object.defineProperty(refs, key2, {
        enumerable: true,
        get: () => r.value,
        set: (val) => r.value = val
      });
    }
  } else if (true) {
    warn$1(
      `useTemplateRef() is called when there is no active component instance to be associated with.`
    );
  }
  const ret = true ? readonly(r) : r;
  if (true) {
    knownTemplateRefs.add(ret);
  }
  return ret;
}
var pendingSetRefMap = /* @__PURE__ */ new WeakMap();
function setRef(rawRef, oldRawRef, parentSuspense, vnode, isUnmount = false) {
  if (isArray(rawRef)) {
    rawRef.forEach(
      (r, i) => setRef(
        r,
        oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef),
        parentSuspense,
        vnode,
        isUnmount
      )
    );
    return;
  }
  if (isAsyncWrapper(vnode) && !isUnmount) {
    if (vnode.shapeFlag & 512 && vnode.type.__asyncResolved && vnode.component.subTree.component) {
      setRef(rawRef, oldRawRef, parentSuspense, vnode.component.subTree);
    }
    return;
  }
  const refValue = vnode.shapeFlag & 4 ? getComponentPublicInstance(vnode.component) : vnode.el;
  const value = isUnmount ? null : refValue;
  const { i: owner, r: ref2 } = rawRef;
  if (!owner) {
    warn$1(
      `Missing ref owner context. ref cannot be used on hoisted vnodes. A vnode with ref must be created inside the render function.`
    );
    return;
  }
  const oldRef = oldRawRef && oldRawRef.r;
  const refs = owner.refs === EMPTY_OBJ ? owner.refs = {} : owner.refs;
  const setupState = owner.setupState;
  const rawSetupState = toRaw(setupState);
  const canSetSetupRef = setupState === EMPTY_OBJ ? NO : (key2) => {
    if (true) {
      if (hasOwn(rawSetupState, key2) && !isRef2(rawSetupState[key2])) {
        warn$1(
          `Template ref "${key2}" used on a non-ref value. It will not work in the production build.`
        );
      }
      if (knownTemplateRefs.has(rawSetupState[key2])) {
        return false;
      }
    }
    return hasOwn(rawSetupState, key2);
  };
  const canSetRef = (ref22) => {
    return !knownTemplateRefs.has(ref22);
  };
  if (oldRef != null && oldRef !== ref2) {
    invalidatePendingSetRef(oldRawRef);
    if (isString(oldRef)) {
      refs[oldRef] = null;
      if (canSetSetupRef(oldRef)) {
        setupState[oldRef] = null;
      }
    } else if (isRef2(oldRef)) {
      if (canSetRef(oldRef)) {
        oldRef.value = null;
      }
      const oldRawRefAtom = oldRawRef;
      if (oldRawRefAtom.k) refs[oldRawRefAtom.k] = null;
    }
  }
  if (isFunction(ref2)) {
    callWithErrorHandling(ref2, owner, 12, [value, refs]);
  } else {
    const _isString = isString(ref2);
    const _isRef = isRef2(ref2);
    if (_isString || _isRef) {
      const doSet = () => {
        if (rawRef.f) {
          const existing = _isString ? canSetSetupRef(ref2) ? setupState[ref2] : refs[ref2] : canSetRef(ref2) || !rawRef.k ? ref2.value : refs[rawRef.k];
          if (isUnmount) {
            isArray(existing) && remove(existing, refValue);
          } else {
            if (!isArray(existing)) {
              if (_isString) {
                refs[ref2] = [refValue];
                if (canSetSetupRef(ref2)) {
                  setupState[ref2] = refs[ref2];
                }
              } else {
                const newVal = [refValue];
                if (canSetRef(ref2)) {
                  ref2.value = newVal;
                }
                if (rawRef.k) refs[rawRef.k] = newVal;
              }
            } else if (!existing.includes(refValue)) {
              existing.push(refValue);
            }
          }
        } else if (_isString) {
          refs[ref2] = value;
          if (canSetSetupRef(ref2)) {
            setupState[ref2] = value;
          }
        } else if (_isRef) {
          if (canSetRef(ref2)) {
            ref2.value = value;
          }
          if (rawRef.k) refs[rawRef.k] = value;
        } else if (true) {
          warn$1("Invalid template ref type:", ref2, `(${typeof ref2})`);
        }
      };
      if (value) {
        const job = () => {
          doSet();
          pendingSetRefMap.delete(rawRef);
        };
        job.id = -1;
        pendingSetRefMap.set(rawRef, job);
        queuePostRenderEffect(job, parentSuspense);
      } else {
        invalidatePendingSetRef(rawRef);
        doSet();
      }
    } else if (true) {
      warn$1("Invalid template ref type:", ref2, `(${typeof ref2})`);
    }
  }
}
function invalidatePendingSetRef(rawRef) {
  const pendingSetRef = pendingSetRefMap.get(rawRef);
  if (pendingSetRef) {
    pendingSetRef.flags |= 8;
    pendingSetRefMap.delete(rawRef);
  }
}
var hasLoggedMismatchError = false;
var logMismatchError = () => {
  if (hasLoggedMismatchError) {
    return;
  }
  console.error("Hydration completed but contains mismatches.");
  hasLoggedMismatchError = true;
};
var isSVGContainer = (container) => container.namespaceURI.includes("svg") && container.tagName !== "foreignObject";
var isMathMLContainer = (container) => container.namespaceURI.includes("MathML");
var getContainerType = (container) => {
  if (container.nodeType !== 1) return void 0;
  if (isSVGContainer(container)) return "svg";
  if (isMathMLContainer(container)) return "mathml";
  return void 0;
};
var isComment = (node) => node.nodeType === 8;
function createHydrationFunctions(rendererInternals) {
  const {
    mt: mountComponent,
    p: patch,
    o: {
      patchProp: patchProp2,
      createText,
      nextSibling,
      parentNode,
      remove: remove2,
      insert,
      createComment
    }
  } = rendererInternals;
  const hydrate2 = (vnode, container) => {
    if (!container.hasChildNodes()) {
      warn$1(
        `Attempting to hydrate existing markup but container is empty. Performing full mount instead.`
      );
      patch(null, vnode, container);
      flushPostFlushCbs();
      container._vnode = vnode;
      return;
    }
    hydrateNode(container.firstChild, vnode, null, null, null);
    flushPostFlushCbs();
    container._vnode = vnode;
  };
  const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false) => {
    optimized = optimized || !!vnode.dynamicChildren;
    const isFragmentStart = isComment(node) && node.data === "[";
    const onMismatch = () => handleMismatch(
      node,
      vnode,
      parentComponent,
      parentSuspense,
      slotScopeIds,
      isFragmentStart
    );
    const { type, ref: ref2, shapeFlag, patchFlag } = vnode;
    let domType = node.nodeType;
    vnode.el = node;
    if (true) {
      def(node, "__vnode", vnode, true);
      def(node, "__vueParentComponent", parentComponent, true);
    }
    if (patchFlag === -2) {
      optimized = false;
      vnode.dynamicChildren = null;
    }
    let nextNode = null;
    switch (type) {
      case Text:
        if (domType !== 3) {
          if (vnode.children === "") {
            insert(vnode.el = createText(""), parentNode(node), node);
            nextNode = node;
          } else {
            nextNode = onMismatch();
          }
        } else {
          if (node.data !== vnode.children) {
            warn$1(
              `Hydration text mismatch in`,
              node.parentNode,
              `
  - rendered on server: ${JSON.stringify(
                node.data
              )}
  - expected on client: ${JSON.stringify(vnode.children)}`
            );
            logMismatchError();
            node.data = vnode.children;
          }
          nextNode = nextSibling(node);
        }
        break;
      case Comment:
        if (isTemplateNode(node)) {
          nextNode = nextSibling(node);
          replaceNode(
            vnode.el = node.content.firstChild,
            node,
            parentComponent
          );
        } else if (domType !== 8 || isFragmentStart) {
          nextNode = onMismatch();
        } else {
          nextNode = nextSibling(node);
        }
        break;
      case Static:
        if (isFragmentStart) {
          node = nextSibling(node);
          domType = node.nodeType;
        }
        if (domType === 1 || domType === 3) {
          nextNode = node;
          const needToAdoptContent = !vnode.children.length;
          for (let i = 0; i < vnode.staticCount; i++) {
            if (needToAdoptContent)
              vnode.children += nextNode.nodeType === 1 ? nextNode.outerHTML : nextNode.data;
            if (i === vnode.staticCount - 1) {
              vnode.anchor = nextNode;
            }
            nextNode = nextSibling(nextNode);
          }
          return isFragmentStart ? nextSibling(nextNode) : nextNode;
        } else {
          onMismatch();
        }
        break;
      case Fragment:
        if (!isFragmentStart) {
          nextNode = onMismatch();
        } else {
          nextNode = hydrateFragment(
            node,
            vnode,
            parentComponent,
            parentSuspense,
            slotScopeIds,
            optimized
          );
        }
        break;
      default:
        if (shapeFlag & 1) {
          if ((domType !== 1 || vnode.type.toLowerCase() !== node.tagName.toLowerCase()) && !isTemplateNode(node)) {
            nextNode = onMismatch();
          } else {
            nextNode = hydrateElement(
              node,
              vnode,
              parentComponent,
              parentSuspense,
              slotScopeIds,
              optimized
            );
          }
        } else if (shapeFlag & 6) {
          vnode.slotScopeIds = slotScopeIds;
          const container = parentNode(node);
          if (isFragmentStart) {
            nextNode = locateClosingAnchor(node);
          } else if (isComment(node) && node.data === "teleport start") {
            nextNode = locateClosingAnchor(node, node.data, "teleport end");
          } else {
            nextNode = nextSibling(node);
          }
          mountComponent(
            vnode,
            container,
            null,
            parentComponent,
            parentSuspense,
            getContainerType(container),
            optimized
          );
          if (isAsyncWrapper(vnode) && !vnode.type.__asyncResolved) {
            let subTree;
            if (isFragmentStart) {
              subTree = createVNode(Fragment);
              subTree.anchor = nextNode ? nextNode.previousSibling : container.lastChild;
            } else {
              subTree = node.nodeType === 3 ? createTextVNode("") : createVNode("div");
            }
            subTree.el = node;
            vnode.component.subTree = subTree;
          }
        } else if (shapeFlag & 64) {
          if (domType !== 8) {
            nextNode = onMismatch();
          } else {
            nextNode = vnode.type.hydrate(
              node,
              vnode,
              parentComponent,
              parentSuspense,
              slotScopeIds,
              optimized,
              rendererInternals,
              hydrateChildren
            );
          }
        } else if (shapeFlag & 128) {
          nextNode = vnode.type.hydrate(
            node,
            vnode,
            parentComponent,
            parentSuspense,
            getContainerType(parentNode(node)),
            slotScopeIds,
            optimized,
            rendererInternals,
            hydrateNode
          );
        } else if (true) {
          warn$1("Invalid HostVNode type:", type, `(${typeof type})`);
        }
    }
    if (ref2 != null) {
      setRef(ref2, null, parentSuspense, vnode);
    }
    return nextNode;
  };
  const hydrateElement = (el, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {
    optimized = optimized || !!vnode.dynamicChildren;
    const { type, props, patchFlag, shapeFlag, dirs, transition } = vnode;
    const forcePatch = type === "input" || type === "option";
    if (true) {
      if (dirs) {
        invokeDirectiveHook(vnode, null, parentComponent, "created");
      }
      let needCallTransitionHooks = false;
      if (isTemplateNode(el)) {
        needCallTransitionHooks = needTransition(
          null,
          // no need check parentSuspense in hydration
          transition
        ) && parentComponent && parentComponent.vnode.props && parentComponent.vnode.props.appear;
        const content = el.content.firstChild;
        if (needCallTransitionHooks) {
          const cls = content.getAttribute("class");
          if (cls) content.$cls = cls;
          transition.beforeEnter(content);
        }
        replaceNode(content, el, parentComponent);
        vnode.el = el = content;
      }
      if (shapeFlag & 16 && // skip if element has innerHTML / textContent
      !(props && (props.innerHTML || props.textContent))) {
        let next = hydrateChildren(
          el.firstChild,
          vnode,
          el,
          parentComponent,
          parentSuspense,
          slotScopeIds,
          optimized
        );
        let hasWarned2 = false;
        while (next) {
          if (!isMismatchAllowed(
            el,
            1
            /* CHILDREN */
          )) {
            if (!hasWarned2) {
              warn$1(
                `Hydration children mismatch on`,
                el,
                `
Server rendered element contains more child nodes than client vdom.`
              );
              hasWarned2 = true;
            }
            logMismatchError();
          }
          const cur = next;
          next = next.nextSibling;
          remove2(cur);
        }
      } else if (shapeFlag & 8) {
        let clientText = vnode.children;
        if (clientText[0] === "\n" && (el.tagName === "PRE" || el.tagName === "TEXTAREA")) {
          clientText = clientText.slice(1);
        }
        if (el.textContent !== clientText) {
          if (!isMismatchAllowed(
            el,
            0
            /* TEXT */
          )) {
            warn$1(
              `Hydration text content mismatch on`,
              el,
              `
  - rendered on server: ${el.textContent}
  - expected on client: ${vnode.children}`
            );
            logMismatchError();
          }
          el.textContent = vnode.children;
        }
      }
      if (props) {
        if (true) {
          const isCustomElement = el.tagName.includes("-");
          for (const key2 in props) {
            if (// #11189 skip if this node has directives that have created hooks
            // as it could have mutated the DOM in any possible way
            !(dirs && dirs.some((d) => d.dir.created)) && propHasMismatch(el, key2, props[key2], vnode, parentComponent)) {
              logMismatchError();
            }
            if (forcePatch && (key2.endsWith("value") || key2 === "indeterminate") || isOn(key2) && !isReservedProp(key2) || // force hydrate v-bind with .prop modifiers
            key2[0] === "." || isCustomElement) {
              patchProp2(el, key2, null, props[key2], void 0, parentComponent);
            }
          }
        } else if (props.onClick) {
          patchProp2(
            el,
            "onClick",
            null,
            props.onClick,
            void 0,
            parentComponent
          );
        } else if (patchFlag & 4 && isReactive(props.style)) {
          for (const key2 in props.style) props.style[key2];
        }
      }
      let vnodeHooks;
      if (vnodeHooks = props && props.onVnodeBeforeMount) {
        invokeVNodeHook(vnodeHooks, parentComponent, vnode);
      }
      if (dirs) {
        invokeDirectiveHook(vnode, null, parentComponent, "beforeMount");
      }
      if ((vnodeHooks = props && props.onVnodeMounted) || dirs || needCallTransitionHooks) {
        queueEffectWithSuspense(() => {
          vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);
          needCallTransitionHooks && transition.enter(el);
          dirs && invokeDirectiveHook(vnode, null, parentComponent, "mounted");
        }, parentSuspense);
      }
    }
    return el.nextSibling;
  };
  const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized) => {
    optimized = optimized || !!parentVNode.dynamicChildren;
    const children = parentVNode.children;
    const l = children.length;
    let hasWarned2 = false;
    for (let i = 0; i < l; i++) {
      const vnode = optimized ? children[i] : children[i] = normalizeVNode(children[i]);
      const isText = vnode.type === Text;
      if (node) {
        if (isText && !optimized) {
          if (i + 1 < l && normalizeVNode(children[i + 1]).type === Text) {
            insert(
              createText(
                node.data.slice(vnode.children.length)
              ),
              container,
              nextSibling(node)
            );
            node.data = vnode.children;
          }
        }
        node = hydrateNode(
          node,
          vnode,
          parentComponent,
          parentSuspense,
          slotScopeIds,
          optimized
        );
      } else if (isText && !vnode.children) {
        insert(vnode.el = createText(""), container);
      } else {
        if (!isMismatchAllowed(
          container,
          1
          /* CHILDREN */
        )) {
          if (!hasWarned2) {
            warn$1(
              `Hydration children mismatch on`,
              container,
              `
Server rendered element contains fewer child nodes than client vdom.`
            );
            hasWarned2 = true;
          }
          logMismatchError();
        }
        patch(
          null,
          vnode,
          container,
          null,
          parentComponent,
          parentSuspense,
          getContainerType(container),
          slotScopeIds
        );
      }
    }
    return node;
  };
  const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {
    const { slotScopeIds: fragmentSlotScopeIds } = vnode;
    if (fragmentSlotScopeIds) {
      slotScopeIds = slotScopeIds ? slotScopeIds.concat(fragmentSlotScopeIds) : fragmentSlotScopeIds;
    }
    const container = parentNode(node);
    const next = hydrateChildren(
      nextSibling(node),
      vnode,
      container,
      parentComponent,
      parentSuspense,
      slotScopeIds,
      optimized
    );
    if (next && isComment(next) && next.data === "]") {
      return nextSibling(vnode.anchor = next);
    } else {
      logMismatchError();
      insert(vnode.anchor = createComment(`]`), container, next);
      return next;
    }
  };
  const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment) => {
    if (!isMismatchAllowed(
      node.parentElement,
      1
      /* CHILDREN */
    )) {
      warn$1(
        `Hydration node mismatch:
- rendered on server:`,
        node,
        node.nodeType === 3 ? `(text)` : isComment(node) && node.data === "[" ? `(start of fragment)` : ``,
        `
- expected on client:`,
        vnode.type
      );
      logMismatchError();
    }
    vnode.el = null;
    if (isFragment) {
      const end2 = locateClosingAnchor(node);
      while (true) {
        const next2 = nextSibling(node);
        if (next2 && next2 !== end2) {
          remove2(next2);
        } else {
          break;
        }
      }
    }
    const next = nextSibling(node);
    const container = parentNode(node);
    remove2(node);
    patch(
      null,
      vnode,
      container,
      next,
      parentComponent,
      parentSuspense,
      getContainerType(container),
      slotScopeIds
    );
    if (parentComponent) {
      parentComponent.vnode.el = vnode.el;
      updateHOCHostEl(parentComponent, vnode.el);
    }
    return next;
  };
  const locateClosingAnchor = (node, open = "[", close = "]") => {
    let match = 0;
    while (node) {
      node = nextSibling(node);
      if (node && isComment(node)) {
        if (node.data === open) match++;
        if (node.data === close) {
          if (match === 0) {
            return nextSibling(node);
          } else {
            match--;
          }
        }
      }
    }
    return node;
  };
  const replaceNode = (newNode, oldNode, parentComponent) => {
    const parentNode2 = oldNode.parentNode;
    if (parentNode2) {
      parentNode2.replaceChild(newNode, oldNode);
    }
    let parent = parentComponent;
    while (parent) {
      if (parent.vnode.el === oldNode) {
        parent.vnode.el = parent.subTree.el = newNode;
      }
      parent = parent.parent;
    }
  };
  const isTemplateNode = (node) => {
    return node.nodeType === 1 && node.tagName === "TEMPLATE";
  };
  return [hydrate2, hydrateNode];
}
function propHasMismatch(el, key2, clientValue, vnode, instance) {
  let mismatchType;
  let mismatchKey;
  let actual;
  let expected;
  if (key2 === "class") {
    if (el.$cls) {
      actual = el.$cls;
      delete el.$cls;
    } else {
      actual = el.getAttribute("class");
    }
    expected = normalizeClass(clientValue);
    if (!isSetEqual(toClassSet(actual || ""), toClassSet(expected))) {
      mismatchType = 2;
      mismatchKey = `class`;
    }
  } else if (key2 === "style") {
    actual = el.getAttribute("style") || "";
    expected = isString(clientValue) ? clientValue : stringifyStyle(normalizeStyle(clientValue));
    const actualMap = toStyleMap(actual);
    const expectedMap = toStyleMap(expected);
    if (vnode.dirs) {
      for (const { dir, value } of vnode.dirs) {
        if (dir.name === "show" && !value) {
          expectedMap.set("display", "none");
        }
      }
    }
    if (instance) {
      resolveCssVars(instance, vnode, expectedMap);
    }
    if (!isMapEqual(actualMap, expectedMap)) {
      mismatchType = 3;
      mismatchKey = "style";
    }
  } else if (el instanceof SVGElement && isKnownSvgAttr(key2) || el instanceof HTMLElement && (isBooleanAttr(key2) || isKnownHtmlAttr(key2))) {
    if (isBooleanAttr(key2)) {
      actual = el.hasAttribute(key2);
      expected = includeBooleanAttr(clientValue);
    } else if (clientValue == null) {
      actual = el.hasAttribute(key2);
      expected = false;
    } else {
      if (el.hasAttribute(key2)) {
        actual = el.getAttribute(key2);
      } else if (key2 === "value" && el.tagName === "TEXTAREA") {
        actual = el.value;
      } else {
        actual = false;
      }
      expected = isRenderableAttrValue(clientValue) ? String(clientValue) : false;
    }
    if (actual !== expected) {
      mismatchType = 4;
      mismatchKey = key2;
    }
  }
  if (mismatchType != null && !isMismatchAllowed(el, mismatchType)) {
    const format = (v2) => v2 === false ? `(not rendered)` : `${mismatchKey}="${v2}"`;
    const preSegment = `Hydration ${MismatchTypeString[mismatchType]} mismatch on`;
    const postSegment = `
  - rendered on server: ${format(actual)}
  - expected on client: ${format(expected)}
  Note: this mismatch is check-only. The DOM will not be rectified in production due to performance overhead.
  You should fix the source of the mismatch.`;
    {
      warn$1(preSegment, el, postSegment);
    }
    return true;
  }
  return false;
}
function toClassSet(str) {
  return new Set(str.trim().split(/\s+/));
}
function isSetEqual(a2, b2) {
  if (a2.size !== b2.size) {
    return false;
  }
  for (const s of a2) {
    if (!b2.has(s)) {
      return false;
    }
  }
  return true;
}
function toStyleMap(str) {
  const styleMap = /* @__PURE__ */ new Map();
  for (const item of str.split(";")) {
    let [key2, value] = item.split(":");
    key2 = key2.trim();
    value = value && value.trim();
    if (key2 && value) {
      styleMap.set(key2, value);
    }
  }
  return styleMap;
}
function isMapEqual(a2, b2) {
  if (a2.size !== b2.size) {
    return false;
  }
  for (const [key2, value] of a2) {
    if (value !== b2.get(key2)) {
      return false;
    }
  }
  return true;
}
function resolveCssVars(instance, vnode, expectedMap) {
  const root = instance.subTree;
  if (instance.getCssVars && (vnode === root || root && root.type === Fragment && root.children.includes(vnode))) {
    const cssVars = instance.getCssVars();
    for (const key2 in cssVars) {
      const value = normalizeCssVarValue(cssVars[key2]);
      expectedMap.set(`--${getEscapedCssVarName(key2, false)}`, value);
    }
  }
  if (vnode === root && instance.parent) {
    resolveCssVars(instance.parent, instance.vnode, expectedMap);
  }
}
var allowMismatchAttr = "data-allow-mismatch";
var MismatchTypeString = {
  [
    0
    /* TEXT */
  ]: "text",
  [
    1
    /* CHILDREN */
  ]: "children",
  [
    2
    /* CLASS */
  ]: "class",
  [
    3
    /* STYLE */
  ]: "style",
  [
    4
    /* ATTRIBUTE */
  ]: "attribute"
};
function isMismatchAllowed(el, allowedType) {
  if (allowedType === 0 || allowedType === 1) {
    while (el && !el.hasAttribute(allowMismatchAttr)) {
      el = el.parentElement;
    }
  }
  const allowedAttr = el && el.getAttribute(allowMismatchAttr);
  if (allowedAttr == null) {
    return false;
  } else if (allowedAttr === "") {
    return true;
  } else {
    const list = allowedAttr.split(",");
    if (allowedType === 0 && list.includes("children")) {
      return true;
    }
    return list.includes(MismatchTypeString[allowedType]);
  }
}
var requestIdleCallback = getGlobalThis().requestIdleCallback || ((cb) => setTimeout(cb, 1));
var cancelIdleCallback = getGlobalThis().cancelIdleCallback || ((id2) => clearTimeout(id2));
var hydrateOnIdle = (timeout = 1e4) => (hydrate2) => {
  const id2 = requestIdleCallback(hydrate2, { timeout });
  return () => cancelIdleCallback(id2);
};
function elementIsVisibleInViewport(el) {
  const { top, left, bottom, right } = el.getBoundingClientRect();
  const { innerHeight, innerWidth } = window;
  return (top > 0 && top < innerHeight || bottom > 0 && bottom < innerHeight) && (left > 0 && left < innerWidth || right > 0 && right < innerWidth);
}
var hydrateOnVisible = (opts) => (hydrate2, forEach) => {
  const ob = new IntersectionObserver((entries) => {
    for (const e of entries) {
      if (!e.isIntersecting) continue;
      ob.disconnect();
      hydrate2();
      break;
    }
  }, opts);
  forEach((el) => {
    if (!(el instanceof Element)) return;
    if (elementIsVisibleInViewport(el)) {
      hydrate2();
      ob.disconnect();
      return false;
    }
    ob.observe(el);
  });
  return () => ob.disconnect();
};
var hydrateOnMediaQuery = (query) => (hydrate2) => {
  if (query) {
    const mql = matchMedia(query);
    if (mql.matches) {
      hydrate2();
    } else {
      mql.addEventListener("change", hydrate2, { once: true });
      return () => mql.removeEventListener("change", hydrate2);
    }
  }
};
var hydrateOnInteraction = (interactions = []) => (hydrate2, forEach) => {
  if (isString(interactions)) interactions = [interactions];
  let hasHydrated = false;
  const doHydrate = (e) => {
    if (!hasHydrated) {
      hasHydrated = true;
      teardown();
      hydrate2();
      e.target.dispatchEvent(new e.constructor(e.type, e));
    }
  };
  const teardown = () => {
    forEach((el) => {
      for (const i of interactions) {
        el.removeEventListener(i, doHydrate);
      }
    });
  };
  forEach((el) => {
    for (const i of interactions) {
      el.addEventListener(i, doHydrate, { once: true });
    }
  });
  return teardown;
};
function forEachElement(node, cb) {
  if (isComment(node) && node.data === "[") {
    let depth = 1;
    let next = node.nextSibling;
    while (next) {
      if (next.nodeType === 1) {
        const result = cb(next);
        if (result === false) {
          break;
        }
      } else if (isComment(next)) {
        if (next.data === "]") {
          if (--depth === 0) break;
        } else if (next.data === "[") {
          depth++;
        }
      }
      next = next.nextSibling;
    }
  } else {
    cb(node);
  }
}
var isAsyncWrapper = (i) => !!i.type.__asyncLoader;
function defineAsyncComponent(source) {
  if (isFunction(source)) {
    source = { loader: source };
  }
  const {
    loader,
    loadingComponent,
    errorComponent,
    delay = 200,
    hydrate: hydrateStrategy,
    timeout,
    // undefined = never times out
    suspensible = true,
    onError: userOnError
  } = source;
  let pendingRequest = null;
  let resolvedComp;
  let retries = 0;
  const retry = () => {
    retries++;
    pendingRequest = null;
    return load();
  };
  const load = () => {
    let thisRequest;
    return pendingRequest || (thisRequest = pendingRequest = loader().catch((err) => {
      err = err instanceof Error ? err : new Error(String(err));
      if (userOnError) {
        return new Promise((resolve2, reject) => {
          const userRetry = () => resolve2(retry());
          const userFail = () => reject(err);
          userOnError(err, userRetry, userFail, retries + 1);
        });
      } else {
        throw err;
      }
    }).then((comp) => {
      if (thisRequest !== pendingRequest && pendingRequest) {
        return pendingRequest;
      }
      if (!comp) {
        warn$1(
          `Async component loader resolved to undefined. If you are using retry(), make sure to return its return value.`
        );
      }
      if (comp && (comp.__esModule || comp[Symbol.toStringTag] === "Module")) {
        comp = comp.default;
      }
      if (comp && !isObject(comp) && !isFunction(comp)) {
        throw new Error(`Invalid async component load result: ${comp}`);
      }
      resolvedComp = comp;
      return comp;
    }));
  };
  return defineComponent({
    name: "AsyncComponentWrapper",
    __asyncLoader: load,
    __asyncHydrate(el, instance, hydrate2) {
      let patched = false;
      (instance.bu || (instance.bu = [])).push(() => patched = true);
      const performHydrate = () => {
        if (patched) {
          if (true) {
            warn$1(
              `Skipping lazy hydration for component '${getComponentName(resolvedComp) || resolvedComp.__file}': it was updated before lazy hydration performed.`
            );
          }
          return;
        }
        hydrate2();
      };
      const doHydrate = hydrateStrategy ? () => {
        const teardown = hydrateStrategy(
          performHydrate,
          (cb) => forEachElement(el, cb)
        );
        if (teardown) {
          (instance.bum || (instance.bum = [])).push(teardown);
        }
      } : performHydrate;
      if (resolvedComp) {
        doHydrate();
      } else {
        load().then(() => !instance.isUnmounted && doHydrate());
      }
    },
    get __asyncResolved() {
      return resolvedComp;
    },
    setup() {
      const instance = currentInstance;
      markAsyncBoundary(instance);
      if (resolvedComp) {
        return () => createInnerComp(resolvedComp, instance);
      }
      const onError = (err) => {
        pendingRequest = null;
        handleError(
          err,
          instance,
          13,
          !errorComponent
        );
      };
      if (suspensible && instance.suspense || isInSSRComponentSetup) {
        return load().then((comp) => {
          return () => createInnerComp(comp, instance);
        }).catch((err) => {
          onError(err);
          return () => errorComponent ? createVNode(errorComponent, {
            error: err
          }) : null;
        });
      }
      const loaded = ref(false);
      const error = ref();
      const delayed = ref(!!delay);
      if (delay) {
        setTimeout(() => {
          delayed.value = false;
        }, delay);
      }
      if (timeout != null) {
        setTimeout(() => {
          if (!loaded.value && !error.value) {
            const err = new Error(
              `Async component timed out after ${timeout}ms.`
            );
            onError(err);
            error.value = err;
          }
        }, timeout);
      }
      load().then(() => {
        loaded.value = true;
        if (instance.parent && isKeepAlive(instance.parent.vnode)) {
          instance.parent.update();
        }
      }).catch((err) => {
        onError(err);
        error.value = err;
      });
      return () => {
        if (loaded.value && resolvedComp) {
          return createInnerComp(resolvedComp, instance);
        } else if (error.value && errorComponent) {
          return createVNode(errorComponent, {
            error: error.value
          });
        } else if (loadingComponent && !delayed.value) {
          return createVNode(loadingComponent);
        }
      };
    }
  });
}
function createInnerComp(comp, parent) {
  const { ref: ref2, props, children, ce: ce2 } = parent.vnode;
  const vnode = createVNode(comp, props, children);
  vnode.ref = ref2;
  vnode.ce = ce2;
  delete parent.vnode.ce;
  return vnode;
}
var isKeepAlive = (vnode) => vnode.type.__isKeepAlive;
var KeepAliveImpl = {
  name: `KeepAlive`,
  // Marker for special handling inside the renderer. We are not using a ===
  // check directly on KeepAlive in the renderer, because importing it directly
  // would prevent it from being tree-shaken.
  __isKeepAlive: true,
  props: {
    include: [String, RegExp, Array],
    exclude: [String, RegExp, Array],
    max: [String, Number]
  },
  setup(props, { slots }) {
    const instance = getCurrentInstance();
    const sharedContext = instance.ctx;
    if (!sharedContext.renderer) {
      return () => {
        const children = slots.default && slots.default();
        return children && children.length === 1 ? children[0] : children;
      };
    }
    const cache = /* @__PURE__ */ new Map();
    const keys2 = /* @__PURE__ */ new Set();
    let current = null;
    if (true) {
      instance.__v_cache = cache;
    }
    const parentSuspense = instance.suspense;
    const {
      renderer: {
        p: patch,
        m: move,
        um: _unmount,
        o: { createElement }
      }
    } = sharedContext;
    const storageContainer = createElement("div");
    sharedContext.activate = (vnode, container, anchor, namespace, optimized) => {
      const instance2 = vnode.component;
      move(vnode, container, anchor, 0, parentSuspense);
      patch(
        instance2.vnode,
        vnode,
        container,
        anchor,
        instance2,
        parentSuspense,
        namespace,
        vnode.slotScopeIds,
        optimized
      );
      queuePostRenderEffect(() => {
        instance2.isDeactivated = false;
        if (instance2.a) {
          invokeArrayFns(instance2.a);
        }
        const vnodeHook = vnode.props && vnode.props.onVnodeMounted;
        if (vnodeHook) {
          invokeVNodeHook(vnodeHook, instance2.parent, vnode);
        }
      }, parentSuspense);
      if (true) {
        devtoolsComponentAdded(instance2);
      }
    };
    sharedContext.deactivate = (vnode) => {
      const instance2 = vnode.component;
      invalidateMount(instance2.m);
      invalidateMount(instance2.a);
      move(vnode, storageContainer, null, 1, parentSuspense);
      queuePostRenderEffect(() => {
        if (instance2.da) {
          invokeArrayFns(instance2.da);
        }
        const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;
        if (vnodeHook) {
          invokeVNodeHook(vnodeHook, instance2.parent, vnode);
        }
        instance2.isDeactivated = true;
      }, parentSuspense);
      if (true) {
        devtoolsComponentAdded(instance2);
      }
      if (true) {
        instance2.__keepAliveStorageContainer = storageContainer;
      }
    };
    function unmount(vnode) {
      resetShapeFlag(vnode);
      _unmount(vnode, instance, parentSuspense, true);
    }
    function pruneCache(filter) {
      cache.forEach((vnode, key2) => {
        const name = getComponentName(vnode.type);
        if (name && !filter(name)) {
          pruneCacheEntry(key2);
        }
      });
    }
    function pruneCacheEntry(key2) {
      const cached = cache.get(key2);
      if (cached && (!current || !isSameVNodeType(cached, current))) {
        unmount(cached);
      } else if (current) {
        resetShapeFlag(current);
      }
      cache.delete(key2);
      keys2.delete(key2);
    }
    watch2(
      () => [props.include, props.exclude],
      ([include, exclude]) => {
        include && pruneCache((name) => matches(include, name));
        exclude && pruneCache((name) => !matches(exclude, name));
      },
      // prune post-render after `current` has been updated
      { flush: "post", deep: true }
    );
    let pendingCacheKey = null;
    const cacheSubtree = () => {
      if (pendingCacheKey != null) {
        if (isSuspense(instance.subTree.type)) {
          queuePostRenderEffect(() => {
            cache.set(pendingCacheKey, getInnerChild(instance.subTree));
          }, instance.subTree.suspense);
        } else {
          cache.set(pendingCacheKey, getInnerChild(instance.subTree));
        }
      }
    };
    onMounted(cacheSubtree);
    onUpdated(cacheSubtree);
    onBeforeUnmount(() => {
      cache.forEach((cached) => {
        const { subTree, suspense } = instance;
        const vnode = getInnerChild(subTree);
        if (cached.type === vnode.type && cached.key === vnode.key) {
          resetShapeFlag(vnode);
          const da = vnode.component.da;
          da && queuePostRenderEffect(da, suspense);
          return;
        }
        unmount(cached);
      });
    });
    return () => {
      pendingCacheKey = null;
      if (!slots.default) {
        return current = null;
      }
      const children = slots.default();
      const rawVNode = children[0];
      if (children.length > 1) {
        if (true) {
          warn$1(`KeepAlive should contain exactly one component child.`);
        }
        current = null;
        return children;
      } else if (!isVNode(rawVNode) || !(rawVNode.shapeFlag & 4) && !(rawVNode.shapeFlag & 128)) {
        current = null;
        return rawVNode;
      }
      let vnode = getInnerChild(rawVNode);
      if (vnode.type === Comment) {
        current = null;
        return vnode;
      }
      const comp = vnode.type;
      const name = getComponentName(
        isAsyncWrapper(vnode) ? vnode.type.__asyncResolved || {} : comp
      );
      const { include, exclude, max } = props;
      if (include && (!name || !matches(include, name)) || exclude && name && matches(exclude, name)) {
        vnode.shapeFlag &= -257;
        current = vnode;
        return rawVNode;
      }
      const key2 = vnode.key == null ? comp : vnode.key;
      const cachedVNode = cache.get(key2);
      if (vnode.el) {
        vnode = cloneVNode(vnode);
        if (rawVNode.shapeFlag & 128) {
          rawVNode.ssContent = vnode;
        }
      }
      pendingCacheKey = key2;
      if (cachedVNode) {
        vnode.el = cachedVNode.el;
        vnode.component = cachedVNode.component;
        if (vnode.transition) {
          setTransitionHooks(vnode, vnode.transition);
        }
        vnode.shapeFlag |= 512;
        keys2.delete(key2);
        keys2.add(key2);
      } else {
        keys2.add(key2);
        if (max && keys2.size > parseInt(max, 10)) {
          pruneCacheEntry(keys2.values().next().value);
        }
      }
      vnode.shapeFlag |= 256;
      current = vnode;
      return isSuspense(rawVNode.type) ? rawVNode : vnode;
    };
  }
};
var KeepAlive = KeepAliveImpl;
function matches(pattern, name) {
  if (isArray(pattern)) {
    return pattern.some((p2) => matches(p2, name));
  } else if (isString(pattern)) {
    return pattern.split(",").includes(name);
  } else if (isRegExp(pattern)) {
    pattern.lastIndex = 0;
    return pattern.test(name);
  }
  return false;
}
function onActivated(hook2, target) {
  registerKeepAliveHook(hook2, "a", target);
}
function onDeactivated(hook2, target) {
  registerKeepAliveHook(hook2, "da", target);
}
function registerKeepAliveHook(hook2, type, target = currentInstance) {
  const wrappedHook = hook2.__wdc || (hook2.__wdc = () => {
    let current = target;
    while (current) {
      if (current.isDeactivated) {
        return;
      }
      current = current.parent;
    }
    return hook2();
  });
  injectHook(type, wrappedHook, target);
  if (target) {
    let current = target.parent;
    while (current && current.parent) {
      if (isKeepAlive(current.parent.vnode)) {
        injectToKeepAliveRoot(wrappedHook, type, target, current);
      }
      current = current.parent;
    }
  }
}
function injectToKeepAliveRoot(hook2, type, target, keepAliveRoot) {
  const injected = injectHook(
    type,
    hook2,
    keepAliveRoot,
    true
    /* prepend */
  );
  onUnmounted(() => {
    remove(keepAliveRoot[type], injected);
  }, target);
}
function resetShapeFlag(vnode) {
  vnode.shapeFlag &= -257;
  vnode.shapeFlag &= -513;
}
function getInnerChild(vnode) {
  return vnode.shapeFlag & 128 ? vnode.ssContent : vnode;
}
function injectHook(type, hook2, target = currentInstance, prepend = false) {
  if (target) {
    const hooks = target[type] || (target[type] = []);
    const wrappedHook = hook2.__weh || (hook2.__weh = (...args) => {
      pauseTracking();
      const reset = setCurrentInstance(target);
      const res = callWithAsyncErrorHandling(hook2, target, type, args);
      reset();
      resetTracking();
      return res;
    });
    if (prepend) {
      hooks.unshift(wrappedHook);
    } else {
      hooks.push(wrappedHook);
    }
    return wrappedHook;
  } else if (true) {
    const apiName = toHandlerKey(ErrorTypeStrings$1[type].replace(/ hook$/, ""));
    warn$1(
      `${apiName} is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.`
    );
  }
}
var createHook = (lifecycle) => (hook2, target = currentInstance) => {
  if (!isInSSRComponentSetup || lifecycle === "sp") {
    injectHook(lifecycle, (...args) => hook2(...args), target);
  }
};
var onBeforeMount = createHook("bm");
var onMounted = createHook("m");
var onBeforeUpdate = createHook(
  "bu"
);
var onUpdated = createHook("u");
var onBeforeUnmount = createHook(
  "bum"
);
var onUnmounted = createHook("um");
var onServerPrefetch = createHook(
  "sp"
);
var onRenderTriggered = createHook("rtg");
var onRenderTracked = createHook("rtc");
function onErrorCaptured(hook2, target = currentInstance) {
  injectHook("ec", hook2, target);
}
var COMPONENTS = "components";
var DIRECTIVES = "directives";
function resolveComponent(name, maybeSelfReference) {
  return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;
}
var NULL_DYNAMIC_COMPONENT = Symbol.for("v-ndc");
function resolveDynamicComponent(component) {
  if (isString(component)) {
    return resolveAsset(COMPONENTS, component, false) || component;
  } else {
    return component || NULL_DYNAMIC_COMPONENT;
  }
}
function resolveDirective(name) {
  return resolveAsset(DIRECTIVES, name);
}
function resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {
  const instance = currentRenderingInstance || currentInstance;
  if (instance) {
    const Component = instance.type;
    if (type === COMPONENTS) {
      const selfName = getComponentName(
        Component,
        false
      );
      if (selfName && (selfName === name || selfName === camelize(name) || selfName === capitalize(camelize(name)))) {
        return Component;
      }
    }
    const res = (
      // local registration
      // check instance[type] first which is resolved for options API
      resolve(instance[type] || Component[type], name) || // global registration
      resolve(instance.appContext[type], name)
    );
    if (!res && maybeSelfReference) {
      return Component;
    }
    if (warnMissing && !res) {
      const extra = type === COMPONENTS ? `
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement.` : ``;
      warn$1(`Failed to resolve ${type.slice(0, -1)}: ${name}${extra}`);
    }
    return res;
  } else if (true) {
    warn$1(
      `resolve${capitalize(type.slice(0, -1))} can only be used in render() or setup().`
    );
  }
}
function resolve(registry, name) {
  return registry && (registry[name] || registry[camelize(name)] || registry[capitalize(camelize(name))]);
}
function renderList(source, renderItem, cache, index) {
  let ret;
  const cached = cache && cache[index];
  const sourceIsArray = isArray(source);
  if (sourceIsArray || isString(source)) {
    const sourceIsReactiveArray = sourceIsArray && isReactive(source);
    let needsWrap = false;
    let isReadonlySource = false;
    if (sourceIsReactiveArray) {
      needsWrap = !isShallow(source);
      isReadonlySource = isReadonly(source);
      source = shallowReadArray(source);
    }
    ret = new Array(source.length);
    for (let i = 0, l = source.length; i < l; i++) {
      ret[i] = renderItem(
        needsWrap ? isReadonlySource ? toReadonly(toReactive(source[i])) : toReactive(source[i]) : source[i],
        i,
        void 0,
        cached && cached[i]
      );
    }
  } else if (typeof source === "number") {
    if (!Number.isInteger(source)) {
      warn$1(`The v-for range expect an integer value but got ${source}.`);
    }
    ret = new Array(source);
    for (let i = 0; i < source; i++) {
      ret[i] = renderItem(i + 1, i, void 0, cached && cached[i]);
    }
  } else if (isObject(source)) {
    if (source[Symbol.iterator]) {
      ret = Array.from(
        source,
        (item, i) => renderItem(item, i, void 0, cached && cached[i])
      );
    } else {
      const keys2 = Object.keys(source);
      ret = new Array(keys2.length);
      for (let i = 0, l = keys2.length; i < l; i++) {
        const key2 = keys2[i];
        ret[i] = renderItem(source[key2], key2, i, cached && cached[i]);
      }
    }
  } else {
    ret = [];
  }
  if (cache) {
    cache[index] = ret;
  }
  return ret;
}
function createSlots(slots, dynamicSlots) {
  for (let i = 0; i < dynamicSlots.length; i++) {
    const slot = dynamicSlots[i];
    if (isArray(slot)) {
      for (let j2 = 0; j2 < slot.length; j2++) {
        slots[slot[j2].name] = slot[j2].fn;
      }
    } else if (slot) {
      slots[slot.name] = slot.key ? (...args) => {
        const res = slot.fn(...args);
        if (res) res.key = slot.key;
        return res;
      } : slot.fn;
    }
  }
  return slots;
}
function renderSlot(slots, name, props = {}, fallback, noSlotted) {
  if (currentRenderingInstance.ce || currentRenderingInstance.parent && isAsyncWrapper(currentRenderingInstance.parent) && currentRenderingInstance.parent.ce) {
    const hasProps = Object.keys(props).length > 0;
    if (name !== "default") props.name = name;
    return openBlock(), createBlock(
      Fragment,
      null,
      [createVNode("slot", props, fallback && fallback())],
      hasProps ? -2 : 64
    );
  }
  let slot = slots[name];
  if (slot && slot.length > 1) {
    warn$1(
      `SSR-optimized slot function detected in a non-SSR-optimized render function. You need to mark this component with $dynamic-slots in the parent template.`
    );
    slot = () => [];
  }
  if (slot && slot._c) {
    slot._d = false;
  }
  openBlock();
  const validSlotContent = slot && ensureValidVNode(slot(props));
  const slotKey = props.key || // slot content array of a dynamic conditional slot may have a branch
  // key attached in the `createSlots` helper, respect that
  validSlotContent && validSlotContent.key;
  const rendered = createBlock(
    Fragment,
    {
      key: (slotKey && !isSymbol(slotKey) ? slotKey : `_${name}`) + // #7256 force differentiate fallback content from actual content
      (!validSlotContent && fallback ? "_fb" : "")
    },
    validSlotContent || (fallback ? fallback() : []),
    validSlotContent && slots._ === 1 ? 64 : -2
  );
  if (!noSlotted && rendered.scopeId) {
    rendered.slotScopeIds = [rendered.scopeId + "-s"];
  }
  if (slot && slot._c) {
    slot._d = true;
  }
  return rendered;
}
function ensureValidVNode(vnodes) {
  return vnodes.some((child2) => {
    if (!isVNode(child2)) return true;
    if (child2.type === Comment) return false;
    if (child2.type === Fragment && !ensureValidVNode(child2.children))
      return false;
    return true;
  }) ? vnodes : null;
}
function toHandlers(obj, preserveCaseIfNecessary) {
  const ret = {};
  if (!isObject(obj)) {
    warn$1(`v-on with no argument expects an object value.`);
    return ret;
  }
  for (const key2 in obj) {
    ret[preserveCaseIfNecessary && /[A-Z]/.test(key2) ? `on:${key2}` : toHandlerKey(key2)] = obj[key2];
  }
  return ret;
}
var getPublicInstance = (i) => {
  if (!i) return null;
  if (isStatefulComponent(i)) return getComponentPublicInstance(i);
  return getPublicInstance(i.parent);
};
var publicPropertiesMap = (
  // Move PURE marker to new line to workaround compiler discarding it
  // due to type annotation
  extend(/* @__PURE__ */ Object.create(null), {
    $: (i) => i,
    $el: (i) => i.vnode.el,
    $data: (i) => i.data,
    $props: (i) => true ? shallowReadonly(i.props) : i.props,
    $attrs: (i) => true ? shallowReadonly(i.attrs) : i.attrs,
    $slots: (i) => true ? shallowReadonly(i.slots) : i.slots,
    $refs: (i) => true ? shallowReadonly(i.refs) : i.refs,
    $parent: (i) => getPublicInstance(i.parent),
    $root: (i) => getPublicInstance(i.root),
    $host: (i) => i.ce,
    $emit: (i) => i.emit,
    $options: (i) => __VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type,
    $forceUpdate: (i) => i.f || (i.f = () => {
      queueJob(i.update);
    }),
    $nextTick: (i) => i.n || (i.n = nextTick.bind(i.proxy)),
    $watch: (i) => __VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP
  })
);
var isReservedPrefix = (key2) => key2 === "_" || key2 === "$";
var hasSetupBinding = (state, key2) => state !== EMPTY_OBJ && !state.__isScriptSetup && hasOwn(state, key2);
var PublicInstanceProxyHandlers = {
  get({ _: instance }, key2) {
    if (key2 === "__v_skip") {
      return true;
    }
    const { ctx, setupState, data, props, accessCache, type, appContext } = instance;
    if (key2 === "__isVue") {
      return true;
    }
    let normalizedProps;
    if (key2[0] !== "$") {
      const n = accessCache[key2];
      if (n !== void 0) {
        switch (n) {
          case 1:
            return setupState[key2];
          case 2:
            return data[key2];
          case 4:
            return ctx[key2];
          case 3:
            return props[key2];
        }
      } else if (hasSetupBinding(setupState, key2)) {
        accessCache[key2] = 1;
        return setupState[key2];
      } else if (data !== EMPTY_OBJ && hasOwn(data, key2)) {
        accessCache[key2] = 2;
        return data[key2];
      } else if (
        // only cache other properties when instance has declared (thus stable)
        // props
        (normalizedProps = instance.propsOptions[0]) && hasOwn(normalizedProps, key2)
      ) {
        accessCache[key2] = 3;
        return props[key2];
      } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key2)) {
        accessCache[key2] = 4;
        return ctx[key2];
      } else if (!__VUE_OPTIONS_API__ || shouldCacheAccess) {
        accessCache[key2] = 0;
      }
    }
    const publicGetter = publicPropertiesMap[key2];
    let cssModule, globalProperties;
    if (publicGetter) {
      if (key2 === "$attrs") {
        track(instance.attrs, "get", "");
        markAttrsAccessed();
      } else if (key2 === "$slots") {
        track(instance, "get", key2);
      }
      return publicGetter(instance);
    } else if (
      // css module (injected by vue-loader)
      (cssModule = type.__cssModules) && (cssModule = cssModule[key2])
    ) {
      return cssModule;
    } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key2)) {
      accessCache[key2] = 4;
      return ctx[key2];
    } else if (
      // global properties
      globalProperties = appContext.config.globalProperties, hasOwn(globalProperties, key2)
    ) {
      {
        return globalProperties[key2];
      }
    } else if (currentRenderingInstance && (!isString(key2) || // #1091 avoid internal isRef/isVNode checks on component instance leading
    // to infinite warning loop
    key2.indexOf("__v") !== 0)) {
      if (data !== EMPTY_OBJ && isReservedPrefix(key2[0]) && hasOwn(data, key2)) {
        warn$1(
          `Property ${JSON.stringify(
            key2
          )} must be accessed via $data because it starts with a reserved character ("$" or "_") and is not proxied on the render context.`
        );
      } else if (instance === currentRenderingInstance) {
        warn$1(
          `Property ${JSON.stringify(key2)} was accessed during render but is not defined on instance.`
        );
      }
    }
  },
  set({ _: instance }, key2, value) {
    const { data, setupState, ctx } = instance;
    if (hasSetupBinding(setupState, key2)) {
      setupState[key2] = value;
      return true;
    } else if (setupState.__isScriptSetup && hasOwn(setupState, key2)) {
      warn$1(`Cannot mutate <script setup> binding "${key2}" from Options API.`);
      return false;
    } else if (data !== EMPTY_OBJ && hasOwn(data, key2)) {
      data[key2] = value;
      return true;
    } else if (hasOwn(instance.props, key2)) {
      warn$1(`Attempting to mutate prop "${key2}". Props are readonly.`);
      return false;
    }
    if (key2[0] === "$" && key2.slice(1) in instance) {
      warn$1(
        `Attempting to mutate public property "${key2}". Properties starting with $ are reserved and readonly.`
      );
      return false;
    } else {
      if (key2 in instance.appContext.config.globalProperties) {
        Object.defineProperty(ctx, key2, {
          enumerable: true,
          configurable: true,
          value
        });
      } else {
        ctx[key2] = value;
      }
    }
    return true;
  },
  has({
    _: { data, setupState, accessCache, ctx, appContext, propsOptions, type }
  }, key2) {
    let normalizedProps, cssModules;
    return !!(accessCache[key2] || data !== EMPTY_OBJ && key2[0] !== "$" && hasOwn(data, key2) || hasSetupBinding(setupState, key2) || (normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key2) || hasOwn(ctx, key2) || hasOwn(publicPropertiesMap, key2) || hasOwn(appContext.config.globalProperties, key2) || (cssModules = type.__cssModules) && cssModules[key2]);
  },
  defineProperty(target, key2, descriptor) {
    if (descriptor.get != null) {
      target._.accessCache[key2] = 0;
    } else if (hasOwn(descriptor, "value")) {
      this.set(target, key2, descriptor.value, null);
    }
    return Reflect.defineProperty(target, key2, descriptor);
  }
};
if (true) {
  PublicInstanceProxyHandlers.ownKeys = (target) => {
    warn$1(
      `Avoid app logic that relies on enumerating keys on a component instance. The keys will be empty in production mode to avoid performance overhead.`
    );
    return Reflect.ownKeys(target);
  };
}
var RuntimeCompiledPublicInstanceProxyHandlers = extend({}, PublicInstanceProxyHandlers, {
  get(target, key2) {
    if (key2 === Symbol.unscopables) {
      return;
    }
    return PublicInstanceProxyHandlers.get(target, key2, target);
  },
  has(_, key2) {
    const has = key2[0] !== "_" && !isGloballyAllowed(key2);
    if (!has && PublicInstanceProxyHandlers.has(_, key2)) {
      warn$1(
        `Property ${JSON.stringify(
          key2
        )} should not start with _ which is a reserved prefix for Vue internals.`
      );
    }
    return has;
  }
});
function createDevRenderContext(instance) {
  const target = {};
  Object.defineProperty(target, `_`, {
    configurable: true,
    enumerable: false,
    get: () => instance
  });
  Object.keys(publicPropertiesMap).forEach((key2) => {
    Object.defineProperty(target, key2, {
      configurable: true,
      enumerable: false,
      get: () => publicPropertiesMap[key2](instance),
      // intercepted by the proxy so no need for implementation,
      // but needed to prevent set errors
      set: NOOP
    });
  });
  return target;
}
function exposePropsOnRenderContext(instance) {
  const {
    ctx,
    propsOptions: [propsOptions]
  } = instance;
  if (propsOptions) {
    Object.keys(propsOptions).forEach((key2) => {
      Object.defineProperty(ctx, key2, {
        enumerable: true,
        configurable: true,
        get: () => instance.props[key2],
        set: NOOP
      });
    });
  }
}
function exposeSetupStateOnRenderContext(instance) {
  const { ctx, setupState } = instance;
  Object.keys(toRaw(setupState)).forEach((key2) => {
    if (!setupState.__isScriptSetup) {
      if (isReservedPrefix(key2[0])) {
        warn$1(
          `setup() return property ${JSON.stringify(
            key2
          )} should not start with "$" or "_" which are reserved prefixes for Vue internals.`
        );
        return;
      }
      Object.defineProperty(ctx, key2, {
        enumerable: true,
        configurable: true,
        get: () => setupState[key2],
        set: NOOP
      });
    }
  });
}
var warnRuntimeUsage = (method) => warn$1(
  `${method}() is a compiler-hint helper that is only usable inside <script setup> of a single file component. Its arguments should be compiled away and passing it at runtime has no effect.`
);
function defineProps() {
  if (true) {
    warnRuntimeUsage(`defineProps`);
  }
  return null;
}
function defineEmits() {
  if (true) {
    warnRuntimeUsage(`defineEmits`);
  }
  return null;
}
function defineExpose(exposed) {
  if (true) {
    warnRuntimeUsage(`defineExpose`);
  }
}
function defineOptions(options) {
  if (true) {
    warnRuntimeUsage(`defineOptions`);
  }
}
function defineSlots() {
  if (true) {
    warnRuntimeUsage(`defineSlots`);
  }
  return null;
}
function defineModel() {
  if (true) {
    warnRuntimeUsage("defineModel");
  }
}
function withDefaults(props, defaults) {
  if (true) {
    warnRuntimeUsage(`withDefaults`);
  }
  return null;
}
function useSlots() {
  return getContext("useSlots").slots;
}
function useAttrs() {
  return getContext("useAttrs").attrs;
}
function getContext(calledFunctionName) {
  const i = getCurrentInstance();
  if (!i) {
    warn$1(`${calledFunctionName}() called without active instance.`);
  }
  return i.setupContext || (i.setupContext = createSetupContext(i));
}
function normalizePropsOrEmits(props) {
  return isArray(props) ? props.reduce(
    (normalized, p2) => (normalized[p2] = null, normalized),
    {}
  ) : props;
}
function mergeDefaults(raw, defaults) {
  const props = normalizePropsOrEmits(raw);
  for (const key2 in defaults) {
    if (key2.startsWith("__skip")) continue;
    let opt = props[key2];
    if (opt) {
      if (isArray(opt) || isFunction(opt)) {
        opt = props[key2] = { type: opt, default: defaults[key2] };
      } else {
        opt.default = defaults[key2];
      }
    } else if (opt === null) {
      opt = props[key2] = { default: defaults[key2] };
    } else if (true) {
      warn$1(`props default key "${key2}" has no corresponding declaration.`);
    }
    if (opt && defaults[`__skip_${key2}`]) {
      opt.skipFactory = true;
    }
  }
  return props;
}
function mergeModels(a2, b2) {
  if (!a2 || !b2) return a2 || b2;
  if (isArray(a2) && isArray(b2)) return a2.concat(b2);
  return extend({}, normalizePropsOrEmits(a2), normalizePropsOrEmits(b2));
}
function createPropsRestProxy(props, excludedKeys) {
  const ret = {};
  for (const key2 in props) {
    if (!excludedKeys.includes(key2)) {
      Object.defineProperty(ret, key2, {
        enumerable: true,
        get: () => props[key2]
      });
    }
  }
  return ret;
}
function withAsyncContext(getAwaitable) {
  const ctx = getCurrentInstance();
  if (!ctx) {
    warn$1(
      `withAsyncContext called without active current instance. This is likely a bug.`
    );
  }
  let awaitable = getAwaitable();
  unsetCurrentInstance();
  if (isPromise(awaitable)) {
    awaitable = awaitable.catch((e) => {
      setCurrentInstance(ctx);
      throw e;
    });
  }
  return [awaitable, () => setCurrentInstance(ctx)];
}
function createDuplicateChecker() {
  const cache = /* @__PURE__ */ Object.create(null);
  return (type, key2) => {
    if (cache[key2]) {
      warn$1(`${type} property "${key2}" is already defined in ${cache[key2]}.`);
    } else {
      cache[key2] = type;
    }
  };
}
var shouldCacheAccess = true;
function applyOptions(instance) {
  const options = resolveMergedOptions(instance);
  const publicThis = instance.proxy;
  const ctx = instance.ctx;
  shouldCacheAccess = false;
  if (options.beforeCreate) {
    callHook(options.beforeCreate, instance, "bc");
  }
  const {
    // state
    data: dataOptions,
    computed: computedOptions,
    methods,
    watch: watchOptions,
    provide: provideOptions,
    inject: injectOptions,
    // lifecycle
    created,
    beforeMount,
    mounted,
    beforeUpdate,
    updated,
    activated,
    deactivated,
    beforeDestroy,
    beforeUnmount,
    destroyed,
    unmounted,
    render: render3,
    renderTracked,
    renderTriggered,
    errorCaptured,
    serverPrefetch,
    // public API
    expose,
    inheritAttrs,
    // assets
    components,
    directives,
    filters
  } = options;
  const checkDuplicateProperties = true ? createDuplicateChecker() : null;
  if (true) {
    const [propsOptions] = instance.propsOptions;
    if (propsOptions) {
      for (const key2 in propsOptions) {
        checkDuplicateProperties("Props", key2);
      }
    }
  }
  if (injectOptions) {
    resolveInjections(injectOptions, ctx, checkDuplicateProperties);
  }
  if (methods) {
    for (const key2 in methods) {
      const methodHandler = methods[key2];
      if (isFunction(methodHandler)) {
        if (true) {
          Object.defineProperty(ctx, key2, {
            value: methodHandler.bind(publicThis),
            configurable: true,
            enumerable: true,
            writable: true
          });
        } else {
          ctx[key2] = methodHandler.bind(publicThis);
        }
        if (true) {
          checkDuplicateProperties("Methods", key2);
        }
      } else if (true) {
        warn$1(
          `Method "${key2}" has type "${typeof methodHandler}" in the component definition. Did you reference the function correctly?`
        );
      }
    }
  }
  if (dataOptions) {
    if (!isFunction(dataOptions)) {
      warn$1(
        `The data option must be a function. Plain object usage is no longer supported.`
      );
    }
    const data = dataOptions.call(publicThis, publicThis);
    if (isPromise(data)) {
      warn$1(
        `data() returned a Promise - note data() cannot be async; If you intend to perform data fetching before component renders, use async setup() + <Suspense>.`
      );
    }
    if (!isObject(data)) {
      warn$1(`data() should return an object.`);
    } else {
      instance.data = reactive(data);
      if (true) {
        for (const key2 in data) {
          checkDuplicateProperties("Data", key2);
          if (!isReservedPrefix(key2[0])) {
            Object.defineProperty(ctx, key2, {
              configurable: true,
              enumerable: true,
              get: () => data[key2],
              set: NOOP
            });
          }
        }
      }
    }
  }
  shouldCacheAccess = true;
  if (computedOptions) {
    for (const key2 in computedOptions) {
      const opt = computedOptions[key2];
      const get = isFunction(opt) ? opt.bind(publicThis, publicThis) : isFunction(opt.get) ? opt.get.bind(publicThis, publicThis) : NOOP;
      if (get === NOOP) {
        warn$1(`Computed property "${key2}" has no getter.`);
      }
      const set2 = !isFunction(opt) && isFunction(opt.set) ? opt.set.bind(publicThis) : true ? () => {
        warn$1(
          `Write operation failed: computed property "${key2}" is readonly.`
        );
      } : NOOP;
      const c2 = computed2({
        get,
        set: set2
      });
      Object.defineProperty(ctx, key2, {
        enumerable: true,
        configurable: true,
        get: () => c2.value,
        set: (v2) => c2.value = v2
      });
      if (true) {
        checkDuplicateProperties("Computed", key2);
      }
    }
  }
  if (watchOptions) {
    for (const key2 in watchOptions) {
      createWatcher(watchOptions[key2], ctx, publicThis, key2);
    }
  }
  if (provideOptions) {
    const provides = isFunction(provideOptions) ? provideOptions.call(publicThis) : provideOptions;
    Reflect.ownKeys(provides).forEach((key2) => {
      provide(key2, provides[key2]);
    });
  }
  if (created) {
    callHook(created, instance, "c");
  }
  function registerLifecycleHook(register, hook2) {
    if (isArray(hook2)) {
      hook2.forEach((_hook) => register(_hook.bind(publicThis)));
    } else if (hook2) {
      register(hook2.bind(publicThis));
    }
  }
  registerLifecycleHook(onBeforeMount, beforeMount);
  registerLifecycleHook(onMounted, mounted);
  registerLifecycleHook(onBeforeUpdate, beforeUpdate);
  registerLifecycleHook(onUpdated, updated);
  registerLifecycleHook(onActivated, activated);
  registerLifecycleHook(onDeactivated, deactivated);
  registerLifecycleHook(onErrorCaptured, errorCaptured);
  registerLifecycleHook(onRenderTracked, renderTracked);
  registerLifecycleHook(onRenderTriggered, renderTriggered);
  registerLifecycleHook(onBeforeUnmount, beforeUnmount);
  registerLifecycleHook(onUnmounted, unmounted);
  registerLifecycleHook(onServerPrefetch, serverPrefetch);
  if (isArray(expose)) {
    if (expose.length) {
      const exposed = instance.exposed || (instance.exposed = {});
      expose.forEach((key2) => {
        Object.defineProperty(exposed, key2, {
          get: () => publicThis[key2],
          set: (val) => publicThis[key2] = val,
          enumerable: true
        });
      });
    } else if (!instance.exposed) {
      instance.exposed = {};
    }
  }
  if (render3 && instance.render === NOOP) {
    instance.render = render3;
  }
  if (inheritAttrs != null) {
    instance.inheritAttrs = inheritAttrs;
  }
  if (components) instance.components = components;
  if (directives) instance.directives = directives;
  if (serverPrefetch) {
    markAsyncBoundary(instance);
  }
}
function resolveInjections(injectOptions, ctx, checkDuplicateProperties = NOOP) {
  if (isArray(injectOptions)) {
    injectOptions = normalizeInject(injectOptions);
  }
  for (const key2 in injectOptions) {
    const opt = injectOptions[key2];
    let injected;
    if (isObject(opt)) {
      if ("default" in opt) {
        injected = inject(
          opt.from || key2,
          opt.default,
          true
        );
      } else {
        injected = inject(opt.from || key2);
      }
    } else {
      injected = inject(opt);
    }
    if (isRef2(injected)) {
      Object.defineProperty(ctx, key2, {
        enumerable: true,
        configurable: true,
        get: () => injected.value,
        set: (v2) => injected.value = v2
      });
    } else {
      ctx[key2] = injected;
    }
    if (true) {
      checkDuplicateProperties("Inject", key2);
    }
  }
}
function callHook(hook2, instance, type) {
  callWithAsyncErrorHandling(
    isArray(hook2) ? hook2.map((h2) => h2.bind(instance.proxy)) : hook2.bind(instance.proxy),
    instance,
    type
  );
}
function createWatcher(raw, ctx, publicThis, key2) {
  let getter = key2.includes(".") ? createPathGetter(publicThis, key2) : () => publicThis[key2];
  if (isString(raw)) {
    const handler = ctx[raw];
    if (isFunction(handler)) {
      {
        watch2(getter, handler);
      }
    } else if (true) {
      warn$1(`Invalid watch handler specified by key "${raw}"`, handler);
    }
  } else if (isFunction(raw)) {
    {
      watch2(getter, raw.bind(publicThis));
    }
  } else if (isObject(raw)) {
    if (isArray(raw)) {
      raw.forEach((r) => createWatcher(r, ctx, publicThis, key2));
    } else {
      const handler = isFunction(raw.handler) ? raw.handler.bind(publicThis) : ctx[raw.handler];
      if (isFunction(handler)) {
        watch2(getter, handler, raw);
      } else if (true) {
        warn$1(`Invalid watch handler specified by key "${raw.handler}"`, handler);
      }
    }
  } else if (true) {
    warn$1(`Invalid watch option: "${key2}"`, raw);
  }
}
function resolveMergedOptions(instance) {
  const base = instance.type;
  const { mixins, extends: extendsOptions } = base;
  const {
    mixins: globalMixins,
    optionsCache: cache,
    config: { optionMergeStrategies }
  } = instance.appContext;
  const cached = cache.get(base);
  let resolved;
  if (cached) {
    resolved = cached;
  } else if (!globalMixins.length && !mixins && !extendsOptions) {
    {
      resolved = base;
    }
  } else {
    resolved = {};
    if (globalMixins.length) {
      globalMixins.forEach(
        (m2) => mergeOptions(resolved, m2, optionMergeStrategies, true)
      );
    }
    mergeOptions(resolved, base, optionMergeStrategies);
  }
  if (isObject(base)) {
    cache.set(base, resolved);
  }
  return resolved;
}
function mergeOptions(to, from, strats, asMixin = false) {
  const { mixins, extends: extendsOptions } = from;
  if (extendsOptions) {
    mergeOptions(to, extendsOptions, strats, true);
  }
  if (mixins) {
    mixins.forEach(
      (m2) => mergeOptions(to, m2, strats, true)
    );
  }
  for (const key2 in from) {
    if (asMixin && key2 === "expose") {
      warn$1(
        `"expose" option is ignored when declared in mixins or extends. It should only be declared in the base component itself.`
      );
    } else {
      const strat = internalOptionMergeStrats[key2] || strats && strats[key2];
      to[key2] = strat ? strat(to[key2], from[key2]) : from[key2];
    }
  }
  return to;
}
var internalOptionMergeStrats = {
  data: mergeDataFn,
  props: mergeEmitsOrPropsOptions,
  emits: mergeEmitsOrPropsOptions,
  // objects
  methods: mergeObjectOptions,
  computed: mergeObjectOptions,
  // lifecycle
  beforeCreate: mergeAsArray,
  created: mergeAsArray,
  beforeMount: mergeAsArray,
  mounted: mergeAsArray,
  beforeUpdate: mergeAsArray,
  updated: mergeAsArray,
  beforeDestroy: mergeAsArray,
  beforeUnmount: mergeAsArray,
  destroyed: mergeAsArray,
  unmounted: mergeAsArray,
  activated: mergeAsArray,
  deactivated: mergeAsArray,
  errorCaptured: mergeAsArray,
  serverPrefetch: mergeAsArray,
  // assets
  components: mergeObjectOptions,
  directives: mergeObjectOptions,
  // watch
  watch: mergeWatchOptions,
  // provide / inject
  provide: mergeDataFn,
  inject: mergeInject
};
function mergeDataFn(to, from) {
  if (!from) {
    return to;
  }
  if (!to) {
    return from;
  }
  return function mergedDataFn() {
    return extend(
      isFunction(to) ? to.call(this, this) : to,
      isFunction(from) ? from.call(this, this) : from
    );
  };
}
function mergeInject(to, from) {
  return mergeObjectOptions(normalizeInject(to), normalizeInject(from));
}
function normalizeInject(raw) {
  if (isArray(raw)) {
    const res = {};
    for (let i = 0; i < raw.length; i++) {
      res[raw[i]] = raw[i];
    }
    return res;
  }
  return raw;
}
function mergeAsArray(to, from) {
  return to ? [...new Set([].concat(to, from))] : from;
}
function mergeObjectOptions(to, from) {
  return to ? extend(/* @__PURE__ */ Object.create(null), to, from) : from;
}
function mergeEmitsOrPropsOptions(to, from) {
  if (to) {
    if (isArray(to) && isArray(from)) {
      return [.../* @__PURE__ */ new Set([...to, ...from])];
    }
    return extend(
      /* @__PURE__ */ Object.create(null),
      normalizePropsOrEmits(to),
      normalizePropsOrEmits(from != null ? from : {})
    );
  } else {
    return from;
  }
}
function mergeWatchOptions(to, from) {
  if (!to) return from;
  if (!from) return to;
  const merged = extend(/* @__PURE__ */ Object.create(null), to);
  for (const key2 in from) {
    merged[key2] = mergeAsArray(to[key2], from[key2]);
  }
  return merged;
}
function createAppContext() {
  return {
    app: null,
    config: {
      isNativeTag: NO,
      performance: false,
      globalProperties: {},
      optionMergeStrategies: {},
      errorHandler: void 0,
      warnHandler: void 0,
      compilerOptions: {}
    },
    mixins: [],
    components: {},
    directives: {},
    provides: /* @__PURE__ */ Object.create(null),
    optionsCache: /* @__PURE__ */ new WeakMap(),
    propsCache: /* @__PURE__ */ new WeakMap(),
    emitsCache: /* @__PURE__ */ new WeakMap()
  };
}
var uid$1 = 0;
function createAppAPI(render3, hydrate2) {
  return function createApp2(rootComponent, rootProps = null) {
    if (!isFunction(rootComponent)) {
      rootComponent = extend({}, rootComponent);
    }
    if (rootProps != null && !isObject(rootProps)) {
      warn$1(`root props passed to app.mount() must be an object.`);
      rootProps = null;
    }
    const context = createAppContext();
    const installedPlugins = /* @__PURE__ */ new WeakSet();
    const pluginCleanupFns = [];
    let isMounted = false;
    const app = context.app = {
      _uid: uid$1++,
      _component: rootComponent,
      _props: rootProps,
      _container: null,
      _context: context,
      _instance: null,
      version,
      get config() {
        return context.config;
      },
      set config(v2) {
        if (true) {
          warn$1(
            `app.config cannot be replaced. Modify individual options instead.`
          );
        }
      },
      use(plugin, ...options) {
        if (installedPlugins.has(plugin)) {
          warn$1(`Plugin has already been applied to target app.`);
        } else if (plugin && isFunction(plugin.install)) {
          installedPlugins.add(plugin);
          plugin.install(app, ...options);
        } else if (isFunction(plugin)) {
          installedPlugins.add(plugin);
          plugin(app, ...options);
        } else if (true) {
          warn$1(
            `A plugin must either be a function or an object with an "install" function.`
          );
        }
        return app;
      },
      mixin(mixin) {
        if (__VUE_OPTIONS_API__) {
          if (!context.mixins.includes(mixin)) {
            context.mixins.push(mixin);
          } else if (true) {
            warn$1(
              "Mixin has already been applied to target app" + (mixin.name ? `: ${mixin.name}` : "")
            );
          }
        } else if (true) {
          warn$1("Mixins are only available in builds supporting Options API");
        }
        return app;
      },
      component(name, component) {
        if (true) {
          validateComponentName(name, context.config);
        }
        if (!component) {
          return context.components[name];
        }
        if (context.components[name]) {
          warn$1(`Component "${name}" has already been registered in target app.`);
        }
        context.components[name] = component;
        return app;
      },
      directive(name, directive) {
        if (true) {
          validateDirectiveName(name);
        }
        if (!directive) {
          return context.directives[name];
        }
        if (context.directives[name]) {
          warn$1(`Directive "${name}" has already been registered in target app.`);
        }
        context.directives[name] = directive;
        return app;
      },
      mount(rootContainer, isHydrate, namespace) {
        if (!isMounted) {
          if (rootContainer.__vue_app__) {
            warn$1(
              `There is already an app instance mounted on the host container.
 If you want to mount another app on the same host container, you need to unmount the previous app by calling \`app.unmount()\` first.`
            );
          }
          const vnode = app._ceVNode || createVNode(rootComponent, rootProps);
          vnode.appContext = context;
          if (namespace === true) {
            namespace = "svg";
          } else if (namespace === false) {
            namespace = void 0;
          }
          if (true) {
            context.reload = () => {
              const cloned = cloneVNode(vnode);
              cloned.el = null;
              render3(cloned, rootContainer, namespace);
            };
          }
          if (isHydrate && hydrate2) {
            hydrate2(vnode, rootContainer);
          } else {
            render3(vnode, rootContainer, namespace);
          }
          isMounted = true;
          app._container = rootContainer;
          rootContainer.__vue_app__ = app;
          if (true) {
            app._instance = vnode.component;
            devtoolsInitApp(app, version);
          }
          return getComponentPublicInstance(vnode.component);
        } else if (true) {
          warn$1(
            `App has already been mounted.
If you want to remount the same app, move your app creation logic into a factory function and create fresh app instances for each mount - e.g. \`const createMyApp = () => createApp(App)\``
          );
        }
      },
      onUnmount(cleanupFn) {
        if (typeof cleanupFn !== "function") {
          warn$1(
            `Expected function as first argument to app.onUnmount(), but got ${typeof cleanupFn}`
          );
        }
        pluginCleanupFns.push(cleanupFn);
      },
      unmount() {
        if (isMounted) {
          callWithAsyncErrorHandling(
            pluginCleanupFns,
            app._instance,
            16
          );
          render3(null, app._container);
          if (true) {
            app._instance = null;
            devtoolsUnmountApp(app);
          }
          delete app._container.__vue_app__;
        } else if (true) {
          warn$1(`Cannot unmount an app that is not mounted.`);
        }
      },
      provide(key2, value) {
        if (key2 in context.provides) {
          if (hasOwn(context.provides, key2)) {
            warn$1(
              `App already provides property with key "${String(key2)}". It will be overwritten with the new value.`
            );
          } else {
            warn$1(
              `App already provides property with key "${String(key2)}" inherited from its parent element. It will be overwritten with the new value.`
            );
          }
        }
        context.provides[key2] = value;
        return app;
      },
      runWithContext(fn2) {
        const lastApp = currentApp;
        currentApp = app;
        try {
          return fn2();
        } finally {
          currentApp = lastApp;
        }
      }
    };
    return app;
  };
}
var currentApp = null;
function provide(key2, value) {
  if (!currentInstance) {
    if (true) {
      warn$1(`provide() can only be used inside setup().`);
    }
  } else {
    let provides = currentInstance.provides;
    const parentProvides = currentInstance.parent && currentInstance.parent.provides;
    if (parentProvides === provides) {
      provides = currentInstance.provides = Object.create(parentProvides);
    }
    provides[key2] = value;
  }
}
function inject(key2, defaultValue, treatDefaultAsFactory = false) {
  const instance = getCurrentInstance();
  if (instance || currentApp) {
    let provides = currentApp ? currentApp._context.provides : instance ? instance.parent == null || instance.ce ? instance.vnode.appContext && instance.vnode.appContext.provides : instance.parent.provides : void 0;
    if (provides && key2 in provides) {
      return provides[key2];
    } else if (arguments.length > 1) {
      return treatDefaultAsFactory && isFunction(defaultValue) ? defaultValue.call(instance && instance.proxy) : defaultValue;
    } else if (true) {
      warn$1(`injection "${String(key2)}" not found.`);
    }
  } else if (true) {
    warn$1(`inject() can only be used inside setup() or functional components.`);
  }
}
function hasInjectionContext() {
  return !!(getCurrentInstance() || currentApp);
}
var internalObjectProto = {};
var createInternalObject = () => Object.create(internalObjectProto);
var isInternalObject = (obj) => Object.getPrototypeOf(obj) === internalObjectProto;
function initProps(instance, rawProps, isStateful, isSSR = false) {
  const props = {};
  const attrs = createInternalObject();
  instance.propsDefaults = /* @__PURE__ */ Object.create(null);
  setFullProps(instance, rawProps, props, attrs);
  for (const key2 in instance.propsOptions[0]) {
    if (!(key2 in props)) {
      props[key2] = void 0;
    }
  }
  if (true) {
    validateProps(rawProps || {}, props, instance);
  }
  if (isStateful) {
    instance.props = isSSR ? props : shallowReactive(props);
  } else {
    if (!instance.type.props) {
      instance.props = attrs;
    } else {
      instance.props = props;
    }
  }
  instance.attrs = attrs;
}
function isInHmrContext(instance) {
  while (instance) {
    if (instance.type.__hmrId) return true;
    instance = instance.parent;
  }
}
function updateProps(instance, rawProps, rawPrevProps, optimized) {
  const {
    props,
    attrs,
    vnode: { patchFlag }
  } = instance;
  const rawCurrentProps = toRaw(props);
  const [options] = instance.propsOptions;
  let hasAttrsChanged = false;
  if (
    // always force full diff in dev
    // - #1942 if hmr is enabled with sfc component
    // - vite#872 non-sfc component used by sfc component
    !isInHmrContext(instance) && (optimized || patchFlag > 0) && !(patchFlag & 16)
  ) {
    if (patchFlag & 8) {
      const propsToUpdate = instance.vnode.dynamicProps;
      for (let i = 0; i < propsToUpdate.length; i++) {
        let key2 = propsToUpdate[i];
        if (isEmitListener(instance.emitsOptions, key2)) {
          continue;
        }
        const value = rawProps[key2];
        if (options) {
          if (hasOwn(attrs, key2)) {
            if (value !== attrs[key2]) {
              attrs[key2] = value;
              hasAttrsChanged = true;
            }
          } else {
            const camelizedKey = camelize(key2);
            props[camelizedKey] = resolvePropValue(
              options,
              rawCurrentProps,
              camelizedKey,
              value,
              instance,
              false
            );
          }
        } else {
          if (value !== attrs[key2]) {
            attrs[key2] = value;
            hasAttrsChanged = true;
          }
        }
      }
    }
  } else {
    if (setFullProps(instance, rawProps, props, attrs)) {
      hasAttrsChanged = true;
    }
    let kebabKey;
    for (const key2 in rawCurrentProps) {
      if (!rawProps || // for camelCase
      !hasOwn(rawProps, key2) && // it's possible the original props was passed in as kebab-case
      // and converted to camelCase (#955)
      ((kebabKey = hyphenate(key2)) === key2 || !hasOwn(rawProps, kebabKey))) {
        if (options) {
          if (rawPrevProps && // for camelCase
          (rawPrevProps[key2] !== void 0 || // for kebab-case
          rawPrevProps[kebabKey] !== void 0)) {
            props[key2] = resolvePropValue(
              options,
              rawCurrentProps,
              key2,
              void 0,
              instance,
              true
            );
          }
        } else {
          delete props[key2];
        }
      }
    }
    if (attrs !== rawCurrentProps) {
      for (const key2 in attrs) {
        if (!rawProps || !hasOwn(rawProps, key2) && true) {
          delete attrs[key2];
          hasAttrsChanged = true;
        }
      }
    }
  }
  if (hasAttrsChanged) {
    trigger(instance.attrs, "set", "");
  }
  if (true) {
    validateProps(rawProps || {}, props, instance);
  }
}
function setFullProps(instance, rawProps, props, attrs) {
  const [options, needCastKeys] = instance.propsOptions;
  let hasAttrsChanged = false;
  let rawCastValues;
  if (rawProps) {
    for (let key2 in rawProps) {
      if (isReservedProp(key2)) {
        continue;
      }
      const value = rawProps[key2];
      let camelKey;
      if (options && hasOwn(options, camelKey = camelize(key2))) {
        if (!needCastKeys || !needCastKeys.includes(camelKey)) {
          props[camelKey] = value;
        } else {
          (rawCastValues || (rawCastValues = {}))[camelKey] = value;
        }
      } else if (!isEmitListener(instance.emitsOptions, key2)) {
        if (!(key2 in attrs) || value !== attrs[key2]) {
          attrs[key2] = value;
          hasAttrsChanged = true;
        }
      }
    }
  }
  if (needCastKeys) {
    const rawCurrentProps = toRaw(props);
    const castValues = rawCastValues || EMPTY_OBJ;
    for (let i = 0; i < needCastKeys.length; i++) {
      const key2 = needCastKeys[i];
      props[key2] = resolvePropValue(
        options,
        rawCurrentProps,
        key2,
        castValues[key2],
        instance,
        !hasOwn(castValues, key2)
      );
    }
  }
  return hasAttrsChanged;
}
function resolvePropValue(options, props, key2, value, instance, isAbsent2) {
  const opt = options[key2];
  if (opt != null) {
    const hasDefault = hasOwn(opt, "default");
    if (hasDefault && value === void 0) {
      const defaultValue = opt.default;
      if (opt.type !== Function && !opt.skipFactory && isFunction(defaultValue)) {
        const { propsDefaults } = instance;
        if (key2 in propsDefaults) {
          value = propsDefaults[key2];
        } else {
          const reset = setCurrentInstance(instance);
          value = propsDefaults[key2] = defaultValue.call(
            null,
            props
          );
          reset();
        }
      } else {
        value = defaultValue;
      }
      if (instance.ce) {
        instance.ce._setProp(key2, value);
      }
    }
    if (opt[
      0
      /* shouldCast */
    ]) {
      if (isAbsent2 && !hasDefault) {
        value = false;
      } else if (opt[
        1
        /* shouldCastTrue */
      ] && (value === "" || value === hyphenate(key2))) {
        value = true;
      }
    }
  }
  return value;
}
var mixinPropsCache = /* @__PURE__ */ new WeakMap();
function normalizePropsOptions(comp, appContext, asMixin = false) {
  const cache = __VUE_OPTIONS_API__ && asMixin ? mixinPropsCache : appContext.propsCache;
  const cached = cache.get(comp);
  if (cached) {
    return cached;
  }
  const raw = comp.props;
  const normalized = {};
  const needCastKeys = [];
  let hasExtends = false;
  if (__VUE_OPTIONS_API__ && !isFunction(comp)) {
    const extendProps = (raw2) => {
      hasExtends = true;
      const [props, keys2] = normalizePropsOptions(raw2, appContext, true);
      extend(normalized, props);
      if (keys2) needCastKeys.push(...keys2);
    };
    if (!asMixin && appContext.mixins.length) {
      appContext.mixins.forEach(extendProps);
    }
    if (comp.extends) {
      extendProps(comp.extends);
    }
    if (comp.mixins) {
      comp.mixins.forEach(extendProps);
    }
  }
  if (!raw && !hasExtends) {
    if (isObject(comp)) {
      cache.set(comp, EMPTY_ARR);
    }
    return EMPTY_ARR;
  }
  if (isArray(raw)) {
    for (let i = 0; i < raw.length; i++) {
      if (!isString(raw[i])) {
        warn$1(`props must be strings when using array syntax.`, raw[i]);
      }
      const normalizedKey = camelize(raw[i]);
      if (validatePropName(normalizedKey)) {
        normalized[normalizedKey] = EMPTY_OBJ;
      }
    }
  } else if (raw) {
    if (!isObject(raw)) {
      warn$1(`invalid props options`, raw);
    }
    for (const key2 in raw) {
      const normalizedKey = camelize(key2);
      if (validatePropName(normalizedKey)) {
        const opt = raw[key2];
        const prop = normalized[normalizedKey] = isArray(opt) || isFunction(opt) ? { type: opt } : extend({}, opt);
        const propType = prop.type;
        let shouldCast = false;
        let shouldCastTrue = true;
        if (isArray(propType)) {
          for (let index = 0; index < propType.length; ++index) {
            const type = propType[index];
            const typeName = isFunction(type) && type.name;
            if (typeName === "Boolean") {
              shouldCast = true;
              break;
            } else if (typeName === "String") {
              shouldCastTrue = false;
            }
          }
        } else {
          shouldCast = isFunction(propType) && propType.name === "Boolean";
        }
        prop[
          0
          /* shouldCast */
        ] = shouldCast;
        prop[
          1
          /* shouldCastTrue */
        ] = shouldCastTrue;
        if (shouldCast || hasOwn(prop, "default")) {
          needCastKeys.push(normalizedKey);
        }
      }
    }
  }
  const res = [normalized, needCastKeys];
  if (isObject(comp)) {
    cache.set(comp, res);
  }
  return res;
}
function validatePropName(key2) {
  if (key2[0] !== "$" && !isReservedProp(key2)) {
    return true;
  } else if (true) {
    warn$1(`Invalid prop name: "${key2}" is a reserved property.`);
  }
  return false;
}
function getType(ctor) {
  if (ctor === null) {
    return "null";
  }
  if (typeof ctor === "function") {
    return ctor.name || "";
  } else if (typeof ctor === "object") {
    const name = ctor.constructor && ctor.constructor.name;
    return name || "";
  }
  return "";
}
function validateProps(rawProps, props, instance) {
  const resolvedValues = toRaw(props);
  const options = instance.propsOptions[0];
  const camelizePropsKey = Object.keys(rawProps).map((key2) => camelize(key2));
  for (const key2 in options) {
    let opt = options[key2];
    if (opt == null) continue;
    validateProp(
      key2,
      resolvedValues[key2],
      opt,
      true ? shallowReadonly(resolvedValues) : resolvedValues,
      !camelizePropsKey.includes(key2)
    );
  }
}
function validateProp(name, value, prop, props, isAbsent2) {
  const { type, required, validator, skipCheck } = prop;
  if (required && isAbsent2) {
    warn$1('Missing required prop: "' + name + '"');
    return;
  }
  if (value == null && !required) {
    return;
  }
  if (type != null && type !== true && !skipCheck) {
    let isValid = false;
    const types = isArray(type) ? type : [type];
    const expectedTypes = [];
    for (let i = 0; i < types.length && !isValid; i++) {
      const { valid, expectedType } = assertType(value, types[i]);
      expectedTypes.push(expectedType || "");
      isValid = valid;
    }
    if (!isValid) {
      warn$1(getInvalidTypeMessage(name, value, expectedTypes));
      return;
    }
  }
  if (validator && !validator(value, props)) {
    warn$1('Invalid prop: custom validator check failed for prop "' + name + '".');
  }
}
var isSimpleType = makeMap(
  "String,Number,Boolean,Function,Symbol,BigInt"
);
function assertType(value, type) {
  let valid;
  const expectedType = getType(type);
  if (expectedType === "null") {
    valid = value === null;
  } else if (isSimpleType(expectedType)) {
    const t = typeof value;
    valid = t === expectedType.toLowerCase();
    if (!valid && t === "object") {
      valid = value instanceof type;
    }
  } else if (expectedType === "Object") {
    valid = isObject(value);
  } else if (expectedType === "Array") {
    valid = isArray(value);
  } else {
    valid = value instanceof type;
  }
  return {
    valid,
    expectedType
  };
}
function getInvalidTypeMessage(name, value, expectedTypes) {
  if (expectedTypes.length === 0) {
    return `Prop type [] for prop "${name}" won't match anything. Did you mean to use type Array instead?`;
  }
  let message = `Invalid prop: type check failed for prop "${name}". Expected ${expectedTypes.map(capitalize).join(" | ")}`;
  const expectedType = expectedTypes[0];
  const receivedType = toRawType(value);
  const expectedValue = styleValue(value, expectedType);
  const receivedValue = styleValue(value, receivedType);
  if (expectedTypes.length === 1 && isExplicable(expectedType) && !isBoolean(expectedType, receivedType)) {
    message += ` with value ${expectedValue}`;
  }
  message += `, got ${receivedType} `;
  if (isExplicable(receivedType)) {
    message += `with value ${receivedValue}.`;
  }
  return message;
}
function styleValue(value, type) {
  if (type === "String") {
    return `"${value}"`;
  } else if (type === "Number") {
    return `${Number(value)}`;
  } else {
    return `${value}`;
  }
}
function isExplicable(type) {
  const explicitTypes = ["string", "number", "boolean"];
  return explicitTypes.some((elem) => type.toLowerCase() === elem);
}
function isBoolean(...args) {
  return args.some((elem) => elem.toLowerCase() === "boolean");
}
var isInternalKey = (key2) => key2 === "_" || key2 === "_ctx" || key2 === "$stable";
var normalizeSlotValue = (value) => isArray(value) ? value.map(normalizeVNode) : [normalizeVNode(value)];
var normalizeSlot = (key2, rawSlot, ctx) => {
  if (rawSlot._n) {
    return rawSlot;
  }
  const normalized = withCtx((...args) => {
    if (currentInstance && !(ctx === null && currentRenderingInstance) && !(ctx && ctx.root !== currentInstance.root)) {
      warn$1(
        `Slot "${key2}" invoked outside of the render function: this will not track dependencies used in the slot. Invoke the slot function inside the render function instead.`
      );
    }
    return normalizeSlotValue(rawSlot(...args));
  }, ctx);
  normalized._c = false;
  return normalized;
};
var normalizeObjectSlots = (rawSlots, slots, instance) => {
  const ctx = rawSlots._ctx;
  for (const key2 in rawSlots) {
    if (isInternalKey(key2)) continue;
    const value = rawSlots[key2];
    if (isFunction(value)) {
      slots[key2] = normalizeSlot(key2, value, ctx);
    } else if (value != null) {
      if (true) {
        warn$1(
          `Non-function value encountered for slot "${key2}". Prefer function slots for better performance.`
        );
      }
      const normalized = normalizeSlotValue(value);
      slots[key2] = () => normalized;
    }
  }
};
var normalizeVNodeSlots = (instance, children) => {
  if (!isKeepAlive(instance.vnode) && true) {
    warn$1(
      `Non-function value encountered for default slot. Prefer function slots for better performance.`
    );
  }
  const normalized = normalizeSlotValue(children);
  instance.slots.default = () => normalized;
};
var assignSlots = (slots, children, optimized) => {
  for (const key2 in children) {
    if (optimized || !isInternalKey(key2)) {
      slots[key2] = children[key2];
    }
  }
};
var initSlots = (instance, children, optimized) => {
  const slots = instance.slots = createInternalObject();
  if (instance.vnode.shapeFlag & 32) {
    const type = children._;
    if (type) {
      assignSlots(slots, children, optimized);
      if (optimized) {
        def(slots, "_", type, true);
      }
    } else {
      normalizeObjectSlots(children, slots);
    }
  } else if (children) {
    normalizeVNodeSlots(instance, children);
  }
};
var updateSlots = (instance, children, optimized) => {
  const { vnode, slots } = instance;
  let needDeletionCheck = true;
  let deletionComparisonTarget = EMPTY_OBJ;
  if (vnode.shapeFlag & 32) {
    const type = children._;
    if (type) {
      if (isHmrUpdating) {
        assignSlots(slots, children, optimized);
        trigger(instance, "set", "$slots");
      } else if (optimized && type === 1) {
        needDeletionCheck = false;
      } else {
        assignSlots(slots, children, optimized);
      }
    } else {
      needDeletionCheck = !children.$stable;
      normalizeObjectSlots(children, slots);
    }
    deletionComparisonTarget = children;
  } else if (children) {
    normalizeVNodeSlots(instance, children);
    deletionComparisonTarget = { default: 1 };
  }
  if (needDeletionCheck) {
    for (const key2 in slots) {
      if (!isInternalKey(key2) && deletionComparisonTarget[key2] == null) {
        delete slots[key2];
      }
    }
  }
};
var supported;
var perf;
function startMeasure(instance, type) {
  if (instance.appContext.config.performance && isSupported()) {
    perf.mark(`vue-${type}-${instance.uid}`);
  }
  if (true) {
    devtoolsPerfStart(instance, type, isSupported() ? perf.now() : Date.now());
  }
}
function endMeasure(instance, type) {
  if (instance.appContext.config.performance && isSupported()) {
    const startTag = `vue-${type}-${instance.uid}`;
    const endTag = startTag + `:end`;
    const measureName = `<${formatComponentName(instance, instance.type)}> ${type}`;
    perf.mark(endTag);
    perf.measure(measureName, startTag, endTag);
    perf.clearMeasures(measureName);
    perf.clearMarks(startTag);
    perf.clearMarks(endTag);
  }
  if (true) {
    devtoolsPerfEnd(instance, type, isSupported() ? perf.now() : Date.now());
  }
}
function isSupported() {
  if (supported !== void 0) {
    return supported;
  }
  if (typeof window !== "undefined" && window.performance) {
    supported = true;
    perf = window.performance;
  } else {
    supported = false;
  }
  return supported;
}
function initFeatureFlags() {
  const needWarn = [];
  if (typeof __VUE_OPTIONS_API__ !== "boolean") {
    needWarn.push(`__VUE_OPTIONS_API__`);
    getGlobalThis().__VUE_OPTIONS_API__ = true;
  }
  if (typeof __VUE_PROD_DEVTOOLS__ !== "boolean") {
    needWarn.push(`__VUE_PROD_DEVTOOLS__`);
    getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;
  }
  if (typeof __VUE_PROD_HYDRATION_MISMATCH_DETAILS__ !== "boolean") {
    needWarn.push(`__VUE_PROD_HYDRATION_MISMATCH_DETAILS__`);
    getGlobalThis().__VUE_PROD_HYDRATION_MISMATCH_DETAILS__ = false;
  }
  if (needWarn.length) {
    const multi = needWarn.length > 1;
    console.warn(
      `Feature flag${multi ? `s` : ``} ${needWarn.join(", ")} ${multi ? `are` : `is`} not explicitly defined. You are running the esm-bundler build of Vue, which expects these compile-time feature flags to be globally injected via the bundler config in order to get better tree-shaking in the production bundle.

For more details, see https://link.vuejs.org/feature-flags.`
    );
  }
}
var queuePostRenderEffect = queueEffectWithSuspense;
function createRenderer(options) {
  return baseCreateRenderer(options);
}
function createHydrationRenderer(options) {
  return baseCreateRenderer(options, createHydrationFunctions);
}
function baseCreateRenderer(options, createHydrationFns) {
  {
    initFeatureFlags();
  }
  const target = getGlobalThis();
  target.__VUE__ = true;
  if (true) {
    setDevtoolsHook$1(target.__VUE_DEVTOOLS_GLOBAL_HOOK__, target);
  }
  const {
    insert: hostInsert,
    remove: hostRemove,
    patchProp: hostPatchProp,
    createElement: hostCreateElement,
    createText: hostCreateText,
    createComment: hostCreateComment,
    setText: hostSetText,
    setElementText: hostSetElementText,
    parentNode: hostParentNode,
    nextSibling: hostNextSibling,
    setScopeId: hostSetScopeId = NOOP,
    insertStaticContent: hostInsertStaticContent
  } = options;
  const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, namespace = void 0, slotScopeIds = null, optimized = isHmrUpdating ? false : !!n2.dynamicChildren) => {
    if (n1 === n2) {
      return;
    }
    if (n1 && !isSameVNodeType(n1, n2)) {
      anchor = getNextHostNode(n1);
      unmount(n1, parentComponent, parentSuspense, true);
      n1 = null;
    }
    if (n2.patchFlag === -2) {
      optimized = false;
      n2.dynamicChildren = null;
    }
    const { type, ref: ref2, shapeFlag } = n2;
    switch (type) {
      case Text:
        processText(n1, n2, container, anchor);
        break;
      case Comment:
        processCommentNode(n1, n2, container, anchor);
        break;
      case Static:
        if (n1 == null) {
          mountStaticNode(n2, container, anchor, namespace);
        } else if (true) {
          patchStaticNode(n1, n2, container, namespace);
        }
        break;
      case Fragment:
        processFragment(
          n1,
          n2,
          container,
          anchor,
          parentComponent,
          parentSuspense,
          namespace,
          slotScopeIds,
          optimized
        );
        break;
      default:
        if (shapeFlag & 1) {
          processElement(
            n1,
            n2,
            container,
            anchor,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized
          );
        } else if (shapeFlag & 6) {
          processComponent(
            n1,
            n2,
            container,
            anchor,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized
          );
        } else if (shapeFlag & 64) {
          type.process(
            n1,
            n2,
            container,
            anchor,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized,
            internals
          );
        } else if (shapeFlag & 128) {
          type.process(
            n1,
            n2,
            container,
            anchor,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized,
            internals
          );
        } else if (true) {
          warn$1("Invalid VNode type:", type, `(${typeof type})`);
        }
    }
    if (ref2 != null && parentComponent) {
      setRef(ref2, n1 && n1.ref, parentSuspense, n2 || n1, !n2);
    } else if (ref2 == null && n1 && n1.ref != null) {
      setRef(n1.ref, null, parentSuspense, n1, true);
    }
  };
  const processText = (n1, n2, container, anchor) => {
    if (n1 == null) {
      hostInsert(
        n2.el = hostCreateText(n2.children),
        container,
        anchor
      );
    } else {
      const el = n2.el = n1.el;
      if (n2.children !== n1.children) {
        hostSetText(el, n2.children);
      }
    }
  };
  const processCommentNode = (n1, n2, container, anchor) => {
    if (n1 == null) {
      hostInsert(
        n2.el = hostCreateComment(n2.children || ""),
        container,
        anchor
      );
    } else {
      n2.el = n1.el;
    }
  };
  const mountStaticNode = (n2, container, anchor, namespace) => {
    [n2.el, n2.anchor] = hostInsertStaticContent(
      n2.children,
      container,
      anchor,
      namespace,
      n2.el,
      n2.anchor
    );
  };
  const patchStaticNode = (n1, n2, container, namespace) => {
    if (n2.children !== n1.children) {
      const anchor = hostNextSibling(n1.anchor);
      removeStaticNode(n1);
      [n2.el, n2.anchor] = hostInsertStaticContent(
        n2.children,
        container,
        anchor,
        namespace
      );
    } else {
      n2.el = n1.el;
      n2.anchor = n1.anchor;
    }
  };
  const moveStaticNode = ({ el, anchor }, container, nextSibling) => {
    let next;
    while (el && el !== anchor) {
      next = hostNextSibling(el);
      hostInsert(el, container, nextSibling);
      el = next;
    }
    hostInsert(anchor, container, nextSibling);
  };
  const removeStaticNode = ({ el, anchor }) => {
    let next;
    while (el && el !== anchor) {
      next = hostNextSibling(el);
      hostRemove(el);
      el = next;
    }
    hostRemove(anchor);
  };
  const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {
    if (n2.type === "svg") {
      namespace = "svg";
    } else if (n2.type === "math") {
      namespace = "mathml";
    }
    if (n1 == null) {
      mountElement(
        n2,
        container,
        anchor,
        parentComponent,
        parentSuspense,
        namespace,
        slotScopeIds,
        optimized
      );
    } else {
      patchElement(
        n1,
        n2,
        parentComponent,
        parentSuspense,
        namespace,
        slotScopeIds,
        optimized
      );
    }
  };
  const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {
    let el;
    let vnodeHook;
    const { props, shapeFlag, transition, dirs } = vnode;
    el = vnode.el = hostCreateElement(
      vnode.type,
      namespace,
      props && props.is,
      props
    );
    if (shapeFlag & 8) {
      hostSetElementText(el, vnode.children);
    } else if (shapeFlag & 16) {
      mountChildren(
        vnode.children,
        el,
        null,
        parentComponent,
        parentSuspense,
        resolveChildrenNamespace(vnode, namespace),
        slotScopeIds,
        optimized
      );
    }
    if (dirs) {
      invokeDirectiveHook(vnode, null, parentComponent, "created");
    }
    setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);
    if (props) {
      for (const key2 in props) {
        if (key2 !== "value" && !isReservedProp(key2)) {
          hostPatchProp(el, key2, null, props[key2], namespace, parentComponent);
        }
      }
      if ("value" in props) {
        hostPatchProp(el, "value", null, props.value, namespace);
      }
      if (vnodeHook = props.onVnodeBeforeMount) {
        invokeVNodeHook(vnodeHook, parentComponent, vnode);
      }
    }
    if (true) {
      def(el, "__vnode", vnode, true);
      def(el, "__vueParentComponent", parentComponent, true);
    }
    if (dirs) {
      invokeDirectiveHook(vnode, null, parentComponent, "beforeMount");
    }
    const needCallTransitionHooks = needTransition(parentSuspense, transition);
    if (needCallTransitionHooks) {
      transition.beforeEnter(el);
    }
    hostInsert(el, container, anchor);
    if ((vnodeHook = props && props.onVnodeMounted) || needCallTransitionHooks || dirs) {
      queuePostRenderEffect(() => {
        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);
        needCallTransitionHooks && transition.enter(el);
        dirs && invokeDirectiveHook(vnode, null, parentComponent, "mounted");
      }, parentSuspense);
    }
  };
  const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent) => {
    if (scopeId) {
      hostSetScopeId(el, scopeId);
    }
    if (slotScopeIds) {
      for (let i = 0; i < slotScopeIds.length; i++) {
        hostSetScopeId(el, slotScopeIds[i]);
      }
    }
    if (parentComponent) {
      let subTree = parentComponent.subTree;
      if (subTree.patchFlag > 0 && subTree.patchFlag & 2048) {
        subTree = filterSingleRoot(subTree.children) || subTree;
      }
      if (vnode === subTree || isSuspense(subTree.type) && (subTree.ssContent === vnode || subTree.ssFallback === vnode)) {
        const parentVNode = parentComponent.vnode;
        setScopeId(
          el,
          parentVNode,
          parentVNode.scopeId,
          parentVNode.slotScopeIds,
          parentComponent.parent
        );
      }
    }
  };
  const mountChildren = (children, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, start = 0) => {
    for (let i = start; i < children.length; i++) {
      const child2 = children[i] = optimized ? cloneIfMounted(children[i]) : normalizeVNode(children[i]);
      patch(
        null,
        child2,
        container,
        anchor,
        parentComponent,
        parentSuspense,
        namespace,
        slotScopeIds,
        optimized
      );
    }
  };
  const patchElement = (n1, n2, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {
    const el = n2.el = n1.el;
    if (true) {
      el.__vnode = n2;
    }
    let { patchFlag, dynamicChildren, dirs } = n2;
    patchFlag |= n1.patchFlag & 16;
    const oldProps = n1.props || EMPTY_OBJ;
    const newProps = n2.props || EMPTY_OBJ;
    let vnodeHook;
    parentComponent && toggleRecurse(parentComponent, false);
    if (vnodeHook = newProps.onVnodeBeforeUpdate) {
      invokeVNodeHook(vnodeHook, parentComponent, n2, n1);
    }
    if (dirs) {
      invokeDirectiveHook(n2, n1, parentComponent, "beforeUpdate");
    }
    parentComponent && toggleRecurse(parentComponent, true);
    if (isHmrUpdating) {
      patchFlag = 0;
      optimized = false;
      dynamicChildren = null;
    }
    if (oldProps.innerHTML && newProps.innerHTML == null || oldProps.textContent && newProps.textContent == null) {
      hostSetElementText(el, "");
    }
    if (dynamicChildren) {
      patchBlockChildren(
        n1.dynamicChildren,
        dynamicChildren,
        el,
        parentComponent,
        parentSuspense,
        resolveChildrenNamespace(n2, namespace),
        slotScopeIds
      );
      if (true) {
        traverseStaticChildren(n1, n2);
      }
    } else if (!optimized) {
      patchChildren(
        n1,
        n2,
        el,
        null,
        parentComponent,
        parentSuspense,
        resolveChildrenNamespace(n2, namespace),
        slotScopeIds,
        false
      );
    }
    if (patchFlag > 0) {
      if (patchFlag & 16) {
        patchProps(el, oldProps, newProps, parentComponent, namespace);
      } else {
        if (patchFlag & 2) {
          if (oldProps.class !== newProps.class) {
            hostPatchProp(el, "class", null, newProps.class, namespace);
          }
        }
        if (patchFlag & 4) {
          hostPatchProp(el, "style", oldProps.style, newProps.style, namespace);
        }
        if (patchFlag & 8) {
          const propsToUpdate = n2.dynamicProps;
          for (let i = 0; i < propsToUpdate.length; i++) {
            const key2 = propsToUpdate[i];
            const prev = oldProps[key2];
            const next = newProps[key2];
            if (next !== prev || key2 === "value") {
              hostPatchProp(el, key2, prev, next, namespace, parentComponent);
            }
          }
        }
      }
      if (patchFlag & 1) {
        if (n1.children !== n2.children) {
          hostSetElementText(el, n2.children);
        }
      }
    } else if (!optimized && dynamicChildren == null) {
      patchProps(el, oldProps, newProps, parentComponent, namespace);
    }
    if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {
      queuePostRenderEffect(() => {
        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);
        dirs && invokeDirectiveHook(n2, n1, parentComponent, "updated");
      }, parentSuspense);
    }
  };
  const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, namespace, slotScopeIds) => {
    for (let i = 0; i < newChildren.length; i++) {
      const oldVNode = oldChildren[i];
      const newVNode = newChildren[i];
      const container = (
        // oldVNode may be an errored async setup() component inside Suspense
        // which will not have a mounted element
        oldVNode.el && // - In the case of a Fragment, we need to provide the actual parent
        // of the Fragment itself so it can move its children.
        (oldVNode.type === Fragment || // - In the case of different nodes, there is going to be a replacement
        // which also requires the correct parent container
        !isSameVNodeType(oldVNode, newVNode) || // - In the case of a component, it could contain anything.
        oldVNode.shapeFlag & (6 | 64 | 128)) ? hostParentNode(oldVNode.el) : (
          // In other cases, the parent container is not actually used so we
          // just pass the block element here to avoid a DOM parentNode call.
          fallbackContainer
        )
      );
      patch(
        oldVNode,
        newVNode,
        container,
        null,
        parentComponent,
        parentSuspense,
        namespace,
        slotScopeIds,
        true
      );
    }
  };
  const patchProps = (el, oldProps, newProps, parentComponent, namespace) => {
    if (oldProps !== newProps) {
      if (oldProps !== EMPTY_OBJ) {
        for (const key2 in oldProps) {
          if (!isReservedProp(key2) && !(key2 in newProps)) {
            hostPatchProp(
              el,
              key2,
              oldProps[key2],
              null,
              namespace,
              parentComponent
            );
          }
        }
      }
      for (const key2 in newProps) {
        if (isReservedProp(key2)) continue;
        const next = newProps[key2];
        const prev = oldProps[key2];
        if (next !== prev && key2 !== "value") {
          hostPatchProp(el, key2, prev, next, namespace, parentComponent);
        }
      }
      if ("value" in newProps) {
        hostPatchProp(el, "value", oldProps.value, newProps.value, namespace);
      }
    }
  };
  const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {
    const fragmentStartAnchor = n2.el = n1 ? n1.el : hostCreateText("");
    const fragmentEndAnchor = n2.anchor = n1 ? n1.anchor : hostCreateText("");
    let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2;
    if (
      // #5523 dev root fragment may inherit directives
      isHmrUpdating || patchFlag & 2048
    ) {
      patchFlag = 0;
      optimized = false;
      dynamicChildren = null;
    }
    if (fragmentSlotScopeIds) {
      slotScopeIds = slotScopeIds ? slotScopeIds.concat(fragmentSlotScopeIds) : fragmentSlotScopeIds;
    }
    if (n1 == null) {
      hostInsert(fragmentStartAnchor, container, anchor);
      hostInsert(fragmentEndAnchor, container, anchor);
      mountChildren(
        // #10007
        // such fragment like `<></>` will be compiled into
        // a fragment which doesn't have a children.
        // In this case fallback to an empty array
        n2.children || [],
        container,
        fragmentEndAnchor,
        parentComponent,
        parentSuspense,
        namespace,
        slotScopeIds,
        optimized
      );
    } else {
      if (patchFlag > 0 && patchFlag & 64 && dynamicChildren && // #2715 the previous fragment could've been a BAILed one as a result
      // of renderSlot() with no valid children
      n1.dynamicChildren) {
        patchBlockChildren(
          n1.dynamicChildren,
          dynamicChildren,
          container,
          parentComponent,
          parentSuspense,
          namespace,
          slotScopeIds
        );
        if (true) {
          traverseStaticChildren(n1, n2);
        } else if (
          // #2080 if the stable fragment has a key, it's a <template v-for> that may
          //  get moved around. Make sure all root level vnodes inherit el.
          // #2134 or if it's a component root, it may also get moved around
          // as the component is being moved.
          n2.key != null || parentComponent && n2 === parentComponent.subTree
        ) {
          traverseStaticChildren(
            n1,
            n2,
            true
            /* shallow */
          );
        }
      } else {
        patchChildren(
          n1,
          n2,
          container,
          fragmentEndAnchor,
          parentComponent,
          parentSuspense,
          namespace,
          slotScopeIds,
          optimized
        );
      }
    }
  };
  const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {
    n2.slotScopeIds = slotScopeIds;
    if (n1 == null) {
      if (n2.shapeFlag & 512) {
        parentComponent.ctx.activate(
          n2,
          container,
          anchor,
          namespace,
          optimized
        );
      } else {
        mountComponent(
          n2,
          container,
          anchor,
          parentComponent,
          parentSuspense,
          namespace,
          optimized
        );
      }
    } else {
      updateComponent(n1, n2, optimized);
    }
  };
  const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, namespace, optimized) => {
    const instance = initialVNode.component = createComponentInstance(
      initialVNode,
      parentComponent,
      parentSuspense
    );
    if (instance.type.__hmrId) {
      registerHMR(instance);
    }
    if (true) {
      pushWarningContext(initialVNode);
      startMeasure(instance, `mount`);
    }
    if (isKeepAlive(initialVNode)) {
      instance.ctx.renderer = internals;
    }
    {
      if (true) {
        startMeasure(instance, `init`);
      }
      setupComponent(instance, false, optimized);
      if (true) {
        endMeasure(instance, `init`);
      }
    }
    if (isHmrUpdating) initialVNode.el = null;
    if (instance.asyncDep) {
      parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect, optimized);
      if (!initialVNode.el) {
        const placeholder = instance.subTree = createVNode(Comment);
        processCommentNode(null, placeholder, container, anchor);
        initialVNode.placeholder = placeholder.el;
      }
    } else {
      setupRenderEffect(
        instance,
        initialVNode,
        container,
        anchor,
        parentSuspense,
        namespace,
        optimized
      );
    }
    if (true) {
      popWarningContext();
      endMeasure(instance, `mount`);
    }
  };
  const updateComponent = (n1, n2, optimized) => {
    const instance = n2.component = n1.component;
    if (shouldUpdateComponent(n1, n2, optimized)) {
      if (instance.asyncDep && !instance.asyncResolved) {
        if (true) {
          pushWarningContext(n2);
        }
        updateComponentPreRender(instance, n2, optimized);
        if (true) {
          popWarningContext();
        }
        return;
      } else {
        instance.next = n2;
        instance.update();
      }
    } else {
      n2.el = n1.el;
      instance.vnode = n2;
    }
  };
  const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, namespace, optimized) => {
    const componentUpdateFn = () => {
      if (!instance.isMounted) {
        let vnodeHook;
        const { el, props } = initialVNode;
        const { bm, m: m2, parent, root, type } = instance;
        const isAsyncWrapperVNode = isAsyncWrapper(initialVNode);
        toggleRecurse(instance, false);
        if (bm) {
          invokeArrayFns(bm);
        }
        if (!isAsyncWrapperVNode && (vnodeHook = props && props.onVnodeBeforeMount)) {
          invokeVNodeHook(vnodeHook, parent, initialVNode);
        }
        toggleRecurse(instance, true);
        if (el && hydrateNode) {
          const hydrateSubTree = () => {
            if (true) {
              startMeasure(instance, `render`);
            }
            instance.subTree = renderComponentRoot(instance);
            if (true) {
              endMeasure(instance, `render`);
            }
            if (true) {
              startMeasure(instance, `hydrate`);
            }
            hydrateNode(
              el,
              instance.subTree,
              instance,
              parentSuspense,
              null
            );
            if (true) {
              endMeasure(instance, `hydrate`);
            }
          };
          if (isAsyncWrapperVNode && type.__asyncHydrate) {
            type.__asyncHydrate(
              el,
              instance,
              hydrateSubTree
            );
          } else {
            hydrateSubTree();
          }
        } else {
          if (root.ce && // @ts-expect-error _def is private
          root.ce._def.shadowRoot !== false) {
            root.ce._injectChildStyle(type);
          }
          if (true) {
            startMeasure(instance, `render`);
          }
          const subTree = instance.subTree = renderComponentRoot(instance);
          if (true) {
            endMeasure(instance, `render`);
          }
          if (true) {
            startMeasure(instance, `patch`);
          }
          patch(
            null,
            subTree,
            container,
            anchor,
            instance,
            parentSuspense,
            namespace
          );
          if (true) {
            endMeasure(instance, `patch`);
          }
          initialVNode.el = subTree.el;
        }
        if (m2) {
          queuePostRenderEffect(m2, parentSuspense);
        }
        if (!isAsyncWrapperVNode && (vnodeHook = props && props.onVnodeMounted)) {
          const scopedInitialVNode = initialVNode;
          queuePostRenderEffect(
            () => invokeVNodeHook(vnodeHook, parent, scopedInitialVNode),
            parentSuspense
          );
        }
        if (initialVNode.shapeFlag & 256 || parent && isAsyncWrapper(parent.vnode) && parent.vnode.shapeFlag & 256) {
          instance.a && queuePostRenderEffect(instance.a, parentSuspense);
        }
        instance.isMounted = true;
        if (true) {
          devtoolsComponentAdded(instance);
        }
        initialVNode = container = anchor = null;
      } else {
        let { next, bu, u: u2, parent, vnode } = instance;
        {
          const nonHydratedAsyncRoot = locateNonHydratedAsyncRoot(instance);
          if (nonHydratedAsyncRoot) {
            if (next) {
              next.el = vnode.el;
              updateComponentPreRender(instance, next, optimized);
            }
            nonHydratedAsyncRoot.asyncDep.then(() => {
              if (!instance.isUnmounted) {
                componentUpdateFn();
              }
            });
            return;
          }
        }
        let originNext = next;
        let vnodeHook;
        if (true) {
          pushWarningContext(next || instance.vnode);
        }
        toggleRecurse(instance, false);
        if (next) {
          next.el = vnode.el;
          updateComponentPreRender(instance, next, optimized);
        } else {
          next = vnode;
        }
        if (bu) {
          invokeArrayFns(bu);
        }
        if (vnodeHook = next.props && next.props.onVnodeBeforeUpdate) {
          invokeVNodeHook(vnodeHook, parent, next, vnode);
        }
        toggleRecurse(instance, true);
        if (true) {
          startMeasure(instance, `render`);
        }
        const nextTree = renderComponentRoot(instance);
        if (true) {
          endMeasure(instance, `render`);
        }
        const prevTree = instance.subTree;
        instance.subTree = nextTree;
        if (true) {
          startMeasure(instance, `patch`);
        }
        patch(
          prevTree,
          nextTree,
          // parent may have changed if it's in a teleport
          hostParentNode(prevTree.el),
          // anchor may have changed if it's in a fragment
          getNextHostNode(prevTree),
          instance,
          parentSuspense,
          namespace
        );
        if (true) {
          endMeasure(instance, `patch`);
        }
        next.el = nextTree.el;
        if (originNext === null) {
          updateHOCHostEl(instance, nextTree.el);
        }
        if (u2) {
          queuePostRenderEffect(u2, parentSuspense);
        }
        if (vnodeHook = next.props && next.props.onVnodeUpdated) {
          queuePostRenderEffect(
            () => invokeVNodeHook(vnodeHook, parent, next, vnode),
            parentSuspense
          );
        }
        if (true) {
          devtoolsComponentUpdated(instance);
        }
        if (true) {
          popWarningContext();
        }
      }
    };
    instance.scope.on();
    const effect2 = instance.effect = new ReactiveEffect(componentUpdateFn);
    instance.scope.off();
    const update = instance.update = effect2.run.bind(effect2);
    const job = instance.job = effect2.runIfDirty.bind(effect2);
    job.i = instance;
    job.id = instance.uid;
    effect2.scheduler = () => queueJob(job);
    toggleRecurse(instance, true);
    if (true) {
      effect2.onTrack = instance.rtc ? (e) => invokeArrayFns(instance.rtc, e) : void 0;
      effect2.onTrigger = instance.rtg ? (e) => invokeArrayFns(instance.rtg, e) : void 0;
    }
    update();
  };
  const updateComponentPreRender = (instance, nextVNode, optimized) => {
    nextVNode.component = instance;
    const prevProps = instance.vnode.props;
    instance.vnode = nextVNode;
    instance.next = null;
    updateProps(instance, nextVNode.props, prevProps, optimized);
    updateSlots(instance, nextVNode.children, optimized);
    pauseTracking();
    flushPreFlushCbs(instance);
    resetTracking();
  };
  const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized = false) => {
    const c1 = n1 && n1.children;
    const prevShapeFlag = n1 ? n1.shapeFlag : 0;
    const c2 = n2.children;
    const { patchFlag, shapeFlag } = n2;
    if (patchFlag > 0) {
      if (patchFlag & 128) {
        patchKeyedChildren(
          c1,
          c2,
          container,
          anchor,
          parentComponent,
          parentSuspense,
          namespace,
          slotScopeIds,
          optimized
        );
        return;
      } else if (patchFlag & 256) {
        patchUnkeyedChildren(
          c1,
          c2,
          container,
          anchor,
          parentComponent,
          parentSuspense,
          namespace,
          slotScopeIds,
          optimized
        );
        return;
      }
    }
    if (shapeFlag & 8) {
      if (prevShapeFlag & 16) {
        unmountChildren(c1, parentComponent, parentSuspense);
      }
      if (c2 !== c1) {
        hostSetElementText(container, c2);
      }
    } else {
      if (prevShapeFlag & 16) {
        if (shapeFlag & 16) {
          patchKeyedChildren(
            c1,
            c2,
            container,
            anchor,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized
          );
        } else {
          unmountChildren(c1, parentComponent, parentSuspense, true);
        }
      } else {
        if (prevShapeFlag & 8) {
          hostSetElementText(container, "");
        }
        if (shapeFlag & 16) {
          mountChildren(
            c2,
            container,
            anchor,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized
          );
        }
      }
    }
  };
  const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {
    c1 = c1 || EMPTY_ARR;
    c2 = c2 || EMPTY_ARR;
    const oldLength = c1.length;
    const newLength = c2.length;
    const commonLength = Math.min(oldLength, newLength);
    let i;
    for (i = 0; i < commonLength; i++) {
      const nextChild = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);
      patch(
        c1[i],
        nextChild,
        container,
        null,
        parentComponent,
        parentSuspense,
        namespace,
        slotScopeIds,
        optimized
      );
    }
    if (oldLength > newLength) {
      unmountChildren(
        c1,
        parentComponent,
        parentSuspense,
        true,
        false,
        commonLength
      );
    } else {
      mountChildren(
        c2,
        container,
        anchor,
        parentComponent,
        parentSuspense,
        namespace,
        slotScopeIds,
        optimized,
        commonLength
      );
    }
  };
  const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized) => {
    let i = 0;
    const l2 = c2.length;
    let e1 = c1.length - 1;
    let e2 = l2 - 1;
    while (i <= e1 && i <= e2) {
      const n1 = c1[i];
      const n2 = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);
      if (isSameVNodeType(n1, n2)) {
        patch(
          n1,
          n2,
          container,
          null,
          parentComponent,
          parentSuspense,
          namespace,
          slotScopeIds,
          optimized
        );
      } else {
        break;
      }
      i++;
    }
    while (i <= e1 && i <= e2) {
      const n1 = c1[e1];
      const n2 = c2[e2] = optimized ? cloneIfMounted(c2[e2]) : normalizeVNode(c2[e2]);
      if (isSameVNodeType(n1, n2)) {
        patch(
          n1,
          n2,
          container,
          null,
          parentComponent,
          parentSuspense,
          namespace,
          slotScopeIds,
          optimized
        );
      } else {
        break;
      }
      e1--;
      e2--;
    }
    if (i > e1) {
      if (i <= e2) {
        const nextPos = e2 + 1;
        const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;
        while (i <= e2) {
          patch(
            null,
            c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]),
            container,
            anchor,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized
          );
          i++;
        }
      }
    } else if (i > e2) {
      while (i <= e1) {
        unmount(c1[i], parentComponent, parentSuspense, true);
        i++;
      }
    } else {
      const s1 = i;
      const s2 = i;
      const keyToNewIndexMap = /* @__PURE__ */ new Map();
      for (i = s2; i <= e2; i++) {
        const nextChild = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);
        if (nextChild.key != null) {
          if (keyToNewIndexMap.has(nextChild.key)) {
            warn$1(
              `Duplicate keys found during update:`,
              JSON.stringify(nextChild.key),
              `Make sure keys are unique.`
            );
          }
          keyToNewIndexMap.set(nextChild.key, i);
        }
      }
      let j2;
      let patched = 0;
      const toBePatched = e2 - s2 + 1;
      let moved = false;
      let maxNewIndexSoFar = 0;
      const newIndexToOldIndexMap = new Array(toBePatched);
      for (i = 0; i < toBePatched; i++) newIndexToOldIndexMap[i] = 0;
      for (i = s1; i <= e1; i++) {
        const prevChild = c1[i];
        if (patched >= toBePatched) {
          unmount(prevChild, parentComponent, parentSuspense, true);
          continue;
        }
        let newIndex;
        if (prevChild.key != null) {
          newIndex = keyToNewIndexMap.get(prevChild.key);
        } else {
          for (j2 = s2; j2 <= e2; j2++) {
            if (newIndexToOldIndexMap[j2 - s2] === 0 && isSameVNodeType(prevChild, c2[j2])) {
              newIndex = j2;
              break;
            }
          }
        }
        if (newIndex === void 0) {
          unmount(prevChild, parentComponent, parentSuspense, true);
        } else {
          newIndexToOldIndexMap[newIndex - s2] = i + 1;
          if (newIndex >= maxNewIndexSoFar) {
            maxNewIndexSoFar = newIndex;
          } else {
            moved = true;
          }
          patch(
            prevChild,
            c2[newIndex],
            container,
            null,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized
          );
          patched++;
        }
      }
      const increasingNewIndexSequence = moved ? getSequence(newIndexToOldIndexMap) : EMPTY_ARR;
      j2 = increasingNewIndexSequence.length - 1;
      for (i = toBePatched - 1; i >= 0; i--) {
        const nextIndex = s2 + i;
        const nextChild = c2[nextIndex];
        const anchorVNode = c2[nextIndex + 1];
        const anchor = nextIndex + 1 < l2 ? (
          // #13559, fallback to el placeholder for unresolved async component
          anchorVNode.el || anchorVNode.placeholder
        ) : parentAnchor;
        if (newIndexToOldIndexMap[i] === 0) {
          patch(
            null,
            nextChild,
            container,
            anchor,
            parentComponent,
            parentSuspense,
            namespace,
            slotScopeIds,
            optimized
          );
        } else if (moved) {
          if (j2 < 0 || i !== increasingNewIndexSequence[j2]) {
            move(nextChild, container, anchor, 2);
          } else {
            j2--;
          }
        }
      }
    }
  };
  const move = (vnode, container, anchor, moveType, parentSuspense = null) => {
    const { el, type, transition, children, shapeFlag } = vnode;
    if (shapeFlag & 6) {
      move(vnode.component.subTree, container, anchor, moveType);
      return;
    }
    if (shapeFlag & 128) {
      vnode.suspense.move(container, anchor, moveType);
      return;
    }
    if (shapeFlag & 64) {
      type.move(vnode, container, anchor, internals);
      return;
    }
    if (type === Fragment) {
      hostInsert(el, container, anchor);
      for (let i = 0; i < children.length; i++) {
        move(children[i], container, anchor, moveType);
      }
      hostInsert(vnode.anchor, container, anchor);
      return;
    }
    if (type === Static) {
      moveStaticNode(vnode, container, anchor);
      return;
    }
    const needTransition2 = moveType !== 2 && shapeFlag & 1 && transition;
    if (needTransition2) {
      if (moveType === 0) {
        transition.beforeEnter(el);
        hostInsert(el, container, anchor);
        queuePostRenderEffect(() => transition.enter(el), parentSuspense);
      } else {
        const { leave, delayLeave, afterLeave } = transition;
        const remove22 = () => {
          if (vnode.ctx.isUnmounted) {
            hostRemove(el);
          } else {
            hostInsert(el, container, anchor);
          }
        };
        const performLeave = () => {
          if (el._isLeaving) {
            el[leaveCbKey](
              true
              /* cancelled */
            );
          }
          leave(el, () => {
            remove22();
            afterLeave && afterLeave();
          });
        };
        if (delayLeave) {
          delayLeave(el, remove22, performLeave);
        } else {
          performLeave();
        }
      }
    } else {
      hostInsert(el, container, anchor);
    }
  };
  const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {
    const {
      type,
      props,
      ref: ref2,
      children,
      dynamicChildren,
      shapeFlag,
      patchFlag,
      dirs,
      cacheIndex
    } = vnode;
    if (patchFlag === -2) {
      optimized = false;
    }
    if (ref2 != null) {
      pauseTracking();
      setRef(ref2, null, parentSuspense, vnode, true);
      resetTracking();
    }
    if (cacheIndex != null) {
      parentComponent.renderCache[cacheIndex] = void 0;
    }
    if (shapeFlag & 256) {
      parentComponent.ctx.deactivate(vnode);
      return;
    }
    const shouldInvokeDirs = shapeFlag & 1 && dirs;
    const shouldInvokeVnodeHook = !isAsyncWrapper(vnode);
    let vnodeHook;
    if (shouldInvokeVnodeHook && (vnodeHook = props && props.onVnodeBeforeUnmount)) {
      invokeVNodeHook(vnodeHook, parentComponent, vnode);
    }
    if (shapeFlag & 6) {
      unmountComponent(vnode.component, parentSuspense, doRemove);
    } else {
      if (shapeFlag & 128) {
        vnode.suspense.unmount(parentSuspense, doRemove);
        return;
      }
      if (shouldInvokeDirs) {
        invokeDirectiveHook(vnode, null, parentComponent, "beforeUnmount");
      }
      if (shapeFlag & 64) {
        vnode.type.remove(
          vnode,
          parentComponent,
          parentSuspense,
          internals,
          doRemove
        );
      } else if (dynamicChildren && // #5154
      // when v-once is used inside a block, setBlockTracking(-1) marks the
      // parent block with hasOnce: true
      // so that it doesn't take the fast path during unmount - otherwise
      // components nested in v-once are never unmounted.
      !dynamicChildren.hasOnce && // #1153: fast path should not be taken for non-stable (v-for) fragments
      (type !== Fragment || patchFlag > 0 && patchFlag & 64)) {
        unmountChildren(
          dynamicChildren,
          parentComponent,
          parentSuspense,
          false,
          true
        );
      } else if (type === Fragment && patchFlag & (128 | 256) || !optimized && shapeFlag & 16) {
        unmountChildren(children, parentComponent, parentSuspense);
      }
      if (doRemove) {
        remove2(vnode);
      }
    }
    if (shouldInvokeVnodeHook && (vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {
      queuePostRenderEffect(() => {
        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);
        shouldInvokeDirs && invokeDirectiveHook(vnode, null, parentComponent, "unmounted");
      }, parentSuspense);
    }
  };
  const remove2 = (vnode) => {
    const { type, el, anchor, transition } = vnode;
    if (type === Fragment) {
      if (vnode.patchFlag > 0 && vnode.patchFlag & 2048 && transition && !transition.persisted) {
        vnode.children.forEach((child2) => {
          if (child2.type === Comment) {
            hostRemove(child2.el);
          } else {
            remove2(child2);
          }
        });
      } else {
        removeFragment(el, anchor);
      }
      return;
    }
    if (type === Static) {
      removeStaticNode(vnode);
      return;
    }
    const performRemove = () => {
      hostRemove(el);
      if (transition && !transition.persisted && transition.afterLeave) {
        transition.afterLeave();
      }
    };
    if (vnode.shapeFlag & 1 && transition && !transition.persisted) {
      const { leave, delayLeave } = transition;
      const performLeave = () => leave(el, performRemove);
      if (delayLeave) {
        delayLeave(vnode.el, performRemove, performLeave);
      } else {
        performLeave();
      }
    } else {
      performRemove();
    }
  };
  const removeFragment = (cur, end2) => {
    let next;
    while (cur !== end2) {
      next = hostNextSibling(cur);
      hostRemove(cur);
      cur = next;
    }
    hostRemove(end2);
  };
  const unmountComponent = (instance, parentSuspense, doRemove) => {
    if (instance.type.__hmrId) {
      unregisterHMR(instance);
    }
    const { bum, scope, job, subTree, um, m: m2, a: a2 } = instance;
    invalidateMount(m2);
    invalidateMount(a2);
    if (bum) {
      invokeArrayFns(bum);
    }
    scope.stop();
    if (job) {
      job.flags |= 8;
      unmount(subTree, instance, parentSuspense, doRemove);
    }
    if (um) {
      queuePostRenderEffect(um, parentSuspense);
    }
    queuePostRenderEffect(() => {
      instance.isUnmounted = true;
    }, parentSuspense);
    if (true) {
      devtoolsComponentRemoved(instance);
    }
  };
  const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {
    for (let i = start; i < children.length; i++) {
      unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);
    }
  };
  const getNextHostNode = (vnode) => {
    if (vnode.shapeFlag & 6) {
      return getNextHostNode(vnode.component.subTree);
    }
    if (vnode.shapeFlag & 128) {
      return vnode.suspense.next();
    }
    const el = hostNextSibling(vnode.anchor || vnode.el);
    const teleportEnd = el && el[TeleportEndKey];
    return teleportEnd ? hostNextSibling(teleportEnd) : el;
  };
  let isFlushing = false;
  const render3 = (vnode, container, namespace) => {
    if (vnode == null) {
      if (container._vnode) {
        unmount(container._vnode, null, null, true);
      }
    } else {
      patch(
        container._vnode || null,
        vnode,
        container,
        null,
        null,
        null,
        namespace
      );
    }
    container._vnode = vnode;
    if (!isFlushing) {
      isFlushing = true;
      flushPreFlushCbs();
      flushPostFlushCbs();
      isFlushing = false;
    }
  };
  const internals = {
    p: patch,
    um: unmount,
    m: move,
    r: remove2,
    mt: mountComponent,
    mc: mountChildren,
    pc: patchChildren,
    pbc: patchBlockChildren,
    n: getNextHostNode,
    o: options
  };
  let hydrate2;
  let hydrateNode;
  if (createHydrationFns) {
    [hydrate2, hydrateNode] = createHydrationFns(
      internals
    );
  }
  return {
    render: render3,
    hydrate: hydrate2,
    createApp: createAppAPI(render3, hydrate2)
  };
}
function resolveChildrenNamespace({ type, props }, currentNamespace) {
  return currentNamespace === "svg" && type === "foreignObject" || currentNamespace === "mathml" && type === "annotation-xml" && props && props.encoding && props.encoding.includes("html") ? void 0 : currentNamespace;
}
function toggleRecurse({ effect: effect2, job }, allowed) {
  if (allowed) {
    effect2.flags |= 32;
    job.flags |= 4;
  } else {
    effect2.flags &= -33;
    job.flags &= -5;
  }
}
function needTransition(parentSuspense, transition) {
  return (!parentSuspense || parentSuspense && !parentSuspense.pendingBranch) && transition && !transition.persisted;
}
function traverseStaticChildren(n1, n2, shallow = false) {
  const ch1 = n1.children;
  const ch2 = n2.children;
  if (isArray(ch1) && isArray(ch2)) {
    for (let i = 0; i < ch1.length; i++) {
      const c1 = ch1[i];
      let c2 = ch2[i];
      if (c2.shapeFlag & 1 && !c2.dynamicChildren) {
        if (c2.patchFlag <= 0 || c2.patchFlag === 32) {
          c2 = ch2[i] = cloneIfMounted(ch2[i]);
          c2.el = c1.el;
        }
        if (!shallow && c2.patchFlag !== -2)
          traverseStaticChildren(c1, c2);
      }
      if (c2.type === Text && // avoid cached text nodes retaining detached dom nodes
      c2.patchFlag !== -1) {
        c2.el = c1.el;
      }
      if (c2.type === Comment && !c2.el) {
        c2.el = c1.el;
      }
      if (true) {
        c2.el && (c2.el.__vnode = c2);
      }
    }
  }
}
function getSequence(arr) {
  const p2 = arr.slice();
  const result = [0];
  let i, j2, u2, v2, c2;
  const len = arr.length;
  for (i = 0; i < len; i++) {
    const arrI = arr[i];
    if (arrI !== 0) {
      j2 = result[result.length - 1];
      if (arr[j2] < arrI) {
        p2[i] = j2;
        result.push(i);
        continue;
      }
      u2 = 0;
      v2 = result.length - 1;
      while (u2 < v2) {
        c2 = u2 + v2 >> 1;
        if (arr[result[c2]] < arrI) {
          u2 = c2 + 1;
        } else {
          v2 = c2;
        }
      }
      if (arrI < arr[result[u2]]) {
        if (u2 > 0) {
          p2[i] = result[u2 - 1];
        }
        result[u2] = i;
      }
    }
  }
  u2 = result.length;
  v2 = result[u2 - 1];
  while (u2-- > 0) {
    result[u2] = v2;
    v2 = p2[v2];
  }
  return result;
}
function locateNonHydratedAsyncRoot(instance) {
  const subComponent = instance.subTree.component;
  if (subComponent) {
    if (subComponent.asyncDep && !subComponent.asyncResolved) {
      return subComponent;
    } else {
      return locateNonHydratedAsyncRoot(subComponent);
    }
  }
}
function invalidateMount(hooks) {
  if (hooks) {
    for (let i = 0; i < hooks.length; i++)
      hooks[i].flags |= 8;
  }
}
var ssrContextKey = Symbol.for("v-scx");
var useSSRContext = () => {
  {
    const ctx = inject(ssrContextKey);
    if (!ctx) {
      warn$1(
        `Server rendering context not provided. Make sure to only call useSSRContext() conditionally in the server build.`
      );
    }
    return ctx;
  }
};
function watchEffect(effect2, options) {
  return doWatch(effect2, null, options);
}
function watchPostEffect(effect2, options) {
  return doWatch(
    effect2,
    null,
    true ? extend({}, options, { flush: "post" }) : { flush: "post" }
  );
}
function watchSyncEffect(effect2, options) {
  return doWatch(
    effect2,
    null,
    true ? extend({}, options, { flush: "sync" }) : { flush: "sync" }
  );
}
function watch2(source, cb, options) {
  if (!isFunction(cb)) {
    warn$1(
      `\`watch(fn, options?)\` signature has been moved to a separate API. Use \`watchEffect(fn, options?)\` instead. \`watch\` now only supports \`watch(source, cb, options?) signature.`
    );
  }
  return doWatch(source, cb, options);
}
function doWatch(source, cb, options = EMPTY_OBJ) {
  const { immediate, deep, flush, once } = options;
  if (!cb) {
    if (immediate !== void 0) {
      warn$1(
        `watch() "immediate" option is only respected when using the watch(source, callback, options?) signature.`
      );
    }
    if (deep !== void 0) {
      warn$1(
        `watch() "deep" option is only respected when using the watch(source, callback, options?) signature.`
      );
    }
    if (once !== void 0) {
      warn$1(
        `watch() "once" option is only respected when using the watch(source, callback, options?) signature.`
      );
    }
  }
  const baseWatchOptions = extend({}, options);
  if (true) baseWatchOptions.onWarn = warn$1;
  const runsImmediately = cb && immediate || !cb && flush !== "post";
  let ssrCleanup;
  if (isInSSRComponentSetup) {
    if (flush === "sync") {
      const ctx = useSSRContext();
      ssrCleanup = ctx.__watcherHandles || (ctx.__watcherHandles = []);
    } else if (!runsImmediately) {
      const watchStopHandle = () => {
      };
      watchStopHandle.stop = NOOP;
      watchStopHandle.resume = NOOP;
      watchStopHandle.pause = NOOP;
      return watchStopHandle;
    }
  }
  const instance = currentInstance;
  baseWatchOptions.call = (fn2, type, args) => callWithAsyncErrorHandling(fn2, instance, type, args);
  let isPre = false;
  if (flush === "post") {
    baseWatchOptions.scheduler = (job) => {
      queuePostRenderEffect(job, instance && instance.suspense);
    };
  } else if (flush !== "sync") {
    isPre = true;
    baseWatchOptions.scheduler = (job, isFirstRun) => {
      if (isFirstRun) {
        job();
      } else {
        queueJob(job);
      }
    };
  }
  baseWatchOptions.augmentJob = (job) => {
    if (cb) {
      job.flags |= 4;
    }
    if (isPre) {
      job.flags |= 2;
      if (instance) {
        job.id = instance.uid;
        job.i = instance;
      }
    }
  };
  const watchHandle = watch(source, cb, baseWatchOptions);
  if (isInSSRComponentSetup) {
    if (ssrCleanup) {
      ssrCleanup.push(watchHandle);
    } else if (runsImmediately) {
      watchHandle();
    }
  }
  return watchHandle;
}
function instanceWatch(source, value, options) {
  const publicThis = this.proxy;
  const getter = isString(source) ? source.includes(".") ? createPathGetter(publicThis, source) : () => publicThis[source] : source.bind(publicThis, publicThis);
  let cb;
  if (isFunction(value)) {
    cb = value;
  } else {
    cb = value.handler;
    options = value;
  }
  const reset = setCurrentInstance(this);
  const res = doWatch(getter, cb.bind(publicThis), options);
  reset();
  return res;
}
function createPathGetter(ctx, path) {
  const segments = path.split(".");
  return () => {
    let cur = ctx;
    for (let i = 0; i < segments.length && cur; i++) {
      cur = cur[segments[i]];
    }
    return cur;
  };
}
function useModel(props, name, options = EMPTY_OBJ) {
  const i = getCurrentInstance();
  if (!i) {
    warn$1(`useModel() called without active instance.`);
    return ref();
  }
  const camelizedName = camelize(name);
  if (!i.propsOptions[0][camelizedName]) {
    warn$1(`useModel() called with prop "${name}" which is not declared.`);
    return ref();
  }
  const hyphenatedName = hyphenate(name);
  const modifiers = getModelModifiers(props, camelizedName);
  const res = customRef((track2, trigger2) => {
    let localValue;
    let prevSetValue = EMPTY_OBJ;
    let prevEmittedValue;
    watchSyncEffect(() => {
      const propValue = props[camelizedName];
      if (hasChanged(localValue, propValue)) {
        localValue = propValue;
        trigger2();
      }
    });
    return {
      get() {
        track2();
        return options.get ? options.get(localValue) : localValue;
      },
      set(value) {
        const emittedValue = options.set ? options.set(value) : value;
        if (!hasChanged(emittedValue, localValue) && !(prevSetValue !== EMPTY_OBJ && hasChanged(value, prevSetValue))) {
          return;
        }
        const rawProps = i.vnode.props;
        if (!(rawProps && // check if parent has passed v-model
        (name in rawProps || camelizedName in rawProps || hyphenatedName in rawProps) && (`onUpdate:${name}` in rawProps || `onUpdate:${camelizedName}` in rawProps || `onUpdate:${hyphenatedName}` in rawProps))) {
          localValue = value;
          trigger2();
        }
        i.emit(`update:${name}`, emittedValue);
        if (hasChanged(value, emittedValue) && hasChanged(value, prevSetValue) && !hasChanged(emittedValue, prevEmittedValue)) {
          trigger2();
        }
        prevSetValue = value;
        prevEmittedValue = emittedValue;
      }
    };
  });
  res[Symbol.iterator] = () => {
    let i2 = 0;
    return {
      next() {
        if (i2 < 2) {
          return { value: i2++ ? modifiers || EMPTY_OBJ : res, done: false };
        } else {
          return { done: true };
        }
      }
    };
  };
  return res;
}
var getModelModifiers = (props, modelName) => {
  return modelName === "modelValue" || modelName === "model-value" ? props.modelModifiers : props[`${modelName}Modifiers`] || props[`${camelize(modelName)}Modifiers`] || props[`${hyphenate(modelName)}Modifiers`];
};
function emit(instance, event, ...rawArgs) {
  if (instance.isUnmounted) return;
  const props = instance.vnode.props || EMPTY_OBJ;
  if (true) {
    const {
      emitsOptions,
      propsOptions: [propsOptions]
    } = instance;
    if (emitsOptions) {
      if (!(event in emitsOptions) && true) {
        if (!propsOptions || !(toHandlerKey(camelize(event)) in propsOptions)) {
          warn$1(
            `Component emitted event "${event}" but it is neither declared in the emits option nor as an "${toHandlerKey(camelize(event))}" prop.`
          );
        }
      } else {
        const validator = emitsOptions[event];
        if (isFunction(validator)) {
          const isValid = validator(...rawArgs);
          if (!isValid) {
            warn$1(
              `Invalid event arguments: event validation failed for event "${event}".`
            );
          }
        }
      }
    }
  }
  let args = rawArgs;
  const isModelListener2 = event.startsWith("update:");
  const modifiers = isModelListener2 && getModelModifiers(props, event.slice(7));
  if (modifiers) {
    if (modifiers.trim) {
      args = rawArgs.map((a2) => isString(a2) ? a2.trim() : a2);
    }
    if (modifiers.number) {
      args = rawArgs.map(looseToNumber);
    }
  }
  if (true) {
    devtoolsComponentEmit(instance, event, args);
  }
  if (true) {
    const lowerCaseEvent = event.toLowerCase();
    if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {
      warn$1(
        `Event "${lowerCaseEvent}" is emitted in component ${formatComponentName(
          instance,
          instance.type
        )} but the handler is registered for "${event}". Note that HTML attributes are case-insensitive and you cannot use v-on to listen to camelCase events when using in-DOM templates. You should probably use "${hyphenate(
          event
        )}" instead of "${event}".`
      );
    }
  }
  let handlerName;
  let handler = props[handlerName = toHandlerKey(event)] || // also try camelCase event handler (#2249)
  props[handlerName = toHandlerKey(camelize(event))];
  if (!handler && isModelListener2) {
    handler = props[handlerName = toHandlerKey(hyphenate(event))];
  }
  if (handler) {
    callWithAsyncErrorHandling(
      handler,
      instance,
      6,
      args
    );
  }
  const onceHandler = props[handlerName + `Once`];
  if (onceHandler) {
    if (!instance.emitted) {
      instance.emitted = {};
    } else if (instance.emitted[handlerName]) {
      return;
    }
    instance.emitted[handlerName] = true;
    callWithAsyncErrorHandling(
      onceHandler,
      instance,
      6,
      args
    );
  }
}
var mixinEmitsCache = /* @__PURE__ */ new WeakMap();
function normalizeEmitsOptions(comp, appContext, asMixin = false) {
  const cache = __VUE_OPTIONS_API__ && asMixin ? mixinEmitsCache : appContext.emitsCache;
  const cached = cache.get(comp);
  if (cached !== void 0) {
    return cached;
  }
  const raw = comp.emits;
  let normalized = {};
  let hasExtends = false;
  if (__VUE_OPTIONS_API__ && !isFunction(comp)) {
    const extendEmits = (raw2) => {
      const normalizedFromExtend = normalizeEmitsOptions(raw2, appContext, true);
      if (normalizedFromExtend) {
        hasExtends = true;
        extend(normalized, normalizedFromExtend);
      }
    };
    if (!asMixin && appContext.mixins.length) {
      appContext.mixins.forEach(extendEmits);
    }
    if (comp.extends) {
      extendEmits(comp.extends);
    }
    if (comp.mixins) {
      comp.mixins.forEach(extendEmits);
    }
  }
  if (!raw && !hasExtends) {
    if (isObject(comp)) {
      cache.set(comp, null);
    }
    return null;
  }
  if (isArray(raw)) {
    raw.forEach((key2) => normalized[key2] = null);
  } else {
    extend(normalized, raw);
  }
  if (isObject(comp)) {
    cache.set(comp, normalized);
  }
  return normalized;
}
function isEmitListener(options, key2) {
  if (!options || !isOn(key2)) {
    return false;
  }
  key2 = key2.slice(2).replace(/Once$/, "");
  return hasOwn(options, key2[0].toLowerCase() + key2.slice(1)) || hasOwn(options, hyphenate(key2)) || hasOwn(options, key2);
}
var accessedAttrs = false;
function markAttrsAccessed() {
  accessedAttrs = true;
}
function renderComponentRoot(instance) {
  const {
    type: Component,
    vnode,
    proxy,
    withProxy,
    propsOptions: [propsOptions],
    slots,
    attrs,
    emit: emit2,
    render: render3,
    renderCache,
    props,
    data,
    setupState,
    ctx,
    inheritAttrs
  } = instance;
  const prev = setCurrentRenderingInstance(instance);
  let result;
  let fallthroughAttrs;
  if (true) {
    accessedAttrs = false;
  }
  try {
    if (vnode.shapeFlag & 4) {
      const proxyToUse = withProxy || proxy;
      const thisProxy = setupState.__isScriptSetup ? new Proxy(proxyToUse, {
        get(target, key2, receiver) {
          warn$1(
            `Property '${String(
              key2
            )}' was accessed via 'this'. Avoid using 'this' in templates.`
          );
          return Reflect.get(target, key2, receiver);
        }
      }) : proxyToUse;
      result = normalizeVNode(
        render3.call(
          thisProxy,
          proxyToUse,
          renderCache,
          true ? shallowReadonly(props) : props,
          setupState,
          data,
          ctx
        )
      );
      fallthroughAttrs = attrs;
    } else {
      const render22 = Component;
      if (attrs === props) {
        markAttrsAccessed();
      }
      result = normalizeVNode(
        render22.length > 1 ? render22(
          true ? shallowReadonly(props) : props,
          true ? {
            get attrs() {
              markAttrsAccessed();
              return shallowReadonly(attrs);
            },
            slots,
            emit: emit2
          } : { attrs, slots, emit: emit2 }
        ) : render22(
          true ? shallowReadonly(props) : props,
          null
        )
      );
      fallthroughAttrs = Component.props ? attrs : getFunctionalFallthrough(attrs);
    }
  } catch (err) {
    blockStack.length = 0;
    handleError(err, instance, 1);
    result = createVNode(Comment);
  }
  let root = result;
  let setRoot = void 0;
  if (result.patchFlag > 0 && result.patchFlag & 2048) {
    [root, setRoot] = getChildRoot(result);
  }
  if (fallthroughAttrs && inheritAttrs !== false) {
    const keys2 = Object.keys(fallthroughAttrs);
    const { shapeFlag } = root;
    if (keys2.length) {
      if (shapeFlag & (1 | 6)) {
        if (propsOptions && keys2.some(isModelListener)) {
          fallthroughAttrs = filterModelListeners(
            fallthroughAttrs,
            propsOptions
          );
        }
        root = cloneVNode(root, fallthroughAttrs, false, true);
      } else if (!accessedAttrs && root.type !== Comment) {
        const allAttrs = Object.keys(attrs);
        const eventAttrs = [];
        const extraAttrs = [];
        for (let i = 0, l = allAttrs.length; i < l; i++) {
          const key2 = allAttrs[i];
          if (isOn(key2)) {
            if (!isModelListener(key2)) {
              eventAttrs.push(key2[2].toLowerCase() + key2.slice(3));
            }
          } else {
            extraAttrs.push(key2);
          }
        }
        if (extraAttrs.length) {
          warn$1(
            `Extraneous non-props attributes (${extraAttrs.join(", ")}) were passed to component but could not be automatically inherited because component renders fragment or text or teleport root nodes.`
          );
        }
        if (eventAttrs.length) {
          warn$1(
            `Extraneous non-emits event listeners (${eventAttrs.join(", ")}) were passed to component but could not be automatically inherited because component renders fragment or text root nodes. If the listener is intended to be a component custom event listener only, declare it using the "emits" option.`
          );
        }
      }
    }
  }
  if (vnode.dirs) {
    if (!isElementRoot(root)) {
      warn$1(
        `Runtime directive used on component with non-element root node. The directives will not function as intended.`
      );
    }
    root = cloneVNode(root, null, false, true);
    root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;
  }
  if (vnode.transition) {
    if (!isElementRoot(root)) {
      warn$1(
        `Component inside <Transition> renders non-element root node that cannot be animated.`
      );
    }
    setTransitionHooks(root, vnode.transition);
  }
  if (setRoot) {
    setRoot(root);
  } else {
    result = root;
  }
  setCurrentRenderingInstance(prev);
  return result;
}
var getChildRoot = (vnode) => {
  const rawChildren = vnode.children;
  const dynamicChildren = vnode.dynamicChildren;
  const childRoot = filterSingleRoot(rawChildren, false);
  if (!childRoot) {
    return [vnode, void 0];
  } else if (childRoot.patchFlag > 0 && childRoot.patchFlag & 2048) {
    return getChildRoot(childRoot);
  }
  const index = rawChildren.indexOf(childRoot);
  const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;
  const setRoot = (updatedRoot) => {
    rawChildren[index] = updatedRoot;
    if (dynamicChildren) {
      if (dynamicIndex > -1) {
        dynamicChildren[dynamicIndex] = updatedRoot;
      } else if (updatedRoot.patchFlag > 0) {
        vnode.dynamicChildren = [...dynamicChildren, updatedRoot];
      }
    }
  };
  return [normalizeVNode(childRoot), setRoot];
};
function filterSingleRoot(children, recurse = true) {
  let singleRoot;
  for (let i = 0; i < children.length; i++) {
    const child2 = children[i];
    if (isVNode(child2)) {
      if (child2.type !== Comment || child2.children === "v-if") {
        if (singleRoot) {
          return;
        } else {
          singleRoot = child2;
          if (recurse && singleRoot.patchFlag > 0 && singleRoot.patchFlag & 2048) {
            return filterSingleRoot(singleRoot.children);
          }
        }
      }
    } else {
      return;
    }
  }
  return singleRoot;
}
var getFunctionalFallthrough = (attrs) => {
  let res;
  for (const key2 in attrs) {
    if (key2 === "class" || key2 === "style" || isOn(key2)) {
      (res || (res = {}))[key2] = attrs[key2];
    }
  }
  return res;
};
var filterModelListeners = (attrs, props) => {
  const res = {};
  for (const key2 in attrs) {
    if (!isModelListener(key2) || !(key2.slice(9) in props)) {
      res[key2] = attrs[key2];
    }
  }
  return res;
};
var isElementRoot = (vnode) => {
  return vnode.shapeFlag & (6 | 1) || vnode.type === Comment;
};
function shouldUpdateComponent(prevVNode, nextVNode, optimized) {
  const { props: prevProps, children: prevChildren, component } = prevVNode;
  const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;
  const emits = component.emitsOptions;
  if ((prevChildren || nextChildren) && isHmrUpdating) {
    return true;
  }
  if (nextVNode.dirs || nextVNode.transition) {
    return true;
  }
  if (optimized && patchFlag >= 0) {
    if (patchFlag & 1024) {
      return true;
    }
    if (patchFlag & 16) {
      if (!prevProps) {
        return !!nextProps;
      }
      return hasPropsChanged(prevProps, nextProps, emits);
    } else if (patchFlag & 8) {
      const dynamicProps = nextVNode.dynamicProps;
      for (let i = 0; i < dynamicProps.length; i++) {
        const key2 = dynamicProps[i];
        if (nextProps[key2] !== prevProps[key2] && !isEmitListener(emits, key2)) {
          return true;
        }
      }
    }
  } else {
    if (prevChildren || nextChildren) {
      if (!nextChildren || !nextChildren.$stable) {
        return true;
      }
    }
    if (prevProps === nextProps) {
      return false;
    }
    if (!prevProps) {
      return !!nextProps;
    }
    if (!nextProps) {
      return true;
    }
    return hasPropsChanged(prevProps, nextProps, emits);
  }
  return false;
}
function hasPropsChanged(prevProps, nextProps, emitsOptions) {
  const nextKeys = Object.keys(nextProps);
  if (nextKeys.length !== Object.keys(prevProps).length) {
    return true;
  }
  for (let i = 0; i < nextKeys.length; i++) {
    const key2 = nextKeys[i];
    if (nextProps[key2] !== prevProps[key2] && !isEmitListener(emitsOptions, key2)) {
      return true;
    }
  }
  return false;
}
function updateHOCHostEl({ vnode, parent }, el) {
  while (parent) {
    const root = parent.subTree;
    if (root.suspense && root.suspense.activeBranch === vnode) {
      root.el = vnode.el;
    }
    if (root === vnode) {
      (vnode = parent.vnode).el = el;
      parent = parent.parent;
    } else {
      break;
    }
  }
}
var isSuspense = (type) => type.__isSuspense;
var suspenseId = 0;
var SuspenseImpl = {
  name: "Suspense",
  // In order to make Suspense tree-shakable, we need to avoid importing it
  // directly in the renderer. The renderer checks for the __isSuspense flag
  // on a vnode's type and calls the `process` method, passing in renderer
  // internals.
  __isSuspense: true,
  process(n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, rendererInternals) {
    if (n1 == null) {
      mountSuspense(
        n2,
        container,
        anchor,
        parentComponent,
        parentSuspense,
        namespace,
        slotScopeIds,
        optimized,
        rendererInternals
      );
    } else {
      if (parentSuspense && parentSuspense.deps > 0 && !n1.suspense.isInFallback) {
        n2.suspense = n1.suspense;
        n2.suspense.vnode = n2;
        n2.el = n1.el;
        return;
      }
      patchSuspense(
        n1,
        n2,
        container,
        anchor,
        parentComponent,
        namespace,
        slotScopeIds,
        optimized,
        rendererInternals
      );
    }
  },
  hydrate: hydrateSuspense,
  normalize: normalizeSuspenseChildren
};
var Suspense = SuspenseImpl;
function triggerEvent(vnode, name) {
  const eventListener = vnode.props && vnode.props[name];
  if (isFunction(eventListener)) {
    eventListener();
  }
}
function mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, rendererInternals) {
  const {
    p: patch,
    o: { createElement }
  } = rendererInternals;
  const hiddenContainer = createElement("div");
  const suspense = vnode.suspense = createSuspenseBoundary(
    vnode,
    parentSuspense,
    parentComponent,
    container,
    hiddenContainer,
    anchor,
    namespace,
    slotScopeIds,
    optimized,
    rendererInternals
  );
  patch(
    null,
    suspense.pendingBranch = vnode.ssContent,
    hiddenContainer,
    null,
    parentComponent,
    suspense,
    namespace,
    slotScopeIds
  );
  if (suspense.deps > 0) {
    triggerEvent(vnode, "onPending");
    triggerEvent(vnode, "onFallback");
    patch(
      null,
      vnode.ssFallback,
      container,
      anchor,
      parentComponent,
      null,
      // fallback tree will not have suspense context
      namespace,
      slotScopeIds
    );
    setActiveBranch(suspense, vnode.ssFallback);
  } else {
    suspense.resolve(false, true);
  }
}
function patchSuspense(n1, n2, container, anchor, parentComponent, namespace, slotScopeIds, optimized, { p: patch, um: unmount, o: { createElement } }) {
  const suspense = n2.suspense = n1.suspense;
  suspense.vnode = n2;
  n2.el = n1.el;
  const newBranch = n2.ssContent;
  const newFallback = n2.ssFallback;
  const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;
  if (pendingBranch) {
    suspense.pendingBranch = newBranch;
    if (isSameVNodeType(pendingBranch, newBranch)) {
      patch(
        pendingBranch,
        newBranch,
        suspense.hiddenContainer,
        null,
        parentComponent,
        suspense,
        namespace,
        slotScopeIds,
        optimized
      );
      if (suspense.deps <= 0) {
        suspense.resolve();
      } else if (isInFallback) {
        if (!isHydrating) {
          patch(
            activeBranch,
            newFallback,
            container,
            anchor,
            parentComponent,
            null,
            // fallback tree will not have suspense context
            namespace,
            slotScopeIds,
            optimized
          );
          setActiveBranch(suspense, newFallback);
        }
      }
    } else {
      suspense.pendingId = suspenseId++;
      if (isHydrating) {
        suspense.isHydrating = false;
        suspense.activeBranch = pendingBranch;
      } else {
        unmount(pendingBranch, parentComponent, suspense);
      }
      suspense.deps = 0;
      suspense.effects.length = 0;
      suspense.hiddenContainer = createElement("div");
      if (isInFallback) {
        patch(
          null,
          newBranch,
          suspense.hiddenContainer,
          null,
          parentComponent,
          suspense,
          namespace,
          slotScopeIds,
          optimized
        );
        if (suspense.deps <= 0) {
          suspense.resolve();
        } else {
          patch(
            activeBranch,
            newFallback,
            container,
            anchor,
            parentComponent,
            null,
            // fallback tree will not have suspense context
            namespace,
            slotScopeIds,
            optimized
          );
          setActiveBranch(suspense, newFallback);
        }
      } else if (activeBranch && isSameVNodeType(activeBranch, newBranch)) {
        patch(
          activeBranch,
          newBranch,
          container,
          anchor,
          parentComponent,
          suspense,
          namespace,
          slotScopeIds,
          optimized
        );
        suspense.resolve(true);
      } else {
        patch(
          null,
          newBranch,
          suspense.hiddenContainer,
          null,
          parentComponent,
          suspense,
          namespace,
          slotScopeIds,
          optimized
        );
        if (suspense.deps <= 0) {
          suspense.resolve();
        }
      }
    }
  } else {
    if (activeBranch && isSameVNodeType(activeBranch, newBranch)) {
      patch(
        activeBranch,
        newBranch,
        container,
        anchor,
        parentComponent,
        suspense,
        namespace,
        slotScopeIds,
        optimized
      );
      setActiveBranch(suspense, newBranch);
    } else {
      triggerEvent(n2, "onPending");
      suspense.pendingBranch = newBranch;
      if (newBranch.shapeFlag & 512) {
        suspense.pendingId = newBranch.component.suspenseId;
      } else {
        suspense.pendingId = suspenseId++;
      }
      patch(
        null,
        newBranch,
        suspense.hiddenContainer,
        null,
        parentComponent,
        suspense,
        namespace,
        slotScopeIds,
        optimized
      );
      if (suspense.deps <= 0) {
        suspense.resolve();
      } else {
        const { timeout, pendingId } = suspense;
        if (timeout > 0) {
          setTimeout(() => {
            if (suspense.pendingId === pendingId) {
              suspense.fallback(newFallback);
            }
          }, timeout);
        } else if (timeout === 0) {
          suspense.fallback(newFallback);
        }
      }
    }
  }
}
var hasWarned = false;
function createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, namespace, slotScopeIds, optimized, rendererInternals, isHydrating = false) {
  if (!hasWarned) {
    hasWarned = true;
    console[console.info ? "info" : "log"](
      `<Suspense> is an experimental feature and its API will likely change.`
    );
  }
  const {
    p: patch,
    m: move,
    um: unmount,
    n: next,
    o: { parentNode, remove: remove2 }
  } = rendererInternals;
  let parentSuspenseId;
  const isSuspensible = isVNodeSuspensible(vnode);
  if (isSuspensible) {
    if (parentSuspense && parentSuspense.pendingBranch) {
      parentSuspenseId = parentSuspense.pendingId;
      parentSuspense.deps++;
    }
  }
  const timeout = vnode.props ? toNumber(vnode.props.timeout) : void 0;
  if (true) {
    assertNumber(timeout, `Suspense timeout`);
  }
  const initialAnchor = anchor;
  const suspense = {
    vnode,
    parent: parentSuspense,
    parentComponent,
    namespace,
    container,
    hiddenContainer,
    deps: 0,
    pendingId: suspenseId++,
    timeout: typeof timeout === "number" ? timeout : -1,
    activeBranch: null,
    pendingBranch: null,
    isInFallback: !isHydrating,
    isHydrating,
    isUnmounted: false,
    effects: [],
    resolve(resume = false, sync = false) {
      if (true) {
        if (!resume && !suspense.pendingBranch) {
          throw new Error(
            `suspense.resolve() is called without a pending branch.`
          );
        }
        if (suspense.isUnmounted) {
          throw new Error(
            `suspense.resolve() is called on an already unmounted suspense boundary.`
          );
        }
      }
      const {
        vnode: vnode2,
        activeBranch,
        pendingBranch,
        pendingId,
        effects,
        parentComponent: parentComponent2,
        container: container2
      } = suspense;
      let delayEnter = false;
      if (suspense.isHydrating) {
        suspense.isHydrating = false;
      } else if (!resume) {
        delayEnter = activeBranch && pendingBranch.transition && pendingBranch.transition.mode === "out-in";
        if (delayEnter) {
          activeBranch.transition.afterLeave = () => {
            if (pendingId === suspense.pendingId) {
              move(
                pendingBranch,
                container2,
                anchor === initialAnchor ? next(activeBranch) : anchor,
                0
              );
              queuePostFlushCb(effects);
            }
          };
        }
        if (activeBranch) {
          if (parentNode(activeBranch.el) === container2) {
            anchor = next(activeBranch);
          }
          unmount(activeBranch, parentComponent2, suspense, true);
        }
        if (!delayEnter) {
          move(pendingBranch, container2, anchor, 0);
        }
      }
      setActiveBranch(suspense, pendingBranch);
      suspense.pendingBranch = null;
      suspense.isInFallback = false;
      let parent = suspense.parent;
      let hasUnresolvedAncestor = false;
      while (parent) {
        if (parent.pendingBranch) {
          parent.effects.push(...effects);
          hasUnresolvedAncestor = true;
          break;
        }
        parent = parent.parent;
      }
      if (!hasUnresolvedAncestor && !delayEnter) {
        queuePostFlushCb(effects);
      }
      suspense.effects = [];
      if (isSuspensible) {
        if (parentSuspense && parentSuspense.pendingBranch && parentSuspenseId === parentSuspense.pendingId) {
          parentSuspense.deps--;
          if (parentSuspense.deps === 0 && !sync) {
            parentSuspense.resolve();
          }
        }
      }
      triggerEvent(vnode2, "onResolve");
    },
    fallback(fallbackVNode) {
      if (!suspense.pendingBranch) {
        return;
      }
      const { vnode: vnode2, activeBranch, parentComponent: parentComponent2, container: container2, namespace: namespace2 } = suspense;
      triggerEvent(vnode2, "onFallback");
      const anchor2 = next(activeBranch);
      const mountFallback = () => {
        if (!suspense.isInFallback) {
          return;
        }
        patch(
          null,
          fallbackVNode,
          container2,
          anchor2,
          parentComponent2,
          null,
          // fallback tree will not have suspense context
          namespace2,
          slotScopeIds,
          optimized
        );
        setActiveBranch(suspense, fallbackVNode);
      };
      const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === "out-in";
      if (delayEnter) {
        activeBranch.transition.afterLeave = mountFallback;
      }
      suspense.isInFallback = true;
      unmount(
        activeBranch,
        parentComponent2,
        null,
        // no suspense so unmount hooks fire now
        true
        // shouldRemove
      );
      if (!delayEnter) {
        mountFallback();
      }
    },
    move(container2, anchor2, type) {
      suspense.activeBranch && move(suspense.activeBranch, container2, anchor2, type);
      suspense.container = container2;
    },
    next() {
      return suspense.activeBranch && next(suspense.activeBranch);
    },
    registerDep(instance, setupRenderEffect, optimized2) {
      const isInPendingSuspense = !!suspense.pendingBranch;
      if (isInPendingSuspense) {
        suspense.deps++;
      }
      const hydratedEl = instance.vnode.el;
      instance.asyncDep.catch((err) => {
        handleError(err, instance, 0);
      }).then((asyncSetupResult) => {
        if (instance.isUnmounted || suspense.isUnmounted || suspense.pendingId !== instance.suspenseId) {
          return;
        }
        instance.asyncResolved = true;
        const { vnode: vnode2 } = instance;
        if (true) {
          pushWarningContext(vnode2);
        }
        handleSetupResult(instance, asyncSetupResult, false);
        if (hydratedEl) {
          vnode2.el = hydratedEl;
        }
        const placeholder = !hydratedEl && instance.subTree.el;
        setupRenderEffect(
          instance,
          vnode2,
          // component may have been moved before resolve.
          // if this is not a hydration, instance.subTree will be the comment
          // placeholder.
          parentNode(hydratedEl || instance.subTree.el),
          // anchor will not be used if this is hydration, so only need to
          // consider the comment placeholder case.
          hydratedEl ? null : next(instance.subTree),
          suspense,
          namespace,
          optimized2
        );
        if (placeholder) {
          remove2(placeholder);
        }
        updateHOCHostEl(instance, vnode2.el);
        if (true) {
          popWarningContext();
        }
        if (isInPendingSuspense && --suspense.deps === 0) {
          suspense.resolve();
        }
      });
    },
    unmount(parentSuspense2, doRemove) {
      suspense.isUnmounted = true;
      if (suspense.activeBranch) {
        unmount(
          suspense.activeBranch,
          parentComponent,
          parentSuspense2,
          doRemove
        );
      }
      if (suspense.pendingBranch) {
        unmount(
          suspense.pendingBranch,
          parentComponent,
          parentSuspense2,
          doRemove
        );
      }
    }
  };
  return suspense;
}
function hydrateSuspense(node, vnode, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, rendererInternals, hydrateNode) {
  const suspense = vnode.suspense = createSuspenseBoundary(
    vnode,
    parentSuspense,
    parentComponent,
    node.parentNode,
    // eslint-disable-next-line no-restricted-globals
    document.createElement("div"),
    null,
    namespace,
    slotScopeIds,
    optimized,
    rendererInternals,
    true
  );
  const result = hydrateNode(
    node,
    suspense.pendingBranch = vnode.ssContent,
    parentComponent,
    suspense,
    slotScopeIds,
    optimized
  );
  if (suspense.deps === 0) {
    suspense.resolve(false, true);
  }
  return result;
}
function normalizeSuspenseChildren(vnode) {
  const { shapeFlag, children } = vnode;
  const isSlotChildren = shapeFlag & 32;
  vnode.ssContent = normalizeSuspenseSlot(
    isSlotChildren ? children.default : children
  );
  vnode.ssFallback = isSlotChildren ? normalizeSuspenseSlot(children.fallback) : createVNode(Comment);
}
function normalizeSuspenseSlot(s) {
  let block;
  if (isFunction(s)) {
    const trackBlock = isBlockTreeEnabled && s._c;
    if (trackBlock) {
      s._d = false;
      openBlock();
    }
    s = s();
    if (trackBlock) {
      s._d = true;
      block = currentBlock;
      closeBlock();
    }
  }
  if (isArray(s)) {
    const singleChild = filterSingleRoot(s);
    if (!singleChild && s.filter((child2) => child2 !== NULL_DYNAMIC_COMPONENT).length > 0) {
      warn$1(`<Suspense> slots expect a single root node.`);
    }
    s = singleChild;
  }
  s = normalizeVNode(s);
  if (block && !s.dynamicChildren) {
    s.dynamicChildren = block.filter((c2) => c2 !== s);
  }
  return s;
}
function queueEffectWithSuspense(fn2, suspense) {
  if (suspense && suspense.pendingBranch) {
    if (isArray(fn2)) {
      suspense.effects.push(...fn2);
    } else {
      suspense.effects.push(fn2);
    }
  } else {
    queuePostFlushCb(fn2);
  }
}
function setActiveBranch(suspense, branch) {
  suspense.activeBranch = branch;
  const { vnode, parentComponent } = suspense;
  let el = branch.el;
  while (!el && branch.component) {
    branch = branch.component.subTree;
    el = branch.el;
  }
  vnode.el = el;
  if (parentComponent && parentComponent.subTree === vnode) {
    parentComponent.vnode.el = el;
    updateHOCHostEl(parentComponent, el);
  }
}
function isVNodeSuspensible(vnode) {
  const suspensible = vnode.props && vnode.props.suspensible;
  return suspensible != null && suspensible !== false;
}
var Fragment = Symbol.for("v-fgt");
var Text = Symbol.for("v-txt");
var Comment = Symbol.for("v-cmt");
var Static = Symbol.for("v-stc");
var blockStack = [];
var currentBlock = null;
function openBlock(disableTracking = false) {
  blockStack.push(currentBlock = disableTracking ? null : []);
}
function closeBlock() {
  blockStack.pop();
  currentBlock = blockStack[blockStack.length - 1] || null;
}
var isBlockTreeEnabled = 1;
function setBlockTracking(value, inVOnce = false) {
  isBlockTreeEnabled += value;
  if (value < 0 && currentBlock && inVOnce) {
    currentBlock.hasOnce = true;
  }
}
function setupBlock(vnode) {
  vnode.dynamicChildren = isBlockTreeEnabled > 0 ? currentBlock || EMPTY_ARR : null;
  closeBlock();
  if (isBlockTreeEnabled > 0 && currentBlock) {
    currentBlock.push(vnode);
  }
  return vnode;
}
function createElementBlock(type, props, children, patchFlag, dynamicProps, shapeFlag) {
  return setupBlock(
    createBaseVNode(
      type,
      props,
      children,
      patchFlag,
      dynamicProps,
      shapeFlag,
      true
    )
  );
}
function createBlock(type, props, children, patchFlag, dynamicProps) {
  return setupBlock(
    createVNode(
      type,
      props,
      children,
      patchFlag,
      dynamicProps,
      true
    )
  );
}
function isVNode(value) {
  return value ? value.__v_isVNode === true : false;
}
function isSameVNodeType(n1, n2) {
  if (n2.shapeFlag & 6 && n1.component) {
    const dirtyInstances = hmrDirtyComponents.get(n2.type);
    if (dirtyInstances && dirtyInstances.has(n1.component)) {
      n1.shapeFlag &= -257;
      n2.shapeFlag &= -513;
      return false;
    }
  }
  return n1.type === n2.type && n1.key === n2.key;
}
var vnodeArgsTransformer;
function transformVNodeArgs(transformer) {
  vnodeArgsTransformer = transformer;
}
var createVNodeWithArgsTransform = (...args) => {
  return _createVNode(
    ...vnodeArgsTransformer ? vnodeArgsTransformer(args, currentRenderingInstance) : args
  );
};
var normalizeKey = ({ key: key2 }) => key2 != null ? key2 : null;
var normalizeRef = ({
  ref: ref2,
  ref_key,
  ref_for
}) => {
  if (typeof ref2 === "number") {
    ref2 = "" + ref2;
  }
  return ref2 != null ? isString(ref2) || isRef2(ref2) || isFunction(ref2) ? { i: currentRenderingInstance, r: ref2, k: ref_key, f: !!ref_for } : ref2 : null;
};
function createBaseVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, shapeFlag = type === Fragment ? 0 : 1, isBlockNode = false, needFullChildrenNormalization = false) {
  const vnode = {
    __v_isVNode: true,
    __v_skip: true,
    type,
    props,
    key: props && normalizeKey(props),
    ref: props && normalizeRef(props),
    scopeId: currentScopeId,
    slotScopeIds: null,
    children,
    component: null,
    suspense: null,
    ssContent: null,
    ssFallback: null,
    dirs: null,
    transition: null,
    el: null,
    anchor: null,
    target: null,
    targetStart: null,
    targetAnchor: null,
    staticCount: 0,
    shapeFlag,
    patchFlag,
    dynamicProps,
    dynamicChildren: null,
    appContext: null,
    ctx: currentRenderingInstance
  };
  if (needFullChildrenNormalization) {
    normalizeChildren(vnode, children);
    if (shapeFlag & 128) {
      type.normalize(vnode);
    }
  } else if (children) {
    vnode.shapeFlag |= isString(children) ? 8 : 16;
  }
  if (vnode.key !== vnode.key) {
    warn$1(`VNode created with invalid key (NaN). VNode type:`, vnode.type);
  }
  if (isBlockTreeEnabled > 0 && // avoid a block node from tracking itself
  !isBlockNode && // has current parent block
  currentBlock && // presence of a patch flag indicates this node needs patching on updates.
  // component nodes also should always be patched, because even if the
  // component doesn't need to update, it needs to persist the instance on to
  // the next vnode so that it can be properly unmounted later.
  (vnode.patchFlag > 0 || shapeFlag & 6) && // the EVENTS flag is only for hydration and if it is the only flag, the
  // vnode should not be considered dynamic due to handler caching.
  vnode.patchFlag !== 32) {
    currentBlock.push(vnode);
  }
  return vnode;
}
var createVNode = true ? createVNodeWithArgsTransform : _createVNode;
function _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {
  if (!type || type === NULL_DYNAMIC_COMPONENT) {
    if (!type) {
      warn$1(`Invalid vnode type when creating vnode: ${type}.`);
    }
    type = Comment;
  }
  if (isVNode(type)) {
    const cloned = cloneVNode(
      type,
      props,
      true
      /* mergeRef: true */
    );
    if (children) {
      normalizeChildren(cloned, children);
    }
    if (isBlockTreeEnabled > 0 && !isBlockNode && currentBlock) {
      if (cloned.shapeFlag & 6) {
        currentBlock[currentBlock.indexOf(type)] = cloned;
      } else {
        currentBlock.push(cloned);
      }
    }
    cloned.patchFlag = -2;
    return cloned;
  }
  if (isClassComponent(type)) {
    type = type.__vccOpts;
  }
  if (props) {
    props = guardReactiveProps(props);
    let { class: klass, style } = props;
    if (klass && !isString(klass)) {
      props.class = normalizeClass(klass);
    }
    if (isObject(style)) {
      if (isProxy(style) && !isArray(style)) {
        style = extend({}, style);
      }
      props.style = normalizeStyle(style);
    }
  }
  const shapeFlag = isString(type) ? 1 : isSuspense(type) ? 128 : isTeleport(type) ? 64 : isObject(type) ? 4 : isFunction(type) ? 2 : 0;
  if (shapeFlag & 4 && isProxy(type)) {
    type = toRaw(type);
    warn$1(
      `Vue received a Component that was made a reactive object. This can lead to unnecessary performance overhead and should be avoided by marking the component with \`markRaw\` or using \`shallowRef\` instead of \`ref\`.`,
      `
Component that was made reactive: `,
      type
    );
  }
  return createBaseVNode(
    type,
    props,
    children,
    patchFlag,
    dynamicProps,
    shapeFlag,
    isBlockNode,
    true
  );
}
function guardReactiveProps(props) {
  if (!props) return null;
  return isProxy(props) || isInternalObject(props) ? extend({}, props) : props;
}
function cloneVNode(vnode, extraProps, mergeRef = false, cloneTransition = false) {
  const { props, ref: ref2, patchFlag, children, transition } = vnode;
  const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;
  const cloned = {
    __v_isVNode: true,
    __v_skip: true,
    type: vnode.type,
    props: mergedProps,
    key: mergedProps && normalizeKey(mergedProps),
    ref: extraProps && extraProps.ref ? (
      // #2078 in the case of <component :is="vnode" ref="extra"/>
      // if the vnode itself already has a ref, cloneVNode will need to merge
      // the refs so the single vnode can be set on multiple refs
      mergeRef && ref2 ? isArray(ref2) ? ref2.concat(normalizeRef(extraProps)) : [ref2, normalizeRef(extraProps)] : normalizeRef(extraProps)
    ) : ref2,
    scopeId: vnode.scopeId,
    slotScopeIds: vnode.slotScopeIds,
    children: patchFlag === -1 && isArray(children) ? children.map(deepCloneVNode) : children,
    target: vnode.target,
    targetStart: vnode.targetStart,
    targetAnchor: vnode.targetAnchor,
    staticCount: vnode.staticCount,
    shapeFlag: vnode.shapeFlag,
    // if the vnode is cloned with extra props, we can no longer assume its
    // existing patch flag to be reliable and need to add the FULL_PROPS flag.
    // note: preserve flag for fragments since they use the flag for children
    // fast paths only.
    patchFlag: extraProps && vnode.type !== Fragment ? patchFlag === -1 ? 16 : patchFlag | 16 : patchFlag,
    dynamicProps: vnode.dynamicProps,
    dynamicChildren: vnode.dynamicChildren,
    appContext: vnode.appContext,
    dirs: vnode.dirs,
    transition,
    // These should technically only be non-null on mounted VNodes. However,
    // they *should* be copied for kept-alive vnodes. So we just always copy
    // them since them being non-null during a mount doesn't affect the logic as
    // they will simply be overwritten.
    component: vnode.component,
    suspense: vnode.suspense,
    ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),
    ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),
    placeholder: vnode.placeholder,
    el: vnode.el,
    anchor: vnode.anchor,
    ctx: vnode.ctx,
    ce: vnode.ce
  };
  if (transition && cloneTransition) {
    setTransitionHooks(
      cloned,
      transition.clone(cloned)
    );
  }
  return cloned;
}
function deepCloneVNode(vnode) {
  const cloned = cloneVNode(vnode);
  if (isArray(vnode.children)) {
    cloned.children = vnode.children.map(deepCloneVNode);
  }
  return cloned;
}
function createTextVNode(text = " ", flag = 0) {
  return createVNode(Text, null, text, flag);
}
function createStaticVNode(content, numberOfNodes) {
  const vnode = createVNode(Static, null, content);
  vnode.staticCount = numberOfNodes;
  return vnode;
}
function createCommentVNode(text = "", asBlock = false) {
  return asBlock ? (openBlock(), createBlock(Comment, null, text)) : createVNode(Comment, null, text);
}
function normalizeVNode(child2) {
  if (child2 == null || typeof child2 === "boolean") {
    return createVNode(Comment);
  } else if (isArray(child2)) {
    return createVNode(
      Fragment,
      null,
      // #3666, avoid reference pollution when reusing vnode
      child2.slice()
    );
  } else if (isVNode(child2)) {
    return cloneIfMounted(child2);
  } else {
    return createVNode(Text, null, String(child2));
  }
}
function cloneIfMounted(child2) {
  return child2.el === null && child2.patchFlag !== -1 || child2.memo ? child2 : cloneVNode(child2);
}
function normalizeChildren(vnode, children) {
  let type = 0;
  const { shapeFlag } = vnode;
  if (children == null) {
    children = null;
  } else if (isArray(children)) {
    type = 16;
  } else if (typeof children === "object") {
    if (shapeFlag & (1 | 64)) {
      const slot = children.default;
      if (slot) {
        slot._c && (slot._d = false);
        normalizeChildren(vnode, slot());
        slot._c && (slot._d = true);
      }
      return;
    } else {
      type = 32;
      const slotFlag = children._;
      if (!slotFlag && !isInternalObject(children)) {
        children._ctx = currentRenderingInstance;
      } else if (slotFlag === 3 && currentRenderingInstance) {
        if (currentRenderingInstance.slots._ === 1) {
          children._ = 1;
        } else {
          children._ = 2;
          vnode.patchFlag |= 1024;
        }
      }
    }
  } else if (isFunction(children)) {
    children = { default: children, _ctx: currentRenderingInstance };
    type = 32;
  } else {
    children = String(children);
    if (shapeFlag & 64) {
      type = 16;
      children = [createTextVNode(children)];
    } else {
      type = 8;
    }
  }
  vnode.children = children;
  vnode.shapeFlag |= type;
}
function mergeProps(...args) {
  const ret = {};
  for (let i = 0; i < args.length; i++) {
    const toMerge = args[i];
    for (const key2 in toMerge) {
      if (key2 === "class") {
        if (ret.class !== toMerge.class) {
          ret.class = normalizeClass([ret.class, toMerge.class]);
        }
      } else if (key2 === "style") {
        ret.style = normalizeStyle([ret.style, toMerge.style]);
      } else if (isOn(key2)) {
        const existing = ret[key2];
        const incoming = toMerge[key2];
        if (incoming && existing !== incoming && !(isArray(existing) && existing.includes(incoming))) {
          ret[key2] = existing ? [].concat(existing, incoming) : incoming;
        }
      } else if (key2 !== "") {
        ret[key2] = toMerge[key2];
      }
    }
  }
  return ret;
}
function invokeVNodeHook(hook2, instance, vnode, prevVNode = null) {
  callWithAsyncErrorHandling(hook2, instance, 7, [
    vnode,
    prevVNode
  ]);
}
var emptyAppContext = createAppContext();
var uid = 0;
function createComponentInstance(vnode, parent, suspense) {
  const type = vnode.type;
  const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;
  const instance = {
    uid: uid++,
    vnode,
    type,
    parent,
    appContext,
    root: null,
    // to be immediately set
    next: null,
    subTree: null,
    // will be set synchronously right after creation
    effect: null,
    update: null,
    // will be set synchronously right after creation
    job: null,
    scope: new EffectScope(
      true
      /* detached */
    ),
    render: null,
    proxy: null,
    exposed: null,
    exposeProxy: null,
    withProxy: null,
    provides: parent ? parent.provides : Object.create(appContext.provides),
    ids: parent ? parent.ids : ["", 0, 0],
    accessCache: null,
    renderCache: [],
    // local resolved assets
    components: null,
    directives: null,
    // resolved props and emits options
    propsOptions: normalizePropsOptions(type, appContext),
    emitsOptions: normalizeEmitsOptions(type, appContext),
    // emit
    emit: null,
    // to be set immediately
    emitted: null,
    // props default value
    propsDefaults: EMPTY_OBJ,
    // inheritAttrs
    inheritAttrs: type.inheritAttrs,
    // state
    ctx: EMPTY_OBJ,
    data: EMPTY_OBJ,
    props: EMPTY_OBJ,
    attrs: EMPTY_OBJ,
    slots: EMPTY_OBJ,
    refs: EMPTY_OBJ,
    setupState: EMPTY_OBJ,
    setupContext: null,
    // suspense related
    suspense,
    suspenseId: suspense ? suspense.pendingId : 0,
    asyncDep: null,
    asyncResolved: false,
    // lifecycle hooks
    // not using enums here because it results in computed properties
    isMounted: false,
    isUnmounted: false,
    isDeactivated: false,
    bc: null,
    c: null,
    bm: null,
    m: null,
    bu: null,
    u: null,
    um: null,
    bum: null,
    da: null,
    a: null,
    rtg: null,
    rtc: null,
    ec: null,
    sp: null
  };
  if (true) {
    instance.ctx = createDevRenderContext(instance);
  } else {
    instance.ctx = { _: instance };
  }
  instance.root = parent ? parent.root : instance;
  instance.emit = emit.bind(null, instance);
  if (vnode.ce) {
    vnode.ce(instance);
  }
  return instance;
}
var currentInstance = null;
var getCurrentInstance = () => currentInstance || currentRenderingInstance;
var internalSetCurrentInstance;
var setInSSRSetupState;
{
  const g2 = getGlobalThis();
  const registerGlobalSetter = (key2, setter) => {
    let setters;
    if (!(setters = g2[key2])) setters = g2[key2] = [];
    setters.push(setter);
    return (v2) => {
      if (setters.length > 1) setters.forEach((set2) => set2(v2));
      else setters[0](v2);
    };
  };
  internalSetCurrentInstance = registerGlobalSetter(
    `__VUE_INSTANCE_SETTERS__`,
    (v2) => currentInstance = v2
  );
  setInSSRSetupState = registerGlobalSetter(
    `__VUE_SSR_SETTERS__`,
    (v2) => isInSSRComponentSetup = v2
  );
}
var setCurrentInstance = (instance) => {
  const prev = currentInstance;
  internalSetCurrentInstance(instance);
  instance.scope.on();
  return () => {
    instance.scope.off();
    internalSetCurrentInstance(prev);
  };
};
var unsetCurrentInstance = () => {
  currentInstance && currentInstance.scope.off();
  internalSetCurrentInstance(null);
};
var isBuiltInTag = makeMap("slot,component");
function validateComponentName(name, { isNativeTag }) {
  if (isBuiltInTag(name) || isNativeTag(name)) {
    warn$1(
      "Do not use built-in or reserved HTML elements as component id: " + name
    );
  }
}
function isStatefulComponent(instance) {
  return instance.vnode.shapeFlag & 4;
}
var isInSSRComponentSetup = false;
function setupComponent(instance, isSSR = false, optimized = false) {
  isSSR && setInSSRSetupState(isSSR);
  const { props, children } = instance.vnode;
  const isStateful = isStatefulComponent(instance);
  initProps(instance, props, isStateful, isSSR);
  initSlots(instance, children, optimized || isSSR);
  const setupResult = isStateful ? setupStatefulComponent(instance, isSSR) : void 0;
  isSSR && setInSSRSetupState(false);
  return setupResult;
}
function setupStatefulComponent(instance, isSSR) {
  var _a;
  const Component = instance.type;
  if (true) {
    if (Component.name) {
      validateComponentName(Component.name, instance.appContext.config);
    }
    if (Component.components) {
      const names2 = Object.keys(Component.components);
      for (let i = 0; i < names2.length; i++) {
        validateComponentName(names2[i], instance.appContext.config);
      }
    }
    if (Component.directives) {
      const names2 = Object.keys(Component.directives);
      for (let i = 0; i < names2.length; i++) {
        validateDirectiveName(names2[i]);
      }
    }
    if (Component.compilerOptions && isRuntimeOnly()) {
      warn$1(
        `"compilerOptions" is only supported when using a build of Vue that includes the runtime compiler. Since you are using a runtime-only build, the options should be passed via your build tool config instead.`
      );
    }
  }
  instance.accessCache = /* @__PURE__ */ Object.create(null);
  instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);
  if (true) {
    exposePropsOnRenderContext(instance);
  }
  const { setup } = Component;
  if (setup) {
    pauseTracking();
    const setupContext = instance.setupContext = setup.length > 1 ? createSetupContext(instance) : null;
    const reset = setCurrentInstance(instance);
    const setupResult = callWithErrorHandling(
      setup,
      instance,
      0,
      [
        true ? shallowReadonly(instance.props) : instance.props,
        setupContext
      ]
    );
    const isAsyncSetup = isPromise(setupResult);
    resetTracking();
    reset();
    if ((isAsyncSetup || instance.sp) && !isAsyncWrapper(instance)) {
      markAsyncBoundary(instance);
    }
    if (isAsyncSetup) {
      setupResult.then(unsetCurrentInstance, unsetCurrentInstance);
      if (isSSR) {
        return setupResult.then((resolvedResult) => {
          handleSetupResult(instance, resolvedResult, isSSR);
        }).catch((e) => {
          handleError(e, instance, 0);
        });
      } else {
        instance.asyncDep = setupResult;
        if (!instance.suspense) {
          const name = (_a = Component.name) != null ? _a : "Anonymous";
          warn$1(
            `Component <${name}>: setup function returned a promise, but no <Suspense> boundary was found in the parent component tree. A component with async setup() must be nested in a <Suspense> in order to be rendered.`
          );
        }
      }
    } else {
      handleSetupResult(instance, setupResult, isSSR);
    }
  } else {
    finishComponentSetup(instance, isSSR);
  }
}
function handleSetupResult(instance, setupResult, isSSR) {
  if (isFunction(setupResult)) {
    if (instance.type.__ssrInlineRender) {
      instance.ssrRender = setupResult;
    } else {
      instance.render = setupResult;
    }
  } else if (isObject(setupResult)) {
    if (isVNode(setupResult)) {
      warn$1(
        `setup() should not return VNodes directly - return a render function instead.`
      );
    }
    if (true) {
      instance.devtoolsRawSetupState = setupResult;
    }
    instance.setupState = proxyRefs(setupResult);
    if (true) {
      exposeSetupStateOnRenderContext(instance);
    }
  } else if (setupResult !== void 0) {
    warn$1(
      `setup() should return an object. Received: ${setupResult === null ? "null" : typeof setupResult}`
    );
  }
  finishComponentSetup(instance, isSSR);
}
var compile;
var installWithProxy;
function registerRuntimeCompiler(_compile) {
  compile = _compile;
  installWithProxy = (i) => {
    if (i.render._rc) {
      i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers);
    }
  };
}
var isRuntimeOnly = () => !compile;
function finishComponentSetup(instance, isSSR, skipOptions) {
  const Component = instance.type;
  if (!instance.render) {
    if (!isSSR && compile && !Component.render) {
      const template = Component.template || __VUE_OPTIONS_API__ && resolveMergedOptions(instance).template;
      if (template) {
        if (true) {
          startMeasure(instance, `compile`);
        }
        const { isCustomElement, compilerOptions } = instance.appContext.config;
        const { delimiters, compilerOptions: componentCompilerOptions } = Component;
        const finalCompilerOptions = extend(
          extend(
            {
              isCustomElement,
              delimiters
            },
            compilerOptions
          ),
          componentCompilerOptions
        );
        Component.render = compile(template, finalCompilerOptions);
        if (true) {
          endMeasure(instance, `compile`);
        }
      }
    }
    instance.render = Component.render || NOOP;
    if (installWithProxy) {
      installWithProxy(instance);
    }
  }
  if (__VUE_OPTIONS_API__ && true) {
    const reset = setCurrentInstance(instance);
    pauseTracking();
    try {
      applyOptions(instance);
    } finally {
      resetTracking();
      reset();
    }
  }
  if (!Component.render && instance.render === NOOP && !isSSR) {
    if (!compile && Component.template) {
      warn$1(
        `Component provided template option but runtime compilation is not supported in this build of Vue. Configure your bundler to alias "vue" to "vue/dist/vue.esm-bundler.js".`
      );
    } else {
      warn$1(`Component is missing template or render function: `, Component);
    }
  }
}
var attrsProxyHandlers = true ? {
  get(target, key2) {
    markAttrsAccessed();
    track(target, "get", "");
    return target[key2];
  },
  set() {
    warn$1(`setupContext.attrs is readonly.`);
    return false;
  },
  deleteProperty() {
    warn$1(`setupContext.attrs is readonly.`);
    return false;
  }
} : {
  get(target, key2) {
    track(target, "get", "");
    return target[key2];
  }
};
function getSlotsProxy(instance) {
  return new Proxy(instance.slots, {
    get(target, key2) {
      track(instance, "get", "$slots");
      return target[key2];
    }
  });
}
function createSetupContext(instance) {
  const expose = (exposed) => {
    if (true) {
      if (instance.exposed) {
        warn$1(`expose() should be called only once per setup().`);
      }
      if (exposed != null) {
        let exposedType = typeof exposed;
        if (exposedType === "object") {
          if (isArray(exposed)) {
            exposedType = "array";
          } else if (isRef2(exposed)) {
            exposedType = "ref";
          }
        }
        if (exposedType !== "object") {
          warn$1(
            `expose() should be passed a plain object, received ${exposedType}.`
          );
        }
      }
    }
    instance.exposed = exposed || {};
  };
  if (true) {
    let attrsProxy;
    let slotsProxy;
    return Object.freeze({
      get attrs() {
        return attrsProxy || (attrsProxy = new Proxy(instance.attrs, attrsProxyHandlers));
      },
      get slots() {
        return slotsProxy || (slotsProxy = getSlotsProxy(instance));
      },
      get emit() {
        return (event, ...args) => instance.emit(event, ...args);
      },
      expose
    });
  } else {
    return {
      attrs: new Proxy(instance.attrs, attrsProxyHandlers),
      slots: instance.slots,
      emit: instance.emit,
      expose
    };
  }
}
function getComponentPublicInstance(instance) {
  if (instance.exposed) {
    return instance.exposeProxy || (instance.exposeProxy = new Proxy(proxyRefs(markRaw(instance.exposed)), {
      get(target, key2) {
        if (key2 in target) {
          return target[key2];
        } else if (key2 in publicPropertiesMap) {
          return publicPropertiesMap[key2](instance);
        }
      },
      has(target, key2) {
        return key2 in target || key2 in publicPropertiesMap;
      }
    }));
  } else {
    return instance.proxy;
  }
}
var classifyRE = /(?:^|[-_])\w/g;
var classify = (str) => str.replace(classifyRE, (c2) => c2.toUpperCase()).replace(/[-_]/g, "");
function getComponentName(Component, includeInferred = true) {
  return isFunction(Component) ? Component.displayName || Component.name : Component.name || includeInferred && Component.__name;
}
function formatComponentName(instance, Component, isRoot = false) {
  let name = getComponentName(Component);
  if (!name && Component.__file) {
    const match = Component.__file.match(/([^/\\]+)\.\w+$/);
    if (match) {
      name = match[1];
    }
  }
  if (!name && instance && instance.parent) {
    const inferFromRegistry = (registry) => {
      for (const key2 in registry) {
        if (registry[key2] === Component) {
          return key2;
        }
      }
    };
    name = inferFromRegistry(
      instance.components || instance.parent.type.components
    ) || inferFromRegistry(instance.appContext.components);
  }
  return name ? classify(name) : isRoot ? `App` : `Anonymous`;
}
function isClassComponent(value) {
  return isFunction(value) && "__vccOpts" in value;
}
var computed2 = (getterOrOptions, debugOptions) => {
  const c2 = computed(getterOrOptions, debugOptions, isInSSRComponentSetup);
  if (true) {
    const i = getCurrentInstance();
    if (i && i.appContext.config.warnRecursiveComputed) {
      c2._warnRecursive = true;
    }
  }
  return c2;
};
function h(type, propsOrChildren, children) {
  try {
    setBlockTracking(-1);
    const l = arguments.length;
    if (l === 2) {
      if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {
        if (isVNode(propsOrChildren)) {
          return createVNode(type, null, [propsOrChildren]);
        }
        return createVNode(type, propsOrChildren);
      } else {
        return createVNode(type, null, propsOrChildren);
      }
    } else {
      if (l > 3) {
        children = Array.prototype.slice.call(arguments, 2);
      } else if (l === 3 && isVNode(children)) {
        children = [children];
      }
      return createVNode(type, propsOrChildren, children);
    }
  } finally {
    setBlockTracking(1);
  }
}
function initCustomFormatter() {
  if (typeof window === "undefined") {
    return;
  }
  const vueStyle = { style: "color:#3ba776" };
  const numberStyle = { style: "color:#1677ff" };
  const stringStyle = { style: "color:#f5222d" };
  const keywordStyle = { style: "color:#eb2f96" };
  const formatter = {
    __vue_custom_formatter: true,
    header(obj) {
      if (!isObject(obj)) {
        return null;
      }
      if (obj.__isVue) {
        return ["div", vueStyle, `VueInstance`];
      } else if (isRef2(obj)) {
        pauseTracking();
        const value = obj.value;
        resetTracking();
        return [
          "div",
          {},
          ["span", vueStyle, genRefFlag(obj)],
          "<",
          formatValue(value),
          `>`
        ];
      } else if (isReactive(obj)) {
        return [
          "div",
          {},
          ["span", vueStyle, isShallow(obj) ? "ShallowReactive" : "Reactive"],
          "<",
          formatValue(obj),
          `>${isReadonly(obj) ? ` (readonly)` : ``}`
        ];
      } else if (isReadonly(obj)) {
        return [
          "div",
          {},
          ["span", vueStyle, isShallow(obj) ? "ShallowReadonly" : "Readonly"],
          "<",
          formatValue(obj),
          ">"
        ];
      }
      return null;
    },
    hasBody(obj) {
      return obj && obj.__isVue;
    },
    body(obj) {
      if (obj && obj.__isVue) {
        return [
          "div",
          {},
          ...formatInstance(obj.$)
        ];
      }
    }
  };
  function formatInstance(instance) {
    const blocks = [];
    if (instance.type.props && instance.props) {
      blocks.push(createInstanceBlock("props", toRaw(instance.props)));
    }
    if (instance.setupState !== EMPTY_OBJ) {
      blocks.push(createInstanceBlock("setup", instance.setupState));
    }
    if (instance.data !== EMPTY_OBJ) {
      blocks.push(createInstanceBlock("data", toRaw(instance.data)));
    }
    const computed3 = extractKeys(instance, "computed");
    if (computed3) {
      blocks.push(createInstanceBlock("computed", computed3));
    }
    const injected = extractKeys(instance, "inject");
    if (injected) {
      blocks.push(createInstanceBlock("injected", injected));
    }
    blocks.push([
      "div",
      {},
      [
        "span",
        {
          style: keywordStyle.style + ";opacity:0.66"
        },
        "$ (internal): "
      ],
      ["object", { object: instance }]
    ]);
    return blocks;
  }
  function createInstanceBlock(type, target) {
    target = extend({}, target);
    if (!Object.keys(target).length) {
      return ["span", {}];
    }
    return [
      "div",
      { style: "line-height:1.25em;margin-bottom:0.6em" },
      [
        "div",
        {
          style: "color:#476582"
        },
        type
      ],
      [
        "div",
        {
          style: "padding-left:1.25em"
        },
        ...Object.keys(target).map((key2) => {
          return [
            "div",
            {},
            ["span", keywordStyle, key2 + ": "],
            formatValue(target[key2], false)
          ];
        })
      ]
    ];
  }
  function formatValue(v2, asRaw = true) {
    if (typeof v2 === "number") {
      return ["span", numberStyle, v2];
    } else if (typeof v2 === "string") {
      return ["span", stringStyle, JSON.stringify(v2)];
    } else if (typeof v2 === "boolean") {
      return ["span", keywordStyle, v2];
    } else if (isObject(v2)) {
      return ["object", { object: asRaw ? toRaw(v2) : v2 }];
    } else {
      return ["span", stringStyle, String(v2)];
    }
  }
  function extractKeys(instance, type) {
    const Comp = instance.type;
    if (isFunction(Comp)) {
      return;
    }
    const extracted = {};
    for (const key2 in instance.ctx) {
      if (isKeyOfType(Comp, key2, type)) {
        extracted[key2] = instance.ctx[key2];
      }
    }
    return extracted;
  }
  function isKeyOfType(Comp, key2, type) {
    const opts = Comp[type];
    if (isArray(opts) && opts.includes(key2) || isObject(opts) && key2 in opts) {
      return true;
    }
    if (Comp.extends && isKeyOfType(Comp.extends, key2, type)) {
      return true;
    }
    if (Comp.mixins && Comp.mixins.some((m2) => isKeyOfType(m2, key2, type))) {
      return true;
    }
  }
  function genRefFlag(v2) {
    if (isShallow(v2)) {
      return `ShallowRef`;
    }
    if (v2.effect) {
      return `ComputedRef`;
    }
    return `Ref`;
  }
  if (window.devtoolsFormatters) {
    window.devtoolsFormatters.push(formatter);
  } else {
    window.devtoolsFormatters = [formatter];
  }
}
function withMemo(memo2, render3, cache, index) {
  const cached = cache[index];
  if (cached && isMemoSame(cached, memo2)) {
    return cached;
  }
  const ret = render3();
  ret.memo = memo2.slice();
  ret.cacheIndex = index;
  return cache[index] = ret;
}
function isMemoSame(cached, memo2) {
  const prev = cached.memo;
  if (prev.length != memo2.length) {
    return false;
  }
  for (let i = 0; i < prev.length; i++) {
    if (hasChanged(prev[i], memo2[i])) {
      return false;
    }
  }
  if (isBlockTreeEnabled > 0 && currentBlock) {
    currentBlock.push(cached);
  }
  return true;
}
var version = "3.5.22";
var warn2 = true ? warn$1 : NOOP;
var ErrorTypeStrings = ErrorTypeStrings$1;
var devtools = true ? devtools$1 : void 0;
var setDevtoolsHook = true ? setDevtoolsHook$1 : NOOP;
var _ssrUtils = {
  createComponentInstance,
  setupComponent,
  renderComponentRoot,
  setCurrentRenderingInstance,
  isVNode,
  normalizeVNode,
  getComponentPublicInstance,
  ensureValidVNode,
  pushWarningContext,
  popWarningContext
};
var ssrUtils = _ssrUtils;
var resolveFilter = null;
var compatUtils = null;
var DeprecationTypes = null;

// ../../../node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js
var policy = void 0;
var tt = typeof window !== "undefined" && window.trustedTypes;
if (tt) {
  try {
    policy = tt.createPolicy("vue", {
      createHTML: (val) => val
    });
  } catch (e) {
    warn2(`Error creating trusted types policy: ${e}`);
  }
}
var unsafeToTrustedHTML = policy ? (val) => policy.createHTML(val) : (val) => val;
var svgNS = "http://www.w3.org/2000/svg";
var mathmlNS = "http://www.w3.org/1998/Math/MathML";
var doc = typeof document !== "undefined" ? document : null;
var templateContainer = doc && doc.createElement("template");
var nodeOps = {
  insert: (child2, parent, anchor) => {
    parent.insertBefore(child2, anchor || null);
  },
  remove: (child2) => {
    const parent = child2.parentNode;
    if (parent) {
      parent.removeChild(child2);
    }
  },
  createElement: (tag, namespace, is, props) => {
    const el = namespace === "svg" ? doc.createElementNS(svgNS, tag) : namespace === "mathml" ? doc.createElementNS(mathmlNS, tag) : is ? doc.createElement(tag, { is }) : doc.createElement(tag);
    if (tag === "select" && props && props.multiple != null) {
      el.setAttribute("multiple", props.multiple);
    }
    return el;
  },
  createText: (text) => doc.createTextNode(text),
  createComment: (text) => doc.createComment(text),
  setText: (node, text) => {
    node.nodeValue = text;
  },
  setElementText: (el, text) => {
    el.textContent = text;
  },
  parentNode: (node) => node.parentNode,
  nextSibling: (node) => node.nextSibling,
  querySelector: (selector) => doc.querySelector(selector),
  setScopeId(el, id2) {
    el.setAttribute(id2, "");
  },
  // __UNSAFE__
  // Reason: innerHTML.
  // Static content here can only come from compiled templates.
  // As long as the user only uses trusted templates, this is safe.
  insertStaticContent(content, parent, anchor, namespace, start, end2) {
    const before = anchor ? anchor.previousSibling : parent.lastChild;
    if (start && (start === end2 || start.nextSibling)) {
      while (true) {
        parent.insertBefore(start.cloneNode(true), anchor);
        if (start === end2 || !(start = start.nextSibling)) break;
      }
    } else {
      templateContainer.innerHTML = unsafeToTrustedHTML(
        namespace === "svg" ? `<svg>${content}</svg>` : namespace === "mathml" ? `<math>${content}</math>` : content
      );
      const template = templateContainer.content;
      if (namespace === "svg" || namespace === "mathml") {
        const wrapper = template.firstChild;
        while (wrapper.firstChild) {
          template.appendChild(wrapper.firstChild);
        }
        template.removeChild(wrapper);
      }
      parent.insertBefore(template, anchor);
    }
    return [
      // first
      before ? before.nextSibling : parent.firstChild,
      // last
      anchor ? anchor.previousSibling : parent.lastChild
    ];
  }
};
var TRANSITION = "transition";
var ANIMATION = "animation";
var vtcKey = Symbol("_vtc");
var DOMTransitionPropsValidators = {
  name: String,
  type: String,
  css: {
    type: Boolean,
    default: true
  },
  duration: [String, Number, Object],
  enterFromClass: String,
  enterActiveClass: String,
  enterToClass: String,
  appearFromClass: String,
  appearActiveClass: String,
  appearToClass: String,
  leaveFromClass: String,
  leaveActiveClass: String,
  leaveToClass: String
};
var TransitionPropsValidators = extend(
  {},
  BaseTransitionPropsValidators,
  DOMTransitionPropsValidators
);
var decorate$1 = (t) => {
  t.displayName = "Transition";
  t.props = TransitionPropsValidators;
  return t;
};
var Transition = decorate$1(
  (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots)
);
var callHook2 = (hook2, args = []) => {
  if (isArray(hook2)) {
    hook2.forEach((h2) => h2(...args));
  } else if (hook2) {
    hook2(...args);
  }
};
var hasExplicitCallback = (hook2) => {
  return hook2 ? isArray(hook2) ? hook2.some((h2) => h2.length > 1) : hook2.length > 1 : false;
};
function resolveTransitionProps(rawProps) {
  const baseProps = {};
  for (const key2 in rawProps) {
    if (!(key2 in DOMTransitionPropsValidators)) {
      baseProps[key2] = rawProps[key2];
    }
  }
  if (rawProps.css === false) {
    return baseProps;
  }
  const {
    name = "v",
    type,
    duration,
    enterFromClass = `${name}-enter-from`,
    enterActiveClass = `${name}-enter-active`,
    enterToClass = `${name}-enter-to`,
    appearFromClass = enterFromClass,
    appearActiveClass = enterActiveClass,
    appearToClass = enterToClass,
    leaveFromClass = `${name}-leave-from`,
    leaveActiveClass = `${name}-leave-active`,
    leaveToClass = `${name}-leave-to`
  } = rawProps;
  const durations = normalizeDuration(duration);
  const enterDuration = durations && durations[0];
  const leaveDuration = durations && durations[1];
  const {
    onBeforeEnter,
    onEnter,
    onEnterCancelled,
    onLeave,
    onLeaveCancelled,
    onBeforeAppear = onBeforeEnter,
    onAppear = onEnter,
    onAppearCancelled = onEnterCancelled
  } = baseProps;
  const finishEnter = (el, isAppear, done, isCancelled) => {
    el._enterCancelled = isCancelled;
    removeTransitionClass(el, isAppear ? appearToClass : enterToClass);
    removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);
    done && done();
  };
  const finishLeave = (el, done) => {
    el._isLeaving = false;
    removeTransitionClass(el, leaveFromClass);
    removeTransitionClass(el, leaveToClass);
    removeTransitionClass(el, leaveActiveClass);
    done && done();
  };
  const makeEnterHook = (isAppear) => {
    return (el, done) => {
      const hook2 = isAppear ? onAppear : onEnter;
      const resolve2 = () => finishEnter(el, isAppear, done);
      callHook2(hook2, [el, resolve2]);
      nextFrame(() => {
        removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);
        addTransitionClass(el, isAppear ? appearToClass : enterToClass);
        if (!hasExplicitCallback(hook2)) {
          whenTransitionEnds(el, type, enterDuration, resolve2);
        }
      });
    };
  };
  return extend(baseProps, {
    onBeforeEnter(el) {
      callHook2(onBeforeEnter, [el]);
      addTransitionClass(el, enterFromClass);
      addTransitionClass(el, enterActiveClass);
    },
    onBeforeAppear(el) {
      callHook2(onBeforeAppear, [el]);
      addTransitionClass(el, appearFromClass);
      addTransitionClass(el, appearActiveClass);
    },
    onEnter: makeEnterHook(false),
    onAppear: makeEnterHook(true),
    onLeave(el, done) {
      el._isLeaving = true;
      const resolve2 = () => finishLeave(el, done);
      addTransitionClass(el, leaveFromClass);
      if (!el._enterCancelled) {
        forceReflow(el);
        addTransitionClass(el, leaveActiveClass);
      } else {
        addTransitionClass(el, leaveActiveClass);
        forceReflow(el);
      }
      nextFrame(() => {
        if (!el._isLeaving) {
          return;
        }
        removeTransitionClass(el, leaveFromClass);
        addTransitionClass(el, leaveToClass);
        if (!hasExplicitCallback(onLeave)) {
          whenTransitionEnds(el, type, leaveDuration, resolve2);
        }
      });
      callHook2(onLeave, [el, resolve2]);
    },
    onEnterCancelled(el) {
      finishEnter(el, false, void 0, true);
      callHook2(onEnterCancelled, [el]);
    },
    onAppearCancelled(el) {
      finishEnter(el, true, void 0, true);
      callHook2(onAppearCancelled, [el]);
    },
    onLeaveCancelled(el) {
      finishLeave(el);
      callHook2(onLeaveCancelled, [el]);
    }
  });
}
function normalizeDuration(duration) {
  if (duration == null) {
    return null;
  } else if (isObject(duration)) {
    return [NumberOf(duration.enter), NumberOf(duration.leave)];
  } else {
    const n = NumberOf(duration);
    return [n, n];
  }
}
function NumberOf(val) {
  const res = toNumber(val);
  if (true) {
    assertNumber(res, "<transition> explicit duration");
  }
  return res;
}
function addTransitionClass(el, cls) {
  cls.split(/\s+/).forEach((c2) => c2 && el.classList.add(c2));
  (el[vtcKey] || (el[vtcKey] = /* @__PURE__ */ new Set())).add(cls);
}
function removeTransitionClass(el, cls) {
  cls.split(/\s+/).forEach((c2) => c2 && el.classList.remove(c2));
  const _vtc = el[vtcKey];
  if (_vtc) {
    _vtc.delete(cls);
    if (!_vtc.size) {
      el[vtcKey] = void 0;
    }
  }
}
function nextFrame(cb) {
  requestAnimationFrame(() => {
    requestAnimationFrame(cb);
  });
}
var endId = 0;
function whenTransitionEnds(el, expectedType, explicitTimeout, resolve2) {
  const id2 = el._endId = ++endId;
  const resolveIfNotStale = () => {
    if (id2 === el._endId) {
      resolve2();
    }
  };
  if (explicitTimeout != null) {
    return setTimeout(resolveIfNotStale, explicitTimeout);
  }
  const { type, timeout, propCount } = getTransitionInfo(el, expectedType);
  if (!type) {
    return resolve2();
  }
  const endEvent = type + "end";
  let ended = 0;
  const end2 = () => {
    el.removeEventListener(endEvent, onEnd);
    resolveIfNotStale();
  };
  const onEnd = (e) => {
    if (e.target === el && ++ended >= propCount) {
      end2();
    }
  };
  setTimeout(() => {
    if (ended < propCount) {
      end2();
    }
  }, timeout + 1);
  el.addEventListener(endEvent, onEnd);
}
function getTransitionInfo(el, expectedType) {
  const styles = window.getComputedStyle(el);
  const getStyleProperties = (key2) => (styles[key2] || "").split(", ");
  const transitionDelays = getStyleProperties(`${TRANSITION}Delay`);
  const transitionDurations = getStyleProperties(`${TRANSITION}Duration`);
  const transitionTimeout = getTimeout(transitionDelays, transitionDurations);
  const animationDelays = getStyleProperties(`${ANIMATION}Delay`);
  const animationDurations = getStyleProperties(`${ANIMATION}Duration`);
  const animationTimeout = getTimeout(animationDelays, animationDurations);
  let type = null;
  let timeout = 0;
  let propCount = 0;
  if (expectedType === TRANSITION) {
    if (transitionTimeout > 0) {
      type = TRANSITION;
      timeout = transitionTimeout;
      propCount = transitionDurations.length;
    }
  } else if (expectedType === ANIMATION) {
    if (animationTimeout > 0) {
      type = ANIMATION;
      timeout = animationTimeout;
      propCount = animationDurations.length;
    }
  } else {
    timeout = Math.max(transitionTimeout, animationTimeout);
    type = timeout > 0 ? transitionTimeout > animationTimeout ? TRANSITION : ANIMATION : null;
    propCount = type ? type === TRANSITION ? transitionDurations.length : animationDurations.length : 0;
  }
  const hasTransform = type === TRANSITION && /\b(?:transform|all)(?:,|$)/.test(
    getStyleProperties(`${TRANSITION}Property`).toString()
  );
  return {
    type,
    timeout,
    propCount,
    hasTransform
  };
}
function getTimeout(delays, durations) {
  while (delays.length < durations.length) {
    delays = delays.concat(delays);
  }
  return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));
}
function toMs(s) {
  if (s === "auto") return 0;
  return Number(s.slice(0, -1).replace(",", ".")) * 1e3;
}
function forceReflow(el) {
  const targetDocument = el ? el.ownerDocument : document;
  return targetDocument.body.offsetHeight;
}
function patchClass(el, value, isSVG) {
  const transitionClasses = el[vtcKey];
  if (transitionClasses) {
    value = (value ? [value, ...transitionClasses] : [...transitionClasses]).join(" ");
  }
  if (value == null) {
    el.removeAttribute("class");
  } else if (isSVG) {
    el.setAttribute("class", value);
  } else {
    el.className = value;
  }
}
var vShowOriginalDisplay = Symbol("_vod");
var vShowHidden = Symbol("_vsh");
var vShow = {
  // used for prop mismatch check during hydration
  name: "show",
  beforeMount(el, { value }, { transition }) {
    el[vShowOriginalDisplay] = el.style.display === "none" ? "" : el.style.display;
    if (transition && value) {
      transition.beforeEnter(el);
    } else {
      setDisplay(el, value);
    }
  },
  mounted(el, { value }, { transition }) {
    if (transition && value) {
      transition.enter(el);
    }
  },
  updated(el, { value, oldValue }, { transition }) {
    if (!value === !oldValue) return;
    if (transition) {
      if (value) {
        transition.beforeEnter(el);
        setDisplay(el, true);
        transition.enter(el);
      } else {
        transition.leave(el, () => {
          setDisplay(el, false);
        });
      }
    } else {
      setDisplay(el, value);
    }
  },
  beforeUnmount(el, { value }) {
    setDisplay(el, value);
  }
};
function setDisplay(el, value) {
  el.style.display = value ? el[vShowOriginalDisplay] : "none";
  el[vShowHidden] = !value;
}
function initVShowForSSR() {
  vShow.getSSRProps = ({ value }) => {
    if (!value) {
      return { style: { display: "none" } };
    }
  };
}
var CSS_VAR_TEXT = Symbol(true ? "CSS_VAR_TEXT" : "");
function useCssVars(getter) {
  const instance = getCurrentInstance();
  if (!instance) {
    warn2(`useCssVars is called without current active component instance.`);
    return;
  }
  const updateTeleports = instance.ut = (vars = getter(instance.proxy)) => {
    Array.from(
      document.querySelectorAll(`[data-v-owner="${instance.uid}"]`)
    ).forEach((node) => setVarsOnNode(node, vars));
  };
  if (true) {
    instance.getCssVars = () => getter(instance.proxy);
  }
  const setVars = () => {
    const vars = getter(instance.proxy);
    if (instance.ce) {
      setVarsOnNode(instance.ce, vars);
    } else {
      setVarsOnVNode(instance.subTree, vars);
    }
    updateTeleports(vars);
  };
  onBeforeUpdate(() => {
    queuePostFlushCb(setVars);
  });
  onMounted(() => {
    watch2(setVars, NOOP, { flush: "post" });
    const ob = new MutationObserver(setVars);
    ob.observe(instance.subTree.el.parentNode, { childList: true });
    onUnmounted(() => ob.disconnect());
  });
}
function setVarsOnVNode(vnode, vars) {
  if (vnode.shapeFlag & 128) {
    const suspense = vnode.suspense;
    vnode = suspense.activeBranch;
    if (suspense.pendingBranch && !suspense.isHydrating) {
      suspense.effects.push(() => {
        setVarsOnVNode(suspense.activeBranch, vars);
      });
    }
  }
  while (vnode.component) {
    vnode = vnode.component.subTree;
  }
  if (vnode.shapeFlag & 1 && vnode.el) {
    setVarsOnNode(vnode.el, vars);
  } else if (vnode.type === Fragment) {
    vnode.children.forEach((c2) => setVarsOnVNode(c2, vars));
  } else if (vnode.type === Static) {
    let { el, anchor } = vnode;
    while (el) {
      setVarsOnNode(el, vars);
      if (el === anchor) break;
      el = el.nextSibling;
    }
  }
}
function setVarsOnNode(el, vars) {
  if (el.nodeType === 1) {
    const style = el.style;
    let cssText = "";
    for (const key2 in vars) {
      const value = normalizeCssVarValue(vars[key2]);
      style.setProperty(`--${key2}`, value);
      cssText += `--${key2}: ${value};`;
    }
    style[CSS_VAR_TEXT] = cssText;
  }
}
var displayRE = /(?:^|;)\s*display\s*:/;
function patchStyle(el, prev, next) {
  const style = el.style;
  const isCssString = isString(next);
  let hasControlledDisplay = false;
  if (next && !isCssString) {
    if (prev) {
      if (!isString(prev)) {
        for (const key2 in prev) {
          if (next[key2] == null) {
            setStyle(style, key2, "");
          }
        }
      } else {
        for (const prevStyle of prev.split(";")) {
          const key2 = prevStyle.slice(0, prevStyle.indexOf(":")).trim();
          if (next[key2] == null) {
            setStyle(style, key2, "");
          }
        }
      }
    }
    for (const key2 in next) {
      if (key2 === "display") {
        hasControlledDisplay = true;
      }
      setStyle(style, key2, next[key2]);
    }
  } else {
    if (isCssString) {
      if (prev !== next) {
        const cssVarText = style[CSS_VAR_TEXT];
        if (cssVarText) {
          next += ";" + cssVarText;
        }
        style.cssText = next;
        hasControlledDisplay = displayRE.test(next);
      }
    } else if (prev) {
      el.removeAttribute("style");
    }
  }
  if (vShowOriginalDisplay in el) {
    el[vShowOriginalDisplay] = hasControlledDisplay ? style.display : "";
    if (el[vShowHidden]) {
      style.display = "none";
    }
  }
}
var semicolonRE = /[^\\];\s*$/;
var importantRE = /\s*!important$/;
function setStyle(style, name, val) {
  if (isArray(val)) {
    val.forEach((v2) => setStyle(style, name, v2));
  } else {
    if (val == null) val = "";
    if (true) {
      if (semicolonRE.test(val)) {
        warn2(
          `Unexpected semicolon at the end of '${name}' style value: '${val}'`
        );
      }
    }
    if (name.startsWith("--")) {
      style.setProperty(name, val);
    } else {
      const prefixed = autoPrefix(style, name);
      if (importantRE.test(val)) {
        style.setProperty(
          hyphenate(prefixed),
          val.replace(importantRE, ""),
          "important"
        );
      } else {
        style[prefixed] = val;
      }
    }
  }
}
var prefixes = ["Webkit", "Moz", "ms"];
var prefixCache = {};
function autoPrefix(style, rawName) {
  const cached = prefixCache[rawName];
  if (cached) {
    return cached;
  }
  let name = camelize(rawName);
  if (name !== "filter" && name in style) {
    return prefixCache[rawName] = name;
  }
  name = capitalize(name);
  for (let i = 0; i < prefixes.length; i++) {
    const prefixed = prefixes[i] + name;
    if (prefixed in style) {
      return prefixCache[rawName] = prefixed;
    }
  }
  return rawName;
}
var xlinkNS = "http://www.w3.org/1999/xlink";
function patchAttr(el, key2, value, isSVG, instance, isBoolean3 = isSpecialBooleanAttr(key2)) {
  if (isSVG && key2.startsWith("xlink:")) {
    if (value == null) {
      el.removeAttributeNS(xlinkNS, key2.slice(6, key2.length));
    } else {
      el.setAttributeNS(xlinkNS, key2, value);
    }
  } else {
    if (value == null || isBoolean3 && !includeBooleanAttr(value)) {
      el.removeAttribute(key2);
    } else {
      el.setAttribute(
        key2,
        isBoolean3 ? "" : isSymbol(value) ? String(value) : value
      );
    }
  }
}
function patchDOMProp(el, key2, value, parentComponent, attrName) {
  if (key2 === "innerHTML" || key2 === "textContent") {
    if (value != null) {
      el[key2] = key2 === "innerHTML" ? unsafeToTrustedHTML(value) : value;
    }
    return;
  }
  const tag = el.tagName;
  if (key2 === "value" && tag !== "PROGRESS" && // custom elements may use _value internally
  !tag.includes("-")) {
    const oldValue = tag === "OPTION" ? el.getAttribute("value") || "" : el.value;
    const newValue = value == null ? (
      // #11647: value should be set as empty string for null and undefined,
      // but <input type="checkbox"> should be set as 'on'.
      el.type === "checkbox" ? "on" : ""
    ) : String(value);
    if (oldValue !== newValue || !("_value" in el)) {
      el.value = newValue;
    }
    if (value == null) {
      el.removeAttribute(key2);
    }
    el._value = value;
    return;
  }
  let needRemove = false;
  if (value === "" || value == null) {
    const type = typeof el[key2];
    if (type === "boolean") {
      value = includeBooleanAttr(value);
    } else if (value == null && type === "string") {
      value = "";
      needRemove = true;
    } else if (type === "number") {
      value = 0;
      needRemove = true;
    }
  }
  try {
    el[key2] = value;
  } catch (e) {
    if (!needRemove) {
      warn2(
        `Failed setting prop "${key2}" on <${tag.toLowerCase()}>: value ${value} is invalid.`,
        e
      );
    }
  }
  needRemove && el.removeAttribute(attrName || key2);
}
function addEventListener(el, event, handler, options) {
  el.addEventListener(event, handler, options);
}
function removeEventListener(el, event, handler, options) {
  el.removeEventListener(event, handler, options);
}
var veiKey = Symbol("_vei");
function patchEvent(el, rawName, prevValue, nextValue, instance = null) {
  const invokers = el[veiKey] || (el[veiKey] = {});
  const existingInvoker = invokers[rawName];
  if (nextValue && existingInvoker) {
    existingInvoker.value = true ? sanitizeEventValue(nextValue, rawName) : nextValue;
  } else {
    const [name, options] = parseName(rawName);
    if (nextValue) {
      const invoker = invokers[rawName] = createInvoker(
        true ? sanitizeEventValue(nextValue, rawName) : nextValue,
        instance
      );
      addEventListener(el, name, invoker, options);
    } else if (existingInvoker) {
      removeEventListener(el, name, existingInvoker, options);
      invokers[rawName] = void 0;
    }
  }
}
var optionsModifierRE = /(?:Once|Passive|Capture)$/;
function parseName(name) {
  let options;
  if (optionsModifierRE.test(name)) {
    options = {};
    let m2;
    while (m2 = name.match(optionsModifierRE)) {
      name = name.slice(0, name.length - m2[0].length);
      options[m2[0].toLowerCase()] = true;
    }
  }
  const event = name[2] === ":" ? name.slice(3) : hyphenate(name.slice(2));
  return [event, options];
}
var cachedNow = 0;
var p = Promise.resolve();
var getNow = () => cachedNow || (p.then(() => cachedNow = 0), cachedNow = Date.now());
function createInvoker(initialValue, instance) {
  const invoker = (e) => {
    if (!e._vts) {
      e._vts = Date.now();
    } else if (e._vts <= invoker.attached) {
      return;
    }
    callWithAsyncErrorHandling(
      patchStopImmediatePropagation(e, invoker.value),
      instance,
      5,
      [e]
    );
  };
  invoker.value = initialValue;
  invoker.attached = getNow();
  return invoker;
}
function sanitizeEventValue(value, propName) {
  if (isFunction(value) || isArray(value)) {
    return value;
  }
  warn2(
    `Wrong type passed as event handler to ${propName} - did you forget @ or : in front of your prop?
Expected function or array of functions, received type ${typeof value}.`
  );
  return NOOP;
}
function patchStopImmediatePropagation(e, value) {
  if (isArray(value)) {
    const originalStop = e.stopImmediatePropagation;
    e.stopImmediatePropagation = () => {
      originalStop.call(e);
      e._stopped = true;
    };
    return value.map(
      (fn2) => (e2) => !e2._stopped && fn2 && fn2(e2)
    );
  } else {
    return value;
  }
}
var isNativeOn = (key2) => key2.charCodeAt(0) === 111 && key2.charCodeAt(1) === 110 && // lowercase letter
key2.charCodeAt(2) > 96 && key2.charCodeAt(2) < 123;
var patchProp = (el, key2, prevValue, nextValue, namespace, parentComponent) => {
  const isSVG = namespace === "svg";
  if (key2 === "class") {
    patchClass(el, nextValue, isSVG);
  } else if (key2 === "style") {
    patchStyle(el, prevValue, nextValue);
  } else if (isOn(key2)) {
    if (!isModelListener(key2)) {
      patchEvent(el, key2, prevValue, nextValue, parentComponent);
    }
  } else if (key2[0] === "." ? (key2 = key2.slice(1), true) : key2[0] === "^" ? (key2 = key2.slice(1), false) : shouldSetAsProp(el, key2, nextValue, isSVG)) {
    patchDOMProp(el, key2, nextValue);
    if (!el.tagName.includes("-") && (key2 === "value" || key2 === "checked" || key2 === "selected")) {
      patchAttr(el, key2, nextValue, isSVG, parentComponent, key2 !== "value");
    }
  } else if (
    // #11081 force set props for possible async custom element
    el._isVueCE && (/[A-Z]/.test(key2) || !isString(nextValue))
  ) {
    patchDOMProp(el, camelize(key2), nextValue, parentComponent, key2);
  } else {
    if (key2 === "true-value") {
      el._trueValue = nextValue;
    } else if (key2 === "false-value") {
      el._falseValue = nextValue;
    }
    patchAttr(el, key2, nextValue, isSVG);
  }
};
function shouldSetAsProp(el, key2, value, isSVG) {
  if (isSVG) {
    if (key2 === "innerHTML" || key2 === "textContent") {
      return true;
    }
    if (key2 in el && isNativeOn(key2) && isFunction(value)) {
      return true;
    }
    return false;
  }
  if (key2 === "spellcheck" || key2 === "draggable" || key2 === "translate" || key2 === "autocorrect") {
    return false;
  }
  if (key2 === "form") {
    return false;
  }
  if (key2 === "list" && el.tagName === "INPUT") {
    return false;
  }
  if (key2 === "type" && el.tagName === "TEXTAREA") {
    return false;
  }
  if (key2 === "width" || key2 === "height") {
    const tag = el.tagName;
    if (tag === "IMG" || tag === "VIDEO" || tag === "CANVAS" || tag === "SOURCE") {
      return false;
    }
  }
  if (isNativeOn(key2) && isString(value)) {
    return false;
  }
  return key2 in el;
}
var REMOVAL = {};
function defineCustomElement(options, extraOptions, _createApp) {
  let Comp = defineComponent(options, extraOptions);
  if (isPlainObject(Comp)) Comp = extend({}, Comp, extraOptions);
  class VueCustomElement extends VueElement {
    constructor(initialProps) {
      super(Comp, initialProps, _createApp);
    }
  }
  VueCustomElement.def = Comp;
  return VueCustomElement;
}
var defineSSRCustomElement = ((options, extraOptions) => {
  return defineCustomElement(options, extraOptions, createSSRApp);
});
var BaseClass = typeof HTMLElement !== "undefined" ? HTMLElement : class {
};
var VueElement = class _VueElement extends BaseClass {
  constructor(_def, _props = {}, _createApp = createApp) {
    super();
    this._def = _def;
    this._props = _props;
    this._createApp = _createApp;
    this._isVueCE = true;
    this._instance = null;
    this._app = null;
    this._nonce = this._def.nonce;
    this._connected = false;
    this._resolved = false;
    this._numberProps = null;
    this._styleChildren = /* @__PURE__ */ new WeakSet();
    this._ob = null;
    if (this.shadowRoot && _createApp !== createApp) {
      this._root = this.shadowRoot;
    } else {
      if (this.shadowRoot) {
        warn2(
          `Custom element has pre-rendered declarative shadow root but is not defined as hydratable. Use \`defineSSRCustomElement\`.`
        );
      }
      if (_def.shadowRoot !== false) {
        this.attachShadow(
          extend({}, _def.shadowRootOptions, {
            mode: "open"
          })
        );
        this._root = this.shadowRoot;
      } else {
        this._root = this;
      }
    }
  }
  connectedCallback() {
    if (!this.isConnected) return;
    if (!this.shadowRoot && !this._resolved) {
      this._parseSlots();
    }
    this._connected = true;
    let parent = this;
    while (parent = parent && (parent.parentNode || parent.host)) {
      if (parent instanceof _VueElement) {
        this._parent = parent;
        break;
      }
    }
    if (!this._instance) {
      if (this._resolved) {
        this._mount(this._def);
      } else {
        if (parent && parent._pendingResolve) {
          this._pendingResolve = parent._pendingResolve.then(() => {
            this._pendingResolve = void 0;
            this._resolveDef();
          });
        } else {
          this._resolveDef();
        }
      }
    }
  }
  _setParent(parent = this._parent) {
    if (parent) {
      this._instance.parent = parent._instance;
      this._inheritParentContext(parent);
    }
  }
  _inheritParentContext(parent = this._parent) {
    if (parent && this._app) {
      Object.setPrototypeOf(
        this._app._context.provides,
        parent._instance.provides
      );
    }
  }
  disconnectedCallback() {
    this._connected = false;
    nextTick(() => {
      if (!this._connected) {
        if (this._ob) {
          this._ob.disconnect();
          this._ob = null;
        }
        this._app && this._app.unmount();
        if (this._instance) this._instance.ce = void 0;
        this._app = this._instance = null;
        if (this._teleportTargets) {
          this._teleportTargets.clear();
          this._teleportTargets = void 0;
        }
      }
    });
  }
  _processMutations(mutations) {
    for (const m2 of mutations) {
      this._setAttr(m2.attributeName);
    }
  }
  /**
   * resolve inner component definition (handle possible async component)
   */
  _resolveDef() {
    if (this._pendingResolve) {
      return;
    }
    for (let i = 0; i < this.attributes.length; i++) {
      this._setAttr(this.attributes[i].name);
    }
    this._ob = new MutationObserver(this._processMutations.bind(this));
    this._ob.observe(this, { attributes: true });
    const resolve2 = (def2, isAsync = false) => {
      this._resolved = true;
      this._pendingResolve = void 0;
      const { props, styles } = def2;
      let numberProps;
      if (props && !isArray(props)) {
        for (const key2 in props) {
          const opt = props[key2];
          if (opt === Number || opt && opt.type === Number) {
            if (key2 in this._props) {
              this._props[key2] = toNumber(this._props[key2]);
            }
            (numberProps || (numberProps = /* @__PURE__ */ Object.create(null)))[camelize(key2)] = true;
          }
        }
      }
      this._numberProps = numberProps;
      this._resolveProps(def2);
      if (this.shadowRoot) {
        this._applyStyles(styles);
      } else if (styles) {
        warn2(
          "Custom element style injection is not supported when using shadowRoot: false"
        );
      }
      this._mount(def2);
    };
    const asyncDef = this._def.__asyncLoader;
    if (asyncDef) {
      this._pendingResolve = asyncDef().then((def2) => {
        def2.configureApp = this._def.configureApp;
        resolve2(this._def = def2, true);
      });
    } else {
      resolve2(this._def);
    }
  }
  _mount(def2) {
    if (!def2.name) {
      def2.name = "VueElement";
    }
    this._app = this._createApp(def2);
    this._inheritParentContext();
    if (def2.configureApp) {
      def2.configureApp(this._app);
    }
    this._app._ceVNode = this._createVNode();
    this._app.mount(this._root);
    const exposed = this._instance && this._instance.exposed;
    if (!exposed) return;
    for (const key2 in exposed) {
      if (!hasOwn(this, key2)) {
        Object.defineProperty(this, key2, {
          // unwrap ref to be consistent with public instance behavior
          get: () => unref(exposed[key2])
        });
      } else if (true) {
        warn2(`Exposed property "${key2}" already exists on custom element.`);
      }
    }
  }
  _resolveProps(def2) {
    const { props } = def2;
    const declaredPropKeys = isArray(props) ? props : Object.keys(props || {});
    for (const key2 of Object.keys(this)) {
      if (key2[0] !== "_" && declaredPropKeys.includes(key2)) {
        this._setProp(key2, this[key2]);
      }
    }
    for (const key2 of declaredPropKeys.map(camelize)) {
      Object.defineProperty(this, key2, {
        get() {
          return this._getProp(key2);
        },
        set(val) {
          this._setProp(key2, val, true, true);
        }
      });
    }
  }
  _setAttr(key2) {
    if (key2.startsWith("data-v-")) return;
    const has = this.hasAttribute(key2);
    let value = has ? this.getAttribute(key2) : REMOVAL;
    const camelKey = camelize(key2);
    if (has && this._numberProps && this._numberProps[camelKey]) {
      value = toNumber(value);
    }
    this._setProp(camelKey, value, false, true);
  }
  /**
   * @internal
   */
  _getProp(key2) {
    return this._props[key2];
  }
  /**
   * @internal
   */
  _setProp(key2, val, shouldReflect = true, shouldUpdate = false) {
    if (val !== this._props[key2]) {
      if (val === REMOVAL) {
        delete this._props[key2];
      } else {
        this._props[key2] = val;
        if (key2 === "key" && this._app) {
          this._app._ceVNode.key = val;
        }
      }
      if (shouldUpdate && this._instance) {
        this._update();
      }
      if (shouldReflect) {
        const ob = this._ob;
        if (ob) {
          this._processMutations(ob.takeRecords());
          ob.disconnect();
        }
        if (val === true) {
          this.setAttribute(hyphenate(key2), "");
        } else if (typeof val === "string" || typeof val === "number") {
          this.setAttribute(hyphenate(key2), val + "");
        } else if (!val) {
          this.removeAttribute(hyphenate(key2));
        }
        ob && ob.observe(this, { attributes: true });
      }
    }
  }
  _update() {
    const vnode = this._createVNode();
    if (this._app) vnode.appContext = this._app._context;
    render(vnode, this._root);
  }
  _createVNode() {
    const baseProps = {};
    if (!this.shadowRoot) {
      baseProps.onVnodeMounted = baseProps.onVnodeUpdated = this._renderSlots.bind(this);
    }
    const vnode = createVNode(this._def, extend(baseProps, this._props));
    if (!this._instance) {
      vnode.ce = (instance) => {
        this._instance = instance;
        instance.ce = this;
        instance.isCE = true;
        if (true) {
          instance.ceReload = (newStyles) => {
            if (this._styles) {
              this._styles.forEach((s) => this._root.removeChild(s));
              this._styles.length = 0;
            }
            this._applyStyles(newStyles);
            this._instance = null;
            this._update();
          };
        }
        const dispatch = (event, args) => {
          this.dispatchEvent(
            new CustomEvent(
              event,
              isPlainObject(args[0]) ? extend({ detail: args }, args[0]) : { detail: args }
            )
          );
        };
        instance.emit = (event, ...args) => {
          dispatch(event, args);
          if (hyphenate(event) !== event) {
            dispatch(hyphenate(event), args);
          }
        };
        this._setParent();
      };
    }
    return vnode;
  }
  _applyStyles(styles, owner) {
    if (!styles) return;
    if (owner) {
      if (owner === this._def || this._styleChildren.has(owner)) {
        return;
      }
      this._styleChildren.add(owner);
    }
    const nonce = this._nonce;
    for (let i = styles.length - 1; i >= 0; i--) {
      const s = document.createElement("style");
      if (nonce) s.setAttribute("nonce", nonce);
      s.textContent = styles[i];
      this.shadowRoot.prepend(s);
      if (true) {
        if (owner) {
          if (owner.__hmrId) {
            if (!this._childStyles) this._childStyles = /* @__PURE__ */ new Map();
            let entry = this._childStyles.get(owner.__hmrId);
            if (!entry) {
              this._childStyles.set(owner.__hmrId, entry = []);
            }
            entry.push(s);
          }
        } else {
          (this._styles || (this._styles = [])).push(s);
        }
      }
    }
  }
  /**
   * Only called when shadowRoot is false
   */
  _parseSlots() {
    const slots = this._slots = {};
    let n;
    while (n = this.firstChild) {
      const slotName = n.nodeType === 1 && n.getAttribute("slot") || "default";
      (slots[slotName] || (slots[slotName] = [])).push(n);
      this.removeChild(n);
    }
  }
  /**
   * Only called when shadowRoot is false
   */
  _renderSlots() {
    const outlets = this._getSlots();
    const scopeId = this._instance.type.__scopeId;
    for (let i = 0; i < outlets.length; i++) {
      const o = outlets[i];
      const slotName = o.getAttribute("name") || "default";
      const content = this._slots[slotName];
      const parent = o.parentNode;
      if (content) {
        for (const n of content) {
          if (scopeId && n.nodeType === 1) {
            const id2 = scopeId + "-s";
            const walker = document.createTreeWalker(n, 1);
            n.setAttribute(id2, "");
            let child2;
            while (child2 = walker.nextNode()) {
              child2.setAttribute(id2, "");
            }
          }
          parent.insertBefore(n, o);
        }
      } else {
        while (o.firstChild) parent.insertBefore(o.firstChild, o);
      }
      parent.removeChild(o);
    }
  }
  /**
   * @internal
   */
  _getSlots() {
    const roots = [this];
    if (this._teleportTargets) {
      roots.push(...this._teleportTargets);
    }
    return roots.reduce((res, i) => {
      res.push(...Array.from(i.querySelectorAll("slot")));
      return res;
    }, []);
  }
  /**
   * @internal
   */
  _injectChildStyle(comp) {
    this._applyStyles(comp.styles, comp);
  }
  /**
   * @internal
   */
  _removeChildStyle(comp) {
    if (true) {
      this._styleChildren.delete(comp);
      if (this._childStyles && comp.__hmrId) {
        const oldStyles = this._childStyles.get(comp.__hmrId);
        if (oldStyles) {
          oldStyles.forEach((s) => this._root.removeChild(s));
          oldStyles.length = 0;
        }
      }
    }
  }
};
function useHost(caller) {
  const instance = getCurrentInstance();
  const el = instance && instance.ce;
  if (el) {
    return el;
  } else if (true) {
    if (!instance) {
      warn2(
        `${caller || "useHost"} called without an active component instance.`
      );
    } else {
      warn2(
        `${caller || "useHost"} can only be used in components defined via defineCustomElement.`
      );
    }
  }
  return null;
}
function useShadowRoot() {
  const el = true ? useHost("useShadowRoot") : useHost();
  return el && el.shadowRoot;
}
function useCssModule(name = "$style") {
  {
    const instance = getCurrentInstance();
    if (!instance) {
      warn2(`useCssModule must be called inside setup()`);
      return EMPTY_OBJ;
    }
    const modules = instance.type.__cssModules;
    if (!modules) {
      warn2(`Current instance does not have CSS modules injected.`);
      return EMPTY_OBJ;
    }
    const mod = modules[name];
    if (!mod) {
      warn2(`Current instance does not have CSS module named "${name}".`);
      return EMPTY_OBJ;
    }
    return mod;
  }
}
var positionMap = /* @__PURE__ */ new WeakMap();
var newPositionMap = /* @__PURE__ */ new WeakMap();
var moveCbKey = Symbol("_moveCb");
var enterCbKey2 = Symbol("_enterCb");
var decorate = (t) => {
  delete t.props.mode;
  return t;
};
var TransitionGroupImpl = decorate({
  name: "TransitionGroup",
  props: extend({}, TransitionPropsValidators, {
    tag: String,
    moveClass: String
  }),
  setup(props, { slots }) {
    const instance = getCurrentInstance();
    const state = useTransitionState();
    let prevChildren;
    let children;
    onUpdated(() => {
      if (!prevChildren.length) {
        return;
      }
      const moveClass = props.moveClass || `${props.name || "v"}-move`;
      if (!hasCSSTransform(
        prevChildren[0].el,
        instance.vnode.el,
        moveClass
      )) {
        prevChildren = [];
        return;
      }
      prevChildren.forEach(callPendingCbs);
      prevChildren.forEach(recordPosition);
      const movedChildren = prevChildren.filter(applyTranslation);
      forceReflow(instance.vnode.el);
      movedChildren.forEach((c2) => {
        const el = c2.el;
        const style = el.style;
        addTransitionClass(el, moveClass);
        style.transform = style.webkitTransform = style.transitionDuration = "";
        const cb = el[moveCbKey] = (e) => {
          if (e && e.target !== el) {
            return;
          }
          if (!e || e.propertyName.endsWith("transform")) {
            el.removeEventListener("transitionend", cb);
            el[moveCbKey] = null;
            removeTransitionClass(el, moveClass);
          }
        };
        el.addEventListener("transitionend", cb);
      });
      prevChildren = [];
    });
    return () => {
      const rawProps = toRaw(props);
      const cssTransitionProps = resolveTransitionProps(rawProps);
      let tag = rawProps.tag || Fragment;
      prevChildren = [];
      if (children) {
        for (let i = 0; i < children.length; i++) {
          const child2 = children[i];
          if (child2.el && child2.el instanceof Element) {
            prevChildren.push(child2);
            setTransitionHooks(
              child2,
              resolveTransitionHooks(
                child2,
                cssTransitionProps,
                state,
                instance
              )
            );
            positionMap.set(
              child2,
              child2.el.getBoundingClientRect()
            );
          }
        }
      }
      children = slots.default ? getTransitionRawChildren(slots.default()) : [];
      for (let i = 0; i < children.length; i++) {
        const child2 = children[i];
        if (child2.key != null) {
          setTransitionHooks(
            child2,
            resolveTransitionHooks(child2, cssTransitionProps, state, instance)
          );
        } else if (child2.type !== Text) {
          warn2(`<TransitionGroup> children must be keyed.`);
        }
      }
      return createVNode(tag, null, children);
    };
  }
});
var TransitionGroup = TransitionGroupImpl;
function callPendingCbs(c2) {
  const el = c2.el;
  if (el[moveCbKey]) {
    el[moveCbKey]();
  }
  if (el[enterCbKey2]) {
    el[enterCbKey2]();
  }
}
function recordPosition(c2) {
  newPositionMap.set(c2, c2.el.getBoundingClientRect());
}
function applyTranslation(c2) {
  const oldPos = positionMap.get(c2);
  const newPos = newPositionMap.get(c2);
  const dx = oldPos.left - newPos.left;
  const dy = oldPos.top - newPos.top;
  if (dx || dy) {
    const s = c2.el.style;
    s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;
    s.transitionDuration = "0s";
    return c2;
  }
}
function hasCSSTransform(el, root, moveClass) {
  const clone = el.cloneNode();
  const _vtc = el[vtcKey];
  if (_vtc) {
    _vtc.forEach((cls) => {
      cls.split(/\s+/).forEach((c2) => c2 && clone.classList.remove(c2));
    });
  }
  moveClass.split(/\s+/).forEach((c2) => c2 && clone.classList.add(c2));
  clone.style.display = "none";
  const container = root.nodeType === 1 ? root : root.parentNode;
  container.appendChild(clone);
  const { hasTransform } = getTransitionInfo(clone);
  container.removeChild(clone);
  return hasTransform;
}
var getModelAssigner = (vnode) => {
  const fn2 = vnode.props["onUpdate:modelValue"] || false;
  return isArray(fn2) ? (value) => invokeArrayFns(fn2, value) : fn2;
};
function onCompositionStart(e) {
  e.target.composing = true;
}
function onCompositionEnd(e) {
  const target = e.target;
  if (target.composing) {
    target.composing = false;
    target.dispatchEvent(new Event("input"));
  }
}
var assignKey = Symbol("_assign");
var vModelText = {
  created(el, { modifiers: { lazy, trim, number } }, vnode) {
    el[assignKey] = getModelAssigner(vnode);
    const castToNumber = number || vnode.props && vnode.props.type === "number";
    addEventListener(el, lazy ? "change" : "input", (e) => {
      if (e.target.composing) return;
      let domValue = el.value;
      if (trim) {
        domValue = domValue.trim();
      }
      if (castToNumber) {
        domValue = looseToNumber(domValue);
      }
      el[assignKey](domValue);
    });
    if (trim) {
      addEventListener(el, "change", () => {
        el.value = el.value.trim();
      });
    }
    if (!lazy) {
      addEventListener(el, "compositionstart", onCompositionStart);
      addEventListener(el, "compositionend", onCompositionEnd);
      addEventListener(el, "change", onCompositionEnd);
    }
  },
  // set value on mounted so it's after min/max for type="range"
  mounted(el, { value }) {
    el.value = value == null ? "" : value;
  },
  beforeUpdate(el, { value, oldValue, modifiers: { lazy, trim, number } }, vnode) {
    el[assignKey] = getModelAssigner(vnode);
    if (el.composing) return;
    const elValue = (number || el.type === "number") && !/^0\d/.test(el.value) ? looseToNumber(el.value) : el.value;
    const newValue = value == null ? "" : value;
    if (elValue === newValue) {
      return;
    }
    if (document.activeElement === el && el.type !== "range") {
      if (lazy && value === oldValue) {
        return;
      }
      if (trim && el.value.trim() === newValue) {
        return;
      }
    }
    el.value = newValue;
  }
};
var vModelCheckbox = {
  // #4096 array checkboxes need to be deep traversed
  deep: true,
  created(el, _, vnode) {
    el[assignKey] = getModelAssigner(vnode);
    addEventListener(el, "change", () => {
      const modelValue = el._modelValue;
      const elementValue = getValue(el);
      const checked = el.checked;
      const assign = el[assignKey];
      if (isArray(modelValue)) {
        const index = looseIndexOf(modelValue, elementValue);
        const found = index !== -1;
        if (checked && !found) {
          assign(modelValue.concat(elementValue));
        } else if (!checked && found) {
          const filtered = [...modelValue];
          filtered.splice(index, 1);
          assign(filtered);
        }
      } else if (isSet(modelValue)) {
        const cloned = new Set(modelValue);
        if (checked) {
          cloned.add(elementValue);
        } else {
          cloned.delete(elementValue);
        }
        assign(cloned);
      } else {
        assign(getCheckboxValue(el, checked));
      }
    });
  },
  // set initial checked on mount to wait for true-value/false-value
  mounted: setChecked,
  beforeUpdate(el, binding, vnode) {
    el[assignKey] = getModelAssigner(vnode);
    setChecked(el, binding, vnode);
  }
};
function setChecked(el, { value, oldValue }, vnode) {
  el._modelValue = value;
  let checked;
  if (isArray(value)) {
    checked = looseIndexOf(value, vnode.props.value) > -1;
  } else if (isSet(value)) {
    checked = value.has(vnode.props.value);
  } else {
    if (value === oldValue) return;
    checked = looseEqual(value, getCheckboxValue(el, true));
  }
  if (el.checked !== checked) {
    el.checked = checked;
  }
}
var vModelRadio = {
  created(el, { value }, vnode) {
    el.checked = looseEqual(value, vnode.props.value);
    el[assignKey] = getModelAssigner(vnode);
    addEventListener(el, "change", () => {
      el[assignKey](getValue(el));
    });
  },
  beforeUpdate(el, { value, oldValue }, vnode) {
    el[assignKey] = getModelAssigner(vnode);
    if (value !== oldValue) {
      el.checked = looseEqual(value, vnode.props.value);
    }
  }
};
var vModelSelect = {
  // <select multiple> value need to be deep traversed
  deep: true,
  created(el, { value, modifiers: { number } }, vnode) {
    const isSetModel = isSet(value);
    addEventListener(el, "change", () => {
      const selectedVal = Array.prototype.filter.call(el.options, (o) => o.selected).map(
        (o) => number ? looseToNumber(getValue(o)) : getValue(o)
      );
      el[assignKey](
        el.multiple ? isSetModel ? new Set(selectedVal) : selectedVal : selectedVal[0]
      );
      el._assigning = true;
      nextTick(() => {
        el._assigning = false;
      });
    });
    el[assignKey] = getModelAssigner(vnode);
  },
  // set value in mounted & updated because <select> relies on its children
  // <option>s.
  mounted(el, { value }) {
    setSelected(el, value);
  },
  beforeUpdate(el, _binding, vnode) {
    el[assignKey] = getModelAssigner(vnode);
  },
  updated(el, { value }) {
    if (!el._assigning) {
      setSelected(el, value);
    }
  }
};
function setSelected(el, value) {
  const isMultiple = el.multiple;
  const isArrayValue = isArray(value);
  if (isMultiple && !isArrayValue && !isSet(value)) {
    warn2(
      `<select multiple v-model> expects an Array or Set value for its binding, but got ${Object.prototype.toString.call(value).slice(8, -1)}.`
    );
    return;
  }
  for (let i = 0, l = el.options.length; i < l; i++) {
    const option = el.options[i];
    const optionValue = getValue(option);
    if (isMultiple) {
      if (isArrayValue) {
        const optionType = typeof optionValue;
        if (optionType === "string" || optionType === "number") {
          option.selected = value.some((v2) => String(v2) === String(optionValue));
        } else {
          option.selected = looseIndexOf(value, optionValue) > -1;
        }
      } else {
        option.selected = value.has(optionValue);
      }
    } else if (looseEqual(getValue(option), value)) {
      if (el.selectedIndex !== i) el.selectedIndex = i;
      return;
    }
  }
  if (!isMultiple && el.selectedIndex !== -1) {
    el.selectedIndex = -1;
  }
}
function getValue(el) {
  return "_value" in el ? el._value : el.value;
}
function getCheckboxValue(el, checked) {
  const key2 = checked ? "_trueValue" : "_falseValue";
  return key2 in el ? el[key2] : checked;
}
var vModelDynamic = {
  created(el, binding, vnode) {
    callModelHook(el, binding, vnode, null, "created");
  },
  mounted(el, binding, vnode) {
    callModelHook(el, binding, vnode, null, "mounted");
  },
  beforeUpdate(el, binding, vnode, prevVNode) {
    callModelHook(el, binding, vnode, prevVNode, "beforeUpdate");
  },
  updated(el, binding, vnode, prevVNode) {
    callModelHook(el, binding, vnode, prevVNode, "updated");
  }
};
function resolveDynamicModel(tagName, type) {
  switch (tagName) {
    case "SELECT":
      return vModelSelect;
    case "TEXTAREA":
      return vModelText;
    default:
      switch (type) {
        case "checkbox":
          return vModelCheckbox;
        case "radio":
          return vModelRadio;
        default:
          return vModelText;
      }
  }
}
function callModelHook(el, binding, vnode, prevVNode, hook2) {
  const modelToUse = resolveDynamicModel(
    el.tagName,
    vnode.props && vnode.props.type
  );
  const fn2 = modelToUse[hook2];
  fn2 && fn2(el, binding, vnode, prevVNode);
}
function initVModelForSSR() {
  vModelText.getSSRProps = ({ value }) => ({ value });
  vModelRadio.getSSRProps = ({ value }, vnode) => {
    if (vnode.props && looseEqual(vnode.props.value, value)) {
      return { checked: true };
    }
  };
  vModelCheckbox.getSSRProps = ({ value }, vnode) => {
    if (isArray(value)) {
      if (vnode.props && looseIndexOf(value, vnode.props.value) > -1) {
        return { checked: true };
      }
    } else if (isSet(value)) {
      if (vnode.props && value.has(vnode.props.value)) {
        return { checked: true };
      }
    } else if (value) {
      return { checked: true };
    }
  };
  vModelDynamic.getSSRProps = (binding, vnode) => {
    if (typeof vnode.type !== "string") {
      return;
    }
    const modelToUse = resolveDynamicModel(
      // resolveDynamicModel expects an uppercase tag name, but vnode.type is lowercase
      vnode.type.toUpperCase(),
      vnode.props && vnode.props.type
    );
    if (modelToUse.getSSRProps) {
      return modelToUse.getSSRProps(binding, vnode);
    }
  };
}
var systemModifiers = ["ctrl", "shift", "alt", "meta"];
var modifierGuards = {
  stop: (e) => e.stopPropagation(),
  prevent: (e) => e.preventDefault(),
  self: (e) => e.target !== e.currentTarget,
  ctrl: (e) => !e.ctrlKey,
  shift: (e) => !e.shiftKey,
  alt: (e) => !e.altKey,
  meta: (e) => !e.metaKey,
  left: (e) => "button" in e && e.button !== 0,
  middle: (e) => "button" in e && e.button !== 1,
  right: (e) => "button" in e && e.button !== 2,
  exact: (e, modifiers) => systemModifiers.some((m2) => e[`${m2}Key`] && !modifiers.includes(m2))
};
var withModifiers = (fn2, modifiers) => {
  const cache = fn2._withMods || (fn2._withMods = {});
  const cacheKey = modifiers.join(".");
  return cache[cacheKey] || (cache[cacheKey] = ((event, ...args) => {
    for (let i = 0; i < modifiers.length; i++) {
      const guard2 = modifierGuards[modifiers[i]];
      if (guard2 && guard2(event, modifiers)) return;
    }
    return fn2(event, ...args);
  }));
};
var keyNames = {
  esc: "escape",
  space: " ",
  up: "arrow-up",
  left: "arrow-left",
  right: "arrow-right",
  down: "arrow-down",
  delete: "backspace"
};
var withKeys = (fn2, modifiers) => {
  const cache = fn2._withKeys || (fn2._withKeys = {});
  const cacheKey = modifiers.join(".");
  return cache[cacheKey] || (cache[cacheKey] = ((event) => {
    if (!("key" in event)) {
      return;
    }
    const eventKey = hyphenate(event.key);
    if (modifiers.some(
      (k) => k === eventKey || keyNames[k] === eventKey
    )) {
      return fn2(event);
    }
  }));
};
var rendererOptions = extend({ patchProp }, nodeOps);
var renderer;
var enabledHydration = false;
function ensureRenderer() {
  return renderer || (renderer = createRenderer(rendererOptions));
}
function ensureHydrationRenderer() {
  renderer = enabledHydration ? renderer : createHydrationRenderer(rendererOptions);
  enabledHydration = true;
  return renderer;
}
var render = ((...args) => {
  ensureRenderer().render(...args);
});
var hydrate = ((...args) => {
  ensureHydrationRenderer().hydrate(...args);
});
var createApp = ((...args) => {
  const app = ensureRenderer().createApp(...args);
  if (true) {
    injectNativeTagCheck(app);
    injectCompilerOptionsCheck(app);
  }
  const { mount } = app;
  app.mount = (containerOrSelector) => {
    const container = normalizeContainer(containerOrSelector);
    if (!container) return;
    const component = app._component;
    if (!isFunction(component) && !component.render && !component.template) {
      component.template = container.innerHTML;
    }
    if (container.nodeType === 1) {
      container.textContent = "";
    }
    const proxy = mount(container, false, resolveRootNamespace(container));
    if (container instanceof Element) {
      container.removeAttribute("v-cloak");
      container.setAttribute("data-v-app", "");
    }
    return proxy;
  };
  return app;
});
var createSSRApp = ((...args) => {
  const app = ensureHydrationRenderer().createApp(...args);
  if (true) {
    injectNativeTagCheck(app);
    injectCompilerOptionsCheck(app);
  }
  const { mount } = app;
  app.mount = (containerOrSelector) => {
    const container = normalizeContainer(containerOrSelector);
    if (container) {
      return mount(container, true, resolveRootNamespace(container));
    }
  };
  return app;
});
function resolveRootNamespace(container) {
  if (container instanceof SVGElement) {
    return "svg";
  }
  if (typeof MathMLElement === "function" && container instanceof MathMLElement) {
    return "mathml";
  }
}
function injectNativeTagCheck(app) {
  Object.defineProperty(app.config, "isNativeTag", {
    value: (tag) => isHTMLTag(tag) || isSVGTag(tag) || isMathMLTag(tag),
    writable: false
  });
}
function injectCompilerOptionsCheck(app) {
  if (isRuntimeOnly()) {
    const isCustomElement = app.config.isCustomElement;
    Object.defineProperty(app.config, "isCustomElement", {
      get() {
        return isCustomElement;
      },
      set() {
        warn2(
          `The \`isCustomElement\` config option is deprecated. Use \`compilerOptions.isCustomElement\` instead.`
        );
      }
    });
    const compilerOptions = app.config.compilerOptions;
    const msg = `The \`compilerOptions\` config option is only respected when using a build of Vue.js that includes the runtime compiler (aka "full build"). Since you are using the runtime-only build, \`compilerOptions\` must be passed to \`@vue/compiler-dom\` in the build setup instead.
- For vue-loader: pass it via vue-loader's \`compilerOptions\` loader option.
- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader
- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite-plugin-vue/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-sfc`;
    Object.defineProperty(app.config, "compilerOptions", {
      get() {
        warn2(msg);
        return compilerOptions;
      },
      set() {
        warn2(msg);
      }
    });
  }
}
function normalizeContainer(container) {
  if (isString(container)) {
    const res = document.querySelector(container);
    if (!res) {
      warn2(
        `Failed to mount app: mount target selector "${container}" returned null.`
      );
    }
    return res;
  }
  if (window.ShadowRoot && container instanceof window.ShadowRoot && container.mode === "closed") {
    warn2(
      `mounting on a ShadowRoot with \`{mode: "closed"}\` may lead to unpredictable bugs`
    );
  }
  return container;
}
var ssrDirectiveInitialized = false;
var initDirectivesForSSR = () => {
  if (!ssrDirectiveInitialized) {
    ssrDirectiveInitialized = true;
    initVModelForSSR();
    initVShowForSSR();
  }
};

// ../../../node_modules/vue/dist/vue.runtime.esm-bundler.js
function initDev() {
  {
    initCustomFormatter();
  }
}
if (true) {
  initDev();
}
var compile2 = () => {
  if (true) {
    warn2(
      `Runtime compilation is not supported in this build of Vue. Configure your bundler to alias "vue" to "vue/dist/vue.esm-bundler.js".`
    );
  }
};

// ../../../node_modules/@n8n/chat/dist/chat.es.js
var __create = Object.create;
var __defProp$1 = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp$1 = Object.prototype.hasOwnProperty;
var __esmMin = (e, t) => () => (e && (t = e(e = 0)), t);
var __commonJSMin = (e, t) => () => (t || e((t = { exports: {} }).exports, t), t.exports);
var __export2 = (e) => {
  let t = {};
  for (var n in e) __defProp$1(t, n, {
    get: e[n],
    enumerable: true
  });
  return t;
};
var __copyProps = (e, t, n, r) => {
  if (t && typeof t == "object" || typeof t == "function") for (var i = __getOwnPropNames(t), o = 0, s = i.length, l; o < s; o++) l = i[o], !__hasOwnProp$1.call(e, l) && l !== n && __defProp$1(e, l, {
    get: ((e2) => t[e2]).bind(null, l),
    enumerable: !(r = __getOwnPropDesc(t, l)) || r.enumerable
  });
  return e;
};
var __reExport = (e, t, n) => (__copyProps(e, t, "default"), n && __copyProps(n, t, "default"));
var __toESM = (e, t, n) => (n = e == null ? {} : __create(__getProtoOf(e)), __copyProps(t || !e || !e.__esModule ? __defProp$1(n, "default", {
  value: e,
  enumerable: true
}) : n, e));
var __toCommonJS = (e) => __copyProps(__defProp$1({}, "__esModule", { value: true }), e);
var defaultOptions = {
  webhookUrl: "http://localhost:5678",
  webhookConfig: {
    method: "POST",
    headers: {}
  },
  target: "#n8n-chat",
  mode: "window",
  loadPreviousSession: true,
  chatInputKey: "chatInput",
  chatSessionKey: "sessionId",
  defaultLanguage: "en",
  showWelcomeScreen: false,
  initialMessages: ["Hi there! 👋", "My name is Nathan. How can I assist you today?"],
  i18n: { en: {
    title: "Hi there! 👋",
    subtitle: "Start a chat. We're here to help you 24/7.",
    footer: "",
    getStarted: "New Conversation",
    inputPlaceholder: "Type your question..",
    closeButtonTooltip: "Close chat"
  } },
  theme: {},
  enableStreaming: false
};
var localStorageSessionIdKey = "n8n-chat/sessionId";
var ChatSymbol = "Chat";
var ChatOptionsSymbol = "ChatOptions";
for (byteToHex = [], i$2 = 0; i$2 < 256; ++i$2) byteToHex.push((i$2 + 256).toString(16).slice(1));
var byteToHex;
var i$2;
function unsafeStringify(e, t = 0) {
  return (byteToHex[e[t + 0]] + byteToHex[e[t + 1]] + byteToHex[e[t + 2]] + byteToHex[e[t + 3]] + "-" + byteToHex[e[t + 4]] + byteToHex[e[t + 5]] + "-" + byteToHex[e[t + 6]] + byteToHex[e[t + 7]] + "-" + byteToHex[e[t + 8]] + byteToHex[e[t + 9]] + "-" + byteToHex[e[t + 10]] + byteToHex[e[t + 11]] + byteToHex[e[t + 12]] + byteToHex[e[t + 13]] + byteToHex[e[t + 14]] + byteToHex[e[t + 15]]).toLowerCase();
}
var getRandomValues;
var rnds8 = new Uint8Array(16);
function rng() {
  if (!getRandomValues && (getRandomValues = typeof crypto < "u" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto), !getRandomValues)) throw Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
  return getRandomValues(rnds8);
}
var native_default = { randomUUID: typeof crypto < "u" && crypto.randomUUID && crypto.randomUUID.bind(crypto) };
function v4(e, t, n) {
  if (native_default.randomUUID && !t && !e) return native_default.randomUUID();
  e ||= {};
  var r = e.random || (e.rng || rng)();
  if (r[6] = r[6] & 15 | 64, r[8] = r[8] & 63 | 128, t) {
    n ||= 0;
    for (var i = 0; i < 16; ++i) t[n + i] = r[i];
    return t;
  }
  return unsafeStringify(r);
}
var v4_default = v4;
async function getAccessToken() {
  return "";
}
async function authenticatedFetch(...e) {
  let t = await getAccessToken(), n = e[1]?.body, r = {
    ...t ? { authorization: `Bearer ${t}` } : {},
    ...e[1]?.headers
  };
  n instanceof FormData ? delete r["Content-Type"] : r["Content-Type"] = "application/json";
  let i = await fetch(e[0], {
    ...e[1],
    mode: "cors",
    cache: "no-cache",
    headers: r
  }), o;
  try {
    o = await i.clone().json();
  } catch {
    o = await i.text();
  }
  return o;
}
async function get$3(e, t = {}, n = {}) {
  let r = e;
  return Object.keys(t).length > 0 && (r = `${r}?${new URLSearchParams(t).toString()}`), await authenticatedFetch(r, {
    ...n,
    method: "GET"
  });
}
async function post(e, t = {}, n = {}) {
  return await authenticatedFetch(e, {
    ...n,
    method: "POST",
    body: JSON.stringify(t)
  });
}
async function postWithFiles(e, t = {}, n = [], r = {}) {
  let i = new FormData();
  for (let e2 in t) {
    let n2 = t[e2];
    typeof n2 == "object" && n2 ? i.append(e2, JSON.stringify(n2)) : i.append(e2, n2);
  }
  for (let e2 of n) i.append("files", e2);
  return await authenticatedFetch(e, {
    ...r,
    method: "POST",
    body: i
  });
}
async function loadPreviousSession(e, t) {
  return await (t.webhookConfig?.method === "POST" ? post : get$3)(`${t.webhookUrl}`, {
    action: "loadPreviousSession",
    [t.chatSessionKey]: e,
    ...t.metadata ? { metadata: t.metadata } : {}
  }, { headers: t.webhookConfig?.headers });
}
async function sendMessage(e, t, n, r) {
  return t.length > 0 ? await postWithFiles(`${r.webhookUrl}`, {
    action: "sendMessage",
    [r.chatSessionKey]: n,
    [r.chatInputKey]: e,
    ...r.metadata ? { metadata: r.metadata } : {}
  }, t, { headers: r.webhookConfig?.headers }) : await (r.webhookConfig?.method === "POST" ? post : get$3)(`${r.webhookUrl}`, {
    action: "sendMessage",
    [r.chatSessionKey]: n,
    [r.chatInputKey]: e,
    ...r.metadata ? { metadata: r.metadata } : {}
  }, { headers: r.webhookConfig?.headers });
}
function createLineParser() {
  let e = "", t = new TextDecoder();
  return new TransformStream({
    transform(n, r) {
      e += t.decode(n, { stream: true });
      let i = e.split("\n");
      e = i.pop() ?? "";
      for (let e2 of i) if (e2.trim()) try {
        let t2 = JSON.parse(e2);
        r.enqueue(t2);
      } catch {
        r.enqueue({
          type: "item",
          content: e2
        });
      }
    },
    flush(t2) {
      if (e.trim()) try {
        let n = JSON.parse(e);
        t2.enqueue(n);
      } catch {
        t2.enqueue({
          type: "item",
          content: e
        });
      }
    }
  });
}
async function sendMessageStreaming(e, t, n, r, i) {
  let o = await (t.length > 0 ? sendWithFiles(e, t, n, r) : sendTextOnly(e, n, r));
  if (!o.ok) {
    let e2 = await o.text();
    throw console.error("HTTP error response:", o.status, e2), Error(`Error while sending message. Error: ${e2}`);
  }
  if (!o.body) throw Error("Response body is not readable");
  let s = o.body.pipeThrough(createLineParser()).getReader(), l = false;
  try {
    for (; ; ) {
      let { done: e2, value: t2 } = await s.read();
      if (e2) break;
      let n2 = t2.metadata?.nodeId || "unknown", r2 = t2.metadata?.runIndex;
      switch (t2.type) {
        case "begin":
          i.onBeginMessage(n2, r2);
          break;
        case "item":
          l = true, i.onChunk(t2.content ?? "", n2, r2);
          break;
        case "end":
          i.onEndMessage(n2, r2);
          break;
        case "error":
          l = true, i.onChunk(`Error: ${t2.content ?? "Unknown error"}`, n2, r2), i.onEndMessage(n2, r2);
          break;
      }
    }
  } finally {
    s.releaseLock();
  }
  return { hasReceivedChunks: l };
}
async function sendWithFiles(e, t, n, r) {
  let i = new FormData();
  i.append("action", "sendMessage"), i.append(r.chatSessionKey, n), i.append(r.chatInputKey, e), r.metadata && i.append("metadata", JSON.stringify(r.metadata));
  for (let e2 of t) i.append("files", e2);
  return await fetch(r.webhookUrl, {
    method: "POST",
    headers: {
      Accept: "text/plain",
      ...r.webhookConfig?.headers
    },
    body: i
  });
}
async function sendTextOnly(e, t, n) {
  let r = {
    action: "sendMessage",
    [n.chatSessionKey]: t,
    [n.chatInputKey]: e,
    ...n.metadata ? { metadata: n.metadata } : {}
  };
  return await fetch(n.webhookUrl, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      Accept: "text/plain",
      ...n.webhookConfig?.headers
    },
    body: JSON.stringify(r)
  });
}
function createEventBus() {
  let e = /* @__PURE__ */ new Map();
  function t(t2, n2) {
    let r2 = e.get(t2);
    r2 && r2.splice(r2.indexOf(n2) >>> 0, 1);
  }
  function n(n2, r2) {
    let i = e.get(n2);
    return i ? i.push(r2) : i = [r2], e.set(n2, i), () => t(n2, r2);
  }
  function r(t2, n2) {
    let r2 = e.get(t2);
    r2 && r2.slice().forEach(async (e2) => {
      await e2(n2);
    });
  }
  return {
    on: n,
    off: t,
    emit: r
  };
}
function createDefaultMountingTarget(e) {
  if (!document.querySelector(e)) {
    let t = document.createElement("div");
    e.startsWith("#") && (t.id = e.replace("#", "")), e.startsWith(".") && t.classList.add(e.replace(".", "")), document.body.appendChild(t);
  }
}
function constructChatWebsocketUrl(e, t, n, r) {
  let i = new URL(e).origin, o = i.startsWith("https") ? "wss" : "ws";
  return `${i.replace(/^https?/, o)}/chat?sessionId=${n}&executionId=${t}${r ? "&isPublic=true" : ""}`;
}
var chatEventBus = createEventBus();
var StreamingMessageManager = class {
  nodeRuns = /* @__PURE__ */ new Map();
  runOrder = [];
  activeRuns = /* @__PURE__ */ new Set();
  constructor() {
  }
  getRunKey(e, t) {
    return t === void 0 ? e : `${e}-${t}`;
  }
  initializeRun(e, t) {
    let n = this.getRunKey(e, t);
    if (!this.nodeRuns.has(n)) {
      let e2 = createBotMessage();
      return this.nodeRuns.set(n, {
        content: "",
        isComplete: false,
        message: e2
      }), this.runOrder.push(n), e2;
    }
    return this.nodeRuns.get(n).message;
  }
  registerRunStart(e, t) {
    let n = this.getRunKey(e, t);
    this.activeRuns.add(n);
  }
  addRunToActive(e, t) {
    let n = this.getRunKey(e, t);
    return this.activeRuns.add(n), this.initializeRun(e, t);
  }
  removeRunFromActive(e, t) {
    let n = this.getRunKey(e, t);
    this.activeRuns.delete(n);
    let r = this.nodeRuns.get(n);
    r && (r.isComplete = true);
  }
  addChunkToRun(e, t, n) {
    let r = this.getRunKey(e, n), i = this.nodeRuns.get(r);
    if (i) {
      i.content += t;
      let e2 = {
        ...i.message,
        text: i.content
      };
      return i.message = e2, e2;
    }
    return null;
  }
  getRunMessage(e, t) {
    let n = this.getRunKey(e, t);
    return this.nodeRuns.get(n)?.message ?? null;
  }
  areAllRunsComplete() {
    return Array.from(this.nodeRuns.values()).every((e) => e.isComplete);
  }
  getRunCount() {
    return this.runOrder.length;
  }
  getActiveRunCount() {
    return this.activeRuns.size;
  }
  getAllMessages() {
    return this.runOrder.map((e) => this.nodeRuns.get(e)?.message).filter((e) => e !== void 0);
  }
  reset() {
    this.nodeRuns.clear(), this.runOrder = [], this.activeRuns.clear();
  }
};
function createBotMessage(e) {
  return {
    id: e ?? v4_default(),
    type: "text",
    text: "",
    sender: "bot"
  };
}
function updateMessageInArray(e, t, n) {
  let r = e.findIndex((e2) => e2.id === t);
  if (r === -1) throw Error(`Can't update message. No message with id ${t} found`);
  e[r] = n;
}
function handleStreamingChunk(e, t, n, r, i, o) {
  try {
    if (e === "") return;
    if (t) {
      let r2 = n.getRunMessage(t, o);
      r2 || (r2 = n.addRunToActive(t, o), i.value.push(r2));
      let s = n.addChunkToRun(t, e, o);
      s && updateMessageInArray(i.value, s.id, s);
    } else {
      r.value || (r.value = createBotMessage(), i.value.push(r.value));
      let t2 = {
        ...r.value,
        text: r.value.text + e
      };
      updateMessageInArray(i.value, r.value.id, t2), r.value = t2;
    }
    nextTick(() => {
      chatEventBus.emit("scrollToBottom");
    });
  } catch (e2) {
    console.error("Error handling stream chunk:", e2);
  }
}
function handleNodeStart(e, t, n) {
  try {
    t.registerRunStart(e, n);
  } catch (e2) {
    console.error("Error handling node start:", e2);
  }
}
function handleNodeComplete(e, t, n) {
  try {
    t.removeRunFromActive(e, n);
  } catch (e2) {
    console.error("Error handling node complete:", e2);
  }
}
function createUserMessage(e, t = []) {
  return {
    id: v4_default(),
    text: e,
    sender: "user",
    files: t
  };
}
function processMessageResponse(e) {
  let t = e.output ?? e.text ?? e.message ?? "";
  if (t === "" && Object.keys(e).length > 0) try {
    t = JSON.stringify(e, null, 2);
  } catch {
  }
  return t;
}
function handleEmptyStreamResponse(e) {
  let { receivedMessage: t, messages: n } = e;
  t.value && n.value.some((e2) => e2.sender === "bot" && "text" in e2 && e2.text.trim().length > 0) || (t.value = createBotMessage(), n.value.push(t.value)), t.value.text = "[No response received. This could happen if streaming is enabled in the trigger but disabled in agent node(s)]";
}
function handleMessageError(e) {
  let { error: t, receivedMessage: n, messages: r } = e;
  n.value ??= createBotMessage(), n.value.text = "Error: Failed to receive response", r.value.includes(n.value) || r.value.push(n.value), console.error("Chat API error:", t);
}
async function handleStreamingMessage(e) {
  let { text: t, files: n, sessionId: r, options: i, messages: o, receivedMessage: s, streamingManager: l } = e, { hasReceivedChunks: d } = await sendMessageStreaming(t, n, r, i, {
    onChunk: (e2, t2, n2) => {
      handleStreamingChunk(e2, t2, l, s, o, n2);
    },
    onBeginMessage: (e2, t2) => {
      handleNodeStart(e2, l, t2);
    },
    onEndMessage: (e2, t2) => {
      handleNodeComplete(e2, l, t2);
    }
  });
  d || handleEmptyStreamResponse({
    receivedMessage: s,
    messages: o
  });
}
async function handleNonStreamingMessage(e) {
  let { text: t, files: n, sessionId: r, options: i } = e, o = await sendMessage(t, n, r, i);
  if (o?.executionStarted) return { response: o };
  let s = createBotMessage();
  return s.text = processMessageResponse(o), { botMessage: s };
}
var ChatPlugin = { install(e, t) {
  e.provide(ChatOptionsSymbol, t);
  let n = ref([]), r = ref(null), i = ref(false), o = computed2(() => (t.initialMessages ?? []).map((e2) => ({
    id: v4_default(),
    text: e2,
    sender: "bot"
  })));
  async function s(e2, o3 = []) {
    let s2 = createUserMessage(e2, o3);
    n.value.push(s2), i.value = true, nextTick(() => {
      chatEventBus.emit("scrollToBottom");
    });
    let l = ref(null), d2 = new StreamingMessageManager();
    try {
      if (t?.enableStreaming) await handleStreamingMessage({
        text: e2,
        files: o3,
        sessionId: r.value,
        options: t,
        messages: n,
        receivedMessage: l,
        streamingManager: d2
      });
      else {
        let s3 = await handleNonStreamingMessage({
          text: e2,
          files: o3,
          sessionId: r.value,
          options: t
        });
        if (s3.response?.executionStarted) return i.value = false, s3.response;
        s3.botMessage && (l.value = s3.botMessage, n.value.push(s3.botMessage));
      }
    } catch (e3) {
      handleMessageError({
        error: e3,
        receivedMessage: l,
        messages: n
      });
    } finally {
      i.value = false;
    }
    return nextTick(() => {
      chatEventBus.emit("scrollToBottom");
    }), null;
  }
  async function d() {
    if (!t.loadPreviousSession) return;
    let e2 = localStorage.getItem(localStorageSessionIdKey) ?? v4_default();
    return n.value = ((await loadPreviousSession(e2, t))?.data || []).map((e3, t2) => ({
      id: `${t2}`,
      text: e3.kwargs.content,
      sender: e3.id.includes("HumanMessage") ? "user" : "bot"
    })), n.value.length && (r.value = e2), e2;
  }
  async function f() {
    r.value = v4_default(), localStorage.setItem(localStorageSessionIdKey, r.value);
  }
  let p2 = {
    initialMessages: o,
    messages: n,
    currentSessionId: r,
    waitingForResponse: i,
    loadPreviousSession: d,
    startNewSession: f,
    sendMessage: s
  };
  e.provide(ChatSymbol, p2), e.config.globalProperties.$chat = p2;
} };
var core_default = __toESM(__commonJSMin(((e, t) => {
  function n(e2) {
    return e2 instanceof Map ? e2.clear = e2.delete = e2.set = function() {
      throw Error("map is read-only");
    } : e2 instanceof Set && (e2.add = e2.clear = e2.delete = function() {
      throw Error("set is read-only");
    }), Object.freeze(e2), Object.getOwnPropertyNames(e2).forEach((t2) => {
      let r2 = e2[t2], i2 = typeof r2;
      (i2 === "object" || i2 === "function") && !Object.isFrozen(r2) && n(r2);
    }), e2;
  }
  var r = class {
    constructor(e2) {
      e2.data === void 0 && (e2.data = {}), this.data = e2.data, this.isMatchIgnored = false;
    }
    ignoreMatch() {
      this.isMatchIgnored = true;
    }
  };
  function i(e2) {
    return e2.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#x27;");
  }
  function o(e2, ...t2) {
    let n2 = /* @__PURE__ */ Object.create(null);
    for (let t3 in e2) n2[t3] = e2[t3];
    return t2.forEach(function(e3) {
      for (let t3 in e3) n2[t3] = e3[t3];
    }), n2;
  }
  var s = "</span>", l = (e2) => !!e2.scope, d = (e2, { prefix: t2 }) => {
    if (e2.startsWith("language:")) return e2.replace("language:", "language-");
    if (e2.includes(".")) {
      let n2 = e2.split(".");
      return [`${t2}${n2.shift()}`, ...n2.map((e3, t3) => `${e3}${"_".repeat(t3 + 1)}`)].join(" ");
    }
    return `${t2}${e2}`;
  }, f = class {
    constructor(e2, t2) {
      this.buffer = "", this.classPrefix = t2.classPrefix, e2.walk(this);
    }
    addText(e2) {
      this.buffer += i(e2);
    }
    openNode(e2) {
      if (!l(e2)) return;
      let t2 = d(e2.scope, { prefix: this.classPrefix });
      this.span(t2);
    }
    closeNode(e2) {
      l(e2) && (this.buffer += s);
    }
    value() {
      return this.buffer;
    }
    span(e2) {
      this.buffer += `<span class="${e2}">`;
    }
  }, p2 = (e2 = {}) => {
    let t2 = { children: [] };
    return Object.assign(t2, e2), t2;
  }, _ = class e2 {
    constructor() {
      this.rootNode = p2(), this.stack = [this.rootNode];
    }
    get top() {
      return this.stack[this.stack.length - 1];
    }
    get root() {
      return this.rootNode;
    }
    add(e3) {
      this.top.children.push(e3);
    }
    openNode(e3) {
      let t2 = p2({ scope: e3 });
      this.add(t2), this.stack.push(t2);
    }
    closeNode() {
      if (this.stack.length > 1) return this.stack.pop();
    }
    closeAllNodes() {
      for (; this.closeNode(); ) ;
    }
    toJSON() {
      return JSON.stringify(this.rootNode, null, 4);
    }
    walk(e3) {
      return this.constructor._walk(e3, this.rootNode);
    }
    static _walk(e3, t2) {
      return typeof t2 == "string" ? e3.addText(t2) : t2.children && (e3.openNode(t2), t2.children.forEach((t3) => this._walk(e3, t3)), e3.closeNode(t2)), e3;
    }
    static _collapse(t2) {
      typeof t2 != "string" && t2.children && (t2.children.every((e3) => typeof e3 == "string") ? t2.children = [t2.children.join("")] : t2.children.forEach((t3) => {
        e2._collapse(t3);
      }));
    }
  }, y = class extends _ {
    constructor(e2) {
      super(), this.options = e2;
    }
    addText(e2) {
      e2 !== "" && this.add(e2);
    }
    startScope(e2) {
      this.openNode(e2);
    }
    endScope() {
      this.closeNode();
    }
    __addSublanguage(e2, t2) {
      let n2 = e2.root;
      t2 && (n2.scope = `language:${t2}`), this.add(n2);
    }
    toHTML() {
      return new f(this, this.options).value();
    }
    finalize() {
      return this.closeAllNodes(), true;
    }
  };
  function x(e2) {
    return e2 ? typeof e2 == "string" ? e2 : e2.source : null;
  }
  function w(e2) {
    return A7("(?=", e2, ")");
  }
  function k(e2) {
    return A7("(?:", e2, ")*");
  }
  function $(e2) {
    return A7("(?:", e2, ")?");
  }
  function A7(...e2) {
    return e2.map((e3) => x(e3)).join("");
  }
  function j7(e2) {
    let t2 = e2[e2.length - 1];
    return typeof t2 == "object" && t2.constructor === Object ? (e2.splice(e2.length - 1, 1), t2) : {};
  }
  function M7(...e2) {
    return "(" + (j7(e2).capture ? "" : "?:") + e2.map((e3) => x(e3)).join("|") + ")";
  }
  function N7(e2) {
    return RegExp(e2.toString() + "|").exec("").length - 1;
  }
  function P7(e2, t2) {
    let n2 = e2 && e2.exec(t2);
    return n2 && n2.index === 0;
  }
  var F7 = /\[(?:[^\\\]]|\\.)*\]|\(\??|\\([1-9][0-9]*)|\\./;
  function I7(e2, { joinWith: t2 }) {
    let n2 = 0;
    return e2.map((e3) => {
      n2 += 1;
      let t3 = n2, r2 = x(e3), i2 = "";
      for (; r2.length > 0; ) {
        let e4 = F7.exec(r2);
        if (!e4) {
          i2 += r2;
          break;
        }
        i2 += r2.substring(0, e4.index), r2 = r2.substring(e4.index + e4[0].length), e4[0][0] === "\\" && e4[1] ? i2 += "\\" + String(Number(e4[1]) + t3) : (i2 += e4[0], e4[0] === "(" && n2++);
      }
      return i2;
    }).map((e3) => `(${e3})`).join(t2);
  }
  var L7 = /\b\B/, R7 = "[a-zA-Z]\\w*", z7 = "[a-zA-Z_]\\w*", B7 = "\\b\\d+(\\.\\d+)?", V7 = "(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)", H7 = "\\b(0b[01]+)", U7 = "!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~", W7 = (e2 = {}) => {
    let t2 = /^#![ ]*\//;
    return e2.binary && (e2.begin = A7(t2, /.*\b/, e2.binary, /\b.*/)), o({
      scope: "meta",
      begin: t2,
      end: /$/,
      relevance: 0,
      "on:begin": (e3, t3) => {
        e3.index !== 0 && t3.ignoreMatch();
      }
    }, e2);
  }, G7 = {
    begin: "\\\\[\\s\\S]",
    relevance: 0
  }, K7 = {
    scope: "string",
    begin: "'",
    end: "'",
    illegal: "\\n",
    contains: [G7]
  }, q7 = {
    scope: "string",
    begin: '"',
    end: '"',
    illegal: "\\n",
    contains: [G7]
  }, J7 = { begin: /\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b/ }, Y7 = function(e2, t2, n2 = {}) {
    let r2 = o({
      scope: "comment",
      begin: e2,
      end: t2,
      contains: []
    }, n2);
    r2.contains.push({
      scope: "doctag",
      begin: "[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)",
      end: /(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,
      excludeBegin: true,
      relevance: 0
    });
    let i2 = M7("I", "a", "is", "so", "us", "to", "at", "if", "in", "it", "on", /[A-Za-z]+['](d|ve|re|ll|t|s|n)/, /[A-Za-z]+[-][a-z]+/, /[A-Za-z][a-z]{2,}/);
    return r2.contains.push({ begin: A7(/[ ]+/, "(", i2, /[.]?[:]?([.][ ]|[ ])/, "){3}") }), r2;
  }, X7 = Y7("//", "$"), Z7 = Y7("/\\*", "\\*/"), Q7 = Y7("#", "$"), $7 = {
    scope: "number",
    begin: B7,
    relevance: 0
  }, e9 = {
    scope: "number",
    begin: V7,
    relevance: 0
  }, t9 = {
    scope: "number",
    begin: H7,
    relevance: 0
  }, n9 = {
    scope: "regexp",
    begin: /\/(?=[^/\n]*\/)/,
    end: /\/[gimuy]*/,
    contains: [G7, {
      begin: /\[/,
      end: /\]/,
      relevance: 0,
      contains: [G7]
    }]
  }, r9 = {
    scope: "title",
    begin: R7,
    relevance: 0
  }, i9 = {
    scope: "title",
    begin: z7,
    relevance: 0
  }, a9 = {
    begin: "\\.\\s*" + z7,
    relevance: 0
  }, o9 = Object.freeze({
    __proto__: null,
    APOS_STRING_MODE: K7,
    BACKSLASH_ESCAPE: G7,
    BINARY_NUMBER_MODE: t9,
    BINARY_NUMBER_RE: H7,
    COMMENT: Y7,
    C_BLOCK_COMMENT_MODE: Z7,
    C_LINE_COMMENT_MODE: X7,
    C_NUMBER_MODE: e9,
    C_NUMBER_RE: V7,
    END_SAME_AS_BEGIN: function(e2) {
      return Object.assign(e2, {
        "on:begin": (e3, t2) => {
          t2.data._beginMatch = e3[1];
        },
        "on:end": (e3, t2) => {
          t2.data._beginMatch !== e3[1] && t2.ignoreMatch();
        }
      });
    },
    HASH_COMMENT_MODE: Q7,
    IDENT_RE: R7,
    MATCH_NOTHING_RE: L7,
    METHOD_GUARD: a9,
    NUMBER_MODE: $7,
    NUMBER_RE: B7,
    PHRASAL_WORDS_MODE: J7,
    QUOTE_STRING_MODE: q7,
    REGEXP_MODE: n9,
    RE_STARTERS_RE: U7,
    SHEBANG: W7,
    TITLE_MODE: r9,
    UNDERSCORE_IDENT_RE: z7,
    UNDERSCORE_TITLE_MODE: i9
  });
  function s9(e2, t2) {
    e2.input[e2.index - 1] === "." && t2.ignoreMatch();
  }
  function c9(e2, t2) {
    e2.className !== void 0 && (e2.scope = e2.className, delete e2.className);
  }
  function l9(e2, t2) {
    t2 && e2.beginKeywords && (e2.begin = "\\b(" + e2.beginKeywords.split(" ").join("|") + ")(?!\\.)(?=\\b|\\s)", e2.__beforeBegin = s9, e2.keywords = e2.keywords || e2.beginKeywords, delete e2.beginKeywords, e2.relevance === void 0 && (e2.relevance = 0));
  }
  function u9(e2, t2) {
    Array.isArray(e2.illegal) && (e2.illegal = M7(...e2.illegal));
  }
  function d9(e2, t2) {
    if (e2.match) {
      if (e2.begin || e2.end) throw Error("begin & end are not supported with match");
      e2.begin = e2.match, delete e2.match;
    }
  }
  function f9(e2, t2) {
    e2.relevance === void 0 && (e2.relevance = 1);
  }
  var p9 = (e2, t2) => {
    if (!e2.beforeMatch) return;
    if (e2.starts) throw Error("beforeMatch cannot be used with starts");
    let n2 = Object.assign({}, e2);
    Object.keys(e2).forEach((t3) => {
      delete e2[t3];
    }), e2.keywords = n2.keywords, e2.begin = A7(n2.beforeMatch, w(n2.begin)), e2.starts = {
      relevance: 0,
      contains: [Object.assign(n2, { endsParent: true })]
    }, e2.relevance = 0, delete n2.beforeMatch;
  }, m9 = [
    "of",
    "and",
    "for",
    "in",
    "not",
    "or",
    "if",
    "then",
    "parent",
    "list",
    "value"
  ], h9 = "keyword";
  function g9(e2, t2, n2 = h9) {
    let r2 = /* @__PURE__ */ Object.create(null);
    return typeof e2 == "string" ? i2(n2, e2.split(" ")) : Array.isArray(e2) ? i2(n2, e2) : Object.keys(e2).forEach(function(n3) {
      Object.assign(r2, g9(e2[n3], t2, n3));
    }), r2;
    function i2(e3, n3) {
      t2 && (n3 = n3.map((e4) => e4.toLowerCase())), n3.forEach(function(t3) {
        let n4 = t3.split("|");
        r2[n4[0]] = [e3, _9(n4[0], n4[1])];
      });
    }
  }
  function _9(e2, t2) {
    return t2 ? Number(t2) : v9(e2) ? 0 : 1;
  }
  function v9(e2) {
    return m9.includes(e2.toLowerCase());
  }
  var y9 = {}, b9 = (e2) => {
    console.error(e2);
  }, x9 = (e2, ...t2) => {
    console.log(`WARN: ${e2}`, ...t2);
  }, S9 = (e2, t2) => {
    y9[`${e2}/${t2}`] || (console.log(`Deprecated as of ${e2}. ${t2}`), y9[`${e2}/${t2}`] = true);
  }, C9 = Error();
  function w9(e2, t2, { key: n2 }) {
    let r2 = 0, i2 = e2[n2], o3 = {}, s2 = {};
    for (let e3 = 1; e3 <= t2.length; e3++) s2[e3 + r2] = i2[e3], o3[e3 + r2] = true, r2 += N7(t2[e3 - 1]);
    e2[n2] = s2, e2[n2]._emit = o3, e2[n2]._multi = true;
  }
  function T9(e2) {
    if (Array.isArray(e2.begin)) {
      if (e2.skip || e2.excludeBegin || e2.returnBegin) throw b9("skip, excludeBegin, returnBegin not compatible with beginScope: {}"), C9;
      if (typeof e2.beginScope != "object" || e2.beginScope === null) throw b9("beginScope must be object"), C9;
      w9(e2, e2.begin, { key: "beginScope" }), e2.begin = I7(e2.begin, { joinWith: "" });
    }
  }
  function E9(e2) {
    if (Array.isArray(e2.end)) {
      if (e2.skip || e2.excludeEnd || e2.returnEnd) throw b9("skip, excludeEnd, returnEnd not compatible with endScope: {}"), C9;
      if (typeof e2.endScope != "object" || e2.endScope === null) throw b9("endScope must be object"), C9;
      w9(e2, e2.end, { key: "endScope" }), e2.end = I7(e2.end, { joinWith: "" });
    }
  }
  function D9(e2) {
    e2.scope && typeof e2.scope == "object" && e2.scope !== null && (e2.beginScope = e2.scope, delete e2.scope);
  }
  function O9(e2) {
    D9(e2), typeof e2.beginScope == "string" && (e2.beginScope = { _wrap: e2.beginScope }), typeof e2.endScope == "string" && (e2.endScope = { _wrap: e2.endScope }), T9(e2), E9(e2);
  }
  function k9(e2) {
    function t2(t3, n3) {
      return new RegExp(x(t3), "m" + (e2.case_insensitive ? "i" : "") + (e2.unicodeRegex ? "u" : "") + (n3 ? "g" : ""));
    }
    class n2 {
      constructor() {
        this.matchIndexes = {}, this.regexes = [], this.matchAt = 1, this.position = 0;
      }
      addRule(e3, t3) {
        t3.position = this.position++, this.matchIndexes[this.matchAt] = t3, this.regexes.push([t3, e3]), this.matchAt += N7(e3) + 1;
      }
      compile() {
        this.regexes.length === 0 && (this.exec = () => null), this.matcherRe = t2(I7(this.regexes.map((e3) => e3[1]), { joinWith: "|" }), true), this.lastIndex = 0;
      }
      exec(e3) {
        this.matcherRe.lastIndex = this.lastIndex;
        let t3 = this.matcherRe.exec(e3);
        if (!t3) return null;
        let n3 = t3.findIndex((e4, t4) => t4 > 0 && e4 !== void 0), r3 = this.matchIndexes[n3];
        return t3.splice(0, n3), Object.assign(t3, r3);
      }
    }
    class r2 {
      constructor() {
        this.rules = [], this.multiRegexes = [], this.count = 0, this.lastIndex = 0, this.regexIndex = 0;
      }
      getMatcher(e3) {
        if (this.multiRegexes[e3]) return this.multiRegexes[e3];
        let t3 = new n2();
        return this.rules.slice(e3).forEach(([e4, n3]) => t3.addRule(e4, n3)), t3.compile(), this.multiRegexes[e3] = t3, t3;
      }
      resumingScanAtSamePosition() {
        return this.regexIndex !== 0;
      }
      considerAll() {
        this.regexIndex = 0;
      }
      addRule(e3, t3) {
        this.rules.push([e3, t3]), t3.type === "begin" && this.count++;
      }
      exec(e3) {
        let t3 = this.getMatcher(this.regexIndex);
        t3.lastIndex = this.lastIndex;
        let n3 = t3.exec(e3);
        if (this.resumingScanAtSamePosition() && !(n3 && n3.index === this.lastIndex)) {
          let t4 = this.getMatcher(0);
          t4.lastIndex = this.lastIndex + 1, n3 = t4.exec(e3);
        }
        return n3 && (this.regexIndex += n3.position + 1, this.regexIndex === this.count && this.considerAll()), n3;
      }
    }
    function i2(e3) {
      let t3 = new r2();
      return e3.contains.forEach((e4) => t3.addRule(e4.begin, {
        rule: e4,
        type: "begin"
      })), e3.terminatorEnd && t3.addRule(e3.terminatorEnd, { type: "end" }), e3.illegal && t3.addRule(e3.illegal, { type: "illegal" }), t3;
    }
    function s2(n3, r3) {
      let o3 = n3;
      if (n3.isCompiled) return o3;
      [
        c9,
        d9,
        O9,
        p9
      ].forEach((e3) => e3(n3, r3)), e2.compilerExtensions.forEach((e3) => e3(n3, r3)), n3.__beforeBegin = null, [
        l9,
        u9,
        f9
      ].forEach((e3) => e3(n3, r3)), n3.isCompiled = true;
      let l2 = null;
      return typeof n3.keywords == "object" && n3.keywords.$pattern && (n3.keywords = Object.assign({}, n3.keywords), l2 = n3.keywords.$pattern, delete n3.keywords.$pattern), l2 ||= /\w+/, n3.keywords &&= g9(n3.keywords, e2.case_insensitive), o3.keywordPatternRe = t2(l2, true), r3 && (n3.begin ||= /\B|\b/, o3.beginRe = t2(o3.begin), !n3.end && !n3.endsWithParent && (n3.end = /\B|\b/), n3.end && (o3.endRe = t2(o3.end)), o3.terminatorEnd = x(o3.end) || "", n3.endsWithParent && r3.terminatorEnd && (o3.terminatorEnd += (n3.end ? "|" : "") + r3.terminatorEnd)), n3.illegal && (o3.illegalRe = t2(n3.illegal)), n3.contains ||= [], n3.contains = [].concat(...n3.contains.map(function(e3) {
        return j9(e3 === "self" ? n3 : e3);
      })), n3.contains.forEach(function(e3) {
        s2(e3, o3);
      }), n3.starts && s2(n3.starts, r3), o3.matcher = i2(o3), o3;
    }
    if (e2.compilerExtensions ||= [], e2.contains && e2.contains.includes("self")) throw Error("ERR: contains `self` is not supported at the top-level of a language.  See documentation.");
    return e2.classNameAliases = o(e2.classNameAliases || {}), s2(e2);
  }
  function A9(e2) {
    return e2 ? e2.endsWithParent || A9(e2.starts) : false;
  }
  function j9(e2) {
    return e2.variants && !e2.cachedVariants && (e2.cachedVariants = e2.variants.map(function(t2) {
      return o(e2, { variants: null }, t2);
    })), e2.cachedVariants ? e2.cachedVariants : A9(e2) ? o(e2, { starts: e2.starts ? o(e2.starts) : null }) : Object.isFrozen(e2) ? o(e2) : e2;
  }
  var M9 = "11.11.1", N9 = class extends Error {
    constructor(e2, t2) {
      super(e2), this.name = "HTMLInjectionError", this.html = t2;
    }
  }, P9 = i, F9 = o, I9 = Symbol("nomatch"), L9 = 7, R9 = function(e2) {
    let t2 = /* @__PURE__ */ Object.create(null), i2 = /* @__PURE__ */ Object.create(null), o3 = [], s2 = true, l2 = "Could not find the language '{}', did you forget to load/include a language module?", d2 = {
      disableAutodetect: true,
      name: "Plain text",
      contains: []
    }, f2 = {
      ignoreUnescapedHTML: false,
      throwUnescapedHTML: false,
      noHighlightRe: /^(no-?highlight)$/i,
      languageDetectRe: /\blang(?:uage)?-([\w-]+)\b/i,
      classPrefix: "hljs-",
      cssSelector: "pre code",
      languages: null,
      __emitter: y
    };
    function p3(e3) {
      return f2.noHighlightRe.test(e3);
    }
    function _2(e3) {
      let t3 = e3.className + " ";
      t3 += e3.parentNode ? e3.parentNode.className : "";
      let n2 = f2.languageDetectRe.exec(t3);
      if (n2) {
        let t4 = K72(n2[1]);
        return t4 || (x9(l2.replace("{}", n2[1])), x9("Falling back to no-highlight mode for this block.", e3)), t4 ? n2[1] : "no-highlight";
      }
      return t3.split(/\s+/).find((e4) => p3(e4) || K72(e4));
    }
    function x2(e3, t3, n2) {
      let r2 = "", i3 = "";
      typeof t3 == "object" ? (r2 = e3, n2 = t3.ignoreIllegals, i3 = t3.language) : (S9("10.7.0", "highlight(lang, code, ...args) has been deprecated."), S9("10.7.0", "Please use highlight(code, options) instead.\nhttps://github.com/highlightjs/highlight.js/issues/2277"), i3 = e3, r2 = t3), n2 === void 0 && (n2 = true);
      let o4 = {
        code: r2,
        language: i3
      };
      Q72("before:highlight", o4);
      let s3 = o4.result ? o4.result : j72(o4.language, o4.code, n2);
      return s3.code = o4.code, Q72("after:highlight", s3), s3;
    }
    function j72(e3, n2, i3, o4) {
      let d3 = /* @__PURE__ */ Object.create(null);
      function p4(e4, t3) {
        return e4.keywords[t3];
      }
      function _3() {
        if (!U73.keywords) {
          G73.addText(q73);
          return;
        }
        let e4 = 0;
        U73.keywordPatternRe.lastIndex = 0;
        let t3 = U73.keywordPatternRe.exec(q73), n3 = "";
        for (; t3; ) {
          n3 += q73.substring(e4, t3.index);
          let r2 = B73.case_insensitive ? t3[0].toLowerCase() : t3[0], i4 = p4(U73, r2);
          if (i4) {
            let [e5, o5] = i4;
            if (G73.addText(n3), n3 = "", d3[r2] = (d3[r2] || 0) + 1, d3[r2] <= L9 && (J73 += o5), e5.startsWith("_")) n3 += t3[0];
            else {
              let n4 = B73.classNameAliases[e5] || e5;
              w2(t3[0], n4);
            }
          } else n3 += t3[0];
          e4 = U73.keywordPatternRe.lastIndex, t3 = U73.keywordPatternRe.exec(q73);
        }
        n3 += q73.substring(e4), G73.addText(n3);
      }
      function y2() {
        if (q73 === "") return;
        let e4 = null;
        if (typeof U73.subLanguage == "string") {
          if (!t2[U73.subLanguage]) {
            G73.addText(q73);
            return;
          }
          e4 = j72(U73.subLanguage, q73, true, W73[U73.subLanguage]), W73[U73.subLanguage] = e4._top;
        } else e4 = F72(q73, U73.subLanguage.length ? U73.subLanguage : null);
        U73.relevance > 0 && (J73 += e4.relevance), G73.__addSublanguage(e4._emitter, e4.language);
      }
      function x3() {
        U73.subLanguage == null ? _3() : y2(), q73 = "";
      }
      function w2(e4, t3) {
        e4 !== "" && (G73.startScope(t3), G73.addText(e4), G73.endScope());
      }
      function k2(e4, t3) {
        let n3 = 1, r2 = t3.length - 1;
        for (; n3 <= r2; ) {
          if (!e4._emit[n3]) {
            n3++;
            continue;
          }
          let r3 = B73.classNameAliases[e4[n3]] || e4[n3], i4 = t3[n3];
          r3 ? w2(i4, r3) : (q73 = i4, _3(), q73 = ""), n3++;
        }
      }
      function $2(e4, t3) {
        return e4.scope && typeof e4.scope == "string" && G73.openNode(B73.classNameAliases[e4.scope] || e4.scope), e4.beginScope && (e4.beginScope._wrap ? (w2(q73, B73.classNameAliases[e4.beginScope._wrap] || e4.beginScope._wrap), q73 = "") : e4.beginScope._multi && (k2(e4.beginScope, t3), q73 = "")), U73 = Object.create(e4, { parent: { value: U73 } }), U73;
      }
      function A72(e4, t3, n3) {
        let i4 = P7(e4.endRe, n3);
        if (i4) {
          if (e4["on:end"]) {
            let n4 = new r(e4);
            e4["on:end"](t3, n4), n4.isMatchIgnored && (i4 = false);
          }
          if (i4) {
            for (; e4.endsParent && e4.parent; ) e4 = e4.parent;
            return e4;
          }
        }
        if (e4.endsWithParent) return A72(e4.parent, t3, n3);
      }
      function M72(e4) {
        return U73.matcher.regexIndex === 0 ? (q73 += e4[0], 1) : (Z73 = true, 0);
      }
      function N73(e4) {
        let t3 = e4[0], n3 = e4.rule, i4 = new r(n3), o5 = [n3.__beforeBegin, n3["on:begin"]];
        for (let n4 of o5) if (n4 && (n4(e4, i4), i4.isMatchIgnored)) return M72(t3);
        return n3.skip ? q73 += t3 : (n3.excludeBegin && (q73 += t3), x3(), !n3.returnBegin && !n3.excludeBegin && (q73 = t3)), $2(n3, e4), n3.returnBegin ? 0 : t3.length;
      }
      function I73(e4) {
        let t3 = e4[0], r2 = n2.substring(e4.index), i4 = A72(U73, e4, r2);
        if (!i4) return I9;
        let o5 = U73;
        U73.endScope && U73.endScope._wrap ? (x3(), w2(t3, U73.endScope._wrap)) : U73.endScope && U73.endScope._multi ? (x3(), k2(U73.endScope, e4)) : o5.skip ? q73 += t3 : (o5.returnEnd || o5.excludeEnd || (q73 += t3), x3(), o5.excludeEnd && (q73 = t3));
        do
          U73.scope && G73.closeNode(), !U73.skip && !U73.subLanguage && (J73 += U73.relevance), U73 = U73.parent;
        while (U73 !== i4.parent);
        return i4.starts && $2(i4.starts, e4), o5.returnEnd ? 0 : t3.length;
      }
      function L73() {
        let e4 = [];
        for (let t3 = U73; t3 !== B73; t3 = t3.parent) t3.scope && e4.unshift(t3.scope);
        e4.forEach((e5) => G73.openNode(e5));
      }
      let R73 = {};
      function z73(t3, r2) {
        let o5 = r2 && r2[0];
        if (q73 += t3, o5 == null) return x3(), 0;
        if (R73.type === "begin" && r2.type === "end" && R73.index === r2.index && o5 === "") {
          if (q73 += n2.slice(r2.index, r2.index + 1), !s2) {
            let t4 = Error(`0 width match regex (${e3})`);
            throw t4.languageName = e3, t4.badRule = R73.rule, t4;
          }
          return 1;
        }
        if (R73 = r2, r2.type === "begin") return N73(r2);
        if (r2.type === "illegal" && !i3) {
          let e4 = Error('Illegal lexeme "' + o5 + '" for mode "' + (U73.scope || "<unnamed>") + '"');
          throw e4.mode = U73, e4;
        } else if (r2.type === "end") {
          let e4 = I73(r2);
          if (e4 !== I9) return e4;
        }
        if (r2.type === "illegal" && o5 === "") return q73 += "\n", 1;
        if (X73 > 1e5 && X73 > r2.index * 3) throw Error("potential infinite loop, way more iterations than matches");
        return q73 += o5, o5.length;
      }
      let B73 = K72(e3);
      if (!B73) throw b9(l2.replace("{}", e3)), Error('Unknown language: "' + e3 + '"');
      let V73 = k9(B73), H73 = "", U73 = o4 || V73, W73 = {}, G73 = new f2.__emitter(f2);
      L73();
      let q73 = "", J73 = 0, Y73 = 0, X73 = 0, Z73 = false;
      try {
        if (B73.__emitTokens) B73.__emitTokens(n2, G73);
        else {
          for (U73.matcher.considerAll(); ; ) {
            X73++, Z73 ? Z73 = false : U73.matcher.considerAll(), U73.matcher.lastIndex = Y73;
            let e4 = U73.matcher.exec(n2);
            if (!e4) break;
            let t3 = z73(n2.substring(Y73, e4.index), e4);
            Y73 = e4.index + t3;
          }
          z73(n2.substring(Y73));
        }
        return G73.finalize(), H73 = G73.toHTML(), {
          language: e3,
          value: H73,
          relevance: J73,
          illegal: false,
          _emitter: G73,
          _top: U73
        };
      } catch (t3) {
        if (t3.message && t3.message.includes("Illegal")) return {
          language: e3,
          value: P9(n2),
          illegal: true,
          relevance: 0,
          _illegalBy: {
            message: t3.message,
            index: Y73,
            context: n2.slice(Y73 - 100, Y73 + 100),
            mode: t3.mode,
            resultSoFar: H73
          },
          _emitter: G73
        };
        if (s2) return {
          language: e3,
          value: P9(n2),
          illegal: false,
          relevance: 0,
          errorRaised: t3,
          _emitter: G73,
          _top: U73
        };
        throw t3;
      }
    }
    function N72(e3) {
      let t3 = {
        value: P9(e3),
        illegal: false,
        relevance: 0,
        _top: d2,
        _emitter: new f2.__emitter(f2)
      };
      return t3._emitter.addText(e3), t3;
    }
    function F72(e3, n2) {
      n2 = n2 || f2.languages || Object.keys(t2);
      let r2 = N72(e3), i3 = n2.filter(K72).filter(J72).map((t3) => j72(t3, e3, false));
      i3.unshift(r2);
      let [o4, s3] = i3.sort((e4, t3) => {
        if (e4.relevance !== t3.relevance) return t3.relevance - e4.relevance;
        if (e4.language && t3.language) {
          if (K72(e4.language).supersetOf === t3.language) return 1;
          if (K72(t3.language).supersetOf === e4.language) return -1;
        }
        return 0;
      }), l3 = o4;
      return l3.secondBest = s3, l3;
    }
    function I72(e3, t3, n2) {
      let r2 = t3 && i2[t3] || n2;
      e3.classList.add("hljs"), e3.classList.add(`language-${r2}`);
    }
    function L72(e3) {
      let t3 = null, n2 = _2(e3);
      if (p3(n2)) return;
      if (Q72("before:highlightElement", {
        el: e3,
        language: n2
      }), e3.dataset.highlighted) {
        console.log("Element previously highlighted. To highlight again, first unset `dataset.highlighted`.", e3);
        return;
      }
      if (e3.children.length > 0 && (f2.ignoreUnescapedHTML || (console.warn("One of your code blocks includes unescaped HTML. This is a potentially serious security risk."), console.warn("https://github.com/highlightjs/highlight.js/wiki/security"), console.warn("The element with unescaped HTML:"), console.warn(e3)), f2.throwUnescapedHTML)) throw new N9("One of your code blocks includes unescaped HTML.", e3.innerHTML);
      t3 = e3;
      let r2 = t3.textContent, i3 = n2 ? x2(r2, {
        language: n2,
        ignoreIllegals: true
      }) : F72(r2);
      e3.innerHTML = i3.value, e3.dataset.highlighted = "yes", I72(e3, n2, i3.language), e3.result = {
        language: i3.language,
        re: i3.relevance,
        relevance: i3.relevance
      }, i3.secondBest && (e3.secondBest = {
        language: i3.secondBest.language,
        relevance: i3.secondBest.relevance
      }), Q72("after:highlightElement", {
        el: e3,
        result: i3,
        text: r2
      });
    }
    function R72(e3) {
      f2 = F9(f2, e3);
    }
    let z72 = () => {
      H72(), S9("10.6.0", "initHighlighting() deprecated.  Use highlightAll() now.");
    };
    function B72() {
      H72(), S9("10.6.0", "initHighlightingOnLoad() deprecated.  Use highlightAll() now.");
    }
    let V72 = false;
    function H72() {
      function e3() {
        H72();
      }
      if (document.readyState === "loading") {
        V72 || window.addEventListener("DOMContentLoaded", e3, false), V72 = true;
        return;
      }
      document.querySelectorAll(f2.cssSelector).forEach(L72);
    }
    function U72(n2, r2) {
      let i3 = null;
      try {
        i3 = r2(e2);
      } catch (e3) {
        if (b9("Language definition for '{}' could not be registered.".replace("{}", n2)), s2) b9(e3);
        else throw e3;
        i3 = d2;
      }
      i3.name ||= n2, t2[n2] = i3, i3.rawDefinition = r2.bind(null, e2), i3.aliases && q72(i3.aliases, { languageName: n2 });
    }
    function W72(e3) {
      delete t2[e3];
      for (let t3 of Object.keys(i2)) i2[t3] === e3 && delete i2[t3];
    }
    function G72() {
      return Object.keys(t2);
    }
    function K72(e3) {
      return e3 = (e3 || "").toLowerCase(), t2[e3] || t2[i2[e3]];
    }
    function q72(e3, { languageName: t3 }) {
      typeof e3 == "string" && (e3 = [e3]), e3.forEach((e4) => {
        i2[e4.toLowerCase()] = t3;
      });
    }
    function J72(e3) {
      let t3 = K72(e3);
      return t3 && !t3.disableAutodetect;
    }
    function Y72(e3) {
      e3["before:highlightBlock"] && !e3["before:highlightElement"] && (e3["before:highlightElement"] = (t3) => {
        e3["before:highlightBlock"](Object.assign({ block: t3.el }, t3));
      }), e3["after:highlightBlock"] && !e3["after:highlightElement"] && (e3["after:highlightElement"] = (t3) => {
        e3["after:highlightBlock"](Object.assign({ block: t3.el }, t3));
      });
    }
    function X72(e3) {
      Y72(e3), o3.push(e3);
    }
    function Z72(e3) {
      let t3 = o3.indexOf(e3);
      t3 !== -1 && o3.splice(t3, 1);
    }
    function Q72(e3, t3) {
      let n2 = e3;
      o3.forEach(function(e4) {
        e4[n2] && e4[n2](t3);
      });
    }
    function $72(e3) {
      return S9("10.7.0", "highlightBlock will be removed entirely in v12.0"), S9("10.7.0", "Please use highlightElement now."), L72(e3);
    }
    for (let t3 in Object.assign(e2, {
      highlight: x2,
      highlightAuto: F72,
      highlightAll: H72,
      highlightElement: L72,
      highlightBlock: $72,
      configure: R72,
      initHighlighting: z72,
      initHighlightingOnLoad: B72,
      registerLanguage: U72,
      unregisterLanguage: W72,
      listLanguages: G72,
      getLanguage: K72,
      registerAliases: q72,
      autoDetection: J72,
      inherit: F9,
      addPlugin: X72,
      removePlugin: Z72
    }), e2.debugMode = function() {
      s2 = false;
    }, e2.safeMode = function() {
      s2 = true;
    }, e2.versionString = M9, e2.regex = {
      concat: A7,
      lookahead: w,
      either: M7,
      optional: $,
      anyNumberOfTimes: k
    }, o9) typeof o9[t3] == "object" && n(o9[t3]);
    return Object.assign(e2, o9), e2;
  }, z9 = R9({});
  z9.newInstance = () => R9({}), t.exports = z9, z9.HighlightJS = z9, z9.default = z9;
}))()).default;
var IDENT_RE$1 = "[A-Za-z$_][0-9A-Za-z$_]*";
var KEYWORDS$1 = "as.in.of.if.for.while.finally.var.new.function.do.return.void.else.break.catch.instanceof.with.throw.case.default.try.switch.continue.typeof.delete.let.yield.const.class.debugger.async.await.static.import.from.export.extends.using".split(".");
var LITERALS$1 = [
  "true",
  "false",
  "null",
  "undefined",
  "NaN",
  "Infinity"
];
var TYPES$1 = "Object.Function.Boolean.Symbol.Math.Date.Number.BigInt.String.RegExp.Array.Float32Array.Float64Array.Int8Array.Uint8Array.Uint8ClampedArray.Int16Array.Int32Array.Uint16Array.Uint32Array.BigInt64Array.BigUint64Array.Set.Map.WeakSet.WeakMap.ArrayBuffer.SharedArrayBuffer.Atomics.DataView.JSON.Promise.Generator.GeneratorFunction.AsyncFunction.Reflect.Proxy.Intl.WebAssembly".split(".");
var ERROR_TYPES$1 = [
  "Error",
  "EvalError",
  "InternalError",
  "RangeError",
  "ReferenceError",
  "SyntaxError",
  "TypeError",
  "URIError"
];
var BUILT_IN_GLOBALS$1 = [
  "setInterval",
  "setTimeout",
  "clearInterval",
  "clearTimeout",
  "require",
  "exports",
  "eval",
  "isFinite",
  "isNaN",
  "parseFloat",
  "parseInt",
  "decodeURI",
  "decodeURIComponent",
  "encodeURI",
  "encodeURIComponent",
  "escape",
  "unescape"
];
var BUILT_IN_VARIABLES$1 = [
  "arguments",
  "this",
  "super",
  "console",
  "window",
  "document",
  "localStorage",
  "sessionStorage",
  "module",
  "global"
];
var BUILT_INS$1 = [].concat(BUILT_IN_GLOBALS$1, TYPES$1, ERROR_TYPES$1);
function javascript(e) {
  let t = e.regex, n = (e2, { after: t2 }) => {
    let n2 = "</" + e2[0].slice(1);
    return e2.input.indexOf(n2, t2) !== -1;
  }, r = IDENT_RE$1, i = {
    begin: "<>",
    end: "</>"
  }, o = /<[A-Za-z0-9\\._:-]+\s*\/>/, s = {
    begin: /<[A-Za-z0-9\\._:-]+/,
    end: /\/[A-Za-z0-9\\._:-]+>|\/>/,
    isTrulyOpeningTag: (e2, t2) => {
      let r2 = e2[0].length + e2.index, i2 = e2.input[r2];
      if (i2 === "<" || i2 === ",") {
        t2.ignoreMatch();
        return;
      }
      i2 === ">" && (n(e2, { after: r2 }) || t2.ignoreMatch());
      let o3, s2 = e2.input.substring(r2);
      if (o3 = s2.match(/^\s*=/)) {
        t2.ignoreMatch();
        return;
      }
      if ((o3 = s2.match(/^\s+extends\s+/)) && o3.index === 0) {
        t2.ignoreMatch();
        return;
      }
    }
  }, l = {
    $pattern: IDENT_RE$1,
    keyword: KEYWORDS$1,
    literal: LITERALS$1,
    built_in: BUILT_INS$1,
    "variable.language": BUILT_IN_VARIABLES$1
  }, d = "[0-9](_?[0-9])*", f = `\\.(${d})`, p2 = "0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*", _ = {
    className: "number",
    variants: [
      { begin: `(\\b(${p2})((${f})|\\.)?|(${f}))[eE][+-]?(${d})\\b` },
      { begin: `\\b(${p2})\\b((${f})\\b|\\.)?|(${f})\\b` },
      { begin: "\\b(0|[1-9](_?[0-9])*)n\\b" },
      { begin: "\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\b" },
      { begin: "\\b0[bB][0-1](_?[0-1])*n?\\b" },
      { begin: "\\b0[oO][0-7](_?[0-7])*n?\\b" },
      { begin: "\\b0[0-7]+n?\\b" }
    ],
    relevance: 0
  }, y = {
    className: "subst",
    begin: "\\$\\{",
    end: "\\}",
    keywords: l,
    contains: []
  }, x = {
    begin: ".?html`",
    end: "",
    starts: {
      end: "`",
      returnEnd: false,
      contains: [e.BACKSLASH_ESCAPE, y],
      subLanguage: "xml"
    }
  }, w = {
    begin: ".?css`",
    end: "",
    starts: {
      end: "`",
      returnEnd: false,
      contains: [e.BACKSLASH_ESCAPE, y],
      subLanguage: "css"
    }
  }, k = {
    begin: ".?gql`",
    end: "",
    starts: {
      end: "`",
      returnEnd: false,
      contains: [e.BACKSLASH_ESCAPE, y],
      subLanguage: "graphql"
    }
  }, $ = {
    className: "string",
    begin: "`",
    end: "`",
    contains: [e.BACKSLASH_ESCAPE, y]
  }, A7 = {
    className: "comment",
    variants: [
      e.COMMENT(/\/\*\*(?!\/)/, "\\*/", {
        relevance: 0,
        contains: [{
          begin: "(?=@[A-Za-z]+)",
          relevance: 0,
          contains: [
            {
              className: "doctag",
              begin: "@[A-Za-z]+"
            },
            {
              className: "type",
              begin: "\\{",
              end: "\\}",
              excludeEnd: true,
              excludeBegin: true,
              relevance: 0
            },
            {
              className: "variable",
              begin: r + "(?=\\s*(-)|$)",
              endsParent: true,
              relevance: 0
            },
            {
              begin: /(?=[^\n])\s/,
              relevance: 0
            }
          ]
        }]
      }),
      e.C_BLOCK_COMMENT_MODE,
      e.C_LINE_COMMENT_MODE
    ]
  }, j7 = [
    e.APOS_STRING_MODE,
    e.QUOTE_STRING_MODE,
    x,
    w,
    k,
    $,
    { match: /\$\d+/ },
    _
  ];
  y.contains = j7.concat({
    begin: /\{/,
    end: /\}/,
    keywords: l,
    contains: ["self"].concat(j7)
  });
  let M7 = [].concat(A7, y.contains), N7 = M7.concat([{
    begin: /(\s*)\(/,
    end: /\)/,
    keywords: l,
    contains: ["self"].concat(M7)
  }]), P7 = {
    className: "params",
    begin: /(\s*)\(/,
    end: /\)/,
    excludeBegin: true,
    excludeEnd: true,
    keywords: l,
    contains: N7
  }, F7 = { variants: [{
    match: [
      /class/,
      /\s+/,
      r,
      /\s+/,
      /extends/,
      /\s+/,
      t.concat(r, "(", t.concat(/\./, r), ")*")
    ],
    scope: {
      1: "keyword",
      3: "title.class",
      5: "keyword",
      7: "title.class.inherited"
    }
  }, {
    match: [
      /class/,
      /\s+/,
      r
    ],
    scope: {
      1: "keyword",
      3: "title.class"
    }
  }] }, I7 = {
    relevance: 0,
    match: t.either(/\bJSON/, /\b[A-Z][a-z]+([A-Z][a-z]*|\d)*/, /\b[A-Z]{2,}([A-Z][a-z]+|\d)+([A-Z][a-z]*)*/, /\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\d)*([A-Z][a-z]*)*/),
    className: "title.class",
    keywords: { _: [...TYPES$1, ...ERROR_TYPES$1] }
  }, L7 = {
    label: "use_strict",
    className: "meta",
    relevance: 10,
    begin: /^\s*['"]use (strict|asm)['"]/
  }, R7 = {
    variants: [{ match: [
      /function/,
      /\s+/,
      r,
      /(?=\s*\()/
    ] }, { match: [/function/, /\s*(?=\()/] }],
    className: {
      1: "keyword",
      3: "title.function"
    },
    label: "func.def",
    contains: [P7],
    illegal: /%/
  }, z7 = {
    relevance: 0,
    match: /\b[A-Z][A-Z_0-9]+\b/,
    className: "variable.constant"
  };
  function B7(e2) {
    return t.concat("(?!", e2.join("|"), ")");
  }
  let V7 = {
    match: t.concat(/\b/, B7([
      ...BUILT_IN_GLOBALS$1,
      "super",
      "import"
    ].map((e2) => `${e2}\\s*\\(`)), r, t.lookahead(/\s*\(/)),
    className: "title.function",
    relevance: 0
  }, H7 = {
    begin: t.concat(/\./, t.lookahead(t.concat(r, /(?![0-9A-Za-z$_(])/))),
    end: r,
    excludeBegin: true,
    keywords: "prototype",
    className: "property",
    relevance: 0
  }, U7 = {
    match: [
      /get|set/,
      /\s+/,
      r,
      /(?=\()/
    ],
    className: {
      1: "keyword",
      3: "title.function"
    },
    contains: [{ begin: /\(\)/ }, P7]
  }, W7 = "(\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)|" + e.UNDERSCORE_IDENT_RE + ")\\s*=>", G7 = {
    match: [
      /const|var|let/,
      /\s+/,
      r,
      /\s*/,
      /=\s*/,
      /(async\s*)?/,
      t.lookahead(W7)
    ],
    keywords: "async",
    className: {
      1: "keyword",
      3: "title.function"
    },
    contains: [P7]
  };
  return {
    name: "JavaScript",
    aliases: [
      "js",
      "jsx",
      "mjs",
      "cjs"
    ],
    keywords: l,
    exports: {
      PARAMS_CONTAINS: N7,
      CLASS_REFERENCE: I7
    },
    illegal: /#(?![$_A-z])/,
    contains: [
      e.SHEBANG({
        label: "shebang",
        binary: "node",
        relevance: 5
      }),
      L7,
      e.APOS_STRING_MODE,
      e.QUOTE_STRING_MODE,
      x,
      w,
      k,
      $,
      A7,
      { match: /\$\d+/ },
      _,
      I7,
      {
        scope: "attr",
        match: r + t.lookahead(":"),
        relevance: 0
      },
      G7,
      {
        begin: "(" + e.RE_STARTERS_RE + "|\\b(case|return|throw)\\b)\\s*",
        keywords: "return throw case",
        relevance: 0,
        contains: [
          A7,
          e.REGEXP_MODE,
          {
            className: "function",
            begin: W7,
            returnBegin: true,
            end: "\\s*=>",
            contains: [{
              className: "params",
              variants: [
                {
                  begin: e.UNDERSCORE_IDENT_RE,
                  relevance: 0
                },
                {
                  className: null,
                  begin: /\(\s*\)/,
                  skip: true
                },
                {
                  begin: /(\s*)\(/,
                  end: /\)/,
                  excludeBegin: true,
                  excludeEnd: true,
                  keywords: l,
                  contains: N7
                }
              ]
            }]
          },
          {
            begin: /,/,
            relevance: 0
          },
          {
            match: /\s+/,
            relevance: 0
          },
          {
            variants: [
              {
                begin: i.begin,
                end: i.end
              },
              { match: o },
              {
                begin: s.begin,
                "on:begin": s.isTrulyOpeningTag,
                end: s.end
              }
            ],
            subLanguage: "xml",
            contains: [{
              begin: s.begin,
              end: s.end,
              skip: true,
              contains: ["self"]
            }]
          }
        ]
      },
      R7,
      { beginKeywords: "while if switch catch for" },
      {
        begin: "\\b(?!function)" + e.UNDERSCORE_IDENT_RE + "\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)\\s*\\{",
        returnBegin: true,
        label: "func.def",
        contains: [P7, e.inherit(e.TITLE_MODE, {
          begin: r,
          className: "title.function"
        })]
      },
      {
        match: /\.\.\./,
        relevance: 0
      },
      H7,
      {
        match: "\\$" + r,
        relevance: 0
      },
      {
        match: [/\bconstructor(?=\s*\()/],
        className: { 1: "title.function" },
        contains: [P7]
      },
      V7,
      z7,
      F7,
      U7,
      { match: /\$[(.]/ }
    ]
  };
}
function xml(e) {
  let t = e.regex, n = t.concat(/[\p{L}_]/u, t.optional(/[\p{L}0-9_.-]*:/u), /[\p{L}0-9_.-]*/u), r = /[\p{L}0-9._:-]+/u, i = {
    className: "symbol",
    begin: /&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/
  }, o = {
    begin: /\s/,
    contains: [{
      className: "keyword",
      begin: /#?[a-z_][a-z1-9_-]+/,
      illegal: /\n/
    }]
  }, s = e.inherit(o, {
    begin: /\(/,
    end: /\)/
  }), l = e.inherit(e.APOS_STRING_MODE, { className: "string" }), d = e.inherit(e.QUOTE_STRING_MODE, { className: "string" }), f = {
    endsWithParent: true,
    illegal: /</,
    relevance: 0,
    contains: [{
      className: "attr",
      begin: r,
      relevance: 0
    }, {
      begin: /=\s*/,
      relevance: 0,
      contains: [{
        className: "string",
        endsParent: true,
        variants: [
          {
            begin: /"/,
            end: /"/,
            contains: [i]
          },
          {
            begin: /'/,
            end: /'/,
            contains: [i]
          },
          { begin: /[^\s"'=<>`]+/ }
        ]
      }]
    }]
  };
  return {
    name: "HTML, XML",
    aliases: [
      "html",
      "xhtml",
      "rss",
      "atom",
      "xjb",
      "xsd",
      "xsl",
      "plist",
      "wsf",
      "svg"
    ],
    case_insensitive: true,
    unicodeRegex: true,
    contains: [
      {
        className: "meta",
        begin: /<![a-z]/,
        end: />/,
        relevance: 10,
        contains: [
          o,
          d,
          l,
          s,
          {
            begin: /\[/,
            end: /\]/,
            contains: [{
              className: "meta",
              begin: /<![a-z]/,
              end: />/,
              contains: [
                o,
                s,
                d,
                l
              ]
            }]
          }
        ]
      },
      e.COMMENT(/<!--/, /-->/, { relevance: 10 }),
      {
        begin: /<!\[CDATA\[/,
        end: /\]\]>/,
        relevance: 10
      },
      i,
      {
        className: "meta",
        end: /\?>/,
        variants: [{
          begin: /<\?xml/,
          relevance: 10,
          contains: [d]
        }, { begin: /<\?[a-z][a-z0-9]+/ }]
      },
      {
        className: "tag",
        begin: /<style(?=\s|>)/,
        end: />/,
        keywords: { name: "style" },
        contains: [f],
        starts: {
          end: /<\/style>/,
          returnEnd: true,
          subLanguage: ["css", "xml"]
        }
      },
      {
        className: "tag",
        begin: /<script(?=\s|>)/,
        end: />/,
        keywords: { name: "script" },
        contains: [f],
        starts: {
          end: /<\/script>/,
          returnEnd: true,
          subLanguage: [
            "javascript",
            "handlebars",
            "xml"
          ]
        }
      },
      {
        className: "tag",
        begin: /<>|<\/>/
      },
      {
        className: "tag",
        begin: t.concat(/</, t.lookahead(t.concat(n, t.either(/\/>/, />/, /\s/)))),
        end: /\/?>/,
        contains: [{
          className: "name",
          begin: n,
          relevance: 0,
          starts: f
        }]
      },
      {
        className: "tag",
        begin: t.concat(/<\//, t.lookahead(t.concat(n, />/))),
        contains: [{
          className: "name",
          begin: n,
          relevance: 0
        }, {
          begin: />/,
          relevance: 0,
          endsParent: true
        }]
      }
    ]
  };
}
var _hoisted_1$223 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$196(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$223, t[0] ||= [createBaseVNode("path", {
    fill: "currentColor",
    d: "M19 6.41L17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12z"
  }, null, -1)]);
}
var close_default = {
  name: "mdi-close",
  render: render$196
};
var __plugin_vue_export_helper_default = (e, t) => {
  let n = e.__vccOpts || e;
  for (let [e2, r] of t) n[e2] = r;
  return n;
};
var _sfc_main$11 = {};
var _hoisted_1$222 = { class: "chat-button" };
function _sfc_render$11(e, t) {
  return openBlock(), createElementBlock("button", _hoisted_1$222, [renderSlot(e.$slots, "default")]);
}
var Button_default$1 = __plugin_vue_export_helper_default(_sfc_main$11, [["render", _sfc_render$11]]);
function useChat() {
  return inject(ChatSymbol);
}
function useOptions() {
  return { options: inject(ChatOptionsSymbol) };
}
function useI18n() {
  let { options: e } = useOptions(), t = e?.defaultLanguage ?? "en";
  function n(n2) {
    let r2 = e?.i18n?.[t]?.[n2];
    return isRef2(r2) ? r2.value : r2 ?? n2;
  }
  function r(n2) {
    return !!e?.i18n?.[t]?.[n2];
  }
  return {
    t: n,
    te: r
  };
}
var _hoisted_1$221 = { class: "chat-get-started" };
var GetStarted_default = defineComponent({
  __name: "GetStarted",
  setup(e) {
    let { t } = useI18n();
    return (e2, n) => (openBlock(), createElementBlock("div", _hoisted_1$221, [createVNode(Button_default$1, { onClick: n[0] ||= (t2) => e2.$emit("click:button") }, {
      default: withCtx(() => [createTextVNode(toDisplayString(unref(t)("getStarted")), 1)]),
      _: 1
    })]));
  }
});
var _sfc_main$10 = {};
var _hoisted_1$220 = { class: "chat-powered-by" };
function _sfc_render$10(e, t) {
  return openBlock(), createElementBlock("div", _hoisted_1$220, t[0] ||= [createTextVNode(" Powered by "), createBaseVNode("a", { href: "https://n8n.io?utm_source=n8n-external&utm_medium=widget-powered-by" }, "n8n", -1)]);
}
var PoweredBy_default = __plugin_vue_export_helper_default(_sfc_main$10, [["render", _sfc_render$10]]);
var _hoisted_1$219 = { class: "chat-get-started-footer" };
var _hoisted_2$17 = { key: 0 };
var GetStartedFooter_default = defineComponent({
  __name: "GetStartedFooter",
  setup(e) {
    let { t, te: n } = useI18n();
    return (e2, r) => (openBlock(), createElementBlock("div", _hoisted_1$219, [unref(n)("footer") ? (openBlock(), createElementBlock("div", _hoisted_2$17, toDisplayString(unref(t)("footer")), 1)) : createCommentVNode("", true), createVNode(PoweredBy_default)]));
  }
});
var lib_exports = __export2({
  Vue: () => vue_runtime_esm_bundler_exports,
  Vue2: () => void 0,
  del: () => del,
  install: () => install,
  isVue2: () => false,
  isVue3: () => true,
  set: () => set
});
__reExport(lib_exports, vue_runtime_esm_bundler_exports);
function install() {
}
function set(e, t, n) {
  return Array.isArray(e) ? (e.length = Math.max(e.length, t), e.splice(t, 1, n), n) : (e[t] = n, n);
}
function del(e, t) {
  if (Array.isArray(e)) {
    e.splice(t, 1);
    return;
  }
  delete e[t];
}
function tryOnScopeDispose$1(e) {
  return (0, lib_exports.getCurrentScope)() ? ((0, lib_exports.onScopeDispose)(e), true) : false;
}
function createEventHook$1() {
  let e = /* @__PURE__ */ new Set(), t = (t2) => {
    e.delete(t2);
  };
  return {
    on: (n) => {
      e.add(n);
      let r = () => t(n);
      return tryOnScopeDispose$1(r), { off: r };
    },
    off: t,
    trigger: (...t2) => Promise.all(Array.from(e).map((e2) => e2(...t2)))
  };
}
var isClient$1 = typeof window < "u" && typeof document < "u";
typeof WorkerGlobalScope < "u" && globalThis instanceof WorkerGlobalScope;
var hasOwn$2 = (e, t) => Object.prototype.hasOwnProperty.call(e, t);
var defaultDocument$1 = isClient$1 ? window.document : void 0;
isClient$1 && window.navigator, isClient$1 && window.location;
var DEFAULT_OPTIONS = {
  multiple: true,
  accept: "*",
  reset: false,
  directory: false
};
function useFileDialog(e = {}) {
  let { document: t = defaultDocument$1 } = e, n = (0, lib_exports.ref)(null), { on: r, trigger: i } = createEventHook$1(), o;
  t && (o = t.createElement("input"), o.type = "file", o.onchange = (e2) => {
    n.value = e2.target.files, i(n.value);
  });
  let s = () => {
    n.value = null, o && o.value && (o.value = "", i(null));
  };
  return {
    files: (0, lib_exports.readonly)(n),
    open: (t2) => {
      if (!o) return;
      let n2 = {
        ...DEFAULT_OPTIONS,
        ...e,
        ...t2
      };
      o.multiple = n2.multiple, o.accept = n2.accept, o.webkitdirectory = n2.directory, hasOwn$2(n2, "capture") && (o.capture = n2.capture), n2.reset && s(), o.click();
    },
    reset: s,
    onChange: r
  };
}
var _hoisted_1$218 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$195(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$218, t[0] ||= [createBaseVNode("path", {
    fill: "currentColor",
    d: "M16.5 6v11.5a4 4 0 0 1-4 4a4 4 0 0 1-4-4V5A2.5 2.5 0 0 1 11 2.5A2.5 2.5 0 0 1 13.5 5v10.5a1 1 0 0 1-1 1a1 1 0 0 1-1-1V6H10v9.5a2.5 2.5 0 0 0 2.5 2.5a2.5 2.5 0 0 0 2.5-2.5V5a4 4 0 0 0-4-4a4 4 0 0 0-4 4v12.5a5.5 5.5 0 0 0 5.5 5.5a5.5 5.5 0 0 0 5.5-5.5V6z"
  }, null, -1)]);
}
var paperclip_default$1 = {
  name: "mdi-paperclip",
  render: render$195
};
var _hoisted_1$217 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$194(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$217, t[0] ||= [createBaseVNode("path", {
    fill: "currentColor",
    d: "m2 21l21-9L2 3v7l15 2l-15 2z"
  }, null, -1)]);
}
var send_default$1 = {
  name: "mdi-send",
  render: render$194
};
var _hoisted_1$216 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$193(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$216, t[0] ||= [createBaseVNode("path", {
    fill: "currentColor",
    d: "M20 6.91L17.09 4L12 9.09L6.91 4L4 6.91L9.09 12L4 17.09L6.91 20L12 14.91L17.09 20L20 17.09L14.91 12z"
  }, null, -1)]);
}
var closeThick_default = {
  name: "mdi-closeThick",
  render: render$193
};
var _hoisted_1$215 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$192(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$215, t[0] ||= [createBaseVNode("path", {
    fill: "currentColor",
    d: "M13 9h5.5L13 3.5zM6 2h8l6 6v12a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V4c0-1.11.89-2 2-2m0 18h12v-8l-4 4l-2-2zM8 9a2 2 0 0 0-2 2a2 2 0 0 0 2 2a2 2 0 0 0 2-2a2 2 0 0 0-2-2"
  }, null, -1)]);
}
var fileImage_default = {
  name: "mdi-fileImage",
  render: render$192
};
var _hoisted_1$214 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$191(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$214, t[0] ||= [createBaseVNode("path", {
    fill: "currentColor",
    d: "M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8zm-1 11h-2v5a2 2 0 0 1-2 2a2 2 0 0 1-2-2a2 2 0 0 1 2-2c.4 0 .7.1 1 .3V11h3zm0-4V3.5L18.5 9z"
  }, null, -1)]);
}
var fileMusic_default = {
  name: "mdi-fileMusic",
  render: render$191
};
var _hoisted_1$213 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$190(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$213, t[0] ||= [createBaseVNode("path", {
    fill: "currentColor",
    d: "M13 9h5.5L13 3.5zM6 2h8l6 6v12a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V4c0-1.11.89-2 2-2m9 16v-2H6v2zm3-4v-2H6v2z"
  }, null, -1)]);
}
var fileText_default = {
  name: "mdi-fileText",
  render: render$190
};
var _hoisted_1$212 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$189(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$212, t[0] ||= [createBaseVNode("path", {
    fill: "currentColor",
    d: "M13 9h5.5L13 3.5zM6 2h8l6 6v12a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V4c0-1.11.89-2 2-2m11 17v-6l-3 2.2V13H7v6h7v-2.2z"
  }, null, -1)]);
}
var fileVideo_default = {
  name: "mdi-fileVideo",
  render: render$189
};
var _hoisted_1$211 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$188(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$211, t[0] ||= [createBaseVNode("path", {
    fill: "currentColor",
    d: "M14 3v2h3.59l-9.83 9.83l1.41 1.41L19 6.41V10h2V3m-2 16H5V5h7V3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7h-2z"
  }, null, -1)]);
}
var openInNew_default = {
  name: "mdi-openInNew",
  render: render$188
};
var _hoisted_1$210 = { class: "chat-file-name" };
var ChatFile_default = __plugin_vue_export_helper_default(defineComponent({
  __name: "ChatFile",
  props: {
    file: {},
    isRemovable: { type: Boolean },
    isPreviewable: { type: Boolean }
  },
  emits: ["remove"],
  setup(e, { emit: t }) {
    let n = e, r = t, i = {
      document: fileText_default,
      audio: fileMusic_default,
      image: fileImage_default,
      video: fileVideo_default
    }, o = computed2(() => i[n.file?.type.split("/")[0]] || fileText_default);
    function s() {
      n.isPreviewable && window.open(URL.createObjectURL(n.file));
    }
    function d() {
      r("remove", n.file);
    }
    return (e2, t2) => (openBlock(), createElementBlock("div", {
      class: "chat-file",
      onClick: s
    }, [
      createVNode(unref(o)),
      createBaseVNode("p", _hoisted_1$210, toDisplayString(e2.file.name), 1),
      e2.isRemovable ? (openBlock(), createElementBlock("span", {
        key: 0,
        class: "chat-file-delete",
        onClick: withModifiers(d, ["stop"])
      }, [createVNode(unref(closeThick_default))])) : e2.isPreviewable ? (openBlock(), createBlock(unref(openInNew_default), {
        key: 1,
        class: "chat-file-preview"
      })) : createCommentVNode("", true)
    ]));
  }
}), [["__scopeId", "data-v-e0d57af7"]]);
var _hoisted_1$209 = { class: "chat-inputs" };
var _hoisted_2$16 = {
  key: 0,
  class: "chat-input-left-panel"
};
var _hoisted_3$6 = ["disabled", "placeholder"];
var _hoisted_4$1 = { class: "chat-inputs-controls" };
var _hoisted_5$1 = ["disabled"];
var _hoisted_6$1 = ["disabled"];
var _hoisted_7 = {
  key: 0,
  class: "chat-files"
};
var Input_default = __plugin_vue_export_helper_default(defineComponent({
  __name: "Input",
  props: { placeholder: { default: "inputPlaceholder" } },
  emits: ["arrowKeyDown", "escapeKeyDown"],
  setup(e, { emit: t }) {
    let r = e, { t: i } = useI18n(), o = t, { options: s } = useOptions(), d = useChat(), { waitingForResponse: x } = d, w = ref(null), k = ref(null), A7 = ref(""), j7 = ref(false), M7 = ref(null), N7 = ref(false), P7 = computed2(() => N7.value ? false : A7.value === "" || unref(x) || s.disabled?.value === true), F7 = computed2(() => s.disabled?.value === true), I7 = computed2(() => L7.value && unref(x) && !s.disabled?.value), L7 = computed2(() => unref(s.allowFileUploads) === true), R7 = computed2(() => unref(s.allowedFilesMimeTypes)), z7 = computed2(() => {
      let e2 = L7.value ? 2 : 1;
      return { "--controls-count": e2 };
    }), { open: B7, reset: H7, onChange: U7 } = useFileDialog({
      multiple: true,
      reset: false
    });
    U7((e2) => {
      if (!e2) return;
      let t2 = new DataTransfer();
      if (w.value) for (let e3 = 0; e3 < w.value.length; e3++) t2.items.add(w.value[e3]);
      for (let n = 0; n < e2.length; n++) t2.items.add(e2[n]);
      w.value = t2.files;
    }), onMounted(() => {
      chatEventBus.on("focusInput", q7), chatEventBus.on("blurInput", W7), chatEventBus.on("setInputValue", Y7), k.value && (M7.value = new ResizeObserver((e2) => {
        for (let t2 of e2) t2.target === k.value && c9();
      }), M7.value.observe(k.value));
    }), onUnmounted(() => {
      chatEventBus.off("focusInput", q7), chatEventBus.off("blurInput", W7), chatEventBus.off("setInputValue", Y7), M7.value &&= (M7.value.disconnect(), null);
    });
    function W7() {
      k.value && k.value.blur();
    }
    function q7() {
      k.value && k.value.focus();
    }
    function Y7(e2) {
      A7.value = e2, q7();
    }
    function X7() {
      if (w.value) {
        let e2 = Array.from(w.value);
        return H7(), w.value = null, e2;
      }
      return [];
    }
    function Z7(e2) {
      if (s.webhookUrl && d.currentSessionId.value) try {
        let t2 = constructChatWebsocketUrl(s.webhookUrl, e2, d.currentSessionId.value, true);
        d.ws = new WebSocket(t2), d.ws.onmessage = (e3) => {
          if (e3.data === "n8n|heartbeat") {
            d.ws?.send("n8n|heartbeat-ack");
            return;
          }
          if (e3.data === "n8n|continue") {
            N7.value = false, d.waitingForResponse.value = true;
            return;
          }
          let t3 = {
            id: v4_default(),
            text: e3.data,
            sender: "bot"
          };
          d.messages.value.push(t3), N7.value = true, d.waitingForResponse.value = false;
        }, d.ws.onclose = () => {
          d.ws = null, N7.value = false, d.waitingForResponse.value = false;
        };
      } catch (e3) {
        console.error("Error setting up websocket connection", e3);
      }
    }
    async function Q7(e2) {
      if (!e2 || e2.length === 0) return [];
      let t2 = e2.map(async (e3) => new Promise((t3, n) => {
        let r2 = new FileReader();
        r2.onload = () => t3({
          name: e3.name,
          type: e3.type,
          data: r2.result
        }), r2.onerror = () => n(Error(`Error reading file: ${r2.error?.message ?? "Unknown error"}`)), r2.readAsDataURL(e3);
      }));
      return await Promise.all(t2);
    }
    async function $7(e2, t2) {
      let n = {
        id: v4_default(),
        text: t2,
        sender: "user",
        files: w.value ? X7() : void 0
      };
      d.messages.value.push(n), e2.send(JSON.stringify({
        sessionId: d.currentSessionId.value,
        action: "sendMessage",
        chatInput: t2,
        files: await Q7(n.files)
      })), d.waitingForResponse.value = true, N7.value = false;
    }
    async function r9(e2) {
      if (e2.preventDefault(), P7.value) return;
      let t2 = A7.value;
      if (A7.value = "", j7.value = true, d.ws && N7.value) {
        await $7(d.ws, t2);
        return;
      }
      let n = await d.sendMessage(t2, X7());
      n?.executionId && Z7(n.executionId), j7.value = false;
    }
    async function i9(e2) {
      e2.shiftKey || e2.isComposing || (await r9(e2), c9());
    }
    function a9(e2) {
      if (!w.value) return;
      let t2 = new DataTransfer();
      for (let n = 0; n < w.value.length; n++) {
        let r2 = w.value[n];
        e2.name !== r2.name && t2.items.add(r2);
      }
      H7(), w.value = t2.files;
    }
    function o9(e2) {
      e2.key === "ArrowUp" || e2.key === "ArrowDown" ? (e2.preventDefault(), o("arrowKeyDown", {
        key: e2.key,
        currentInputValue: A7.value
      })) : e2.key === "Escape" && (e2.preventDefault(), o("escapeKeyDown", { currentInputValue: A7.value }));
    }
    function s9() {
      I7.value || B7({ accept: unref(R7) });
    }
    function c9() {
      let e2 = k.value;
      if (!e2) return;
      e2.style.height = "var(--chat--textarea--height)";
      let t2 = Math.min(e2.scrollHeight, 480);
      e2.style.height = `${t2}px`;
    }
    return (e2, t2) => (openBlock(), createElementBlock("div", {
      class: "chat-input",
      style: normalizeStyle(z7.value),
      onKeydown: withModifiers(o9, ["stop"])
    }, [createBaseVNode("div", _hoisted_1$209, [
      e2.$slots.leftPanel ? (openBlock(), createElementBlock("div", _hoisted_2$16, [renderSlot(e2.$slots, "leftPanel", {}, void 0, true)])) : createCommentVNode("", true),
      withDirectives(createBaseVNode("textarea", {
        ref_key: "chatTextArea",
        ref: k,
        "onUpdate:modelValue": t2[0] ||= (e3) => A7.value = e3,
        "data-test-id": "chat-input",
        disabled: F7.value,
        placeholder: unref(i)(r.placeholder),
        onKeydown: withKeys(i9, ["enter"]),
        onInput: c9,
        onMousedown: c9,
        onFocus: c9
      }, null, 40, _hoisted_3$6), [[vModelText, A7.value]]),
      createBaseVNode("div", _hoisted_4$1, [L7.value ? (openBlock(), createElementBlock("button", {
        key: 0,
        disabled: I7.value,
        class: "chat-input-file-button",
        "data-test-id": "chat-attach-file-button",
        onClick: s9
      }, [createVNode(unref(paperclip_default$1), {
        height: "24",
        width: "24"
      })], 8, _hoisted_5$1)) : createCommentVNode("", true), createBaseVNode("button", {
        disabled: P7.value,
        class: "chat-input-send-button",
        onClick: r9
      }, [createVNode(unref(send_default$1), {
        height: "24",
        width: "24"
      })], 8, _hoisted_6$1)])
    ]), w.value?.length && (!j7.value || N7.value) ? (openBlock(), createElementBlock("div", _hoisted_7, [(openBlock(true), createElementBlock(Fragment, null, renderList(w.value, (e3) => (openBlock(), createBlock(ChatFile_default, {
      key: e3.name,
      file: e3,
      "is-removable": true,
      "is-previewable": true,
      onRemove: a9
    }, null, 8, ["file"]))), 128))])) : createCommentVNode("", true)], 36));
  }
}), [["__scopeId", "data-v-66014261"]]);
var _hoisted_1$208 = { class: "chat-layout" };
var _hoisted_2$15 = {
  key: 0,
  class: "chat-header"
};
var _hoisted_3$5 = {
  key: 2,
  class: "chat-footer"
};
var Layout_default = defineComponent({
  __name: "Layout",
  setup(e) {
    let t = ref(null);
    function n() {
      let e2 = t.value;
      e2 && (e2.scrollTop = e2.scrollHeight);
    }
    return onMounted(() => {
      chatEventBus.on("scrollToBottom", n), window.addEventListener("resize", n);
    }), onBeforeUnmount(() => {
      chatEventBus.off("scrollToBottom", n), window.removeEventListener("resize", n);
    }), (e2, n2) => (openBlock(), createElementBlock("main", _hoisted_1$208, [
      e2.$slots.header ? (openBlock(), createElementBlock("div", _hoisted_2$15, [renderSlot(e2.$slots, "header")])) : createCommentVNode("", true),
      e2.$slots.default ? (openBlock(), createElementBlock("div", {
        key: 1,
        ref_key: "chatBodyRef",
        ref: t,
        class: "chat-body"
      }, [renderSlot(e2.$slots, "default")], 512)) : createCommentVNode("", true),
      e2.$slots.footer ? (openBlock(), createElementBlock("div", _hoisted_3$5, [renderSlot(e2.$slots, "footer")])) : createCommentVNode("", true)
    ]));
  }
});
var binary_default = "data:image/svg+xml,%3csvg%20viewBox='0%200%2012%2012'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20fill='currentColor'%20d='M1%200.642857C1%200.287817%201.27473%200%201.61364%200H4.06818C4.40708%200%204.68182%200.287817%204.68182%200.642857V4.5C4.68182%204.85504%204.40708%205.14286%204.06818%205.14286H1.61364C1.27473%205.14286%201%204.85504%201%204.5V0.642857ZM2.22727%201.28571V3.85714H3.45455V1.28571H2.22727ZM6.31818%200.642857C6.31818%200.287817%206.59292%200%206.93182%200H8.15909C8.49799%200%208.77273%200.287817%208.77273%200.642857V3.85714H9.38636C9.72527%203.85714%2010%204.14496%2010%204.5C10%204.85504%209.72527%205.14286%209.38636%205.14286H6.93182C6.59292%205.14286%206.31818%204.85504%206.31818%204.5C6.31818%204.14496%206.59292%203.85714%206.93182%203.85714H7.54545V1.28571H6.93182C6.59292%201.28571%206.31818%200.997897%206.31818%200.642857ZM1%207.5C1%207.14496%201.27473%206.85714%201.61364%206.85714H2.84091C3.17981%206.85714%203.45455%207.14496%203.45455%207.5V10.7143H4.06818C4.40708%2010.7143%204.68182%2011.0021%204.68182%2011.3571C4.68182%2011.7122%204.40708%2012%204.06818%2012H1.61364C1.27473%2012%201%2011.7122%201%2011.3571C1%2011.0021%201.27473%2010.7143%201.61364%2010.7143H2.22727V8.14286H1.61364C1.27473%208.14286%201%207.85504%201%207.5ZM6.31818%207.5C6.31818%207.14496%206.59292%206.85714%206.93182%206.85714H9.38636C9.72527%206.85714%2010%207.14496%2010%207.5V11.3571C10%2011.7122%209.72527%2012%209.38636%2012H6.93182C6.59292%2012%206.31818%2011.7122%206.31818%2011.3571V7.5ZM7.54545%208.14286V10.7143H8.77273V8.14286H7.54545Z'%20/%3e%3c/svg%3e";
var bolt_filled_default = "data:image/svg+xml,%3csvg%20viewBox='0%200%2024%2024'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M13.2251%201.02271C13.5179%200.968554%2013.8195%201.00233%2014.0913%201.11939L14.2055%201.17506L14.3149%201.23951C14.5275%201.37763%2014.7014%201.56758%2014.8208%201.79127L14.8764%201.90553L14.9214%202.02467C15.0145%202.30522%2015.0227%202.60793%2014.9438%202.89478C14.9403%202.90772%2014.9372%202.92106%2014.9331%202.93385L13.0132%208.95338L12.9965%209.00025H19.9995C20.3769%208.99952%2020.7471%209.10523%2021.0669%209.30592C21.3874%209.50712%2021.6437%209.79562%2021.8071%2010.137C21.9704%2010.4783%2022.0341%2010.8588%2021.9897%2011.2346C21.9453%2011.6105%2021.7946%2011.9661%2021.5561%2012.26C21.5375%2012.2829%2021.5181%2012.3052%2021.4975%2012.3264L11.5971%2022.5266L11.5962%2022.5256C11.3774%2022.7595%2011.0907%2022.9194%2010.7749%2022.9778C10.4403%2023.0397%2010.0944%2022.9859%209.7944%2022.8254C9.4944%2022.665%209.25775%2022.4066%209.1235%2022.094C8.98941%2021.7815%208.96593%2021.4327%209.05612%2021.1047L9.06686%2021.0657L10.9868%2015.0462L11.0034%2015.0003H3.99948C3.62236%2015.0008%203.25253%2014.8941%202.93307%2014.6936C2.61276%2014.4925%202.35617%2014.2047%202.19284%2013.8635C2.02947%2013.5221%201.96581%2013.1408%202.01022%2012.7649C2.05468%2012.3892%202.20544%2012.0333%202.44382%2011.7395C2.46238%2011.7167%202.4819%2011.6942%202.50241%2011.6731L12.4028%201.47389C12.6215%201.23984%2012.9091%201.08117%2013.2251%201.02271Z'%20fill='currentColor'%20fill-opacity='0.9'%20style='fill:currentColor;fill-opacity:0.9;'/%3e%3c/svg%3e";
var continue_default = "data:image/svg+xml,%3csvg%20viewBox='0%200%20512%20512'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M224.975%2049.429c17.138-17.139%2044.919-17.139%2062.057%200l175.546%20175.546a43.8%2043.8%200%200%201%209.347%2013.817l.146.349q.125.298.243.598.1.25.197.5l.147.388q.133.356.261.716l.09.257q.141.407.275.818l.044.136a39%2039%200%200%201%20.306.988%2043.9%2043.9%200%200%201%201.802%2012.473c0%2012.497-5.225%2023.774-13.608%2031.767L287.032%20462.578c-17.138%2017.138-44.919%2017.138-62.057%200s-17.139-44.92%200-62.059l100.618-100.618H80.458c-24.238%200-43.887-19.649-43.887-43.886s19.65-43.887%2043.887-43.887h245.158L224.975%20111.486c-17.139-17.138-17.139-44.919%200-62.057'%20fill='currentColor'/%3e%3c/svg%3e";
var empty_output_default = "data:image/svg+xml,%3csvg%20viewBox='0%200%20512%20512'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M209.675%20387.718c20.945%2010.711%2030.794%2035.749%2022.073%2058.141-9.306%2023.886-36.221%2035.695-60.107%2026.389-29.106-11.34-56.354-28.746-79.744-52.137-20.47-20.47-36.356-43.894-47.607-68.932l-4.53-10.812-1.517-4.508c-6.284-22.673%205.511-46.874%2027.906-55.599%2022.392-8.721%2047.431%201.129%2058.141%2022.073l1.945%204.338%202.735%206.453c6.714%2014.943%2016.204%2028.982%2028.568%2041.346%2014.132%2014.132%2030.44%2024.54%2047.799%2031.304zM91.897%2091.905c23.39-23.39%2050.638-40.796%2079.744-52.137l4.508-1.517c22.673-6.284%2046.874%205.512%2055.599%2027.906%209.303%2023.885-2.526%2050.781-26.411%2060.086-17.359%206.763-33.667%2017.171-47.799%2031.303-12.364%2012.364-21.854%2026.403-28.568%2041.347l-2.735%206.453-1.945%204.337c-10.71%2020.945-35.75%2030.794-58.141%2022.073-23.886-9.306-35.695-36.221-26.39-60.107%2011.341-29.106%2028.747-56.353%2052.138-79.744M354.462%20354.47c12.364-12.364%2021.854-26.403%2028.568-41.346l2.735-6.453%201.945-4.338c10.71-20.944%2035.749-30.794%2058.141-22.073%2022.394%208.725%2034.19%2032.926%2027.906%2055.599l-1.517%204.508-4.53%2010.812c-11.251%2025.038-27.137%2048.462-47.607%2068.932-23.39%2023.391-50.638%2040.797-79.744%2052.137-23.886%209.306-50.801-2.503-60.107-26.389-9.303-23.885%202.526-50.78%2026.411-60.085l6.453-2.735c14.943-6.715%2028.982-16.205%2041.346-28.569m65.641-262.565c23.391%2023.391%2040.796%2050.638%2052.137%2079.744%209.306%2023.886-2.503%2050.801-26.389%2060.107-22.392%208.721-47.431-1.128-58.141-22.073l-1.945-4.337-2.735-6.453c-6.714-14.944-16.204-28.983-28.568-41.347-14.132-14.132-30.44-24.54-47.799-31.303-23.885-9.305-35.714-36.201-26.411-60.086%209.306-23.886%2036.221-35.694%2060.107-26.389l10.812%204.53c25.038%2011.25%2048.462%2027.137%2068.932%2047.607'%20fill='currentColor'%20/%3e%3c/svg%3e";
var filled_square_default = "data:image/svg+xml,%3csvg%20viewBox='0%200%2010%2010'%20fill='currentColor'%20overflow='hidden'%20xmlns='http://www.w3.org/2000/svg'%3e%3crect%20x='0'%20y='0'%20width='10'%20height='10'%20rx='2'%20ry='2'/%3e%3c/svg%3e";
var grip_lines_vertical_default = "data:image/svg+xml,%3csvg%20viewBox='0%200%2024%2024'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M9%203L9%2021'%20stroke='currentColor'%20style='stroke-opacity:1;'%20stroke-width='2'%20stroke-linecap='round'%20stroke-linejoin='round'/%3e%3cpath%20d='M15%203L15%2021'%20stroke='currentColor'%20style='stroke-opacity:1;'%20stroke-width='2'%20stroke-linecap='round'%20stroke-linejoin='round'/%3e%3c/svg%3e";
var mcp_default = "data:image/svg+xml,%3csvg%20fill='currentColor'%20fill-rule='evenodd'%20height='1em'%20style='flex:none;line-height:1'%20viewBox='0%200%2024%2024'%20width='1em'%20xmlns='http://www.w3.org/2000/svg'%3e%3ctitle%3eModelContextProtocol%3c/title%3e%3cpath%20d='M15.688%202.343a2.588%202.588%200%2000-3.61%200l-9.626%209.44a.863.863%200%2001-1.203%200%20.823.823%200%20010-1.18l9.626-9.44a4.313%204.313%200%20016.016%200%204.116%204.116%200%20011.204%203.54%204.3%204.3%200%20013.609%201.18l.05.05a4.115%204.115%200%20010%205.9l-8.706%208.537a.274.274%200%20000%20.393l1.788%201.754a.823.823%200%20010%201.18.863.863%200%2001-1.203%200l-1.788-1.753a1.92%201.92%200%20010-2.754l8.706-8.538a2.47%202.47%200%20000-3.54l-.05-.049a2.588%202.588%200%2000-3.607-.003l-7.172%207.034-.002.002-.098.097a.863.863%200%2001-1.204%200%20.823.823%200%20010-1.18l7.273-7.133a2.47%202.47%200%2000-.003-3.537z'%3e%3c/path%3e%3cpath%20d='M14.485%204.703a.823.823%200%20000-1.18.863.863%200%2000-1.204%200l-7.119%206.982a4.115%204.115%200%20000%205.9%204.314%204.314%200%20006.016%200l7.12-6.982a.823.823%200%20000-1.18.863.863%200%2000-1.204%200l-7.119%206.982a2.588%202.588%200%2001-3.61%200%202.47%202.47%200%20010-3.54l7.12-6.982z'%3e%3c/path%3e%3c/svg%3e";
var node_dirty_default = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='24'%20height='24'%20fill='none'%20viewBox='0%200%2024%2024'%3e%3cpath%20fill='currentColor'%20d='M10.12%203.3c.911-1.395%203.012-1.349%203.844.14l8.222%2014.712c.838%201.5-.246%203.348-1.964%203.348H3.778c-1.718%200-2.802-1.848-1.964-3.348L10.036%203.44zM5.057%2018.5h13.886L12%206.073z'/%3e%3c/svg%3e";
var node_ellipsis_default = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='24'%20height='24'%20fill='none'%20viewBox='0%200%2024%2024'%3e%3cpath%20fill='currentColor'%20d='M4.5%209.5a2.5%202.5%200%201%201%200%205%202.5%202.5%200%200%201%200-5m7.5%200a2.5%202.5%200%201%201%200%205%202.5%202.5%200%200%201%200-5m7.5%200a2.5%202.5%200%201%201%200%205%202.5%202.5%200%200%201%200-5'/%3e%3c/svg%3e";
var node_execution_error_default = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='24'%20height='24'%20fill='none'%20viewBox='0%200%2024%2024'%3e%3cpath%20fill='currentColor'%20fill-rule='evenodd'%20d='M12%201c6.075%200%2011%204.925%2011%2011s-4.925%2011-11%2011S1%2018.075%201%2012%205.925%201%2012%201m5.56%205.44a1.5%201.5%200%200%200-2.12%200L12%209.878l-3.44-3.44A1.5%201.5%200%201%200%206.44%208.56L9.878%2012l-3.44%203.44a1.5%201.5%200%201%200%202.122%202.12L12%2014.122l3.44%203.44.114.103a1.5%201.5%200%200%200%202.11-2.11l-.104-.114L14.122%2012l3.44-3.44a1.5%201.5%200%200%200%200-2.12'%20clip-rule='evenodd'/%3e%3c/svg%3e";
var node_pin_default = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='24'%20height='24'%20fill='none'%20viewBox='0%200%2024%2024'%3e%3cpath%20fill='currentColor'%20d='M16.297%202.515A3%203%200%200%201%2016%208.5v2.26l.01.138a1%201%200%200%200%20.545.756l.006.003%201.774.898.184.1A3%203%200%200%201%2020%2015.238V16a2%202%200%200%201-2%202h-4.5v4a1.5%201.5%200%200%201-3%200v-4H6a2%202%200%200%201-1.99-1.803L4%2016v-.76l.008-.209a3%203%200%200%201%201.657-2.476l1.773-.898.007-.003a1%201%200%200%200%20.545-.756L8%2010.76V8.5a3%203%200%200%201%200-6h8z'/%3e%3c/svg%3e";
var node_play_default = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='24'%20height='24'%20viewBox='0%200%2024%2024'%20fill='none'%3e%3cpath%20fill='currentColor'%20d='M5.52%202.122c.322-.175.713-.16%201.021.037l14%209a1%201%200%200%201%200%201.682l-14%209A1.001%201.001%200%200%201%205%2021V3a1%201%200%200%201%20.52-.878'/%3e%3c/svg%3e";
var node_power_default = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='24'%20height='24'%20fill='none'%20viewBox='0%200%2024%2024'%3e%3cpath%20fill='currentColor'%20d='M16.645%205.907a1.5%201.5%200%200%201%202.122.028%209.77%209.77%200%200%201%202.585%204.953%209.9%209.9%200%200%201-.53%205.579%209.66%209.66%200%200%201-3.476%204.357%209.36%209.36%200%200%201-5.28%201.657%209.36%209.36%200%200%201-5.292-1.623%209.66%209.66%200%200%201-3.504-4.335%209.9%209.9%200%200%201-.564-5.576%209.77%209.77%200%200%201%202.556-4.97l.11-.105a1.501%201.501%200%200%201%202.05%202.187l-.166.178a6.8%206.8%200%200%200-1.602%203.266%206.9%206.9%200%200%200%20.393%203.884%206.66%206.66%200%200%200%202.413%202.989%206.36%206.36%200%200%200%203.595%201.105%206.36%206.36%200%200%200%203.59-1.128%206.66%206.66%200%200%200%202.394-3.005%206.9%206.9%200%200%200%20.37-3.887%206.77%206.77%200%200%200-1.79-3.433%201.5%201.5%200%200%201%20.026-2.12'/%3e%3cpath%20fill='currentColor'%20d='M12.035%201.481a1.5%201.5%200%200%201%201.5%201.5v9a1.5%201.5%200%200%201-3%200v-9a1.5%201.5%200%200%201%201.5-1.5'/%3e%3c/svg%3e";
var node_success_default = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='24'%20height='24'%20fill='none'%20viewBox='0%200%2024%2024'%3e%3cpath%20fill='currentColor'%20d='M19.94%205.502a1.5%201.5%200%201%201%202.12%202.12L9.687%2019.999a1.5%201.5%200%200%201-2.122%200L1.94%2014.373a1.5%201.5%200%200%201%202.007-2.225l.115.104%204.564%204.564z'/%3e%3c/svg%3e";
var node_trash_default = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='24'%20height='24'%20fill='none'%20viewBox='0%200%2024%2024'%3e%3cpath%20fill='currentColor'%20d='M21%206a1%201%200%201%201%200%202h-1v12.125c0%20.817-.424%201.534-.941%202.019-.522.488-1.256.856-2.059.856H7c-.803%200-1.537-.368-2.059-.856C4.424%2021.659%204%2020.943%204%2020.125V8H3a1%201%200%200%201%200-2zm-7-5a3%203%200%200%201%203%203H7a3%203%200%200%201%203-3z'/%3e%3c/svg%3e";
var node_validation_error_default = "data:image/svg+xml,%3csvg%20width='24'%20height='24'%20viewBox='0%200%2024%2024'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M10.0506%202.38452C10.9161%200.882058%2013.0845%200.882058%2013.95%202.38452L23.3065%2018.6267C24.1706%2020.1267%2023.0883%2021.9997%2021.3572%2021.9998H2.6424C0.911559%2021.9994%20-0.170877%2020.1266%200.693176%2018.6267L10.0506%202.38452ZM11.9998%2015.9998C11.1715%2015.9999%2010.4999%2016.6715%2010.4998%2017.4998C10.4998%2018.3281%2011.1715%2018.9997%2011.9998%2018.9998C12.8282%2018.9998%2013.4998%2018.3282%2013.4998%2017.4998C13.4997%2016.6714%2012.8282%2015.9998%2011.9998%2015.9998ZM11.9998%207.49976C11.1715%207.49986%2010.4999%208.17148%2010.4998%208.99976V12.4998C10.4998%2013.3281%2011.1715%2013.9997%2011.9998%2013.9998C12.8282%2013.9998%2013.4998%2013.3282%2013.4998%2012.4998V8.99976C13.4997%208.17142%2012.8282%207.49976%2011.9998%207.49976Z'%20fill='currentColor'/%3e%3c/svg%3e";
var pop_out_default = "data:image/svg+xml,%3csvg%20viewBox='0%200%2016%2016'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20fill='currentColor'%20d='M13.3333%2012.5525V12.4489C14.2278%2012.0756%2014.8571%2011.1925%2014.8571%2010.1632V3.61924C14.8571%202.96252%2014.5962%202.3327%2014.1318%201.86832C13.6675%201.40395%2013.0376%201.14307%2012.3809%201.14307H5.90473C5.38113%201.14296%204.87098%201.30883%204.44756%201.61684C4.02414%201.92485%203.70926%202.35915%203.54816%202.85734H3.39501C2.70016%202.85734%202.10892%203.10191%201.70206%203.5842C1.30739%204.05124%201.14282%204.67372%201.14282%205.33352V12.0002C1.14282%2012.8078%201.43463%2013.5346%201.98854%2014.0573C2.54168%2014.5777%203.30892%2014.8535%204.19044%2014.8535H7.17711L10.2826%2014.8573H10.2842C11.0278%2014.8611%2011.7645%2014.7049%2012.336%2014.3392C12.9303%2013.9582%2013.3333%2013.3525%2013.3333%2012.5525ZM3.39501%204.0002H3.42854V10.1625C3.42854%2010.8192%203.68942%2011.449%204.1538%2011.9134C4.61817%2012.3777%205.248%2012.6386%205.90473%2012.6386H12.1874C12.163%2012.9571%2012.003%2013.1948%2011.7196%2013.3761C11.3897%2013.588%2010.8891%2013.7175%2010.2887%2013.7144H10.2857L7.17558%2013.7106H4.19044C3.54816%2013.7106%203.07806%2013.5125%202.7733%2013.2253C2.47006%2012.9403%202.28568%2012.5259%202.28568%2012.0002V5.33352C2.28568%204.84971%202.40758%204.52057%202.5752%204.32096C2.73139%204.13658%202.98054%204.0002%203.39501%204.0002ZM8.01673%203.80972H11.619C11.7706%203.80972%2011.9159%203.86992%2012.0231%203.97709C12.1302%204.08425%2012.1904%204.22959%2012.1904%204.38115V7.98418C12.1904%208.13573%2012.1302%208.28107%2012.0231%208.38823C11.9159%208.4954%2011.7706%208.5556%2011.619%208.5556C11.4675%208.5556%2011.3221%208.4954%2011.215%208.38823C11.1078%208.28107%2011.0476%208.13573%2011.0476%207.98418V5.76019L7.07044%209.73731C7.0177%209.79186%206.95463%209.83536%206.8849%209.86528C6.81517%209.89519%206.74018%209.91092%206.6643%209.91154C6.58843%209.91217%206.51319%209.89767%206.44298%209.86891C6.37277%209.84014%206.30899%209.79768%206.25536%209.74401C6.20173%209.69033%206.15933%209.62651%206.13063%209.55627C6.10193%209.48603%206.08751%209.41078%206.0882%209.3349C6.0889%209.25903%206.1047%209.18406%206.13468%209.11435C6.16466%209.04465%206.20822%208.98162%206.26282%208.92893L10.24%204.95257H8.01673C7.86517%204.95257%207.71983%204.89237%207.61267%204.7852C7.5055%204.67804%207.4453%204.5327%207.4453%204.38115C7.4453%204.22959%207.5055%204.08425%207.61267%203.97709C7.71983%203.86992%207.86517%203.80972%208.01673%203.80972Z'%20/%3e%3c/svg%3e";
var retry_default = "data:image/svg+xml,%3csvg%20viewBox='0%200%20512%20512'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M416.648%20227.85c23.324%200%2042.232%2018.908%2042.232%2042.232v84.462c0%2038.872-31.513%2070.384-70.385%2070.385H191.423v36.402c0%2012.541-15.163%2018.822-24.031%209.954l-78.63-78.631c-5.498-5.497-5.498-14.411%200-19.908l78.63-78.631c8.868-8.868%2024.031-2.587%2024.031%209.954v36.398h182.995v-70.385c0-23.324%2018.907-42.231%2042.23-42.232M304.028%2050.669c0-12.541%2015.163-18.822%2024.031-9.954l78.63%2078.631c5.498%205.497%205.498%2014.41%200%2019.908l-78.63%2078.631c-8.868%208.867-24.031%202.587-24.031-9.954v-36.38H121.033v70.385c0%2023.324-18.908%2042.231-42.231%2042.231s-42.23-18.907-42.23-42.231v-84.462c0-38.872%2031.512-70.385%2070.384-70.385h197.072z'%20fill='currentColor'/%3e%3c/svg%3e";
var run_once_default = "data:image/svg+xml,%3csvg%20viewBox='0%200%20512%20512'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M275.114%2036.8c22.13%202.247%2039.401%2020.934%2039.401%2043.657v307.204h73.142c24.237%200%2043.886%2019.648%2043.886%2043.885s-19.648%2043.886-43.886%2043.886H153.6c-24.238-.001-43.886-19.649-43.886-43.886s19.648-43.885%2043.886-43.885h73.143V124.343H153.6c-24.238%200-43.886-19.649-43.886-43.886s19.648-43.885%2043.886-43.886h117.029z'%20fill='currentColor'/%3e%3c/svg%3e";
var schema_default = "data:image/svg+xml,%3csvg%20viewBox='0%20-1%2014%2014'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20fill='currentColor'%20d='M1.63636%200H8.18182C9.08556%200%209.81818%200.732625%209.81818%201.63636C9.81818%202.5401%209.08556%203.27273%208.18182%203.27273H1.63636C0.732626%203.27273%200%202.5401%200%201.63636C0%200.732625%200.732625%200%201.63636%200ZM1.63636%201.09091C1.33512%201.09091%201.09091%201.33512%201.09091%201.63636C1.09091%201.93761%201.33512%202.18182%201.63636%202.18182H8.18182C8.48306%202.18182%208.72727%201.93761%208.72727%201.63636C8.72727%201.33512%208.48306%201.09091%208.18182%201.09091H1.63636Z%20M7.09091%204.36353H11.4545C12.3583%204.36353%2013.0909%205.09615%2013.0909%205.99989C13.0909%206.90363%2012.3583%207.63625%2011.4545%207.63625H7.09091C6.18717%207.63625%205.45454%206.90363%205.45454%205.99989C5.45454%205.09615%206.18717%204.36353%207.09091%204.36353ZM7.09091%205.45443C6.78966%205.45443%206.54545%205.69864%206.54545%205.99989C6.54545%206.30114%206.78966%206.54534%207.09091%206.54534H11.4545C11.7558%206.54534%2012%206.30114%2012%205.99989C12%205.69864%2011.7558%205.45443%2011.4545%205.45443H7.09091Z%20M7.09091%208.72729H11.4545C12.3583%208.72729%2013.0909%209.45992%2013.0909%2010.3637C13.0909%2011.2674%2012.3583%2012%2011.4545%2012H7.09091C6.18717%2012%205.45454%2011.2674%205.45454%2010.3637C5.45454%209.45992%206.18717%208.72729%207.09091%208.72729ZM7.09091%209.8182C6.78966%209.8182%206.54545%2010.0624%206.54545%2010.3637C6.54545%2010.6649%206.78966%2010.9091%207.09091%2010.9091H11.4545C11.7558%2010.9091%2012%2010.6649%2012%2010.3637C12%2010.0624%2011.7558%209.8182%2011.4545%209.8182H7.09091Z'%20/%3e%3c/svg%3e";
var spinner_default = "data:image/svg+xml,%3csvg%20viewBox='0%200%2024%2024'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M12%202V5'%20stroke='currentColor'%20style='stroke:currentColor;stroke-opacity:1;'%20stroke-width='2'%20stroke-linecap='round'/%3e%3cpath%20d='M12%2019V22'%20stroke='currentColor'%20style='stroke:currentColor;stroke-opacity:1;'%20stroke-width='2'%20stroke-linecap='round'/%3e%3cpath%20d='M12%202V5'%20stroke='currentColor'%20style='stroke:currentColor;stroke-opacity:1;'%20stroke-width='2'%20stroke-linecap='round'/%3e%3cpath%20d='M12%2019V22'%20stroke='currentColor'%20style='stroke:currentColor;stroke-opacity:1;'%20stroke-width='2'%20stroke-linecap='round'/%3e%3cpath%20d='M22.005%2011.9951L19.005%2011.9951'%20stroke='currentColor'%20style='stroke:currentColor;stroke-opacity:1;'%20stroke-width='2'%20stroke-linecap='round'/%3e%3cpath%20d='M5.005%2011.9951L2.005%2011.9951'%20stroke='currentColor'%20style='stroke:currentColor;stroke-opacity:1;'%20stroke-width='2'%20stroke-linecap='round'/%3e%3cpath%20d='M19.0796%2019.0676L16.9583%2016.9463'%20stroke='currentColor'%20style='stroke:currentColor;stroke-opacity:1;'%20stroke-width='2'%20stroke-linecap='round'/%3e%3cpath%20d='M7.05884%207.04688L4.93752%204.92555'%20stroke='currentColor'%20style='stroke:currentColor;stroke-opacity:1;'%20stroke-width='2'%20stroke-linecap='round'/%3e%3cpath%20d='M4.9375%2019.0676L7.05882%2016.9463'%20stroke='currentColor'%20style='stroke:currentColor;stroke-opacity:1;'%20stroke-width='2'%20stroke-linecap='round'/%3e%3cpath%20d='M16.9583%207.04688L19.0796%204.92556'%20stroke='currentColor'%20style='stroke:currentColor;stroke-opacity:1;'%20stroke-width='2'%20stroke-linecap='round'/%3e%3c/svg%3e";
var status_canceled_default = "data:image/svg+xml,%3csvg%20viewBox='0%200%2014%2014'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20fill='currentColor'%20d='M%2014%207%20C%2014%2010.866%2010.866%2014%207%2014%20C%203.134%2014%200%2010.866%200%207%20C%200%203.134%203.134%200%207%200%20C%2010.866%200%2014%203.134%2014%207%20Z%20M%2011.243%206%20L%202.758%206%20L%202.758%208%20L%2011.243%208%20L%2011.243%206%20Z'%20/%3e%3c/svg%3e";
var status_completed_default = "data:image/svg+xml,%3csvg%20viewBox='0%200%2014%2014'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20fill='currentColor'%20d='M%2014%207%20C%2014%2010.866%2010.866%2014%207%2014%20C%203.134%2014%200%2010.866%200%207%20C%200%203.134%203.134%200%207%200%20C%2010.866%200%2014%203.134%2014%207%20Z%20M%202.575%207.728%20L%205.782%2010.935%20L%2011.489%205.228%20L%2010.075%203.814%20L%205.782%208.107%20L%203.989%206.314%20L%202.575%207.728%20Z'%20/%3e%3c/svg%3e";
var status_error_default = "data:image/svg+xml,%3csvg%20viewBox='0%200%2014%2014'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20fill='currentColor'%20d='M%204.207%202.793%20L%207%205.586%20L%209.793%202.793%20L%2011.207%204.207%20L%208.414%207%20L%2011.207%209.793%20L%209.793%2011.207%20L%207%208.414%20L%204.207%2011.207%20L%202.793%209.793%20L%205.586%207%20L%202.793%204.207%20L%204.207%202.793%20Z%20M%207%200%20C%203.134%200%200%203.134%200%207%20C%200%2010.866%203.134%2014%207%2014%20C%2010.866%2014%2014%2010.866%2014%207%20C%2014%203.134%2010.866%200%207%200%20Z'%20/%3e%3c/svg%3e";
var status_new_default = "data:image/svg+xml,%3csvg%20viewBox='0%200%2014%2014'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20fill='currentColor'%20d='M%2014%207.006%20C%2014%208.867%2013.162%2010.744%2011.95%2011.956%20C%2010.738%2013.168%208.861%2014.006%207%2014.006%20C%205.139%2014.006%203.262%2013.168%202.05%2011.956%20C%200.838%2010.744%200%208.867%200%207.006%20C%200%205.145%200.838%203.268%202.05%202.056%20C%203.262%200.844%205.139%200.006%207%200.006%20C%208.861%200.006%2010.738%200.844%2011.95%202.056%20C%2013.162%203.268%2014%205.145%2014%207.006%20Z%20M%2010.536%203.47%20C%209.576%202.511%208.453%202.006%207%202.006%20C%205.547%202.006%204.424%202.511%203.464%203.47%20C%202.505%204.43%202%205.553%202%207.006%20C%202%208.459%202.505%209.582%203.464%2010.542%20C%204.424%2011.501%205.547%2012.006%207%2012.006%20C%208.453%2012.006%209.576%2011.501%2010.536%2010.542%20C%2011.495%209.582%2012%208.459%2012%207.006%20C%2012%205.553%2011.495%204.43%2010.536%203.47%20Z'%20/%3e%3c/svg%3e";
var status_unknown_default = "data:image/svg+xml,%3csvg%20viewBox='0%200%2014%2014'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20fill='currentColor'%20d='M13.8668%208.36613L11.9048%207.978C11.967%207.66329%2012%207.33649%2012%207C12%206.66351%2011.967%206.3367%2011.9048%206.022L13.8668%205.63387C13.9542%206.07571%2014%206.5325%2014%207C14%207.4675%2013.9542%207.92429%2013.8668%208.36613ZM12.821%203.11069L11.159%204.22333C10.7934%203.67721%2010.3228%203.2066%209.77667%202.84098L10.8893%201.17904C11.6527%201.6901%2012.3099%202.34733%2012.821%203.11069ZM8.36613%200.133238L7.978%202.09521C7.66329%202.03296%207.33649%202%207%202C6.66351%202%206.3367%202.03296%206.022%202.09521L5.63387%200.133238C6.07571%200.0458286%206.5325%200%207%200C7.4675%200%207.92429%200.0458285%208.36613%200.133238ZM3.11069%201.17904L4.22333%202.84098C3.67721%203.2066%203.2066%203.67721%202.84098%204.22333L1.17904%203.11069C1.6901%202.34733%202.34733%201.6901%203.11069%201.17904ZM0.133238%205.63387C0.0458285%206.07571%200%206.5325%200%207C0%207.4675%200.0458286%207.92429%200.133238%208.36613L2.09521%207.978C2.03296%207.6633%202%207.33649%202%207C2%206.66351%202.03296%206.33671%202.09521%206.022L0.133238%205.63387ZM1.17904%2010.8893L2.84098%209.77667C3.2066%2010.3228%203.67721%2010.7934%204.22333%2011.159L3.11069%2012.821C2.34733%2012.3099%201.6901%2011.6527%201.17904%2010.8893ZM5.63387%2013.8668L6.022%2011.9048C6.33671%2011.967%206.66351%2012%207%2012C7.33649%2012%207.6633%2011.967%207.978%2011.9048L8.36613%2013.8668C7.92429%2013.9542%207.4675%2014%207%2014C6.5325%2014%206.07571%2013.9542%205.63387%2013.8668ZM10.8893%2012.821L9.77667%2011.159C10.3228%2010.7934%2010.7934%2010.3228%2011.159%209.77667L12.821%2010.8893C12.3099%2011.6527%2011.6527%2012.3099%2010.8893%2012.821Z'%20/%3e%3c/svg%3e";
var status_waiting_default = "data:image/svg+xml,%3csvg%20viewBox='0%200%2014%2014'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20fill='currentColor'%20d='M7%2014C10.866%2014%2014%2010.866%2014%207C14%203.13401%2010.866%200%207%200C3.13401%200%200%203.13401%200%207C0%2010.866%203.13401%2014%207%2014ZM7%2012C4.23858%2012%202%209.76142%202%207C2%204.23858%204.23858%202%207%202C9.76142%202%2012%204.23858%2012%207C12%209.76142%209.76142%2012%207%2012ZM6%203V8H11C11%205.23858%208.76142%203%206%203Z'%20/%3e%3c/svg%3e";
var status_warning_default = "data:image/svg+xml,%3csvg%20viewBox='0%200%2014%2014'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20fill='currentColor'%20d='M%2014%207%20C%2014%2010.866%2010.866%2014%207%2014%20C%203.134%2014%200%2010.866%200%207%20C%200%203.134%203.134%200%207%200%20C%2010.866%200%2014%203.134%2014%207%20Z%20M%206.5%209%20C%206.224%209%206%209.224%206%209.5%20L%206%2010.5%20C%206%2010.776%206.224%2011%206.5%2011%20L%207.5%2011%20C%207.776%2011%208%2010.776%208%2010.5%20L%208%209.5%20C%208%209.224%207.776%209%207.5%209%20L%206.5%209%20Z%20M%206.5%203%20C%206.224%203%206%203.224%206%203.5%20L%206%207.5%20C%206%207.776%206.224%208%206.5%208%20L%207.5%208%20C%207.776%208%208%207.776%208%207.5%20L%208%203.5%20C%208%203.224%207.776%203%207.5%203%20L%206.5%203%20Z'%20/%3e%3c/svg%3e";
var text_default = "data:image/svg+xml,%3csvg%20viewBox='0%200%2012%2012'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20fill='currentColor'%20d='M1.78814e-07%200.666667C1.78814e-07%200.298477%200.298477%200%200.666667%200H11.3333C11.7015%200%2012%200.298477%2012%200.666667C12%201.03486%2011.7015%201.33333%2011.3333%201.33333H0.666667C0.298477%201.33333%201.78814e-07%201.03486%201.78814e-07%200.666667ZM1.78814e-07%203.62963C1.78814e-07%203.26144%200.298477%202.96296%200.666667%202.96296H11.3333C11.7015%202.96296%2012%203.26144%2012%203.62963C12%203.99782%2011.7015%204.2963%2011.3333%204.2963H0.666667C0.298477%204.2963%201.78814e-07%203.99782%201.78814e-07%203.62963ZM0%206.59259C0%206.2244%200.298477%205.92593%200.666667%205.92593H11.3333C11.7015%205.92593%2012%206.2244%2012%206.59259C12%206.96078%2011.7015%207.25926%2011.3333%207.25926H0.666667C0.298477%207.25926%200%206.96078%200%206.59259ZM0%209.55556C0%209.18737%200.298477%208.88889%200.666667%208.88889H8.66667C9.03486%208.88889%209.33333%209.18737%209.33333%209.55556C9.33333%209.92375%209.03486%2010.2222%208.66667%2010.2222H0.666667C0.298477%2010.2222%200%209.92375%200%209.55556Z'%20/%3e%3c/svg%3e";
var toolbox_default = "data:image/svg+xml,%3csvg%20aria-hidden='true'%20viewBox='0%200%2024%2024'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20style='stroke:currentColor;stroke-opacity:%201;'%20d='M8%208V4a2%202%200%200%201%202-2h4a2%202%200%200%201%202%202v4m6%2012V10a2%202%200%200%200-2-2H4a2%202%200%200%200-2%202v10a2%202%200%200%200%202%202h16a2%202%200%200%200%202-2ZM8%2013v4m8-4v4M2%2015h20'%20stroke='currentColor'%20stroke-width='2'%20stroke-linecap='round'/%3e%3c/svg%3e";
var triangle_default = "data:image/svg+xml,%3csvg%20viewBox='0%200%20512%20512'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20fill='currentColor'%20d='M214.433%2056C232.908%2023.9999%20279.096%2024.0001%20297.571%2056L477.704%20368C496.18%20400%20473.085%20440%20436.135%20440H75.8685C38.918%20440%2015.8241%20400%2034.2993%20368L214.433%2056ZM256.002%20144L131.294%20360H380.709L256.002%20144Z'%20/%3e%3c/svg%3e";
var vector_square_default = "data:image/svg+xml,%3csvg%20viewBox='0%200%2024%2024'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3crect%20x='2'%20y='2'%20width='5'%20height='5'%20rx='1'%20stroke='currentColor'%20style='stroke:currentColor;stroke-opacity:1;'%20stroke-width='2'/%3e%3crect%20x='17'%20y='2'%20width='5'%20height='5'%20rx='1'%20stroke='currentColor'%20style='stroke:currentColor;stroke-opacity:1;'%20stroke-width='2'/%3e%3crect%20x='17'%20y='17'%20width='5'%20height='5'%20rx='1'%20stroke='currentColor'%20style='stroke:currentColor;stroke-opacity:1;'%20stroke-width='2'/%3e%3crect%20x='2'%20y='17'%20width='5'%20height='5'%20rx='1'%20stroke='currentColor'%20style='stroke:currentColor;stroke-opacity:1;'%20stroke-width='2'/%3e%3crect%20x='7'%20y='3'%20width='10'%20height='2'%20fill='currentColor'%20style='fill:currentColor;fill-opacity:1;'/%3e%3crect%20x='7'%20y='19'%20width='10'%20height='2'%20fill='currentColor'%20style='fill:currentColor;fill-opacity:1;'/%3e%3crect%20x='3'%20y='7'%20width='2'%20height='10'%20fill='currentColor'%20style='fill:currentColor;fill-opacity:1;'/%3e%3crect%20x='19'%20y='7'%20width='2'%20height='10'%20fill='currentColor'%20style='fill:currentColor;fill-opacity:1;'/%3e%3c/svg%3e";
var _hoisted_1$207 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$187(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$207, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M21 12H9m12 6H7M21 6H3"
  }, null, -1)]);
}
var align_right_default = {
  name: "lucide-align-right",
  render: render$187
};
var _hoisted_1$206 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$186(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$206, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("rect", {
    width: "20",
    height: "5",
    x: "2",
    y: "3",
    rx: "1"
  }), createBaseVNode("path", { d: "M4 8v11a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8m-10 4h4" })], -1)]);
}
var archive_default = {
  name: "lucide-archive",
  render: render$186
};
var _hoisted_1$205 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$185(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$205, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("rect", {
    width: "20",
    height: "5",
    x: "2",
    y: "3",
    rx: "1"
  }), createBaseVNode("path", { d: "M4 8v11a2 2 0 0 0 2 2h2M20 8v11a2 2 0 0 1-2 2h-2m-7-6l3-3l3 3m-3-3v9" })], -1)]);
}
var archive_restore_default = {
  name: "lucide-archive-restore",
  render: render$185
};
var _hoisted_1$204 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$184(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$204, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M12 5v14m7-7l-7 7l-7-7"
  }, null, -1)]);
}
var arrow_down_default$1 = {
  name: "lucide-arrow-down",
  render: render$184
};
var _hoisted_1$203 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$183(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$203, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "m12 19l-7-7l7-7m7 7H5"
  }, null, -1)]);
}
var arrow_left_default$1 = {
  name: "lucide-arrow-left",
  render: render$183
};
var _hoisted_1$202 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$182(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$202, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M8 3L4 7l4 4M4 7h16m-4 14l4-4l-4-4m4 4H4"
  }, null, -1)]);
}
var arrow_left_right_default = {
  name: "lucide-arrow-left-right",
  render: render$182
};
var _hoisted_1$201 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$181(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$201, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M5 12h14m-7-7l7 7l-7 7"
  }, null, -1)]);
}
var arrow_right_default$1 = {
  name: "lucide-arrow-right",
  render: render$181
};
var _hoisted_1$200 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$180(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$200, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M3 5v14m18-7H7m8 6l6-6l-6-6"
  }, null, -1)]);
}
var arrow_right_from_line_default = {
  name: "lucide-arrow-right-from-line",
  render: render$180
};
var _hoisted_1$199 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$179(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$199, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M17 12H3m8 6l6-6l-6-6m10-1v14"
  }, null, -1)]);
}
var arrow_right_to_line_default = {
  name: "lucide-arrow-right-to-line",
  render: render$179
};
var _hoisted_1$198 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$178(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$198, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "m5 12l7-7l7 7m-7 7V5"
  }, null, -1)]);
}
var arrow_up_default = {
  name: "lucide-arrow-up",
  render: render$178
};
var _hoisted_1$197 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$177(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$197, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("circle", {
    cx: "12",
    cy: "12",
    r: "4"
  }), createBaseVNode("path", { d: "M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-4 8" })], -1)]);
}
var at_sign_default = {
  name: "lucide-at-sign",
  render: render$177
};
var _hoisted_1$196 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$176(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$196, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), createBaseVNode("path", { d: "m4.9 4.9l14.2 14.2" })], -1)]);
}
var ban_default = {
  name: "lucide-ban",
  render: render$176
};
var _hoisted_1$195 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$175(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$195, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M10.268 21a2 2 0 0 0 3.464 0m-10.47-5.674A1 1 0 0 0 4 17h16a1 1 0 0 0 .74-1.673C19.41 13.956 18 12.499 18 8A6 6 0 0 0 6 8c0 4.499-1.411 5.956-2.738 7.326"
  }, null, -1)]);
}
var bell_default = {
  name: "lucide-bell",
  render: render$175
};
var _hoisted_1$194 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$174(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$194, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
  }, null, -1)]);
}
var book_default = {
  name: "lucide-book",
  render: render$174
};
var _hoisted_1$193 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$173(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$193, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M12 7v14m-9-3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h5a4 4 0 0 1 4 4a4 4 0 0 1 4-4h5a1 1 0 0 1 1 1v13a1 1 0 0 1-1 1h-6a3 3 0 0 0-3 3a3 3 0 0 0-3-3z"
  }, null, -1)]);
}
var book_open_default = {
  name: "lucide-book-open",
  render: render$173
};
var _hoisted_1$192 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$172(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$192, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [
    createBaseVNode("path", { d: "M12 8V4H8" }),
    createBaseVNode("rect", {
      width: "16",
      height: "12",
      x: "4",
      y: "8",
      rx: "2"
    }),
    createBaseVNode("path", { d: "M2 14h2m16 0h2m-7-1v2m-6-2v2" })
  ], -1)]);
}
var bot_default = {
  name: "lucide-bot",
  render: render$172
};
var _hoisted_1$191 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$171(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$191, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M21 8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16Z" }), createBaseVNode("path", { d: "m3.3 7l8.7 5l8.7-5M12 22V12" })], -1)]);
}
var box_default = {
  name: "lucide-box",
  render: render$171
};
var _hoisted_1$190 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$170(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$190, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M8 3H7a2 2 0 0 0-2 2v5a2 2 0 0 1-2 2a2 2 0 0 1 2 2v5c0 1.1.9 2 2 2h1m8 0h1a2 2 0 0 0 2-2v-5c0-1.1.9-2 2-2a2 2 0 0 1-2-2V5a2 2 0 0 0-2-2h-1"
  }, null, -1)]);
}
var braces_default = {
  name: "lucide-braces",
  render: render$170
};
var _hoisted_1$189 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$169(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$189, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [
    createBaseVNode("path", { d: "M12 5a3 3 0 1 0-5.997.125a4 4 0 0 0-2.526 5.77a4 4 0 0 0 .556 6.588A4 4 0 1 0 12 18Z" }),
    createBaseVNode("path", { d: "M12 5a3 3 0 1 1 5.997.125a4 4 0 0 1 2.526 5.77a4 4 0 0 1-.556 6.588A4 4 0 1 1 12 18Z" }),
    createBaseVNode("path", { d: "M15 13a4.5 4.5 0 0 1-3-4a4.5 4.5 0 0 1-3 4m8.599-6.5a3 3 0 0 0 .399-1.375m-11.995 0A3 3 0 0 0 6.401 6.5m-2.924 4.396a4 4 0 0 1 .585-.396m15.876 0a4 4 0 0 1 .585.396M6 18a4 4 0 0 1-1.967-.516m15.934 0A4 4 0 0 1 18 18" })
  ], -1)]);
}
var brain_default = {
  name: "lucide-brain",
  render: render$169
};
var _hoisted_1$188 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$168(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$188, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [
    createBaseVNode("path", { d: "m8 2l1.88 1.88m4.24 0L16 2M9 7.13v-1a3.003 3.003 0 1 1 6 0v1" }),
    createBaseVNode("path", { d: "M12 20c-3.3 0-6-2.7-6-6v-3a4 4 0 0 1 4-4h4a4 4 0 0 1 4 4v3c0 3.3-2.7 6-6 6m0 0v-9" }),
    createBaseVNode("path", { d: "M6.53 9C4.6 8.8 3 7.1 3 5m3 8H2m1 8c0-2.1 1.7-3.9 3.8-4M20.97 5c0 2.1-1.6 3.8-3.5 4M22 13h-4m-.8 4c2.1.1 3.8 1.9 3.8 4" })
  ], -1)]);
}
var bug_default = {
  name: "lucide-bug",
  render: render$168
};
var _hoisted_1$187 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$167(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$187, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("rect", {
    width: "16",
    height: "20",
    x: "4",
    y: "2",
    rx: "2"
  }), createBaseVNode("path", { d: "M8 6h8m0 8v4m0-8h.01M12 10h.01M8 10h.01M12 14h.01M8 14h.01M12 18h.01M8 18h.01" })], -1)]);
}
var calculator_default = {
  name: "lucide-calculator",
  render: render$167
};
var _hoisted_1$186 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$166(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$186, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [
    createBaseVNode("path", { d: "M8 2v4m8-4v4" }),
    createBaseVNode("rect", {
      width: "18",
      height: "18",
      x: "3",
      y: "4",
      rx: "2"
    }),
    createBaseVNode("path", { d: "M3 10h18" })
  ], -1)]);
}
var calendar_default = {
  name: "lucide-calendar",
  render: render$166
};
var _hoisted_1$185 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$165(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$185, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "m3 15l4-8l4 8m-7-2h6m5-2h4.5a2 2 0 0 1 0 4H15V7h4a2 2 0 0 1 0 4"
  }, null, -1)]);
}
var case_upper_default = {
  name: "lucide-case-upper",
  render: render$165
};
var _hoisted_1$184 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$164(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$184, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M13 17V9m5 8v-3M3 3v16a2 2 0 0 0 2 2h16M8 17V5"
  }, null, -1)]);
}
var chart_column_decreasing_default = {
  name: "lucide-chart-column-decreasing",
  render: render$164
};
var _hoisted_1$183 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$163(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$183, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M20 6L9 17l-5-5"
  }, null, -1)]);
}
var check_default = {
  name: "lucide-check",
  render: render$163
};
var _hoisted_1$182 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$162(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$182, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M18 6L7 17l-5-5m20-2l-7.5 7.5L13 16"
  }, null, -1)]);
}
var check_check_default = {
  name: "lucide-check-check",
  render: render$162
};
var _hoisted_1$181 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$161(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$181, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "m6 9l6 6l6-6"
  }, null, -1)]);
}
var chevron_down_default$1 = {
  name: "lucide-chevron-down",
  render: render$161
};
var _hoisted_1$180 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$160(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$180, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "m15 18l-6-6l6-6"
  }, null, -1)]);
}
var chevron_left_default = {
  name: "lucide-chevron-left",
  render: render$160
};
var _hoisted_1$179 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$159(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$179, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "m9 18l6-6l-6-6"
  }, null, -1)]);
}
var chevron_right_default = {
  name: "lucide-chevron-right",
  render: render$159
};
var _hoisted_1$178 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$158(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$178, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "m18 15l-6-6l-6 6"
  }, null, -1)]);
}
var chevron_up_default = {
  name: "lucide-chevron-up",
  render: render$158
};
var _hoisted_1$177 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$157(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$177, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "m7 20l5-5l5 5M7 4l5 5l5-5"
  }, null, -1)]);
}
var chevrons_down_up_default = {
  name: "lucide-chevrons-down-up",
  render: render$157
};
var _hoisted_1$176 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$156(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$176, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "m11 17l-5-5l5-5m7 10l-5-5l5-5"
  }, null, -1)]);
}
var chevrons_left_default = {
  name: "lucide-chevrons-left",
  render: render$156
};
var _hoisted_1$175 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$155(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$175, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "m7 15l5 5l5-5M7 9l5-5l5 5"
  }, null, -1)]);
}
var chevrons_up_down_default = {
  name: "lucide-chevrons-up-down",
  render: render$155
};
var _hoisted_1$174 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$154(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$174, t[0] ||= [createBaseVNode("circle", {
    cx: "12",
    cy: "12",
    r: "10",
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, null, -1)]);
}
var circle_default = {
  name: "lucide-circle",
  render: render$154
};
var _hoisted_1$173 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$153(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$173, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), createBaseVNode("path", { d: "M12 8v4m0 4h.01" })], -1)]);
}
var circle_alert_default = {
  name: "lucide-circle-alert",
  render: render$153
};
var _hoisted_1$172 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$152(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$172, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), createBaseVNode("path", { d: "m9 12l2 2l4-4" })], -1)]);
}
var circle_check_default$1 = {
  name: "lucide-circle-check",
  render: render$152
};
var _hoisted_1$171 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$151(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$171, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), createBaseVNode("circle", {
    cx: "12",
    cy: "12",
    r: "1"
  })], -1)]);
}
var circle_dot_default = {
  name: "lucide-circle-dot",
  render: render$151
};
var _hoisted_1$170 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$150(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$170, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), createBaseVNode("path", { d: "M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3m.08 4h.01" })], -1)]);
}
var circle_help_default = {
  name: "lucide-circle-help",
  render: render$150
};
var _hoisted_1$169 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$149(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$169, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), createBaseVNode("path", { d: "M8 12h8" })], -1)]);
}
var circle_minus_default = {
  name: "lucide-circle-minus",
  render: render$149
};
var _hoisted_1$168 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$148(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$168, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), createBaseVNode("path", { d: "M10 15V9m4 6V9" })], -1)]);
}
var circle_pause_default = {
  name: "lucide-circle-pause",
  render: render$148
};
var _hoisted_1$167 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$147(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$167, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), createBaseVNode("path", { d: "m10 8l6 4l-6 4z" })], -1)]);
}
var circle_play_default = {
  name: "lucide-circle-play",
  render: render$147
};
var _hoisted_1$166 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$146(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$166, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), createBaseVNode("path", { d: "M8 12h8m-4-4v8" })], -1)]);
}
var circle_plus_default = {
  name: "lucide-circle-plus",
  render: render$146
};
var _hoisted_1$165 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$145(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$165, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [
    createBaseVNode("path", { d: "M18 20a6 6 0 0 0-12 0" }),
    createBaseVNode("circle", {
      cx: "12",
      cy: "10",
      r: "4"
    }),
    createBaseVNode("circle", {
      cx: "12",
      cy: "12",
      r: "10"
    })
  ], -1)]);
}
var circle_user_round_default = {
  name: "lucide-circle-user-round",
  render: render$145
};
var _hoisted_1$164 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$144(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$164, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), createBaseVNode("path", { d: "m15 9l-6 6m0-6l6 6" })], -1)]);
}
var circle_x_default = {
  name: "lucide-circle-x",
  render: render$144
};
var _hoisted_1$163 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$143(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$163, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("rect", {
    width: "8",
    height: "4",
    x: "8",
    y: "2",
    rx: "1",
    ry: "1"
  }), createBaseVNode("path", { d: "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" })], -1)]);
}
var clipboard_default = {
  name: "lucide-clipboard",
  render: render$143
};
var _hoisted_1$162 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$142(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$162, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [
    createBaseVNode("rect", {
      width: "8",
      height: "4",
      x: "8",
      y: "2",
      rx: "1",
      ry: "1"
    }),
    createBaseVNode("path", { d: "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" }),
    createBaseVNode("path", { d: "m9 14l2 2l4-4" })
  ], -1)]);
}
var clipboard_check_default = {
  name: "lucide-clipboard-check",
  render: render$142
};
var _hoisted_1$161 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$141(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$161, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("rect", {
    width: "8",
    height: "4",
    x: "8",
    y: "2",
    rx: "1",
    ry: "1"
  }), createBaseVNode("path", { d: "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2m4 7h4m-4 5h4m-8-5h.01M8 16h.01" })], -1)]);
}
var clipboard_list_default = {
  name: "lucide-clipboard-list",
  render: render$141
};
var _hoisted_1$160 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$140(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$160, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M12 6v6l4 2" }), createBaseVNode("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  })], -1)]);
}
var clock_default = {
  name: "lucide-clock",
  render: render$140
};
var _hoisted_1$159 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$139(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$159, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M17.5 19H9a7 7 0 1 1 6.71-9h1.79a4.5 4.5 0 1 1 0 9"
  }, null, -1)]);
}
var cloud_default = {
  name: "lucide-cloud",
  render: render$139
};
var _hoisted_1$158 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$138(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$158, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M12 13v8l-4-4m4 4l4-4" }), createBaseVNode("path", { d: "M4.393 15.269A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.436 8.284" })], -1)]);
}
var cloud_download_default = {
  name: "lucide-cloud-download",
  render: render$138
};
var _hoisted_1$157 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$137(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$157, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "m16 18l6-6l-6-6M8 6l-6 6l6 6"
  }, null, -1)]);
}
var code_default = {
  name: "lucide-code",
  render: render$137
};
var _hoisted_1$156 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$136(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$156, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M12 20a8 8 0 1 0 0-16a8 8 0 0 0 0 16" }), createBaseVNode("path", { d: "M12 14a2 2 0 1 0 0-4a2 2 0 0 0 0 4m0-12v2m0 18v-2m5 .66l-1-1.73m-5-8.66L7 3.34M20.66 17l-1.73-1M3.34 7l1.73 1M14 12h8M2 12h2m16.66-5l-1.73 1M3.34 17l1.73-1M17 3.34l-1 1.73m-5 8.66l-4 6.93" })], -1)]);
}
var cog_default = {
  name: "lucide-cog",
  render: render$136
};
var _hoisted_1$155 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$135(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$155, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M10.5 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v5.5m-6.7 9.1l1-.4M15 3v7.5m.2 6.4l-.9-.3m2.3 5.1l.3-.9m-.1-5.5l-.4-1m2.7.9l.3-.9m.2 7.4l-.4-1m1.5-3.9l1-.4m0 3l-.9-.3M9 3v18" }), createBaseVNode("circle", {
    cx: "18",
    cy: "18",
    r: "3"
  })], -1)]);
}
var columns_3_cog_default = {
  name: "lucide-columns-3-cog",
  render: render$135
};
var _hoisted_1$154 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$134(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$154, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), createBaseVNode("path", { d: "M12 18a6 6 0 0 0 0-12z" })], -1)]);
}
var contrast_default = {
  name: "lucide-contrast",
  render: render$134
};
var _hoisted_1$153 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$133(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$153, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("rect", {
    width: "14",
    height: "14",
    x: "8",
    y: "8",
    rx: "2",
    ry: "2"
  }), createBaseVNode("path", { d: "M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2" })], -1)]);
}
var copy_default = {
  name: "lucide-copy",
  render: render$133
};
var _hoisted_1$152 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$132(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$152, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), createBaseVNode("path", { d: "M22 12h-4M6 12H2m10-6V2m0 20v-4" })], -1)]);
}
var crosshair_default = {
  name: "lucide-crosshair",
  render: render$132
};
var _hoisted_1$151 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$131(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$151, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [
    createBaseVNode("ellipse", {
      cx: "12",
      cy: "5",
      rx: "9",
      ry: "3"
    }),
    createBaseVNode("path", { d: "M3 5v14a9 3 0 0 0 18 0V5" }),
    createBaseVNode("path", { d: "M3 12a9 3 0 0 0 18 0" })
  ], -1)]);
}
var database_default = {
  name: "lucide-database",
  render: render$131
};
var _hoisted_1$150 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$130(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$150, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M11 20H2m9-15.438v16.157a1 1 0 0 0 1.242.97L19 20V5.562a2 2 0 0 0-1.515-1.94l-4-1A2 2 0 0 0 11 4.561zM11 4H8a2 2 0 0 0-2 2v14m8-8h.01M22 20h-3"
  }, null, -1)]);
}
var door_open_default = {
  name: "lucide-door-open",
  render: render$130
};
var _hoisted_1$149 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$129(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$149, t[0] ||= [createBaseVNode("circle", {
    cx: "12.1",
    cy: "12.1",
    r: "1",
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, null, -1)]);
}
var dot_default = {
  name: "lucide-dot",
  render: render$129
};
var _hoisted_1$148 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$128(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$148, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M21.54 15H17a2 2 0 0 0-2 2v4.54M7 3.34V5a3 3 0 0 0 3 3a2 2 0 0 1 2 2c0 1.1.9 2 2 2a2 2 0 0 0 2-2c0-1.1.9-2 2-2h3.17M11 21.95V18a2 2 0 0 0-2-2a2 2 0 0 1-2-2v-1a2 2 0 0 0-2-2H2.05" }), createBaseVNode("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  })], -1)]);
}
var earth_default = {
  name: "lucide-earth",
  render: render$128
};
var _hoisted_1$147 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$127(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$147, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [
    createBaseVNode("circle", {
      cx: "12",
      cy: "12",
      r: "1"
    }),
    createBaseVNode("circle", {
      cx: "19",
      cy: "12",
      r: "1"
    }),
    createBaseVNode("circle", {
      cx: "5",
      cy: "12",
      r: "1"
    })
  ], -1)]);
}
var ellipsis_default = {
  name: "lucide-ellipsis",
  render: render$127
};
var _hoisted_1$146 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$126(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$146, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [
    createBaseVNode("circle", {
      cx: "12",
      cy: "12",
      r: "1"
    }),
    createBaseVNode("circle", {
      cx: "12",
      cy: "5",
      r: "1"
    }),
    createBaseVNode("circle", {
      cx: "12",
      cy: "19",
      r: "1"
    })
  ], -1)]);
}
var ellipsis_vertical_default = {
  name: "lucide-ellipsis-vertical",
  render: render$126
};
var _hoisted_1$145 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$125(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$145, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M5 9h14M5 15h14"
  }, null, -1)]);
}
var equal_default = {
  name: "lucide-equal",
  render: render$125
};
var _hoisted_1$144 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$124(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$144, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "m15 15l6 6M15 9l6-6m0 13v5h-5m5-13V3h-5M3 16v5h5m-5 0l6-6M3 8V3h5m1 6L3 3"
  }, null, -1)]);
}
var expand_default = {
  name: "lucide-expand",
  render: render$124
};
var _hoisted_1$143 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$123(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$143, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M15 3h6v6m-11 5L21 3m-3 10v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"
  }, null, -1)]);
}
var external_link_default = {
  name: "lucide-external-link",
  render: render$123
};
var _hoisted_1$142 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$122(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$142, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M2.062 12.348a1 1 0 0 1 0-.696a10.75 10.75 0 0 1 19.876 0a1 1 0 0 1 0 .696a10.75 10.75 0 0 1-19.876 0" }), createBaseVNode("circle", {
    cx: "12",
    cy: "12",
    r: "3"
  })], -1)]);
}
var eye_default = {
  name: "lucide-eye",
  render: render$122
};
var _hoisted_1$141 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$121(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$141, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M10.733 5.076a10.744 10.744 0 0 1 11.205 6.575a1 1 0 0 1 0 .696a10.8 10.8 0 0 1-1.444 2.49m-6.41-.679a3 3 0 0 1-4.242-4.242" }), createBaseVNode("path", { d: "M17.479 17.499a10.75 10.75 0 0 1-15.417-5.151a1 1 0 0 1 0-.696a10.75 10.75 0 0 1 4.446-5.143M2 2l20 20" })], -1)]);
}
var eye_off_default = {
  name: "lucide-eye-off",
  render: render$121
};
var _hoisted_1$140 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$120(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$140, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z" }), createBaseVNode("path", { d: "M14 2v4a2 2 0 0 0 2 2h4" })], -1)]);
}
var file_default = {
  name: "lucide-file",
  render: render$120
};
var _hoisted_1$139 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$119(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$139, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [
    createBaseVNode("path", { d: "M10 12v-1m0 7v-2m0-9V6m4-4v4a2 2 0 0 0 2 2h4" }),
    createBaseVNode("path", { d: "M15.5 22H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v16a2 2 0 0 0 .274 1.01" }),
    createBaseVNode("circle", {
      cx: "10",
      cy: "20",
      r: "2"
    })
  ], -1)]);
}
var file_archive_default = {
  name: "lucide-file-archive",
  render: render$119
};
var _hoisted_1$138 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$118(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$138, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M10 12.5L8 15l2 2.5m4-5l2 2.5l-2 2.5M14 2v4a2 2 0 0 0 2 2h4" }), createBaseVNode("path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7z" })], -1)]);
}
var file_code_default = {
  name: "lucide-file-code",
  render: render$118
};
var _hoisted_1$137 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$117(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$137, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Zm-6 8h6m-3 3V7M9 17h6"
  }, null, -1)]);
}
var file_diff_default = {
  name: "lucide-file-diff",
  render: render$117
};
var _hoisted_1$136 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$116(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$136, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z" }), createBaseVNode("path", { d: "M14 2v4a2 2 0 0 0 2 2h4m-8 10v-6m-3 3l3 3l3-3" })], -1)]);
}
var file_down_default = {
  name: "lucide-file-down",
  render: render$116
};
var _hoisted_1$135 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$115(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$135, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4" }), createBaseVNode("path", { d: "M14 2v4a2 2 0 0 0 2 2h4M2 15h10m-3 3l3-3l-3-3" })], -1)]);
}
var file_input_default = {
  name: "lucide-file-input",
  render: render$115
};
var _hoisted_1$134 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$114(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$134, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [
    createBaseVNode("path", { d: "M14 2v4a2 2 0 0 0 2 2h4M4 7V4a2 2 0 0 1 2-2a2 2 0 0 0-2 2" }),
    createBaseVNode("path", { d: "M4.063 20.999a2 2 0 0 0 2 1L18 22a2 2 0 0 0 2-2V7l-5-5H6m-1 9l-3 3" }),
    createBaseVNode("path", { d: "m5 17l-3-3h10" })
  ], -1)]);
}
var file_output_default = {
  name: "lucide-file-output",
  render: render$114
};
var _hoisted_1$133 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$113(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$133, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z" }), createBaseVNode("path", { d: "M14 2v4a2 2 0 0 0 2 2h4M10 9H8m8 4H8m8 4H8" })], -1)]);
}
var file_text_default = {
  name: "lucide-file-text",
  render: render$113
};
var _hoisted_1$132 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$112(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$132, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [
    createBaseVNode("path", { d: "M20 7h-3a2 2 0 0 1-2-2V2" }),
    createBaseVNode("path", { d: "M9 18a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h7l4 4v10a2 2 0 0 1-2 2Z" }),
    createBaseVNode("path", { d: "M3 7.6v12.8A1.6 1.6 0 0 0 4.6 22h9.8" })
  ], -1)]);
}
var files_default = {
  name: "lucide-files",
  render: render$112
};
var _hoisted_1$131 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$111(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$131, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M12 10a2 2 0 0 0-2 2c0 1.02-.1 2.51-.26 4M14 13.12c0 2.38 0 6.38-1 8.88m4.29-.98c.12-.6.43-2.3.5-3.02M2 12a10 10 0 0 1 18-6M2 16h.01m19.79 0c.2-2 .131-5.354 0-6" }), createBaseVNode("path", { d: "M5 19.5C5.5 18 6 15 6 12a6 6 0 0 1 .34-2m2.31 12c.21-.66.45-1.32.57-2M9 6.8a6 6 0 0 1 9 5.2v2" })], -1)]);
}
var fingerprint_default = {
  name: "lucide-fingerprint",
  render: render$111
};
var _hoisted_1$130 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$110(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$130, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M14 2v6a2 2 0 0 0 .245.96l5.51 10.08A2 2 0 0 1 18 22H6a2 2 0 0 1-1.755-2.96l5.51-10.08A2 2 0 0 0 10 8V2M6.453 15h11.094M8.5 2h7"
  }, null, -1)]);
}
var flask_conical_default = {
  name: "lucide-flask-conical",
  render: render$110
};
var _hoisted_1$129 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$109(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$129, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z"
  }, null, -1)]);
}
var folder_default = {
  name: "lucide-folder",
  render: render$109
};
var _hoisted_1$128 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$108(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$128, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "m6 14l1.5-2.9A2 2 0 0 1 9.24 10H20a2 2 0 0 1 1.94 2.5l-1.54 6a2 2 0 0 1-1.95 1.5H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H18a2 2 0 0 1 2 2v2"
  }, null, -1)]);
}
var folder_open_default = {
  name: "lucide-folder-open",
  render: render$108
};
var _hoisted_1$127 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$107(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$127, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M12 10v6m-3-3h6m5 7a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z"
  }, null, -1)]);
}
var folder_plus_default = {
  name: "lucide-folder-plus",
  render: render$107
};
var _hoisted_1$126 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$106(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$126, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M10 20a1 1 0 0 0 .553.895l2 1A1 1 0 0 0 14 21v-7a2 2 0 0 1 .517-1.341L21.74 4.67A1 1 0 0 0 21 3H3a1 1 0 0 0-.742 1.67l7.225 7.989A2 2 0 0 1 10 14z"
  }, null, -1)]);
}
var funnel_default = {
  name: "lucide-funnel",
  render: render$106
};
var _hoisted_1$125 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$105(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$125, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M6 3h12l4 6l-10 13L2 9Z" }), createBaseVNode("path", { d: "M11 3L8 9l4 13l4-13l-3-6M2 9h20" })], -1)]);
}
var gem_default = {
  name: "lucide-gem",
  render: render$105
};
var _hoisted_1$124 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$104(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$124, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("rect", {
    width: "18",
    height: "4",
    x: "3",
    y: "8",
    rx: "1"
  }), createBaseVNode("path", { d: "M12 8v13m7-9v7a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2v-7m2.5-4a2.5 2.5 0 0 1 0-5A4.8 8 0 0 1 12 8a4.8 8 0 0 1 4.5-5a2.5 2.5 0 0 1 0 5" })], -1)]);
}
var gift_default = {
  name: "lucide-gift",
  render: render$104
};
var _hoisted_1$123 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$103(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$123, t[0] ||= [createStaticVNode('<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M6 3v12"></path><circle cx="18" cy="6" r="3"></circle><circle cx="6" cy="18" r="3"></circle><path d="M18 9a9 9 0 0 1-9 9"></path></g>', 1)]);
}
var git_branch_default = {
  name: "lucide-git-branch",
  render: render$103
};
var _hoisted_1$122 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$102(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$122, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), createBaseVNode("path", { d: "M12 2a14.5 14.5 0 0 0 0 20a14.5 14.5 0 0 0 0-20M2 12h20" })], -1)]);
}
var globe_default = {
  name: "lucide-globe",
  render: render$102
};
var _hoisted_1$121 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$101(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$121, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M21.42 10.922a1 1 0 0 0-.019-1.838L12.83 5.18a2 2 0 0 0-1.66 0L2.6 9.08a1 1 0 0 0 0 1.832l8.57 3.908a2 2 0 0 0 1.66 0zM22 10v6" }), createBaseVNode("path", { d: "M6 12.5V16a6 3 0 0 0 12 0v-3.5" })], -1)]);
}
var graduation_cap_default = {
  name: "lucide-graduation-cap",
  render: render$101
};
var _hoisted_1$120 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$100(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$120, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M12 3v18m-9-9h18" }), createBaseVNode("rect", {
    width: "18",
    height: "18",
    x: "3",
    y: "3",
    rx: "2"
  })], -1)]);
}
var grid_2x2_default = {
  name: "lucide-grid-2x2",
  render: render$100
};
var _hoisted_1$119 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$99(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$119, t[0] ||= [createStaticVNode('<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><circle cx="9" cy="12" r="1"></circle><circle cx="9" cy="5" r="1"></circle><circle cx="9" cy="19" r="1"></circle><circle cx="15" cy="12" r="1"></circle><circle cx="15" cy="5" r="1"></circle><circle cx="15" cy="19" r="1"></circle></g>', 1)]);
}
var grip_vertical_default = {
  name: "lucide-grip-vertical",
  render: render$99
};
var _hoisted_1$118 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$98(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$118, t[0] ||= [createStaticVNode('<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M11 15h2a2 2 0 1 0 0-4h-3c-.6 0-1.1.2-1.4.6L3 17"></path><path d="m7 21l1.6-1.4c.3-.4.8-.6 1.4-.6h4c1.1 0 2.1-.4 2.8-1.2l4.6-4.4a2 2 0 0 0-2.75-2.91l-4.2 3.9M2 16l6 6"></path><circle cx="16" cy="9" r="2.9"></circle><circle cx="6" cy="5" r="3"></circle></g>', 1)]);
}
var hand_coins_default = {
  name: "lucide-hand-coins",
  render: render$98
};
var _hoisted_1$117 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$97(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$117, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [
    createBaseVNode("path", { d: "m11 17l2 2a1 1 0 1 0 3-3" }),
    createBaseVNode("path", { d: "m14 14l2.5 2.5a1 1 0 1 0 3-3l-3.88-3.88a3 3 0 0 0-4.24 0l-.88.88a1 1 0 1 1-3-3l2.81-2.81a5.79 5.79 0 0 1 7.06-.87l.47.28a2 2 0 0 0 1.42.25L21 4" }),
    createBaseVNode("path", { d: "m21 3l1 11h-2M3 3L2 14l6.5 6.5a1 1 0 1 0 3-3M3 4h8" })
  ], -1)]);
}
var handshake_default = {
  name: "lucide-handshake",
  render: render$97
};
var _hoisted_1$116 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$96(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$116, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M22 12H2m3.45-6.89L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11M6 16h.01M10 16h.01"
  }, null, -1)]);
}
var hard_drive_default = {
  name: "lucide-hard-drive",
  render: render$96
};
var _hoisted_1$115 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$95(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$115, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [
    createBaseVNode("path", { d: "M12 2v8m4-4l-4 4l-4-4" }),
    createBaseVNode("rect", {
      width: "20",
      height: "8",
      x: "2",
      y: "14",
      rx: "2"
    }),
    createBaseVNode("path", { d: "M6 18h.01M10 18h.01" })
  ], -1)]);
}
var hard_drive_download_default = {
  name: "lucide-hard-drive-download",
  render: render$95
};
var _hoisted_1$114 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$94(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$114, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M4 9h16M4 15h16M10 3L8 21m8-18l-2 18"
  }, null, -1)]);
}
var hash_default = {
  name: "lucide-hash",
  render: render$94
};
var _hoisted_1$113 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$93(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$113, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M3 12a9 9 0 1 0 9-9a9.75 9.75 0 0 0-6.74 2.74L3 8" }), createBaseVNode("path", { d: "M3 3v5h5m4-1v5l4 2" })], -1)]);
}
var history_default = {
  name: "lucide-history",
  render: render$93
};
var _hoisted_1$112 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$92(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$112, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M5 22h14M5 2h14m-2 20v-4.172a2 2 0 0 0-.586-1.414L12 12l-4.414 4.414A2 2 0 0 0 7 17.828V22M7 2v4.172a2 2 0 0 0 .586 1.414L12 12l4.414-4.414A2 2 0 0 0 17 6.172V2"
  }, null, -1)]);
}
var hourglass_default = {
  name: "lucide-hourglass",
  render: render$92
};
var _hoisted_1$111 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$91(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$111, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M15 21v-8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v8" }), createBaseVNode("path", { d: "M3 10a2 2 0 0 1 .709-1.528l7-5.999a2 2 0 0 1 2.582 0l7 5.999A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z" })], -1)]);
}
var house_default = {
  name: "lucide-house",
  render: render$91
};
var _hoisted_1$110 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$90(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$110, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [
    createBaseVNode("rect", {
      width: "18",
      height: "18",
      x: "3",
      y: "3",
      rx: "2",
      ry: "2"
    }),
    createBaseVNode("circle", {
      cx: "9",
      cy: "9",
      r: "2"
    }),
    createBaseVNode("path", { d: "m21 15l-3.086-3.086a2 2 0 0 0-2.828 0L6 21" })
  ], -1)]);
}
var image_default = {
  name: "lucide-image",
  render: render$90
};
var _hoisted_1$109 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$89(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$109, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M22 12h-6l-2 3h-4l-2-3H2" }), createBaseVNode("path", { d: "M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11" })], -1)]);
}
var inbox_default = {
  name: "lucide-inbox",
  render: render$89
};
var _hoisted_1$108 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$88(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$108, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), createBaseVNode("path", { d: "M12 16v-4m0-4h.01" })], -1)]);
}
var info_default = {
  name: "lucide-info",
  render: render$88
};
var _hoisted_1$107 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$87(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$107, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M2.586 17.414A2 2 0 0 0 2 18.828V21a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h1a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h.172a2 2 0 0 0 1.414-.586l.814-.814a6.5 6.5 0 1 0-4-4z" }), createBaseVNode("circle", {
    cx: "16.5",
    cy: "7.5",
    r: ".5",
    fill: "currentColor"
  })], -1)]);
}
var key_round_default = {
  name: "lucide-key-round",
  render: render$87
};
var _hoisted_1$106 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$86(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$106, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "m5 8l6 6m-7 0l6-6l2-3M2 5h12M7 2h1m14 20l-5-10l-5 10m2-4h6"
  }, null, -1)]);
}
var languages_default = {
  name: "lucide-languages",
  render: render$86
};
var _hoisted_1$105 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$85(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$105, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [
    createBaseVNode("path", { d: "M12.83 2.18a2 2 0 0 0-1.66 0L2.6 6.08a1 1 0 0 0 0 1.83l8.58 3.91a2 2 0 0 0 1.66 0l8.58-3.9a1 1 0 0 0 0-1.83z" }),
    createBaseVNode("path", { d: "M2 12a1 1 0 0 0 .58.91l8.6 3.91a2 2 0 0 0 1.65 0l8.58-3.9A1 1 0 0 0 22 12" }),
    createBaseVNode("path", { d: "M2 17a1 1 0 0 0 .58.91l8.6 3.91a2 2 0 0 0 1.65 0l8.58-3.9A1 1 0 0 0 22 17" })
  ], -1)]);
}
var layers_default = {
  name: "lucide-layers",
  render: render$85
};
var _hoisted_1$104 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$84(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$104, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M15 14c.2-1 .7-1.7 1.5-2.5c1-.9 1.5-2.2 1.5-3.5A6 6 0 0 0 6 8c0 1 .2 2.2 1.5 3.5c.7.7 1.3 1.5 1.5 2.5m0 4h6m-5 4h4"
  }, null, -1)]);
}
var lightbulb_default = {
  name: "lucide-lightbulb",
  render: render$84
};
var _hoisted_1$103 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$83(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$103, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" }), createBaseVNode("path", { d: "M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" })], -1)]);
}
var link_default = {
  name: "lucide-link",
  render: render$83
};
var _hoisted_1$102 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$82(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$102, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M3 12h.01M3 18h.01M3 6h.01M8 12h13M8 18h13M8 6h13"
  }, null, -1)]);
}
var list_default = {
  name: "lucide-list",
  render: render$82
};
var _hoisted_1$101 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$81(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$101, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "m3 17l2 2l4-4M3 7l2 2l4-4m4 1h8m-8 6h8m-8 6h8"
  }, null, -1)]);
}
var list_checks_default = {
  name: "lucide-list-checks",
  render: render$81
};
var _hoisted_1$100 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$80(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$100, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("rect", {
    width: "18",
    height: "11",
    x: "3",
    y: "11",
    rx: "2",
    ry: "2"
  }), createBaseVNode("path", { d: "M7 11V7a5 5 0 0 1 10 0v4" })], -1)]);
}
var lock_default = {
  name: "lucide-lock",
  render: render$80
};
var _hoisted_1$99 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$79(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$99, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "m10 17l5-5l-5-5m5 5H3m12-9h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"
  }, null, -1)]);
}
var log_in_default = {
  name: "lucide-log-in",
  render: render$79
};
var _hoisted_1$98 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$78(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$98, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "m16 17l5-5l-5-5m5 5H9m0 9H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"
  }, null, -1)]);
}
var log_out_default = {
  name: "lucide-log-out",
  render: render$78
};
var _hoisted_1$97 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$77(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$97, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "m22 7l-8.991 5.727a2 2 0 0 1-2.009 0L2 7" }), createBaseVNode("rect", {
    width: "20",
    height: "16",
    x: "2",
    y: "4",
    rx: "2"
  })], -1)]);
}
var mail_default = {
  name: "lucide-mail",
  render: render$77
};
var _hoisted_1$96 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$76(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$96, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3M3 16v3a2 2 0 0 0 2 2h3m8 0h3a2 2 0 0 0 2-2v-3"
  }, null, -1)]);
}
var maximize_default = {
  name: "lucide-maximize",
  render: render$76
};
var _hoisted_1$95 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$75(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$95, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M15 3h6v6m0-6l-7 7M3 21l7-7m-1 7H3v-6"
  }, null, -1)]);
}
var maximize_2_default = {
  name: "lucide-maximize-2",
  render: render$75
};
var _hoisted_1$94 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$74(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$94, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M4 12h16M4 18h16M4 6h16"
  }, null, -1)]);
}
var menu_default = {
  name: "lucide-menu",
  render: render$74
};
var _hoisted_1$93 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$73(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$93, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M7.9 20A9 9 0 1 0 4 16.1L2 22Z"
  }, null, -1)]);
}
var message_circle_default = {
  name: "lucide-message-circle",
  render: render$73
};
var _hoisted_1$92 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$72(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$92, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M14 9a2 2 0 0 1-2 2H6l-4 4V4a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2zm4 0h2a2 2 0 0 1 2 2v11l-4-4h-6a2 2 0 0 1-2-2v-1"
  }, null, -1)]);
}
var messages_square_default = {
  name: "lucide-messages-square",
  render: render$72
};
var _hoisted_1$91 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$71(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$91, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M12 19v3m7-12v2a7 7 0 0 1-14 0v-2" }), createBaseVNode("rect", {
    width: "6",
    height: "13",
    x: "9",
    y: "2",
    rx: "3"
  })], -1)]);
}
var mic_default = {
  name: "lucide-mic",
  render: render$71
};
var _hoisted_1$90 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$70(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$90, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M12 13v8m0-18v3M4 6a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1h13a2 2 0 0 0 1.152-.365l3.424-2.317a1 1 0 0 0 0-1.635l-3.424-2.318A2 2 0 0 0 17 6z"
  }, null, -1)]);
}
var milestone_default = {
  name: "lucide-milestone",
  render: render$70
};
var _hoisted_1$89 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$69(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$89, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "m14 10l7-7m-1 7h-6V4M3 21l7-7m-6 0h6v6"
  }, null, -1)]);
}
var minimize_2_default = {
  name: "lucide-minimize-2",
  render: render$69
};
var _hoisted_1$88 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$68(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$88, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M12.586 12.586L19 19M3.688 3.037a.497.497 0 0 0-.651.651l6.5 15.999a.501.501 0 0 0 .947-.062l1.569-6.083a2 2 0 0 1 1.448-1.479l6.124-1.579a.5.5 0 0 0 .063-.947z"
  }, null, -1)]);
}
var mouse_pointer_default = {
  name: "lucide-mouse-pointer",
  render: render$68
};
var _hoisted_1$87 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$67(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$87, t[0] ||= [createStaticVNode('<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><rect width="6" height="6" x="16" y="16" rx="1"></rect><rect width="6" height="6" x="2" y="16" rx="1"></rect><rect width="6" height="6" x="9" y="2" rx="1"></rect><path d="M5 16v-3a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3m-7-4V8"></path></g>', 1)]);
}
var network_default = {
  name: "lucide-network",
  render: render$67
};
var _hoisted_1$86 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$66(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$86, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [
    createBaseVNode("path", { d: "M12 22v-9m3.17-10.79a1.67 1.67 0 0 1 1.63 0L21 4.57a1.93 1.93 0 0 1 0 3.36L8.82 14.79a1.66 1.66 0 0 1-1.64 0L3 12.43a1.93 1.93 0 0 1 0-3.36z" }),
    createBaseVNode("path", { d: "M20 13v3.87a2.06 2.06 0 0 1-1.11 1.83l-6 3.08a1.93 1.93 0 0 1-1.78 0l-6-3.08A2.06 2.06 0 0 1 4 16.87V13" }),
    createBaseVNode("path", { d: "M21 12.43a1.93 1.93 0 0 0 0-3.36L8.83 2.2a1.64 1.64 0 0 0-1.63 0L3 4.57a1.93 1.93 0 0 0 0 3.36l12.18 6.86a1.64 1.64 0 0 0 1.63 0z" })
  ], -1)]);
}
var package_open_default = {
  name: "lucide-package-open",
  render: render$66
};
var _hoisted_1$85 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$65(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$85, t[0] ||= [createStaticVNode('<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M12 22a1 1 0 0 1 0-20a10 9 0 0 1 10 9a5 5 0 0 1-5 5h-2.25a1.75 1.75 0 0 0-1.4 2.8l.3.4a1.75 1.75 0 0 1-1.4 2.8z"></path><circle cx="13.5" cy="6.5" r=".5" fill="currentColor"></circle><circle cx="17.5" cy="10.5" r=".5" fill="currentColor"></circle><circle cx="6.5" cy="12.5" r=".5" fill="currentColor"></circle><circle cx="8.5" cy="7.5" r=".5" fill="currentColor"></circle></g>', 1)]);
}
var palette_default = {
  name: "lucide-palette",
  render: render$65
};
var _hoisted_1$84 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$64(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$84, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("rect", {
    width: "18",
    height: "18",
    x: "3",
    y: "3",
    rx: "2"
  }), createBaseVNode("path", { d: "M9 3v18" })], -1)]);
}
var panel_left_default = {
  name: "lucide-panel-left",
  render: render$64
};
var _hoisted_1$83 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$63(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$83, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("rect", {
    width: "18",
    height: "18",
    x: "3",
    y: "3",
    rx: "2"
  }), createBaseVNode("path", { d: "M15 3v18" })], -1)]);
}
var panel_right_default = {
  name: "lucide-panel-right",
  render: render$63
};
var _hoisted_1$82 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$62(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$82, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "m16 6l-8.414 8.586a2 2 0 0 0 2.829 2.829l8.414-8.586a4 4 0 1 0-5.657-5.657l-8.379 8.551a6 6 0 1 0 8.485 8.485l8.379-8.551"
  }, null, -1)]);
}
var paperclip_default = {
  name: "lucide-paperclip",
  render: render$62
};
var _hoisted_1$81 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$61(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$81, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("rect", {
    width: "4",
    height: "16",
    x: "14",
    y: "4",
    rx: "1"
  }), createBaseVNode("rect", {
    width: "4",
    height: "16",
    x: "6",
    y: "4",
    rx: "1"
  })], -1)]);
}
var pause_default = {
  name: "lucide-pause",
  render: render$61
};
var _hoisted_1$80 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$60(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$80, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z"
  }, null, -1)]);
}
var pen_default = {
  name: "lucide-pen",
  render: render$60
};
var _hoisted_1$79 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$59(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$79, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497zM15 5l4 4"
  }, null, -1)]);
}
var pencil_default = {
  name: "lucide-pencil",
  render: render$59
};
var _hoisted_1$78 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$58(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$78, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M12 17v5M9 10.76a2 2 0 0 1-1.11 1.79l-1.78.9A2 2 0 0 0 5 15.24V16a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-.76a2 2 0 0 0-1.11-1.79l-1.78-.9A2 2 0 0 1 15 10.76V7a1 1 0 0 1 1-1a2 2 0 0 0 0-4H8a2 2 0 0 0 0 4a1 1 0 0 1 1 1z"
  }, null, -1)]);
}
var pin_default = {
  name: "lucide-pin",
  render: render$58
};
var _hoisted_1$77 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$57(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$77, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "m6 3l14 9l-14 9z"
  }, null, -1)]);
}
var play_default = {
  name: "lucide-play",
  render: render$57
};
var _hoisted_1$76 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$56(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$76, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M12 22v-5M9 8V2m6 6V2m3 6v5a4 4 0 0 1-4 4h-4a4 4 0 0 1-4-4V8Z"
  }, null, -1)]);
}
var plug_default = {
  name: "lucide-plug",
  render: render$56
};
var _hoisted_1$75 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$55(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$75, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M5 12h14m-7-7v14"
  }, null, -1)]);
}
var plus_default = {
  name: "lucide-plus",
  render: render$55
};
var _hoisted_1$74 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$54(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$74, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M3 2v1c0 1 2 1 2 2S3 6 3 7s2 1 2 2s-2 1-2 2s2 1 2 2m13-7h.01M6 18h.01m14.82-9.17a4 4 0 0 0-5.66-5.66l-12 12a4 4 0 1 0 5.66 5.66Z" }), createBaseVNode("path", { d: "M18 11.66V22a4 4 0 0 0 4-4V6" })], -1)]);
}
var pocket_knife_default = {
  name: "lucide-pocket-knife",
  render: render$54
};
var _hoisted_1$73 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$53(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$73, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M12 2v10m6.4-5.4a9 9 0 1 1-12.77.04"
  }, null, -1)]);
}
var power_default = {
  name: "lucide-power",
  render: render$53
};
var _hoisted_1$72 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$52(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$72, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "m15 14l5-5l-5-5" }), createBaseVNode("path", { d: "M20 9H9.5A5.5 5.5 0 0 0 4 14.5A5.5 5.5 0 0 0 9.5 20H13" })], -1)]);
}
var redo_2_default = {
  name: "lucide-redo-2",
  render: render$52
};
var _hoisted_1$71 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$51(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$71, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [
    createBaseVNode("path", { d: "M3 12a9 9 0 0 1 9-9a9.75 9.75 0 0 1 6.74 2.74L21 8" }),
    createBaseVNode("path", { d: "M21 3v5h-5m5 4a9 9 0 0 1-9 9a9.75 9.75 0 0 1-6.74-2.74L3 16" }),
    createBaseVNode("path", { d: "M8 16H3v5" })
  ], -1)]);
}
var refresh_cw_default = {
  name: "lucide-refresh-cw",
  render: render$51
};
var _hoisted_1$70 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$50(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$70, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M4 7V4h16v3M5 20h6m2-16L8 20m7-5l5 5m0-5l-5 5"
  }, null, -1)]);
}
var remove_formatting_default = {
  name: "lucide-remove-formatting",
  render: render$50
};
var _hoisted_1$69 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$49(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$69, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M4 11a9 9 0 0 1 9 9M4 4a16 16 0 0 1 16 16" }), createBaseVNode("circle", {
    cx: "5",
    cy: "19",
    r: "1"
  })], -1)]);
}
var rss_default = {
  name: "lucide-rss",
  render: render$49
};
var _hoisted_1$68 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$48(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$68, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M4 10a7.31 7.31 0 0 0 10 10Zm5 5l3-3m5 1a6 6 0 0 0-6-6m10 6A10 10 0 0 0 11 3"
  }, null, -1)]);
}
var satellite_dish_default = {
  name: "lucide-satellite-dish",
  render: render$48
};
var _hoisted_1$67 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$47(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$67, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M15.2 3a2 2 0 0 1 1.4.6l3.8 3.8a2 2 0 0 1 .6 1.4V19a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2z" }), createBaseVNode("path", { d: "M17 21v-7a1 1 0 0 0-1-1H8a1 1 0 0 0-1 1v7M7 3v4a1 1 0 0 0 1 1h7" })], -1)]);
}
var save_default = {
  name: "lucide-save",
  render: render$47
};
var _hoisted_1$66 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$46(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$66, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "m16 16l3-8l3 8c-.87.65-1.92 1-3 1s-2.13-.35-3-1M2 16l3-8l3 8c-.87.65-1.92 1-3 1s-2.13-.35-3-1m5 5h10M12 3v18M3 7h2c2 0 5-1 7-2c2 1 5 2 7 2h2"
  }, null, -1)]);
}
var scale_default = {
  name: "lucide-scale",
  render: render$46
};
var _hoisted_1$65 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$45(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$65, t[0] ||= [createStaticVNode('<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><circle cx="6" cy="6" r="3"></circle><path d="M8.12 8.12L12 12m8-8L8.12 15.88"></path><circle cx="6" cy="18" r="3"></circle><path d="M14.8 14.8L20 20"></path></g>', 1)]);
}
var scissors_default = {
  name: "lucide-scissors",
  render: render$45
};
var _hoisted_1$64 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$44(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$64, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "m21 21l-4.34-4.34" }), createBaseVNode("circle", {
    cx: "11",
    cy: "11",
    r: "8"
  })], -1)]);
}
var search_default = {
  name: "lucide-search",
  render: render$44
};
var _hoisted_1$63 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$43(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$63, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M14.536 21.686a.5.5 0 0 0 .937-.024l6.5-19a.496.496 0 0 0-.635-.635l-19 6.5a.5.5 0 0 0-.024.937l7.93 3.18a2 2 0 0 1 1.112 1.11zm7.318-19.539l-10.94 10.939"
  }, null, -1)]);
}
var send_default = {
  name: "lucide-send",
  render: render$43
};
var _hoisted_1$62 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$42(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$62, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [
    createBaseVNode("rect", {
      width: "20",
      height: "8",
      x: "2",
      y: "2",
      rx: "2",
      ry: "2"
    }),
    createBaseVNode("rect", {
      width: "20",
      height: "8",
      x: "2",
      y: "14",
      rx: "2",
      ry: "2"
    }),
    createBaseVNode("path", { d: "M6 6h.01M6 18h.01" })
  ], -1)]);
}
var server_default = {
  name: "lucide-server",
  render: render$42
};
var _hoisted_1$61 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$41(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$61, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2" }), createBaseVNode("circle", {
    cx: "12",
    cy: "12",
    r: "3"
  })], -1)]);
}
var settings_default = {
  name: "lucide-settings",
  render: render$41
};
var _hoisted_1$60 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$40(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$60, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M12 2v13m4-9l-4-4l-4 4m-4 6v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"
  }, null, -1)]);
}
var share_default = {
  name: "lucide-share",
  render: render$40
};
var _hoisted_1$59 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$39(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$59, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M21 4h-7m-4 0H3m18 8h-9m-4 0H3m18 8h-5m-4 0H3M14 2v4m-6 4v4m8 4v4"
  }, null, -1)]);
}
var sliders_horizontal_default = {
  name: "lucide-sliders-horizontal",
  render: render$39
};
var _hoisted_1$58 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$38(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$58, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), createBaseVNode("path", { d: "M8 14s1.5 2 4 2s4-2 4-2M9 9h.01M15 9h.01" })], -1)]);
}
var smile_default = {
  name: "lucide-smile",
  render: render$38
};
var _hoisted_1$57 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$37(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$57, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M9.937 15.5A2 2 0 0 0 8.5 14.063l-6.135-1.582a.5.5 0 0 1 0-.962L8.5 9.936A2 2 0 0 0 9.937 8.5l1.582-6.135a.5.5 0 0 1 .963 0L14.063 8.5A2 2 0 0 0 15.5 9.937l6.135 1.581a.5.5 0 0 1 0 .964L15.5 14.063a2 2 0 0 0-1.437 1.437l-1.582 6.135a.5.5 0 0 1-.963 0zM20 3v4m2-2h-4M4 17v2m1-1H3"
  }, null, -1)]);
}
var sparkles_default = {
  name: "lucide-sparkles",
  render: render$37
};
var _hoisted_1$56 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$36(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$56, t[0] ||= [createBaseVNode("rect", {
    width: "18",
    height: "18",
    x: "3",
    y: "3",
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    rx: "2"
  }, null, -1)]);
}
var square_default = {
  name: "lucide-square",
  render: render$36
};
var _hoisted_1$55 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$35(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$55, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("rect", {
    width: "18",
    height: "18",
    x: "3",
    y: "3",
    rx: "2"
  }), createBaseVNode("path", { d: "m9 12l2 2l4-4" })], -1)]);
}
var square_check_default = {
  name: "lucide-square-check",
  render: render$35
};
var _hoisted_1$54 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$34(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$54, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7" }), createBaseVNode("path", { d: "M18.375 2.625a1 1 0 0 1 3 3l-9.013 9.014a2 2 0 0 1-.853.505l-2.873.84a.5.5 0 0 1-.62-.62l.84-2.873a2 2 0 0 1 .506-.852z" })], -1)]);
}
var square_pen_default = {
  name: "lucide-square-pen",
  render: render$34
};
var _hoisted_1$53 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$33(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$53, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("rect", {
    width: "18",
    height: "18",
    x: "3",
    y: "3",
    rx: "2"
  }), createBaseVNode("path", { d: "M8 12h8m-4-4v8" })], -1)]);
}
var square_plus_default = {
  name: "lucide-square-plus",
  render: render$33
};
var _hoisted_1$52 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$32(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$52, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M16 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V8Z" }), createBaseVNode("path", { d: "M15 3v4a2 2 0 0 0 2 2h4" })], -1)]);
}
var sticky_note_default = {
  name: "lucide-sticky-note",
  render: render$32
};
var _hoisted_1$51 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$31(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$51, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("circle", {
    cx: "12",
    cy: "12",
    r: "4"
  }), createBaseVNode("path", { d: "M12 2v2m0 16v2M4.93 4.93l1.41 1.41m11.32 11.32l1.41 1.41M2 12h2m16 0h2M6.34 17.66l-1.41 1.41M19.07 4.93l-1.41 1.41" })], -1)]);
}
var sun_default = {
  name: "lucide-sun",
  render: render$31
};
var _hoisted_1$50 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$30(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$50, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [
    createBaseVNode("path", { d: "M12 3v18" }),
    createBaseVNode("rect", {
      width: "18",
      height: "18",
      x: "3",
      y: "3",
      rx: "2"
    }),
    createBaseVNode("path", { d: "M3 9h18M3 15h18" })
  ], -1)]);
}
var table_default = {
  name: "lucide-table",
  render: render$30
};
var _hoisted_1$49 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$29(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$49, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [
    createBaseVNode("path", { d: "m15 5l6.3 6.3a2.4 2.4 0 0 1 0 3.4L17 19" }),
    createBaseVNode("path", { d: "M9.586 5.586A2 2 0 0 0 8.172 5H3a1 1 0 0 0-1 1v5.172a2 2 0 0 0 .586 1.414L8.29 18.29a2.426 2.426 0 0 0 3.42 0l3.58-3.58a2.426 2.426 0 0 0 0-3.42z" }),
    createBaseVNode("circle", {
      cx: "6.5",
      cy: "9.5",
      r: ".5",
      fill: "currentColor"
    })
  ], -1)]);
}
var tags_default = {
  name: "lucide-tags",
  render: render$29
};
var _hoisted_1$48 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$28(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$48, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M12 19h8M4 17l6-6l-6-6"
  }, null, -1)]);
}
var terminal_default = {
  name: "lucide-terminal",
  render: render$28
};
var _hoisted_1$47 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$27(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$47, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M17 14V2M9 18.12L10 14H4.17a2 2 0 0 1-1.92-2.56l2.33-8A2 2 0 0 1 6.5 2H20a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-2.76a2 2 0 0 0-1.79 1.11L12 22a3.13 3.13 0 0 1-3-3.88"
  }, null, -1)]);
}
var thumbs_down_default = {
  name: "lucide-thumbs-down",
  render: render$27
};
var _hoisted_1$46 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$26(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$46, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M7 10v12m8-16.12L14 10h5.83a2 2 0 0 1 1.92 2.56l-2.33 8A2 2 0 0 1 17.5 22H4a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2.76a2 2 0 0 0 1.79-1.11L12 2a3.13 3.13 0 0 1 3 3.88"
  }, null, -1)]);
}
var thumbs_up_default = {
  name: "lucide-thumbs-up",
  render: render$26
};
var _hoisted_1$45 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$25(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$45, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("circle", {
    cx: "15",
    cy: "12",
    r: "3"
  }), createBaseVNode("rect", {
    width: "20",
    height: "14",
    x: "2",
    y: "5",
    rx: "7"
  })], -1)]);
}
var toggle_right_default = {
  name: "lucide-toggle-right",
  render: render$25
};
var _hoisted_1$44 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$24(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$44, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M3 6h18m-2 0v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6m3 0V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2m-6 5v6m4-6v6"
  }, null, -1)]);
}
var trash_2_default = {
  name: "lucide-trash-2",
  render: render$24
};
var _hoisted_1$43 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$23(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$43, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "m17 14l3 3.3a1 1 0 0 1-.7 1.7H4.7a1 1 0 0 1-.7-1.7L7 14h-.3a1 1 0 0 1-.7-1.7L9 9h-.2A1 1 0 0 1 8 7.3L12 3l4 4.3a1 1 0 0 1-.8 1.7H15l3 3.3a1 1 0 0 1-.7 1.7zm-5 8v-3"
  }, null, -1)]);
}
var tree_pine_default = {
  name: "lucide-tree-pine",
  render: render$23
};
var _hoisted_1$42 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$22(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$42, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "m21.73 18l-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3M12 9v4m0 4h.01"
  }, null, -1)]);
}
var triangle_alert_default = {
  name: "lucide-triangle-alert",
  render: render$22
};
var _hoisted_1$41 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$21(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$41, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M12 4v16M4 7V5a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v2M9 20h6"
  }, null, -1)]);
}
var type_default = {
  name: "lucide-type",
  render: render$21
};
var _hoisted_1$40 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$20(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$40, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M9 14L4 9l5-5" }), createBaseVNode("path", { d: "M4 9h10.5a5.5 5.5 0 0 1 5.5 5.5a5.5 5.5 0 0 1-5.5 5.5H11" })], -1)]);
}
var undo_2_default = {
  name: "lucide-undo-2",
  render: render$20
};
var _hoisted_1$39 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$19(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$39, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "m18.84 12.25l1.72-1.71h-.02a5.004 5.004 0 0 0-.12-7.07a5.006 5.006 0 0 0-6.95 0l-1.72 1.71m-6.58 6.57l-1.71 1.71a5.004 5.004 0 0 0 .12 7.07a5.006 5.006 0 0 0 6.95 0l1.71-1.71M8 2v3M2 8h3m11 11v3m3-6h3"
  }, null, -1)]);
}
var unlink_default = {
  name: "lucide-unlink",
  render: render$19
};
var _hoisted_1$38 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$18(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$38, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2" }), createBaseVNode("circle", {
    cx: "12",
    cy: "7",
    r: "4"
  })], -1)]);
}
var user_default = {
  name: "lucide-user",
  render: render$18
};
var _hoisted_1$37 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$17(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$37, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "m16 11l2 2l4-4m-6 12v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2" }), createBaseVNode("circle", {
    cx: "9",
    cy: "7",
    r: "4"
  })], -1)]);
}
var user_check_default = {
  name: "lucide-user-check",
  render: render$17
};
var _hoisted_1$36 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$16(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$36, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [
    createBaseVNode("circle", {
      cx: "10",
      cy: "7",
      r: "4"
    }),
    createBaseVNode("path", { d: "M10.3 15H7a4 4 0 0 0-4 4v2m12-5.5V14a2 2 0 0 1 4 0v1.5" }),
    createBaseVNode("rect", {
      width: "8",
      height: "5",
      x: "13",
      y: "16",
      rx: ".899"
    })
  ], -1)]);
}
var user_lock_default = {
  name: "lucide-user-lock",
  render: render$16
};
var _hoisted_1$35 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$15(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$35, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("circle", {
    cx: "12",
    cy: "8",
    r: "5"
  }), createBaseVNode("path", { d: "M20 21a8 8 0 0 0-16 0" })], -1)]);
}
var user_round_default = {
  name: "lucide-user-round",
  render: render$15
};
var _hoisted_1$34 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$14(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$34, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2M16 3.128a4 4 0 0 1 0 7.744M22 21v-2a4 4 0 0 0-3-3.87" }), createBaseVNode("circle", {
    cx: "9",
    cy: "7",
    r: "4"
  })], -1)]);
}
var users_default = {
  name: "lucide-users",
  render: render$14
};
var _hoisted_1$33 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$13(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$33, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M8 21s-4-3-4-9s4-9 4-9m8 0s4 3 4 9s-4 9-4 9M15 9l-6 6m0-6l6 6"
  }, null, -1)]);
}
var variable_default = {
  name: "lucide-variable",
  render: render$13
};
var _hoisted_1$32 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$12(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$32, t[0] ||= [createStaticVNode('<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><rect width="18" height="18" x="3" y="3" rx="2"></rect><circle cx="7.5" cy="7.5" r=".5" fill="currentColor"></circle><path d="m7.9 7.9l2.7 2.7"></path><circle cx="16.5" cy="7.5" r=".5" fill="currentColor"></circle><path d="m13.4 10.6l2.7-2.7"></path><circle cx="7.5" cy="16.5" r=".5" fill="currentColor"></circle><path d="m7.9 16.1l2.7-2.7"></path><circle cx="16.5" cy="16.5" r=".5" fill="currentColor"></circle><path d="m13.4 13.4l2.7 2.7"></path><circle cx="12" cy="12" r="2"></circle></g>', 1)]);
}
var vault_default = {
  name: "lucide-vault",
  render: render$12
};
var _hoisted_1$31 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$11(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$31, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("path", { d: "m16 13l5.223 3.482a.5.5 0 0 0 .777-.416V7.87a.5.5 0 0 0-.752-.432L16 10.5" }), createBaseVNode("rect", {
    width: "14",
    height: "12",
    x: "2",
    y: "6",
    rx: "2"
  })], -1)]);
}
var video_default = {
  name: "lucide-video",
  render: render$11
};
var _hoisted_1$30 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$10(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$30, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M11 4.702a.705.705 0 0 0-1.203-.498L6.413 7.587A1.4 1.4 0 0 1 5.416 8H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2.416a1.4 1.4 0 0 1 .997.413l3.383 3.384A.705.705 0 0 0 11 19.298zM16 9a5 5 0 0 1 0 6m3.364 3.364a9 9 0 0 0 0-12.728"
  }, null, -1)]);
}
var volume_2_default = {
  name: "lucide-volume-2",
  render: render$10
};
var _hoisted_1$29 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$9(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$29, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M11 4.702a.705.705 0 0 0-1.203-.498L6.413 7.587A1.4 1.4 0 0 1 5.416 8H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2.416a1.4 1.4 0 0 1 .997.413l3.383 3.384A.705.705 0 0 0 11 19.298zM22 9l-6 6m0-6l6 6"
  }, null, -1)]);
}
var volume_x_default = {
  name: "lucide-volume-x",
  render: render$9
};
var _hoisted_1$28 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$8(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$28, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "m21.64 3.64l-1.28-1.28a1.21 1.21 0 0 0-1.72 0L2.36 18.64a1.21 1.21 0 0 0 0 1.72l1.28 1.28a1.2 1.2 0 0 0 1.72 0L21.64 5.36a1.2 1.2 0 0 0 0-1.72M14 7l3 3M5 6v4m14 4v4M10 2v2M7 8H3m18 8h-4M11 3H9"
  }, null, -1)]);
}
var wand_sparkles_default = {
  name: "lucide-wand-sparkles",
  render: render$8
};
var _hoisted_1$27 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$7(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$27, t[0] ||= [createStaticVNode('<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><circle cx="12" cy="4.5" r="2.5"></circle><path d="m10.2 6.3l-3.9 3.9"></path><circle cx="4.5" cy="12" r="2.5"></circle><path d="M7 12h10"></path><circle cx="19.5" cy="12" r="2.5"></circle><path d="m13.8 17.7l3.9-3.9"></path><circle cx="12" cy="19.5" r="2.5"></circle></g>', 1)]);
}
var waypoints_default = {
  name: "lucide-waypoints",
  render: render$7
};
var _hoisted_1$26 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$6(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$26, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z"
  }, null, -1)]);
}
var wrench_default = {
  name: "lucide-wrench",
  render: render$6
};
var _hoisted_1$25 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$5(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$25, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M18 6L6 18M6 6l12 12"
  }, null, -1)]);
}
var x_default = {
  name: "lucide-x",
  render: render$5
};
var _hoisted_1$24 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$4(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$24, t[0] ||= [createBaseVNode("path", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2",
    d: "M4 14a1 1 0 0 1-.78-1.63l9.9-10.2a.5.5 0 0 1 .86.46l-1.92 6.02A1 1 0 0 0 13 10h7a1 1 0 0 1 .78 1.63l-9.9 10.2a.5.5 0 0 1-.86-.46l1.92-6.02A1 1 0 0 0 11 14z"
  }, null, -1)]);
}
var zap_default = {
  name: "lucide-zap",
  render: render$4
};
var _hoisted_1$23 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$3(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$23, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("circle", {
    cx: "11",
    cy: "11",
    r: "8"
  }), createBaseVNode("path", { d: "m21 21l-4.35-4.35M11 8v6m-3-3h6" })], -1)]);
}
var zoom_in_default = {
  name: "lucide-zoom-in",
  render: render$3
};
var _hoisted_1$22 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$2(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$22, t[0] ||= [createBaseVNode("g", {
    fill: "none",
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "stroke-width": "2"
  }, [createBaseVNode("circle", {
    cx: "11",
    cy: "11",
    r: "8"
  }), createBaseVNode("path", { d: "m21 21l-4.35-4.35M8 11h6" })], -1)]);
}
var zoom_out_default = {
  name: "lucide-zoom-out",
  render: render$2
};
var deprecatedIconSet = {
  variable: variable_default,
  "pop-out": pop_out_default,
  triangle: triangle_default,
  "status-completed": status_completed_default,
  "status-waiting": status_waiting_default,
  "status-error": status_error_default,
  "status-canceled": status_canceled_default,
  "status-new": status_new_default,
  "status-unknown": status_unknown_default,
  "status-warning": status_warning_default,
  "vector-square": vector_square_default,
  schema: schema_default,
  json: braces_default,
  binary: binary_default,
  text: text_default,
  toolbox: toolbox_default,
  spinner: spinner_default,
  xmark: x_default,
  mcp: mcp_default,
  "caret-up": chevron_up_default,
  "caret-down": chevron_down_default$1,
  "caret-right": chevron_right_default,
  "caret-left": chevron_left_default,
  "folder-plus": folder_plus_default,
  share: share_default,
  "user-check": user_check_default,
  "check-double": check_check_default,
  "exclamation-circle": circle_alert_default,
  circle: circle_default,
  "eye-slash": eye_off_default,
  folder: folder_default,
  "minus-circle": circle_minus_default,
  adjust: contrast_default,
  refresh: refresh_cw_default,
  vault: vault_default,
  "angle-double-left": chevrons_left_default,
  "angle-down": chevron_down_default$1,
  "angle-left": chevron_left_default,
  "angle-right": chevron_right_default,
  "angle-up": chevron_up_default,
  archive: archive_default,
  "arrow-left": arrow_left_default$1,
  "arrow-right": arrow_right_default$1,
  "arrow-up": arrow_up_default,
  "arrow-down": arrow_down_default$1,
  at: at_sign_default,
  ban: ban_default,
  "balance-scale-left": scale_default,
  bars: menu_default,
  bolt: zap_default,
  book: book_default,
  "box-open": package_open_default,
  bug: bug_default,
  brain: brain_default,
  calculator: calculator_default,
  calendar: calendar_default,
  "chart-bar": chart_column_decreasing_default,
  check: check_default,
  "check-circle": circle_check_default$1,
  "check-square": square_check_default,
  "chevron-left": chevron_left_default,
  "chevron-right": chevron_right_default,
  "chevron-down": chevron_down_default$1,
  "chevron-up": chevron_up_default,
  code: code_default,
  "code-branch": git_branch_default,
  cog: cog_default,
  cogs: cog_default,
  "columns-3-cog": columns_3_cog_default,
  comment: message_circle_default,
  comments: messages_square_default,
  clipboard: clipboard_default,
  "clipboard-check": clipboard_check_default,
  "clipboard-list": clipboard_list_default,
  clock: clock_default,
  clone: copy_default,
  cloud: cloud_default,
  "cloud-download-alt": cloud_download_default,
  compress: chevrons_up_down_default,
  copy: files_default,
  cube: box_default,
  cut: scissors_default,
  database: database_default,
  "dot-circle": circle_dot_default,
  "grip-lines-vertical": grip_lines_vertical_default,
  "grip-vertical": grip_vertical_default,
  edit: square_pen_default,
  "ellipsis-h": ellipsis_default,
  "ellipsis-v": ellipsis_vertical_default,
  envelope: mail_default,
  equals: equal_default,
  eye: eye_default,
  "exclamation-triangle": triangle_alert_default,
  expand: maximize_default,
  "expand-alt": maximize_2_default,
  "external-link-alt": external_link_default,
  "exchange-alt": arrow_left_right_default,
  file: file_default,
  "file-alt": file_text_default,
  "file-archive": file_archive_default,
  "file-code": file_code_default,
  "file-download": file_down_default,
  "file-export": file_output_default,
  "file-import": file_input_default,
  "file-pdf": file_text_default,
  filter: funnel_default,
  fingerprint: fingerprint_default,
  flask: flask_conical_default,
  "folder-open": folder_open_default,
  font: case_upper_default,
  gift: gift_default,
  globe: globe_default,
  "globe-americas": earth_default,
  "graduation-cap": graduation_cap_default,
  "hand-holding-usd": hand_coins_default,
  "hand-scissors": scissors_default,
  handshake: handshake_default,
  "hand-point-left": arrow_left_default$1,
  hashtag: hash_default,
  hdd: hard_drive_default,
  history: history_default,
  home: house_default,
  hourglass: hourglass_default,
  image: image_default,
  inbox: inbox_default,
  info: info_default,
  "info-circle": info_default,
  key: key_round_default,
  language: languages_default,
  "layer-group": layers_default,
  link: link_default,
  list: list_default,
  lightbulb: lightbulb_default,
  lock: lock_default,
  "map-signs": milestone_default,
  "mouse-pointer": mouse_pointer_default,
  "network-wired": network_default,
  palette: palette_default,
  pause: pause_default,
  "pause-circle": circle_pause_default,
  pen: pen_default,
  "pencil-alt": pencil_default,
  play: play_default,
  "play-circle": circle_play_default,
  plug: plug_default,
  plus: plus_default,
  "plus-circle": circle_plus_default,
  "plus-square": square_plus_default,
  "project-diagram": waypoints_default,
  question: circle_help_default,
  "question-circle": circle_help_default,
  redo: redo_2_default,
  "remove-format": remove_formatting_default,
  robot: bot_default,
  rss: rss_default,
  save: save_default,
  "satellite-dish": satellite_dish_default,
  search: search_default,
  "search-minus": zoom_out_default,
  "search-plus": zoom_in_default,
  server: server_default,
  screwdriver: pocket_knife_default,
  smile: smile_default,
  "sign-in-alt": log_in_default,
  "sign-out-alt": log_out_default,
  "sliders-h": sliders_horizontal_default,
  "sticky-note": sticky_note_default,
  stop: square_default,
  stream: align_right_default,
  sun: sun_default,
  sync: refresh_cw_default,
  "sync-alt": refresh_cw_default,
  table: table_default,
  tags: tags_default,
  tasks: list_checks_default,
  terminal: terminal_default,
  "th-large": grid_2x2_default,
  thumbtack: pin_default,
  "thumbs-down": thumbs_down_default,
  "thumbs-up": thumbs_up_default,
  times: x_default,
  "times-circle": circle_x_default,
  tools: wrench_default,
  trash: trash_2_default,
  undo: undo_2_default,
  unlink: unlink_default,
  user: user_default,
  "user-circle": circle_user_round_default,
  "user-friends": user_round_default,
  users: users_default,
  video: video_default,
  tree: tree_pine_default,
  "user-lock": user_lock_default,
  gem: gem_default,
  download: hard_drive_download_default,
  "power-off": power_default,
  "paper-plane": send_default,
  bell: bell_default
};
var updatedIconSet = {
  "bolt-filled": bolt_filled_default,
  "filled-square": filled_square_default,
  "grip-lines-vertical": grip_lines_vertical_default,
  variable: variable_default,
  "pop-out": pop_out_default,
  triangle: triangle_default,
  "status-completed": status_completed_default,
  "status-waiting": status_waiting_default,
  "status-error": status_error_default,
  "status-canceled": status_canceled_default,
  "status-new": status_new_default,
  "status-unknown": status_unknown_default,
  "status-warning": status_warning_default,
  "vector-square": vector_square_default,
  "continue-on-error": continue_default,
  "always-output-data": empty_output_default,
  "retry-on-fail": retry_default,
  "execute-once": run_once_default,
  schema: schema_default,
  json: braces_default,
  binary: binary_default,
  text: text_default,
  toolbox: toolbox_default,
  spinner: spinner_default,
  "node-dirty": node_dirty_default,
  "node-ellipsis": node_ellipsis_default,
  "node-execution-error": node_execution_error_default,
  "node-validation-error": node_validation_error_default,
  "node-pin": node_pin_default,
  "node-play": node_play_default,
  "node-power": node_power_default,
  "node-success": node_success_default,
  "node-trash": node_trash_default,
  mcp: mcp_default,
  "align-right": align_right_default,
  archive: archive_default,
  "archive-restore": archive_restore_default,
  "arrow-down": arrow_down_default$1,
  "arrow-left": arrow_left_default$1,
  "arrow-left-right": arrow_left_right_default,
  "arrow-right": arrow_right_default$1,
  "arrow-right-from-line": arrow_right_from_line_default,
  "arrow-right-to-line": arrow_right_to_line_default,
  "arrow-up": arrow_up_default,
  "at-sign": at_sign_default,
  ban: ban_default,
  bell: bell_default,
  book: book_default,
  "book-open": book_open_default,
  bot: bot_default,
  box: box_default,
  brain: brain_default,
  bug: bug_default,
  calculator: calculator_default,
  calendar: calendar_default,
  "case-upper": case_upper_default,
  "chart-column-decreasing": chart_column_decreasing_default,
  check: check_default,
  "check-check": check_check_default,
  "chevron-down": chevron_down_default$1,
  "chevron-left": chevron_left_default,
  "chevron-right": chevron_right_default,
  "chevron-up": chevron_up_default,
  "chevrons-left": chevrons_left_default,
  "chevrons-down-up": chevrons_down_up_default,
  "chevrons-up-down": chevrons_up_down_default,
  circle: circle_default,
  "circle-alert": circle_alert_default,
  "circle-check": circle_check_default$1,
  "circle-dot": circle_dot_default,
  "circle-help": circle_help_default,
  "circle-minus": circle_minus_default,
  "circle-pause": circle_pause_default,
  "circle-play": circle_play_default,
  "circle-plus": circle_plus_default,
  "circle-user-round": circle_user_round_default,
  "circle-x": circle_x_default,
  clipboard: clipboard_default,
  "clipboard-check": clipboard_check_default,
  "clipboard-list": clipboard_list_default,
  clock: clock_default,
  cloud: cloud_default,
  "cloud-download": cloud_download_default,
  code: code_default,
  cog: cog_default,
  contrast: contrast_default,
  copy: copy_default,
  crosshair: crosshair_default,
  database: database_default,
  "door-open": door_open_default,
  dot: dot_default,
  earth: earth_default,
  ellipsis: ellipsis_default,
  "ellipsis-vertical": ellipsis_vertical_default,
  equal: equal_default,
  expand: expand_default,
  "external-link": external_link_default,
  eye: eye_default,
  "eye-off": eye_off_default,
  file: file_default,
  "file-archive": file_archive_default,
  "file-code": file_code_default,
  "file-diff": file_diff_default,
  "file-down": file_down_default,
  "file-input": file_input_default,
  "file-output": file_output_default,
  "file-text": file_text_default,
  files: files_default,
  fingerprint: fingerprint_default,
  "flask-conical": flask_conical_default,
  folder: folder_default,
  "folder-open": folder_open_default,
  "folder-plus": folder_plus_default,
  funnel: funnel_default,
  gem: gem_default,
  gift: gift_default,
  "git-branch": git_branch_default,
  globe: globe_default,
  "graduation-cap": graduation_cap_default,
  "grid-2x2": grid_2x2_default,
  "grip-vertical": grip_vertical_default,
  "hand-coins": hand_coins_default,
  handshake: handshake_default,
  "hard-drive": hard_drive_default,
  "hard-drive-download": hard_drive_download_default,
  hash: hash_default,
  history: history_default,
  hourglass: hourglass_default,
  house: house_default,
  image: image_default,
  inbox: inbox_default,
  info: info_default,
  "key-round": key_round_default,
  languages: languages_default,
  layers: layers_default,
  lightbulb: lightbulb_default,
  link: link_default,
  list: list_default,
  "list-checks": list_checks_default,
  lock: lock_default,
  "log-in": log_in_default,
  "log-out": log_out_default,
  mail: mail_default,
  "minimize-2": minimize_2_default,
  maximize: maximize_default,
  "maximize-2": maximize_2_default,
  menu: menu_default,
  "message-circle": message_circle_default,
  "messages-square": messages_square_default,
  mic: mic_default,
  milestone: milestone_default,
  "mouse-pointer": mouse_pointer_default,
  network: network_default,
  "package-open": package_open_default,
  palette: palette_default,
  "panel-left": panel_left_default,
  "panel-right": panel_right_default,
  paperclip: paperclip_default,
  pause: pause_default,
  pen: pen_default,
  pencil: pencil_default,
  pin: pin_default,
  play: play_default,
  plug: plug_default,
  plus: plus_default,
  "pocket-knife": pocket_knife_default,
  power: power_default,
  "redo-2": redo_2_default,
  "refresh-cw": refresh_cw_default,
  "remove-formatting": remove_formatting_default,
  rss: rss_default,
  robot: bot_default,
  "satellite-dish": satellite_dish_default,
  save: save_default,
  scale: scale_default,
  scissors: scissors_default,
  search: search_default,
  settings: settings_default,
  send: send_default,
  server: server_default,
  share: share_default,
  "sliders-horizontal": sliders_horizontal_default,
  smile: smile_default,
  sparkles: sparkles_default,
  square: square_default,
  "square-check": square_check_default,
  "square-pen": square_pen_default,
  "square-plus": square_plus_default,
  "sticky-note": sticky_note_default,
  sun: sun_default,
  table: table_default,
  tags: tags_default,
  terminal: terminal_default,
  "thumbs-down": thumbs_down_default,
  "thumbs-up": thumbs_up_default,
  "trash-2": trash_2_default,
  "tree-pine": tree_pine_default,
  "triangle-alert": triangle_alert_default,
  type: type_default,
  "toggle-right": toggle_right_default,
  "undo-2": undo_2_default,
  unlink: unlink_default,
  user: user_default,
  "user-check": user_check_default,
  "user-lock": user_lock_default,
  "user-round": user_round_default,
  users: users_default,
  vault: vault_default,
  video: video_default,
  "volume-2": volume_2_default,
  "volume-x": volume_x_default,
  "wand-sparkles": wand_sparkles_default,
  waypoints: waypoints_default,
  wrench: wrench_default,
  x: x_default,
  zap: zap_default,
  "zoom-in": zoom_in_default,
  "zoom-out": zoom_out_default
};
var N8nIcon_default = __plugin_vue_export_helper_default(defineComponent({
  name: "N8nIcon",
  __name: "Icon",
  props: {
    icon: {},
    size: { default: void 0 },
    spin: {
      type: Boolean,
      default: false
    },
    color: { default: void 0 },
    strokeWidth: {}
  },
  setup(e) {
    let t = e, n = useCssModule(), r = computed2(() => {
      let e2 = [];
      return t.spin && e2.push("spin"), t.strokeWidth && e2.push("strokeWidth"), ["n8n-icon", ...e2.map((e3) => n[e3])];
    }), i = {
      xsmall: 10,
      small: 12,
      medium: 14,
      large: 16,
      xlarge: 20
    }, o = computed2(() => {
      let e2 = "1em";
      return t.size && (e2 = `${typeof t.size == "number" ? t.size : i[t.size]}px`), {
        height: e2,
        width: e2
      };
    }), s = {
      primary: "--color--primary",
      secondary: "--color--secondary",
      "text-dark": "--color--text--shade-1",
      "text-base": "--color--text",
      "text-light": "--color--text--tint-1",
      "text-xlight": "--color--text--tint-3",
      danger: "--color--danger",
      success: "--color--success",
      warning: "--color--warning",
      "foreground-dark": "--color--foreground--shade-1",
      "foreground-xdark": "--color--foreground--shade-2"
    }, d = computed2(() => {
      let e2 = {};
      return t.color && (e2.color = `var(${s[t.color]})`), t.strokeWidth && (e2["--icon--stroke-width"] = `${t.strokeWidth}px`), e2;
    });
    return (e2, n2) => unref(updatedIconSet)[e2.icon] ?? unref(deprecatedIconSet)[e2.icon] ? (openBlock(), createBlock(resolveDynamicComponent(unref(updatedIconSet)[e2.icon] ?? unref(deprecatedIconSet)[e2.icon]), {
      key: 0,
      class: normalizeClass(r.value),
      "aria-hidden": "true",
      focusable: "false",
      role: "img",
      height: o.value.height,
      width: o.value.width,
      "data-icon": t.icon,
      style: normalizeStyle(d.value)
    }, null, 8, [
      "class",
      "height",
      "width",
      "data-icon",
      "style"
    ])) : createCommentVNode("", true);
  }
}), [["__cssModules", { $style: {
  strokeWidth: "_strokeWidth_amcx4_1",
  spin: "_spin_amcx4_6"
} }]]);
var N8nText_default = __plugin_vue_export_helper_default(defineComponent({
  name: "N8nText",
  __name: "Text",
  props: {
    bold: {
      type: Boolean,
      default: false
    },
    size: { default: "medium" },
    color: {},
    align: {},
    compact: {
      type: Boolean,
      default: false
    },
    tag: { default: "span" }
  },
  setup(e) {
    let t = e, n = useCssModule(), r = computed2(() => {
      let e2 = [];
      return t.align && e2.push(`align-${t.align}`), t.color && e2.push(t.color), t.compact && e2.push("compact"), e2.push(`size-${t.size}`), e2.push(t.bold ? "bold" : "regular"), e2.map((e3) => n[e3]);
    });
    return (e2, t2) => (openBlock(), createBlock(resolveDynamicComponent(e2.tag), mergeProps({ class: ["n8n-text", ...r.value] }, e2.$attrs), {
      default: withCtx(() => [renderSlot(e2.$slots, "default")]),
      _: 3
    }, 16, ["class"]));
  }
}), [["__cssModules", { $style: {
  bold: "_bold_1e0nf_1",
  regular: "_regular_1e0nf_5",
  "size-xlarge": "_size-xlarge_1e0nf_9",
  "size-large": "_size-large_1e0nf_14",
  "size-medium": "_size-medium_1e0nf_19",
  "size-small": "_size-small_1e0nf_24",
  "size-xsmall": "_size-xsmall_1e0nf_29",
  compact: "_compact_1e0nf_34",
  primary: "_primary_1e0nf_38",
  secondary: "_secondary_1e0nf_42",
  "text-dark": "_text-dark_1e0nf_46",
  "text-base": "_text-base_1e0nf_50",
  "text-light": "_text-light_1e0nf_54",
  "text-xlight": "_text-xlight_1e0nf_58",
  danger: "_danger_1e0nf_62",
  success: "_success_1e0nf_66",
  warning: "_warning_1e0nf_70",
  "foreground-dark": "_foreground-dark_1e0nf_74",
  "foreground-xdark": "_foreground-xdark_1e0nf_78",
  "align-left": "_align-left_1e0nf_82",
  "align-right": "_align-right_1e0nf_86",
  "align-center": "_align-center_1e0nf_90"
} }]]);
var composeEventHandlers = (e, t, { checkForDefaultPrevented: n = true } = {}) => (r) => {
  let i = e?.(r);
  if (n === false || !i) return t?.(r);
};
var isClient = typeof window < "u";
var isString$3 = (e) => typeof e == "string";
var noop$1 = () => {
};
var isIOS = isClient && (window == null ? void 0 : window.navigator)?.userAgent && /iP(ad|hone|od)/.test(window.navigator.userAgent);
function resolveUnref(e) {
  return typeof e == "function" ? e() : (0, lib_exports.unref)(e);
}
function identity$1(e) {
  return e;
}
function tryOnScopeDispose(e) {
  return (0, lib_exports.getCurrentScope)() ? ((0, lib_exports.onScopeDispose)(e), true) : false;
}
function tryOnMounted(e, t = true) {
  (0, lib_exports.getCurrentInstance)() ? (0, lib_exports.onMounted)(e) : t ? e() : (0, lib_exports.nextTick)(e);
}
function unrefElement(e) {
  let t = resolveUnref(e);
  return t?.$el ?? t;
}
var defaultWindow = isClient ? window : void 0;
isClient && window.document, isClient && window.navigator, isClient && window.location;
function useEventListener(...e) {
  let t, n, r, i;
  if (isString$3(e[0]) || Array.isArray(e[0]) ? ([n, r, i] = e, t = defaultWindow) : [t, n, r, i] = e, !t) return noop$1;
  Array.isArray(n) || (n = [n]), Array.isArray(r) || (r = [r]);
  let o = [], s = () => {
    o.forEach((e2) => e2()), o.length = 0;
  }, l = (e2, t2, n2, r2) => (e2.addEventListener(t2, n2, r2), () => e2.removeEventListener(t2, n2, r2)), d = (0, lib_exports.watch)(() => [unrefElement(t), resolveUnref(i)], ([e2, t2]) => {
    s(), e2 && o.push(...n.flatMap((n2) => r.map((r2) => l(e2, n2, r2, t2))));
  }, {
    immediate: true,
    flush: "post"
  }), f = () => {
    d(), s();
  };
  return tryOnScopeDispose(f), f;
}
var _iOSWorkaround = false;
function onClickOutside(e, t, n = {}) {
  let { window: r = defaultWindow, ignore: i = [], capture: o = true, detectIframe: s = false } = n;
  if (!r) return;
  isIOS && !_iOSWorkaround && (_iOSWorkaround = true, Array.from(r.document.body.children).forEach((e2) => e2.addEventListener("click", noop$1)));
  let l = true, d = (e2) => i.some((t2) => {
    if (typeof t2 == "string") return Array.from(r.document.querySelectorAll(t2)).some((t3) => t3 === e2.target || e2.composedPath().includes(t3));
    {
      let n2 = unrefElement(t2);
      return n2 && (e2.target === n2 || e2.composedPath().includes(n2));
    }
  }), f = [
    useEventListener(r, "click", (n2) => {
      let r2 = unrefElement(e);
      if (!(!r2 || r2 === n2.target || n2.composedPath().includes(r2))) {
        if (n2.detail === 0 && (l = !d(n2)), !l) {
          l = true;
          return;
        }
        t(n2);
      }
    }, {
      passive: true,
      capture: o
    }),
    useEventListener(r, "pointerdown", (t2) => {
      let n2 = unrefElement(e);
      n2 && (l = !t2.composedPath().includes(n2) && !d(t2));
    }, { passive: true }),
    s && useEventListener(r, "blur", (n2) => {
      let i2 = unrefElement(e);
      r.document.activeElement?.tagName === "IFRAME" && !i2?.contains(r.document.activeElement) && t(n2);
    })
  ].filter(Boolean);
  return () => f.forEach((e2) => e2());
}
function useSupported(e, t = false) {
  let n = (0, lib_exports.ref)(), r = () => n.value = !!e();
  return r(), tryOnMounted(r, t), n;
}
var _global = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
var globalKey = "__vueuse_ssr_handlers__";
_global[globalKey] = _global[globalKey] || {}, _global[globalKey];
var __getOwnPropSymbols$g = Object.getOwnPropertySymbols;
var __hasOwnProp$g = Object.prototype.hasOwnProperty;
var __propIsEnum$g = Object.prototype.propertyIsEnumerable;
var __objRest$2 = (e, t) => {
  var n = {};
  for (var r in e) __hasOwnProp$g.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);
  if (e != null && __getOwnPropSymbols$g) for (var r of __getOwnPropSymbols$g(e)) t.indexOf(r) < 0 && __propIsEnum$g.call(e, r) && (n[r] = e[r]);
  return n;
};
function useResizeObserver(e, t, n = {}) {
  let r = n, { window: i = defaultWindow } = r, o = __objRest$2(r, ["window"]), s, l = useSupported(() => i && "ResizeObserver" in i), d = () => {
    s &&= (s.disconnect(), void 0);
  }, f = (0, lib_exports.watch)(() => unrefElement(e), (e2) => {
    d(), l.value && i && e2 && (s = new ResizeObserver(t), s.observe(e2, o));
  }, {
    immediate: true,
    flush: "post"
  }), p2 = () => {
    d(), f();
  };
  return tryOnScopeDispose(p2), {
    isSupported: l,
    stop: p2
  };
}
var SwipeDirection;
(function(e) {
  e.UP = "UP", e.RIGHT = "RIGHT", e.DOWN = "DOWN", e.LEFT = "LEFT", e.NONE = "NONE";
})(SwipeDirection ||= {});
var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (e, t, n) => t in e ? __defProp(e, t, {
  enumerable: true,
  configurable: true,
  writable: true,
  value: n
}) : e[t] = n;
((e, t) => {
  for (var n in t ||= {}) __hasOwnProp.call(t, n) && __defNormalProp(e, n, t[n]);
  if (__getOwnPropSymbols) for (var n of __getOwnPropSymbols(t)) __propIsEnum.call(t, n) && __defNormalProp(e, n, t[n]);
  return e;
})({ linear: identity$1 }, {
  easeInSine: [
    0.12,
    0,
    0.39,
    0
  ],
  easeOutSine: [
    0.61,
    1,
    0.88,
    1
  ],
  easeInOutSine: [
    0.37,
    0,
    0.63,
    1
  ],
  easeInQuad: [
    0.11,
    0,
    0.5,
    0
  ],
  easeOutQuad: [
    0.5,
    1,
    0.89,
    1
  ],
  easeInOutQuad: [
    0.45,
    0,
    0.55,
    1
  ],
  easeInCubic: [
    0.32,
    0,
    0.67,
    0
  ],
  easeOutCubic: [
    0.33,
    1,
    0.68,
    1
  ],
  easeInOutCubic: [
    0.65,
    0,
    0.35,
    1
  ],
  easeInQuart: [
    0.5,
    0,
    0.75,
    0
  ],
  easeOutQuart: [
    0.25,
    1,
    0.5,
    1
  ],
  easeInOutQuart: [
    0.76,
    0,
    0.24,
    1
  ],
  easeInQuint: [
    0.64,
    0,
    0.78,
    0
  ],
  easeOutQuint: [
    0.22,
    1,
    0.36,
    1
  ],
  easeInOutQuint: [
    0.83,
    0,
    0.17,
    1
  ],
  easeInExpo: [
    0.7,
    0,
    0.84,
    0
  ],
  easeOutExpo: [
    0.16,
    1,
    0.3,
    1
  ],
  easeInOutExpo: [
    0.87,
    0,
    0.13,
    1
  ],
  easeInCirc: [
    0.55,
    0,
    1,
    0.45
  ],
  easeOutCirc: [
    0,
    0.55,
    0.45,
    1
  ],
  easeInOutCirc: [
    0.85,
    0,
    0.15,
    1
  ],
  easeInBack: [
    0.36,
    0,
    0.66,
    -0.56
  ],
  easeOutBack: [
    0.34,
    1.56,
    0.64,
    1
  ],
  easeInOutBack: [
    0.68,
    -0.6,
    0.32,
    1.6
  ]
});
var isFirefox = () => isClient && /firefox/i.test(window.navigator.userAgent);
var getClientXY = (e) => {
  let t, n;
  return e.type === "touchend" ? (n = e.changedTouches[0].clientY, t = e.changedTouches[0].clientX) : e.type.startsWith("touch") ? (n = e.touches[0].clientY, t = e.touches[0].clientX) : (n = e.clientY, t = e.clientX), {
    clientX: t,
    clientY: n
  };
};
var NOOP2 = () => {
};
var hasOwnProperty$13 = Object.prototype.hasOwnProperty;
var hasOwn2 = (e, t) => hasOwnProperty$13.call(e, t);
var isArray$5 = Array.isArray;
var isFunction$3 = (e) => typeof e == "function";
var isString$2 = (e) => typeof e == "string";
var isObject$4 = (e) => typeof e == "object" && !!e;
var objectToString$3 = Object.prototype.toString;
var toTypeString2 = (e) => objectToString$3.call(e);
var toRawType2 = (e) => toTypeString2(e).slice(8, -1);
var _freeGlobal_default = typeof global == "object" && global && global.Object === Object && global;
var freeSelf$1 = typeof self == "object" && self && self.Object === Object && self;
var _root_default = _freeGlobal_default || freeSelf$1 || Function("return this")();
var _Symbol_default = _root_default.Symbol;
var objectProto$5 = Object.prototype;
var hasOwnProperty$12 = objectProto$5.hasOwnProperty;
var nativeObjectToString$3 = objectProto$5.toString;
var symToStringTag$3 = _Symbol_default ? _Symbol_default.toStringTag : void 0;
function getRawTag$2(e) {
  var t = hasOwnProperty$12.call(e, symToStringTag$3), n = e[symToStringTag$3];
  try {
    e[symToStringTag$3] = void 0;
    var r = true;
  } catch {
  }
  var i = nativeObjectToString$3.call(e);
  return r && (t ? e[symToStringTag$3] = n : delete e[symToStringTag$3]), i;
}
var _getRawTag_default = getRawTag$2;
var nativeObjectToString$2 = Object.prototype.toString;
function objectToString$2(e) {
  return nativeObjectToString$2.call(e);
}
var _objectToString_default = objectToString$2;
var nullTag$1 = "[object Null]";
var undefinedTag$1 = "[object Undefined]";
var symToStringTag$2 = _Symbol_default ? _Symbol_default.toStringTag : void 0;
function baseGetTag$3(e) {
  return e == null ? e === void 0 ? undefinedTag$1 : nullTag$1 : symToStringTag$2 && symToStringTag$2 in Object(e) ? _getRawTag_default(e) : _objectToString_default(e);
}
var _baseGetTag_default = baseGetTag$3;
function isObjectLike$2(e) {
  return typeof e == "object" && !!e;
}
var isObjectLike_default = isObjectLike$2;
var symbolTag$2 = "[object Symbol]";
function isSymbol$4(e) {
  return typeof e == "symbol" || isObjectLike_default(e) && _baseGetTag_default(e) == symbolTag$2;
}
var isSymbol_default = isSymbol$4;
function arrayMap$2(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length, i = Array(r); ++n < r; ) i[n] = t(e[n], n, e);
  return i;
}
var _arrayMap_default = arrayMap$2;
var isArray_default = Array.isArray;
var INFINITY$4 = Infinity;
var symbolProto$2 = _Symbol_default ? _Symbol_default.prototype : void 0;
var symbolToString$1 = symbolProto$2 ? symbolProto$2.toString : void 0;
function baseToString$2(e) {
  if (typeof e == "string") return e;
  if (isArray_default(e)) return _arrayMap_default(e, baseToString$2) + "";
  if (isSymbol_default(e)) return symbolToString$1 ? symbolToString$1.call(e) : "";
  var t = e + "";
  return t == "0" && 1 / e == -INFINITY$4 ? "-0" : t;
}
var _baseToString_default = baseToString$2;
var reWhitespace = /\s/;
function trimmedEndIndex(e) {
  for (var t = e.length; t-- && reWhitespace.test(e.charAt(t)); ) ;
  return t;
}
var _trimmedEndIndex_default = trimmedEndIndex;
var reTrimStart = /^\s+/;
function baseTrim(e) {
  return e && e.slice(0, _trimmedEndIndex_default(e) + 1).replace(reTrimStart, "");
}
var _baseTrim_default = baseTrim;
function isObject$5(e) {
  var t = typeof e;
  return e != null && (t == "object" || t == "function");
}
var isObject_default = isObject$5;
var NAN = NaN;
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
var reIsBinary = /^0b[01]+$/i;
var reIsOctal = /^0o[0-7]+$/i;
var freeParseInt = parseInt;
function toNumber2(e) {
  if (typeof e == "number") return e;
  if (isSymbol_default(e)) return NAN;
  if (isObject_default(e)) {
    var t = typeof e.valueOf == "function" ? e.valueOf() : e;
    e = isObject_default(t) ? t + "" : t;
  }
  if (typeof e != "string") return e === 0 ? e : +e;
  e = _baseTrim_default(e);
  var n = reIsBinary.test(e);
  return n || reIsOctal.test(e) ? freeParseInt(e.slice(2), n ? 2 : 8) : reIsBadHex.test(e) ? NAN : +e;
}
var toNumber_default = toNumber2;
var INFINITY$3 = Infinity;
var MAX_INTEGER = 17976931348623157e292;
function toFinite(e) {
  return e ? (e = toNumber_default(e), e === INFINITY$3 || e === -INFINITY$3 ? (e < 0 ? -1 : 1) * MAX_INTEGER : e === e ? e : 0) : e === 0 ? e : 0;
}
var toFinite_default = toFinite;
function toInteger(e) {
  var t = toFinite_default(e), n = t % 1;
  return t === t ? n ? t - n : t : 0;
}
var toInteger_default = toInteger;
function identity(e) {
  return e;
}
var identity_default = identity;
var asyncTag$1 = "[object AsyncFunction]";
var funcTag$2 = "[object Function]";
var genTag$1 = "[object GeneratorFunction]";
var proxyTag$1 = "[object Proxy]";
function isFunction$4(e) {
  if (!isObject_default(e)) return false;
  var t = _baseGetTag_default(e);
  return t == funcTag$2 || t == genTag$1 || t == asyncTag$1 || t == proxyTag$1;
}
var isFunction_default = isFunction$4;
var _coreJsData_default = _root_default["__core-js_shared__"];
var maskSrcKey$1 = (function() {
  var e = /[^.]+$/.exec(_coreJsData_default && _coreJsData_default.keys && _coreJsData_default.keys.IE_PROTO || "");
  return e ? "Symbol(src)_1." + e : "";
})();
function isMasked$2(e) {
  return !!maskSrcKey$1 && maskSrcKey$1 in e;
}
var _isMasked_default = isMasked$2;
var funcToString$3 = Function.prototype.toString;
function toSource$2(e) {
  if (e != null) {
    try {
      return funcToString$3.call(e);
    } catch {
    }
    try {
      return e + "";
    } catch {
    }
  }
  return "";
}
var _toSource_default = toSource$2;
var reRegExpChar$1 = /[\\^$.*+?()[\]{}|]/g;
var reIsHostCtor$1 = /^\[object .+?Constructor\]$/;
var funcProto$1 = Function.prototype;
var objectProto$4 = Object.prototype;
var funcToString$2 = funcProto$1.toString;
var hasOwnProperty$11 = objectProto$4.hasOwnProperty;
var reIsNative$1 = RegExp("^" + funcToString$2.call(hasOwnProperty$11).replace(reRegExpChar$1, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
function baseIsNative$2(e) {
  return !isObject_default(e) || _isMasked_default(e) ? false : (isFunction_default(e) ? reIsNative$1 : reIsHostCtor$1).test(_toSource_default(e));
}
var _baseIsNative_default = baseIsNative$2;
function getValue$2(e, t) {
  return e?.[t];
}
var _getValue_default = getValue$2;
function getNative$1(e, t) {
  var n = _getValue_default(e, t);
  return _baseIsNative_default(n) ? n : void 0;
}
var _getNative_default = getNative$1;
var _WeakMap_default = _getNative_default(_root_default, "WeakMap");
function baseFindIndex(e, t, n, r) {
  for (var i = e.length, o = n + (r ? 1 : -1); r ? o-- : ++o < i; ) if (t(e[o], o, e)) return o;
  return -1;
}
var _baseFindIndex_default = baseFindIndex;
var MAX_SAFE_INTEGER$1 = 9007199254740991;
var reIsUint = /^(?:0|[1-9]\d*)$/;
function isIndex(e, t) {
  var n = typeof e;
  return t ??= MAX_SAFE_INTEGER$1, !!t && (n == "number" || n != "symbol" && reIsUint.test(e)) && e > -1 && e % 1 == 0 && e < t;
}
var _isIndex_default = isIndex;
function eq$2(e, t) {
  return e === t || e !== e && t !== t;
}
var eq_default = eq$2;
var MAX_SAFE_INTEGER = 9007199254740991;
function isLength(e) {
  return typeof e == "number" && e > -1 && e % 1 == 0 && e <= MAX_SAFE_INTEGER;
}
var isLength_default = isLength;
function isArrayLike(e) {
  return e != null && isLength_default(e.length) && !isFunction_default(e);
}
var isArrayLike_default = isArrayLike;
var objectProto$3 = Object.prototype;
function isPrototype(e) {
  var t = e && e.constructor;
  return e === (typeof t == "function" && t.prototype || objectProto$3);
}
var _isPrototype_default = isPrototype;
function baseTimes(e, t) {
  for (var n = -1, r = Array(e); ++n < e; ) r[n] = t(n);
  return r;
}
var _baseTimes_default = baseTimes;
var argsTag$2 = "[object Arguments]";
function baseIsArguments(e) {
  return isObjectLike_default(e) && _baseGetTag_default(e) == argsTag$2;
}
var _baseIsArguments_default = baseIsArguments;
var objectProto$2 = Object.prototype;
var hasOwnProperty$10 = objectProto$2.hasOwnProperty;
var propertyIsEnumerable$1 = objectProto$2.propertyIsEnumerable;
var isArguments_default = _baseIsArguments_default(/* @__PURE__ */ (function() {
  return arguments;
})()) ? _baseIsArguments_default : function(e) {
  return isObjectLike_default(e) && hasOwnProperty$10.call(e, "callee") && !propertyIsEnumerable$1.call(e, "callee");
};
function stubFalse() {
  return false;
}
var stubFalse_default = stubFalse;
var freeExports$1 = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule$1 = freeExports$1 && typeof module == "object" && module && !module.nodeType && module;
var Buffer$1 = freeModule$1 && freeModule$1.exports === freeExports$1 ? _root_default.Buffer : void 0;
var isBuffer_default = (Buffer$1 ? Buffer$1.isBuffer : void 0) || stubFalse_default;
var argsTag$1 = "[object Arguments]";
var arrayTag$1 = "[object Array]";
var boolTag$1 = "[object Boolean]";
var dateTag$1 = "[object Date]";
var errorTag$1 = "[object Error]";
var funcTag$1 = "[object Function]";
var mapTag$2 = "[object Map]";
var numberTag$1 = "[object Number]";
var objectTag$2 = "[object Object]";
var regexpTag$1 = "[object RegExp]";
var setTag$2 = "[object Set]";
var stringTag$1 = "[object String]";
var weakMapTag$1 = "[object WeakMap]";
var arrayBufferTag$1 = "[object ArrayBuffer]";
var dataViewTag$2 = "[object DataView]";
var float32Tag = "[object Float32Array]";
var float64Tag = "[object Float64Array]";
var int8Tag = "[object Int8Array]";
var int16Tag = "[object Int16Array]";
var int32Tag = "[object Int32Array]";
var uint8Tag = "[object Uint8Array]";
var uint8ClampedTag = "[object Uint8ClampedArray]";
var uint16Tag = "[object Uint16Array]";
var uint32Tag = "[object Uint32Array]";
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true, typedArrayTags[argsTag$1] = typedArrayTags[arrayTag$1] = typedArrayTags[arrayBufferTag$1] = typedArrayTags[boolTag$1] = typedArrayTags[dataViewTag$2] = typedArrayTags[dateTag$1] = typedArrayTags[errorTag$1] = typedArrayTags[funcTag$1] = typedArrayTags[mapTag$2] = typedArrayTags[numberTag$1] = typedArrayTags[objectTag$2] = typedArrayTags[regexpTag$1] = typedArrayTags[setTag$2] = typedArrayTags[stringTag$1] = typedArrayTags[weakMapTag$1] = false;
function baseIsTypedArray(e) {
  return isObjectLike_default(e) && isLength_default(e.length) && !!typedArrayTags[_baseGetTag_default(e)];
}
var _baseIsTypedArray_default = baseIsTypedArray;
function baseUnary(e) {
  return function(t) {
    return e(t);
  };
}
var _baseUnary_default = baseUnary;
var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
var freeProcess = freeModule && freeModule.exports === freeExports && _freeGlobal_default.process;
var _nodeUtil_default = (function() {
  try {
    return freeModule && freeModule.require && freeModule.require("util").types || freeProcess && freeProcess.binding && freeProcess.binding("util");
  } catch {
  }
})();
var nodeIsTypedArray = _nodeUtil_default && _nodeUtil_default.isTypedArray;
var isTypedArray_default = nodeIsTypedArray ? _baseUnary_default(nodeIsTypedArray) : _baseIsTypedArray_default;
var hasOwnProperty$9 = Object.prototype.hasOwnProperty;
function arrayLikeKeys(e, t) {
  var n = isArray_default(e), r = !n && isArguments_default(e), i = !n && !r && isBuffer_default(e), o = !n && !r && !i && isTypedArray_default(e), s = n || r || i || o, l = s ? _baseTimes_default(e.length, String) : [], d = l.length;
  for (var f in e) (t || hasOwnProperty$9.call(e, f)) && !(s && (f == "length" || i && (f == "offset" || f == "parent") || o && (f == "buffer" || f == "byteLength" || f == "byteOffset") || _isIndex_default(f, d))) && l.push(f);
  return l;
}
var _arrayLikeKeys_default = arrayLikeKeys;
function overArg(e, t) {
  return function(n) {
    return e(t(n));
  };
}
var _nativeKeys_default = overArg(Object.keys, Object);
var hasOwnProperty$8 = Object.prototype.hasOwnProperty;
function baseKeys(e) {
  if (!_isPrototype_default(e)) return _nativeKeys_default(e);
  var t = [];
  for (var n in Object(e)) hasOwnProperty$8.call(e, n) && n != "constructor" && t.push(n);
  return t;
}
var _baseKeys_default = baseKeys;
function keys(e) {
  return isArrayLike_default(e) ? _arrayLikeKeys_default(e) : _baseKeys_default(e);
}
var keys_default = keys;
var reIsDeepProp$1 = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
var reIsPlainProp$1 = /^\w*$/;
function isKey$2(e, t) {
  if (isArray_default(e)) return false;
  var n = typeof e;
  return n == "number" || n == "symbol" || n == "boolean" || e == null || isSymbol_default(e) ? true : reIsPlainProp$1.test(e) || !reIsDeepProp$1.test(e) || t != null && e in Object(t);
}
var _isKey_default = isKey$2;
var _nativeCreate_default = _getNative_default(Object, "create");
function hashClear$2() {
  this.__data__ = _nativeCreate_default ? _nativeCreate_default(null) : {}, this.size = 0;
}
var _hashClear_default = hashClear$2;
function hashDelete$2(e) {
  var t = this.has(e) && delete this.__data__[e];
  return this.size -= t ? 1 : 0, t;
}
var _hashDelete_default = hashDelete$2;
var HASH_UNDEFINED$4 = "__lodash_hash_undefined__";
var hasOwnProperty$7 = Object.prototype.hasOwnProperty;
function hashGet$2(e) {
  var t = this.__data__;
  if (_nativeCreate_default) {
    var n = t[e];
    return n === HASH_UNDEFINED$4 ? void 0 : n;
  }
  return hasOwnProperty$7.call(t, e) ? t[e] : void 0;
}
var _hashGet_default = hashGet$2;
var hasOwnProperty$6 = Object.prototype.hasOwnProperty;
function hashHas$2(e) {
  var t = this.__data__;
  return _nativeCreate_default ? t[e] !== void 0 : hasOwnProperty$6.call(t, e);
}
var _hashHas_default = hashHas$2;
var HASH_UNDEFINED$3 = "__lodash_hash_undefined__";
function hashSet$2(e, t) {
  var n = this.__data__;
  return this.size += this.has(e) ? 0 : 1, n[e] = _nativeCreate_default && t === void 0 ? HASH_UNDEFINED$3 : t, this;
}
var _hashSet_default = hashSet$2;
function Hash$2(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
Hash$2.prototype.clear = _hashClear_default, Hash$2.prototype.delete = _hashDelete_default, Hash$2.prototype.get = _hashGet_default, Hash$2.prototype.has = _hashHas_default, Hash$2.prototype.set = _hashSet_default;
var _Hash_default = Hash$2;
function listCacheClear$2() {
  this.__data__ = [], this.size = 0;
}
var _listCacheClear_default = listCacheClear$2;
function assocIndexOf$5(e, t) {
  for (var n = e.length; n--; ) if (eq_default(e[n][0], t)) return n;
  return -1;
}
var _assocIndexOf_default = assocIndexOf$5;
var splice$1 = Array.prototype.splice;
function listCacheDelete$2(e) {
  var t = this.__data__, n = _assocIndexOf_default(t, e);
  return n < 0 ? false : (n == t.length - 1 ? t.pop() : splice$1.call(t, n, 1), --this.size, true);
}
var _listCacheDelete_default = listCacheDelete$2;
function listCacheGet$2(e) {
  var t = this.__data__, n = _assocIndexOf_default(t, e);
  return n < 0 ? void 0 : t[n][1];
}
var _listCacheGet_default = listCacheGet$2;
function listCacheHas$2(e) {
  return _assocIndexOf_default(this.__data__, e) > -1;
}
var _listCacheHas_default = listCacheHas$2;
function listCacheSet$2(e, t) {
  var n = this.__data__, r = _assocIndexOf_default(n, e);
  return r < 0 ? (++this.size, n.push([e, t])) : n[r][1] = t, this;
}
var _listCacheSet_default = listCacheSet$2;
function ListCache$2(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
ListCache$2.prototype.clear = _listCacheClear_default, ListCache$2.prototype.delete = _listCacheDelete_default, ListCache$2.prototype.get = _listCacheGet_default, ListCache$2.prototype.has = _listCacheHas_default, ListCache$2.prototype.set = _listCacheSet_default;
var _ListCache_default = ListCache$2;
var _Map_default = _getNative_default(_root_default, "Map");
function mapCacheClear$2() {
  this.size = 0, this.__data__ = {
    hash: new _Hash_default(),
    map: new (_Map_default || _ListCache_default)(),
    string: new _Hash_default()
  };
}
var _mapCacheClear_default = mapCacheClear$2;
function isKeyable$2(e) {
  var t = typeof e;
  return t == "string" || t == "number" || t == "symbol" || t == "boolean" ? e !== "__proto__" : e === null;
}
var _isKeyable_default = isKeyable$2;
function getMapData$5(e, t) {
  var n = e.__data__;
  return _isKeyable_default(t) ? n[typeof t == "string" ? "string" : "hash"] : n.map;
}
var _getMapData_default = getMapData$5;
function mapCacheDelete$2(e) {
  var t = _getMapData_default(this, e).delete(e);
  return this.size -= t ? 1 : 0, t;
}
var _mapCacheDelete_default = mapCacheDelete$2;
function mapCacheGet$2(e) {
  return _getMapData_default(this, e).get(e);
}
var _mapCacheGet_default = mapCacheGet$2;
function mapCacheHas$2(e) {
  return _getMapData_default(this, e).has(e);
}
var _mapCacheHas_default = mapCacheHas$2;
function mapCacheSet$2(e, t) {
  var n = _getMapData_default(this, e), r = n.size;
  return n.set(e, t), this.size += n.size == r ? 0 : 1, this;
}
var _mapCacheSet_default = mapCacheSet$2;
function MapCache$2(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
MapCache$2.prototype.clear = _mapCacheClear_default, MapCache$2.prototype.delete = _mapCacheDelete_default, MapCache$2.prototype.get = _mapCacheGet_default, MapCache$2.prototype.has = _mapCacheHas_default, MapCache$2.prototype.set = _mapCacheSet_default;
var _MapCache_default = MapCache$2;
var FUNC_ERROR_TEXT$2 = "Expected a function";
function memoize$2(e, t) {
  if (typeof e != "function" || t != null && typeof t != "function") throw TypeError(FUNC_ERROR_TEXT$2);
  var n = function() {
    var r = arguments, i = t ? t.apply(this, r) : r[0], o = n.cache;
    if (o.has(i)) return o.get(i);
    var s = e.apply(this, r);
    return n.cache = o.set(i, s) || o, s;
  };
  return n.cache = new (memoize$2.Cache || _MapCache_default)(), n;
}
memoize$2.Cache = _MapCache_default;
var memoize_default = memoize$2;
var MAX_MEMOIZE_SIZE$1 = 500;
function memoizeCapped$2(e) {
  var t = memoize_default(e, function(e2) {
    return n.size === MAX_MEMOIZE_SIZE$1 && n.clear(), e2;
  }), n = t.cache;
  return t;
}
var _memoizeCapped_default = memoizeCapped$2;
var rePropName$1 = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
var reEscapeChar$1 = /\\(\\)?/g;
var _stringToPath_default = _memoizeCapped_default(function(e) {
  var t = [];
  return e.charCodeAt(0) === 46 && t.push(""), e.replace(rePropName$1, function(e2, n, r, i) {
    t.push(r ? i.replace(reEscapeChar$1, "$1") : n || e2);
  }), t;
});
function toString$2(e) {
  return e == null ? "" : _baseToString_default(e);
}
var toString_default = toString$2;
function castPath$2(e, t) {
  return isArray_default(e) ? e : _isKey_default(e, t) ? [e] : _stringToPath_default(toString_default(e));
}
var _castPath_default = castPath$2;
var INFINITY$2 = Infinity;
function toKey$2(e) {
  if (typeof e == "string" || isSymbol_default(e)) return e;
  var t = e + "";
  return t == "0" && 1 / e == -INFINITY$2 ? "-0" : t;
}
var _toKey_default = toKey$2;
function baseGet$2(e, t) {
  t = _castPath_default(t, e);
  for (var n = 0, r = t.length; e != null && n < r; ) e = e[_toKey_default(t[n++])];
  return n && n == r ? e : void 0;
}
var _baseGet_default = baseGet$2;
function get$2(e, t, n) {
  var r = e == null ? void 0 : _baseGet_default(e, t);
  return r === void 0 ? n : r;
}
var get_default = get$2;
function arrayPush(e, t) {
  for (var n = -1, r = t.length, i = e.length; ++n < r; ) e[i + n] = t[n];
  return e;
}
var _arrayPush_default = arrayPush;
function stackClear() {
  this.__data__ = new _ListCache_default(), this.size = 0;
}
var _stackClear_default = stackClear;
function stackDelete(e) {
  var t = this.__data__, n = t.delete(e);
  return this.size = t.size, n;
}
var _stackDelete_default = stackDelete;
function stackGet(e) {
  return this.__data__.get(e);
}
var _stackGet_default = stackGet;
function stackHas(e) {
  return this.__data__.has(e);
}
var _stackHas_default = stackHas;
var LARGE_ARRAY_SIZE = 200;
function stackSet(e, t) {
  var n = this.__data__;
  if (n instanceof _ListCache_default) {
    var r = n.__data__;
    if (!_Map_default || r.length < LARGE_ARRAY_SIZE - 1) return r.push([e, t]), this.size = ++n.size, this;
    n = this.__data__ = new _MapCache_default(r);
  }
  return n.set(e, t), this.size = n.size, this;
}
var _stackSet_default = stackSet;
function Stack(e) {
  this.size = (this.__data__ = new _ListCache_default(e)).size;
}
Stack.prototype.clear = _stackClear_default, Stack.prototype.delete = _stackDelete_default, Stack.prototype.get = _stackGet_default, Stack.prototype.has = _stackHas_default, Stack.prototype.set = _stackSet_default;
var _Stack_default = Stack;
function arrayFilter(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length, i = 0, o = []; ++n < r; ) {
    var s = e[n];
    t(s, n, e) && (o[i++] = s);
  }
  return o;
}
var _arrayFilter_default = arrayFilter;
function stubArray() {
  return [];
}
var stubArray_default = stubArray;
var propertyIsEnumerable = Object.prototype.propertyIsEnumerable;
var nativeGetSymbols = Object.getOwnPropertySymbols;
var _getSymbols_default = nativeGetSymbols ? function(e) {
  return e == null ? [] : (e = Object(e), _arrayFilter_default(nativeGetSymbols(e), function(t) {
    return propertyIsEnumerable.call(e, t);
  }));
} : stubArray_default;
function baseGetAllKeys(e, t, n) {
  var r = t(e);
  return isArray_default(e) ? r : _arrayPush_default(r, n(e));
}
var _baseGetAllKeys_default = baseGetAllKeys;
function getAllKeys(e) {
  return _baseGetAllKeys_default(e, keys_default, _getSymbols_default);
}
var _getAllKeys_default = getAllKeys;
var _DataView_default = _getNative_default(_root_default, "DataView");
var _Promise_default = _getNative_default(_root_default, "Promise");
var _Set_default = _getNative_default(_root_default, "Set");
var mapTag$1 = "[object Map]";
var objectTag$1 = "[object Object]";
var promiseTag = "[object Promise]";
var setTag$1 = "[object Set]";
var weakMapTag = "[object WeakMap]";
var dataViewTag$1 = "[object DataView]";
var dataViewCtorString = _toSource_default(_DataView_default);
var mapCtorString = _toSource_default(_Map_default);
var promiseCtorString = _toSource_default(_Promise_default);
var setCtorString = _toSource_default(_Set_default);
var weakMapCtorString = _toSource_default(_WeakMap_default);
var getTag = _baseGetTag_default;
(_DataView_default && getTag(new _DataView_default(new ArrayBuffer(1))) != dataViewTag$1 || _Map_default && getTag(new _Map_default()) != mapTag$1 || _Promise_default && getTag(_Promise_default.resolve()) != promiseTag || _Set_default && getTag(new _Set_default()) != setTag$1 || _WeakMap_default && getTag(new _WeakMap_default()) != weakMapTag) && (getTag = function(e) {
  var t = _baseGetTag_default(e), n = t == objectTag$1 ? e.constructor : void 0, r = n ? _toSource_default(n) : "";
  if (r) switch (r) {
    case dataViewCtorString:
      return dataViewTag$1;
    case mapCtorString:
      return mapTag$1;
    case promiseCtorString:
      return promiseTag;
    case setCtorString:
      return setTag$1;
    case weakMapCtorString:
      return weakMapTag;
  }
  return t;
});
var _getTag_default = getTag;
var _Uint8Array_default = _root_default.Uint8Array;
var HASH_UNDEFINED$2 = "__lodash_hash_undefined__";
function setCacheAdd(e) {
  return this.__data__.set(e, HASH_UNDEFINED$2), this;
}
var _setCacheAdd_default = setCacheAdd;
function setCacheHas(e) {
  return this.__data__.has(e);
}
var _setCacheHas_default = setCacheHas;
function SetCache(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.__data__ = new _MapCache_default(); ++t < n; ) this.add(e[t]);
}
SetCache.prototype.add = SetCache.prototype.push = _setCacheAdd_default, SetCache.prototype.has = _setCacheHas_default;
var _SetCache_default = SetCache;
function arraySome(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length; ++n < r; ) if (t(e[n], n, e)) return true;
  return false;
}
var _arraySome_default = arraySome;
function cacheHas(e, t) {
  return e.has(t);
}
var _cacheHas_default = cacheHas;
var COMPARE_PARTIAL_FLAG$5 = 1;
var COMPARE_UNORDERED_FLAG$3 = 2;
function equalArrays(e, t, n, r, i, o) {
  var s = n & COMPARE_PARTIAL_FLAG$5, l = e.length, d = t.length;
  if (l != d && !(s && d > l)) return false;
  var f = o.get(e), p2 = o.get(t);
  if (f && p2) return f == t && p2 == e;
  var _ = -1, y = true, x = n & COMPARE_UNORDERED_FLAG$3 ? new _SetCache_default() : void 0;
  for (o.set(e, t), o.set(t, e); ++_ < l; ) {
    var w = e[_], k = t[_];
    if (r) var $ = s ? r(k, w, _, t, e, o) : r(w, k, _, e, t, o);
    if ($ !== void 0) {
      if ($) continue;
      y = false;
      break;
    }
    if (x) {
      if (!_arraySome_default(t, function(e2, t2) {
        if (!_cacheHas_default(x, t2) && (w === e2 || i(w, e2, n, r, o))) return x.push(t2);
      })) {
        y = false;
        break;
      }
    } else if (!(w === k || i(w, k, n, r, o))) {
      y = false;
      break;
    }
  }
  return o.delete(e), o.delete(t), y;
}
var _equalArrays_default = equalArrays;
function mapToArray(e) {
  var t = -1, n = Array(e.size);
  return e.forEach(function(e2, r) {
    n[++t] = [r, e2];
  }), n;
}
var _mapToArray_default = mapToArray;
function setToArray(e) {
  var t = -1, n = Array(e.size);
  return e.forEach(function(e2) {
    n[++t] = e2;
  }), n;
}
var _setToArray_default = setToArray;
var COMPARE_PARTIAL_FLAG$4 = 1;
var COMPARE_UNORDERED_FLAG$2 = 2;
var boolTag = "[object Boolean]";
var dateTag = "[object Date]";
var errorTag = "[object Error]";
var mapTag = "[object Map]";
var numberTag = "[object Number]";
var regexpTag = "[object RegExp]";
var setTag = "[object Set]";
var stringTag = "[object String]";
var symbolTag$1 = "[object Symbol]";
var arrayBufferTag = "[object ArrayBuffer]";
var dataViewTag = "[object DataView]";
var symbolProto$1 = _Symbol_default ? _Symbol_default.prototype : void 0;
var symbolValueOf = symbolProto$1 ? symbolProto$1.valueOf : void 0;
function equalByTag(e, t, n, r, i, o, s) {
  switch (n) {
    case dataViewTag:
      if (e.byteLength != t.byteLength || e.byteOffset != t.byteOffset) return false;
      e = e.buffer, t = t.buffer;
    case arrayBufferTag:
      return !(e.byteLength != t.byteLength || !o(new _Uint8Array_default(e), new _Uint8Array_default(t)));
    case boolTag:
    case dateTag:
    case numberTag:
      return eq_default(+e, +t);
    case errorTag:
      return e.name == t.name && e.message == t.message;
    case regexpTag:
    case stringTag:
      return e == t + "";
    case mapTag:
      var l = _mapToArray_default;
    case setTag:
      var d = r & COMPARE_PARTIAL_FLAG$4;
      if (l ||= _setToArray_default, e.size != t.size && !d) return false;
      var f = s.get(e);
      if (f) return f == t;
      r |= COMPARE_UNORDERED_FLAG$2, s.set(e, t);
      var p2 = _equalArrays_default(l(e), l(t), r, i, o, s);
      return s.delete(e), p2;
    case symbolTag$1:
      if (symbolValueOf) return symbolValueOf.call(e) == symbolValueOf.call(t);
  }
  return false;
}
var _equalByTag_default = equalByTag;
var COMPARE_PARTIAL_FLAG$3 = 1;
var hasOwnProperty$5 = Object.prototype.hasOwnProperty;
function equalObjects(e, t, n, r, i, o) {
  var s = n & COMPARE_PARTIAL_FLAG$3, l = _getAllKeys_default(e), d = l.length;
  if (d != _getAllKeys_default(t).length && !s) return false;
  for (var f = d; f--; ) {
    var p2 = l[f];
    if (!(s ? p2 in t : hasOwnProperty$5.call(t, p2))) return false;
  }
  var _ = o.get(e), y = o.get(t);
  if (_ && y) return _ == t && y == e;
  var x = true;
  o.set(e, t), o.set(t, e);
  for (var w = s; ++f < d; ) {
    p2 = l[f];
    var k = e[p2], $ = t[p2];
    if (r) var A7 = s ? r($, k, p2, t, e, o) : r(k, $, p2, e, t, o);
    if (!(A7 === void 0 ? k === $ || i(k, $, n, r, o) : A7)) {
      x = false;
      break;
    }
    w ||= p2 == "constructor";
  }
  if (x && !w) {
    var j7 = e.constructor, M7 = t.constructor;
    j7 != M7 && "constructor" in e && "constructor" in t && !(typeof j7 == "function" && j7 instanceof j7 && typeof M7 == "function" && M7 instanceof M7) && (x = false);
  }
  return o.delete(e), o.delete(t), x;
}
var _equalObjects_default = equalObjects;
var COMPARE_PARTIAL_FLAG$2 = 1;
var argsTag = "[object Arguments]";
var arrayTag = "[object Array]";
var objectTag = "[object Object]";
var hasOwnProperty$4 = Object.prototype.hasOwnProperty;
function baseIsEqualDeep(e, t, n, r, i, o) {
  var s = isArray_default(e), l = isArray_default(t), d = s ? arrayTag : _getTag_default(e), f = l ? arrayTag : _getTag_default(t);
  d = d == argsTag ? objectTag : d, f = f == argsTag ? objectTag : f;
  var p2 = d == objectTag, _ = f == objectTag, y = d == f;
  if (y && isBuffer_default(e)) {
    if (!isBuffer_default(t)) return false;
    s = true, p2 = false;
  }
  if (y && !p2) return o ||= new _Stack_default(), s || isTypedArray_default(e) ? _equalArrays_default(e, t, n, r, i, o) : _equalByTag_default(e, t, d, n, r, i, o);
  if (!(n & COMPARE_PARTIAL_FLAG$2)) {
    var x = p2 && hasOwnProperty$4.call(e, "__wrapped__"), w = _ && hasOwnProperty$4.call(t, "__wrapped__");
    if (x || w) {
      var k = x ? e.value() : e, $ = w ? t.value() : t;
      return o ||= new _Stack_default(), i(k, $, n, r, o);
    }
  }
  return y ? (o ||= new _Stack_default(), _equalObjects_default(e, t, n, r, i, o)) : false;
}
var _baseIsEqualDeep_default = baseIsEqualDeep;
function baseIsEqual(e, t, n, r, i) {
  return e === t ? true : e == null || t == null || !isObjectLike_default(e) && !isObjectLike_default(t) ? e !== e && t !== t : _baseIsEqualDeep_default(e, t, n, r, baseIsEqual, i);
}
var _baseIsEqual_default = baseIsEqual;
var COMPARE_PARTIAL_FLAG$1 = 1;
var COMPARE_UNORDERED_FLAG$1 = 2;
function baseIsMatch(e, t, n, r) {
  var i = n.length, o = i, s = !r;
  if (e == null) return !o;
  for (e = Object(e); i--; ) {
    var l = n[i];
    if (s && l[2] ? l[1] !== e[l[0]] : !(l[0] in e)) return false;
  }
  for (; ++i < o; ) {
    l = n[i];
    var d = l[0], f = e[d], p2 = l[1];
    if (s && l[2]) {
      if (f === void 0 && !(d in e)) return false;
    } else {
      var _ = new _Stack_default();
      if (r) var y = r(f, p2, d, e, t, _);
      if (!(y === void 0 ? _baseIsEqual_default(p2, f, COMPARE_PARTIAL_FLAG$1 | COMPARE_UNORDERED_FLAG$1, r, _) : y)) return false;
    }
  }
  return true;
}
var _baseIsMatch_default = baseIsMatch;
function isStrictComparable(e) {
  return e === e && !isObject_default(e);
}
var _isStrictComparable_default = isStrictComparable;
function getMatchData(e) {
  for (var t = keys_default(e), n = t.length; n--; ) {
    var r = t[n], i = e[r];
    t[n] = [
      r,
      i,
      _isStrictComparable_default(i)
    ];
  }
  return t;
}
var _getMatchData_default = getMatchData;
function matchesStrictComparable(e, t) {
  return function(n) {
    return n == null ? false : n[e] === t && (t !== void 0 || e in Object(n));
  };
}
var _matchesStrictComparable_default = matchesStrictComparable;
function baseMatches(e) {
  var t = _getMatchData_default(e);
  return t.length == 1 && t[0][2] ? _matchesStrictComparable_default(t[0][0], t[0][1]) : function(n) {
    return n === e || _baseIsMatch_default(n, e, t);
  };
}
var _baseMatches_default = baseMatches;
function baseHasIn(e, t) {
  return e != null && t in Object(e);
}
var _baseHasIn_default = baseHasIn;
function hasPath(e, t, n) {
  t = _castPath_default(t, e);
  for (var r = -1, i = t.length, o = false; ++r < i; ) {
    var s = _toKey_default(t[r]);
    if (!(o = e != null && n(e, s))) break;
    e = e[s];
  }
  return o || ++r != i ? o : (i = e == null ? 0 : e.length, !!i && isLength_default(i) && _isIndex_default(s, i) && (isArray_default(e) || isArguments_default(e)));
}
var _hasPath_default = hasPath;
function hasIn(e, t) {
  return e != null && _hasPath_default(e, t, _baseHasIn_default);
}
var hasIn_default = hasIn;
var COMPARE_PARTIAL_FLAG = 1;
var COMPARE_UNORDERED_FLAG = 2;
function baseMatchesProperty(e, t) {
  return _isKey_default(e) && _isStrictComparable_default(t) ? _matchesStrictComparable_default(_toKey_default(e), t) : function(n) {
    var r = get_default(n, e);
    return r === void 0 && r === t ? hasIn_default(n, e) : _baseIsEqual_default(t, r, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
  };
}
var _baseMatchesProperty_default = baseMatchesProperty;
function baseProperty(e) {
  return function(t) {
    return t?.[e];
  };
}
var _baseProperty_default = baseProperty;
function basePropertyDeep(e) {
  return function(t) {
    return _baseGet_default(t, e);
  };
}
var _basePropertyDeep_default = basePropertyDeep;
function property(e) {
  return _isKey_default(e) ? _baseProperty_default(_toKey_default(e)) : _basePropertyDeep_default(e);
}
var property_default = property;
function baseIteratee(e) {
  return typeof e == "function" ? e : e == null ? identity_default : typeof e == "object" ? isArray_default(e) ? _baseMatchesProperty_default(e[0], e[1]) : _baseMatches_default(e) : property_default(e);
}
var _baseIteratee_default = baseIteratee;
var now_default = function() {
  return _root_default.Date.now();
};
var FUNC_ERROR_TEXT$1 = "Expected a function";
var nativeMax$1 = Math.max;
var nativeMin$1 = Math.min;
function debounce(e, t, n) {
  var r, i, o, s, l, d, f = 0, p2 = false, _ = false, y = true;
  if (typeof e != "function") throw TypeError(FUNC_ERROR_TEXT$1);
  t = toNumber_default(t) || 0, isObject_default(n) && (p2 = !!n.leading, _ = "maxWait" in n, o = _ ? nativeMax$1(toNumber_default(n.maxWait) || 0, t) : o, y = "trailing" in n ? !!n.trailing : y);
  function x(t2) {
    var n2 = r, o3 = i;
    return r = i = void 0, f = t2, s = e.apply(o3, n2), s;
  }
  function w(e2) {
    return f = e2, l = setTimeout(A7, t), p2 ? x(e2) : s;
  }
  function k(e2) {
    var n2 = e2 - d, r2 = e2 - f, i2 = t - n2;
    return _ ? nativeMin$1(i2, o - r2) : i2;
  }
  function $(e2) {
    var n2 = e2 - d, r2 = e2 - f;
    return d === void 0 || n2 >= t || n2 < 0 || _ && r2 >= o;
  }
  function A7() {
    var e2 = now_default();
    if ($(e2)) return j7(e2);
    l = setTimeout(A7, k(e2));
  }
  function j7(e2) {
    return l = void 0, y && r ? x(e2) : (r = i = void 0, s);
  }
  function M7() {
    l !== void 0 && clearTimeout(l), f = 0, r = d = i = l = void 0;
  }
  function N7() {
    return l === void 0 ? s : j7(now_default());
  }
  function P7() {
    var e2 = now_default(), n2 = $(e2);
    if (r = arguments, i = this, d = e2, n2) {
      if (l === void 0) return w(d);
      if (_) return clearTimeout(l), l = setTimeout(A7, t), x(d);
    }
    return l === void 0 && (l = setTimeout(A7, t)), s;
  }
  return P7.cancel = M7, P7.flush = N7, P7;
}
var debounce_default = debounce;
var nativeMax = Math.max;
var nativeMin = Math.min;
function findLastIndex(e, t, n) {
  var r = e == null ? 0 : e.length;
  if (!r) return -1;
  var i = r - 1;
  return n !== void 0 && (i = toInteger_default(n), i = n < 0 ? nativeMax(r + i, 0) : nativeMin(i, r - 1)), _baseFindIndex_default(e, _baseIteratee_default(t, 3), i, true);
}
var findLastIndex_default = findLastIndex;
function fromPairs(e) {
  for (var t = -1, n = e == null ? 0 : e.length, r = {}; ++t < n; ) {
    var i = e[t];
    r[i[0]] = i[1];
  }
  return r;
}
var fromPairs_default = fromPairs;
function isEqual(e, t) {
  return _baseIsEqual_default(e, t);
}
var isEqual_default = isEqual;
function isNil(e) {
  return e == null;
}
var isNil_default = isNil;
function isUndefined$1(e) {
  return e === void 0;
}
var isUndefined_default = isUndefined$1;
var isUndefined = (e) => e === void 0;
var isBoolean2 = (e) => typeof e == "boolean";
var isNumber = (e) => typeof e == "number";
var isElement = (e) => typeof Element > "u" ? false : e instanceof Element;
var isStringNumber = (e) => isString$2(e) ? !Number.isNaN(Number(e)) : false;
var escapeStringRegexp = (e = "") => e.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&").replace(/-/g, "\\x2d");
var ElementPlusError = class extends Error {
  constructor(e) {
    super(e), this.name = "ElementPlusError";
  }
};
function throwError(e, t) {
  throw new ElementPlusError(`[${e}] ${t}`);
}
function addUnit(e, t = "px") {
  if (!e) return "";
  if (isNumber(e) || isStringNumber(e)) return `${e}${t}`;
  if (isString$2(e)) return e;
}
function scrollIntoView(e, t) {
  if (!isClient) return;
  if (!t) {
    e.scrollTop = 0;
    return;
  }
  let n = [], r = t.offsetParent;
  for (; r !== null && e !== r && e.contains(r); ) n.push(r), r = r.offsetParent;
  let i = t.offsetTop + n.reduce((e2, t2) => e2 + t2.offsetTop, 0), o = i + t.offsetHeight, s = e.scrollTop, l = s + e.clientHeight;
  i < s ? e.scrollTop = i : o > l && (e.scrollTop = o - e.clientHeight);
}
var arrow_down_default = defineComponent({
  name: "ArrowDown",
  __name: "arrow-down",
  setup(e) {
    return (e2, t) => (openBlock(), createElementBlock("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [createBaseVNode("path", {
      fill: "currentColor",
      d: "M831.872 340.864 512 652.672 192.128 340.864a30.592 30.592 0 0 0-42.752 0 29.12 29.12 0 0 0 0 41.6L489.664 714.24a32 32 0 0 0 44.672 0l340.288-331.712a29.12 29.12 0 0 0 0-41.728 30.592 30.592 0 0 0-42.752 0z"
    })]));
  }
});
var arrow_left_default = defineComponent({
  name: "ArrowLeft",
  __name: "arrow-left",
  setup(e) {
    return (e2, t) => (openBlock(), createElementBlock("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [createBaseVNode("path", {
      fill: "currentColor",
      d: "M609.408 149.376 277.76 489.6a32 32 0 0 0 0 44.672l331.648 340.352a29.12 29.12 0 0 0 41.728 0 30.592 30.592 0 0 0 0-42.752L339.264 511.936l311.872-319.872a30.592 30.592 0 0 0 0-42.688 29.12 29.12 0 0 0-41.728 0z"
    })]));
  }
});
var arrow_right_default = defineComponent({
  name: "ArrowRight",
  __name: "arrow-right",
  setup(e) {
    return (e2, t) => (openBlock(), createElementBlock("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [createBaseVNode("path", {
      fill: "currentColor",
      d: "M340.864 149.312a30.592 30.592 0 0 0 0 42.752L652.736 512 340.864 831.872a30.592 30.592 0 0 0 0 42.752 29.12 29.12 0 0 0 41.728 0L714.24 534.336a32 32 0 0 0 0-44.672L382.592 149.376a29.12 29.12 0 0 0-41.728 0z"
    })]));
  }
});
var circle_check_default = defineComponent({
  name: "CircleCheck",
  __name: "circle-check",
  setup(e) {
    return (e2, t) => (openBlock(), createElementBlock("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [createBaseVNode("path", {
      fill: "currentColor",
      d: "M512 896a384 384 0 1 0 0-768 384 384 0 0 0 0 768m0 64a448 448 0 1 1 0-896 448 448 0 0 1 0 896"
    }), createBaseVNode("path", {
      fill: "currentColor",
      d: "M745.344 361.344a32 32 0 0 1 45.312 45.312l-288 288a32 32 0 0 1-45.312 0l-160-160a32 32 0 1 1 45.312-45.312L480 626.752l265.344-265.408z"
    })]));
  }
});
var circle_close_default = defineComponent({
  name: "CircleClose",
  __name: "circle-close",
  setup(e) {
    return (e2, t) => (openBlock(), createElementBlock("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [createBaseVNode("path", {
      fill: "currentColor",
      d: "m466.752 512-90.496-90.496a32 32 0 0 1 45.248-45.248L512 466.752l90.496-90.496a32 32 0 1 1 45.248 45.248L557.248 512l90.496 90.496a32 32 0 1 1-45.248 45.248L512 557.248l-90.496 90.496a32 32 0 0 1-45.248-45.248z"
    }), createBaseVNode("path", {
      fill: "currentColor",
      d: "M512 896a384 384 0 1 0 0-768 384 384 0 0 0 0 768m0 64a448 448 0 1 1 0-896 448 448 0 0 1 0 896"
    })]));
  }
});
var close_default$1 = defineComponent({
  name: "Close",
  __name: "close",
  setup(e) {
    return (e2, t) => (openBlock(), createElementBlock("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [createBaseVNode("path", {
      fill: "currentColor",
      d: "M764.288 214.592 512 466.88 259.712 214.592a31.936 31.936 0 0 0-45.12 45.12L466.752 512 214.528 764.224a31.936 31.936 0 1 0 45.12 45.184L512 557.184l252.288 252.288a31.936 31.936 0 0 0 45.12-45.12L557.12 512.064l252.288-252.352a31.936 31.936 0 1 0-45.12-45.184z"
    })]));
  }
});
var d_arrow_left_default = defineComponent({
  name: "DArrowLeft",
  __name: "d-arrow-left",
  setup(e) {
    return (e2, t) => (openBlock(), createElementBlock("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [createBaseVNode("path", {
      fill: "currentColor",
      d: "M529.408 149.376a29.12 29.12 0 0 1 41.728 0 30.592 30.592 0 0 1 0 42.688L259.264 511.936l311.872 319.936a30.592 30.592 0 0 1-.512 43.264 29.12 29.12 0 0 1-41.216-.512L197.76 534.272a32 32 0 0 1 0-44.672l331.648-340.224zm256 0a29.12 29.12 0 0 1 41.728 0 30.592 30.592 0 0 1 0 42.688L515.264 511.936l311.872 319.936a30.592 30.592 0 0 1-.512 43.264 29.12 29.12 0 0 1-41.216-.512L453.76 534.272a32 32 0 0 1 0-44.672l331.648-340.224z"
    })]));
  }
});
var d_arrow_right_default = defineComponent({
  name: "DArrowRight",
  __name: "d-arrow-right",
  setup(e) {
    return (e2, t) => (openBlock(), createElementBlock("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [createBaseVNode("path", {
      fill: "currentColor",
      d: "M452.864 149.312a29.12 29.12 0 0 1 41.728.064L826.24 489.664a32 32 0 0 1 0 44.672L494.592 874.624a29.12 29.12 0 0 1-41.728 0 30.592 30.592 0 0 1 0-42.752L764.736 512 452.864 192a30.592 30.592 0 0 1 0-42.688m-256 0a29.12 29.12 0 0 1 41.728.064L570.24 489.664a32 32 0 0 1 0 44.672L238.592 874.624a29.12 29.12 0 0 1-41.728 0 30.592 30.592 0 0 1 0-42.752L508.736 512 196.864 192a30.592 30.592 0 0 1 0-42.688z"
    })]));
  }
});
var hide_default = defineComponent({
  name: "Hide",
  __name: "hide",
  setup(e) {
    return (e2, t) => (openBlock(), createElementBlock("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [createBaseVNode("path", {
      fill: "currentColor",
      d: "M876.8 156.8c0-9.6-3.2-16-9.6-22.4-6.4-6.4-12.8-9.6-22.4-9.6-9.6 0-16 3.2-22.4 9.6L736 220.8c-64-32-137.6-51.2-224-60.8-160 16-288 73.6-377.6 176C44.8 438.4 0 496 0 512s48 73.6 134.4 176c22.4 25.6 44.8 48 73.6 67.2l-86.4 89.6c-6.4 6.4-9.6 12.8-9.6 22.4 0 9.6 3.2 16 9.6 22.4 6.4 6.4 12.8 9.6 22.4 9.6 9.6 0 16-3.2 22.4-9.6l704-710.4c3.2-6.4 6.4-12.8 6.4-22.4Zm-646.4 528c-76.8-70.4-128-128-153.6-172.8 28.8-48 80-105.6 153.6-172.8C304 272 400 230.4 512 224c64 3.2 124.8 19.2 176 44.8l-54.4 54.4C598.4 300.8 560 288 512 288c-64 0-115.2 22.4-160 64s-64 96-64 160c0 48 12.8 89.6 35.2 124.8L256 707.2c-9.6-6.4-19.2-16-25.6-22.4Zm140.8-96c-12.8-22.4-19.2-48-19.2-76.8 0-44.8 16-83.2 48-112 32-28.8 67.2-48 112-48 28.8 0 54.4 6.4 73.6 19.2zM889.599 336c-12.8-16-28.8-28.8-41.6-41.6l-48 48c73.6 67.2 124.8 124.8 150.4 169.6-28.8 48-80 105.6-153.6 172.8-73.6 67.2-172.8 108.8-284.8 115.2-51.2-3.2-99.2-12.8-140.8-28.8l-48 48c57.6 22.4 118.4 38.4 188.8 44.8 160-16 288-73.6 377.6-176C979.199 585.6 1024 528 1024 512s-48.001-73.6-134.401-176Z"
    }), createBaseVNode("path", {
      fill: "currentColor",
      d: "M511.998 672c-12.8 0-25.6-3.2-38.4-6.4l-51.2 51.2c28.8 12.8 57.6 19.2 89.6 19.2 64 0 115.2-22.4 160-64 41.6-41.6 64-96 64-160 0-32-6.4-64-19.2-89.6l-51.2 51.2c3.2 12.8 6.4 25.6 6.4 38.4 0 44.8-16 83.2-48 112-32 28.8-67.2 48-112 48Z"
    })]));
  }
});
var loading_default = defineComponent({
  name: "Loading",
  __name: "loading",
  setup(e) {
    return (e2, t) => (openBlock(), createElementBlock("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [createBaseVNode("path", {
      fill: "currentColor",
      d: "M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32m0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32m448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32m-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32M195.2 195.2a32 32 0 0 1 45.248 0L376.32 331.008a32 32 0 0 1-45.248 45.248L195.2 240.448a32 32 0 0 1 0-45.248zm452.544 452.544a32 32 0 0 1 45.248 0L828.8 783.552a32 32 0 0 1-45.248 45.248L647.744 692.992a32 32 0 0 1 0-45.248zM828.8 195.264a32 32 0 0 1 0 45.184L692.992 376.32a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0m-452.544 452.48a32 32 0 0 1 0 45.248L240.448 828.8a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0z"
    })]));
  }
});
var more_filled_default = defineComponent({
  name: "MoreFilled",
  __name: "more-filled",
  setup(e) {
    return (e2, t) => (openBlock(), createElementBlock("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [createBaseVNode("path", {
      fill: "currentColor",
      d: "M176 416a112 112 0 1 1 0 224 112 112 0 0 1 0-224m336 0a112 112 0 1 1 0 224 112 112 0 0 1 0-224m336 0a112 112 0 1 1 0 224 112 112 0 0 1 0-224"
    })]));
  }
});
var picture_filled_default = defineComponent({
  name: "PictureFilled",
  __name: "picture-filled",
  setup(e) {
    return (e2, t) => (openBlock(), createElementBlock("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [createBaseVNode("path", {
      fill: "currentColor",
      d: "M96 896a32 32 0 0 1-32-32V160a32 32 0 0 1 32-32h832a32 32 0 0 1 32 32v704a32 32 0 0 1-32 32zm315.52-228.48-68.928-68.928a32 32 0 0 0-45.248 0L128 768.064h778.688l-242.112-290.56a32 32 0 0 0-49.216 0L458.752 665.408a32 32 0 0 1-47.232 2.112M256 384a96 96 0 1 0 192.064-.064A96 96 0 0 0 256 384"
    })]));
  }
});
var view_default = defineComponent({
  name: "View",
  __name: "view",
  setup(e) {
    return (e2, t) => (openBlock(), createElementBlock("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [createBaseVNode("path", {
      fill: "currentColor",
      d: "M512 160c320 0 512 352 512 352S832 864 512 864 0 512 0 512s192-352 512-352m0 64c-225.28 0-384.128 208.064-436.8 288 52.608 79.872 211.456 288 436.8 288 225.28 0 384.128-208.064 436.8-288-52.608-79.872-211.456-288-436.8-288zm0 64a224 224 0 1 1 0 448 224 224 0 0 1 0-448m0 64a160.192 160.192 0 0 0-160 160c0 88.192 71.744 160 160 160s160-71.808 160-160-71.744-160-160-160"
    })]));
  }
});
var epPropKey = "__epPropKey";
var definePropType = (e) => e;
var isEpProp = (e) => isObject$4(e) && !!e.__epPropKey;
var buildProp = (e, t) => {
  if (!isObject$4(e) || isEpProp(e)) return e;
  let { values: n, required: r, default: i, type: o, validator: s } = e, l = {
    type: o,
    required: !!r,
    validator: n || s ? (r2) => {
      let o3 = false, l2 = [];
      if (n && (l2 = Array.from(n), hasOwn2(e, "default") && l2.push(i), o3 ||= l2.includes(r2)), s && (o3 ||= s(r2)), !o3 && l2.length > 0) {
        let e2 = [...new Set(l2)].map((e3) => JSON.stringify(e3)).join(", ");
        warn2(`Invalid prop: validation failed${t ? ` for prop "${t}"` : ""}. Expected one of [${e2}], got value ${JSON.stringify(r2)}.`);
      }
      return o3;
    } : void 0,
    [epPropKey]: true
  };
  return hasOwn2(e, "default") && (l.default = i), l;
};
var buildProps = (e) => fromPairs_default(Object.entries(e).map(([e2, t]) => [e2, buildProp(t, e2)]));
var iconPropType = definePropType([
  String,
  Object,
  Function
]);
var ValidateComponentsMap = {
  validating: loading_default,
  success: circle_check_default,
  error: circle_close_default
};
var withInstall = (e, t) => {
  if (e.install = (n) => {
    for (let r of [e, ...Object.values(t ?? {})]) n.component(r.name, r);
  }, t) for (let [n, r] of Object.entries(t)) e[n] = r;
  return e;
};
var withInstallDirective = (e, t) => (e.install = (n) => {
  n.directive(t, e);
}, e);
var withNoopInstall = (e) => (e.install = NOOP2, e);
var EVENT_CODE = {
  tab: "Tab",
  enter: "Enter",
  space: "Space",
  left: "ArrowLeft",
  up: "ArrowUp",
  right: "ArrowRight",
  down: "ArrowDown",
  esc: "Escape",
  delete: "Delete",
  backspace: "Backspace",
  numpadEnter: "NumpadEnter",
  pageUp: "PageUp",
  pageDown: "PageDown",
  home: "Home",
  end: "End"
};
var UPDATE_MODEL_EVENT = "update:modelValue";
var CHANGE_EVENT = "change";
var componentSizes = [
  "",
  "default",
  "small",
  "large"
];
var componentSizeMap = {
  large: 40,
  default: 32,
  small: 24
};
var getComponentSize = (e) => componentSizeMap[e || "default"];
var isValidComponentSize = (e) => ["", ...componentSizes].includes(e);
var isKorean = (e) => /([\uAC00-\uD7AF\u3130-\u318F])+/gi.test(e);
var mutable = (e) => e;
var DEFAULT_EXCLUDE_KEYS = ["class", "style"];
var LISTENER_PREFIX = /^on[A-Z]/;
var useAttrs$1 = (e = {}) => {
  let { excludeListeners: t = false, excludeKeys: n } = e, r = computed2(() => (n?.value || []).concat(DEFAULT_EXCLUDE_KEYS)), i = getCurrentInstance();
  return computed2(i ? () => fromPairs_default(Object.entries(i.proxy?.$attrs).filter(([e2]) => !r.value.includes(e2) && !(t && LISTENER_PREFIX.test(e2)))) : () => ({}));
};
var useDeprecated = ({ from: e, replacement: t, scope: n, version: r, ref: i, type: o = "API" }, s) => {
  watch2(() => unref(s), (n2) => {
    n2 && `${o}${e}${r}${t}${i}`;
  }, { immediate: true });
};
var English = {
  name: "en",
  el: {
    colorpicker: {
      confirm: "OK",
      clear: "Clear",
      defaultLabel: "color picker",
      description: "current color is {color}. press enter to select a new color."
    },
    datepicker: {
      now: "Now",
      today: "Today",
      cancel: "Cancel",
      clear: "Clear",
      confirm: "OK",
      dateTablePrompt: "Use the arrow keys and enter to select the day of the month",
      monthTablePrompt: "Use the arrow keys and enter to select the month",
      yearTablePrompt: "Use the arrow keys and enter to select the year",
      selectedDate: "Selected date",
      selectDate: "Select date",
      selectTime: "Select time",
      startDate: "Start Date",
      startTime: "Start Time",
      endDate: "End Date",
      endTime: "End Time",
      prevYear: "Previous Year",
      nextYear: "Next Year",
      prevMonth: "Previous Month",
      nextMonth: "Next Month",
      year: "",
      month1: "January",
      month2: "February",
      month3: "March",
      month4: "April",
      month5: "May",
      month6: "June",
      month7: "July",
      month8: "August",
      month9: "September",
      month10: "October",
      month11: "November",
      month12: "December",
      week: "week",
      weeks: {
        sun: "Sun",
        mon: "Mon",
        tue: "Tue",
        wed: "Wed",
        thu: "Thu",
        fri: "Fri",
        sat: "Sat"
      },
      weeksFull: {
        sun: "Sunday",
        mon: "Monday",
        tue: "Tuesday",
        wed: "Wednesday",
        thu: "Thursday",
        fri: "Friday",
        sat: "Saturday"
      },
      months: {
        jan: "Jan",
        feb: "Feb",
        mar: "Mar",
        apr: "Apr",
        may: "May",
        jun: "Jun",
        jul: "Jul",
        aug: "Aug",
        sep: "Sep",
        oct: "Oct",
        nov: "Nov",
        dec: "Dec"
      }
    },
    inputNumber: {
      decrease: "decrease number",
      increase: "increase number"
    },
    select: {
      loading: "Loading",
      noMatch: "No matching data",
      noData: "No data",
      placeholder: "Select"
    },
    dropdown: { toggleDropdown: "Toggle Dropdown" },
    cascader: {
      noMatch: "No matching data",
      loading: "Loading",
      placeholder: "Select",
      noData: "No data"
    },
    pagination: {
      goto: "Go to",
      pagesize: "/page",
      total: "Total {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages",
      deprecationWarning: "Deprecated usages detected, please refer to the el-pagination documentation for more details"
    },
    dialog: { close: "Close this dialog" },
    drawer: { close: "Close this dialog" },
    messagebox: {
      title: "Message",
      confirm: "OK",
      cancel: "Cancel",
      error: "Illegal input",
      close: "Close this dialog"
    },
    upload: {
      deleteTip: "press delete to remove",
      delete: "Delete",
      preview: "Preview",
      continue: "Continue"
    },
    slider: {
      defaultLabel: "slider between {min} and {max}",
      defaultRangeStartLabel: "pick start value",
      defaultRangeEndLabel: "pick end value"
    },
    table: {
      emptyText: "No Data",
      confirmFilter: "Confirm",
      resetFilter: "Reset",
      clearFilter: "All",
      sumText: "Sum"
    },
    tree: { emptyText: "No Data" },
    transfer: {
      noMatch: "No matching data",
      noData: "No data",
      titles: ["List 1", "List 2"],
      filterPlaceholder: "Enter keyword",
      noCheckedFormat: "{total} items",
      hasCheckedFormat: "{checked}/{total} checked"
    },
    image: { error: "FAILED" },
    pageHeader: { title: "Back" },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    }
  }
};
var buildTranslator = (e) => (t, n) => translate(t, n, unref(e));
var translate = (e, t, n) => get_default(n, e, e).replace(/\{(\w+)\}/g, (e2, n2) => `${t?.[n2] ?? `{${n2}}`}`);
var buildLocaleContext = (e) => ({
  lang: computed2(() => unref(e).name),
  locale: isRef2(e) ? e : ref(e),
  t: buildTranslator(e)
});
var localeContextKey = Symbol("localeContextKey");
var useLocale = (e) => {
  let t = e || inject(localeContextKey, ref());
  return buildLocaleContext(computed2(() => t.value || English));
};
var statePrefix = "is-";
var _bem = (e, t, n, r, i) => {
  let o = `${e}-${t}`;
  return n && (o += `-${n}`), r && (o += `__${r}`), i && (o += `--${i}`), o;
};
var namespaceContextKey = Symbol("namespaceContextKey");
var useGetDerivedNamespace = (e) => {
  let t = e || (getCurrentInstance() ? inject(namespaceContextKey, ref("el")) : ref("el"));
  return computed2(() => unref(t) || "el");
};
var useNamespace = (e, t) => {
  let n = useGetDerivedNamespace(t);
  return {
    namespace: n,
    b: (t2 = "") => _bem(n.value, e, t2, "", ""),
    e: (t2) => t2 ? _bem(n.value, e, "", t2, "") : "",
    m: (t2) => t2 ? _bem(n.value, e, "", "", t2) : "",
    be: (t2, r) => t2 && r ? _bem(n.value, e, t2, r, "") : "",
    em: (t2, r) => t2 && r ? _bem(n.value, e, "", t2, r) : "",
    bm: (t2, r) => t2 && r ? _bem(n.value, e, t2, "", r) : "",
    bem: (t2, r, i) => t2 && r && i ? _bem(n.value, e, t2, r, i) : "",
    is: (e2, ...t2) => {
      let n2 = t2.length >= 1 ? t2[0] : true;
      return e2 && n2 ? `${statePrefix}${e2}` : "";
    },
    cssVar: (e2) => {
      let t2 = {};
      for (let r in e2) e2[r] && (t2[`--${n.value}-${r}`] = e2[r]);
      return t2;
    },
    cssVarName: (e2) => `--${n.value}-${e2}`,
    cssVarBlock: (t2) => {
      let r = {};
      for (let i in t2) t2[i] && (r[`--${n.value}-${e}-${i}`] = t2[i]);
      return r;
    },
    cssVarBlockName: (t2) => `--${n.value}-${e}-${t2}`
  };
};
var _prop = buildProp({
  type: definePropType(Boolean),
  default: null
});
var _event = buildProp({ type: definePropType(Function) });
var createModelToggleComposable = (e) => {
  let t = `update:${e}`, n = `onUpdate:${e}`, r = [t];
  return {
    useModelToggle: ({ indicator: r2, toggleReason: i, shouldHideWhenRouteChanges: o, shouldProceed: s, onShow: d, onHide: f }) => {
      let p2 = getCurrentInstance(), { emit: _ } = p2, y = p2.props, x = computed2(() => isFunction$3(y[n])), w = computed2(() => y[e] === null), k = (e2) => {
        r2.value !== true && (r2.value = true, i && (i.value = e2), isFunction$3(d) && d(e2));
      }, $ = (e2) => {
        r2.value !== false && (r2.value = false, i && (i.value = e2), isFunction$3(f) && f(e2));
      }, A7 = (e2) => {
        if (y.disabled === true || isFunction$3(s) && !s()) return;
        let n2 = x.value && isClient;
        n2 && _(t, true), (w.value || !n2) && k(e2);
      }, M7 = (e2) => {
        if (y.disabled === true || !isClient) return;
        let n2 = x.value && isClient;
        n2 && _(t, false), (w.value || !n2) && $(e2);
      }, N7 = (e2) => {
        isBoolean2(e2) && (y.disabled && e2 ? x.value && _(t, false) : r2.value !== e2 && (e2 ? k() : $()));
      };
      return watch2(() => y[e], N7), o && p2.appContext.config.globalProperties.$route !== void 0 && watch2(() => ({ ...p2.proxy.$route }), () => {
        o.value && r2.value && M7();
      }), onMounted(() => {
        N7(y[e]);
      }), {
        hide: M7,
        show: A7,
        toggle: () => {
          r2.value ? M7() : A7();
        },
        hasUpdateHandler: x
      };
    },
    useModelToggleProps: {
      [e]: _prop,
      [n]: _event
    },
    useModelToggleEmits: r
  };
};
var { useModelToggle, useModelToggleProps, useModelToggleEmits } = createModelToggleComposable("modelValue");
var useProp = (e) => {
  let t = getCurrentInstance();
  return computed2(() => t?.proxy?.$props?.[e]);
};
var R$1 = "bottom";
var W$1 = "right";
var P$1 = "left";
var me$1 = "auto";
var G$1 = [
  "top",
  R$1,
  W$1,
  P$1
];
var U$1 = "start";
var Xe$1 = "clippingParents";
var je$1 = "viewport";
var K$1 = "popper";
var Ye$1 = "reference";
var De$1 = G$1.reduce(function(e, t) {
  return e.concat([t + "-" + U$1, t + "-end"]);
}, []);
var Ee$1 = [].concat(G$1, [me$1]).reduce(function(e, t) {
  return e.concat([
    t,
    t + "-" + U$1,
    t + "-end"
  ]);
}, []);
var ot$1 = [
  "beforeRead",
  "read",
  "afterRead",
  "beforeMain",
  "main",
  "afterMain",
  "beforeWrite",
  "write",
  "afterWrite"
];
function C$1(e) {
  return e ? (e.nodeName || "").toLowerCase() : null;
}
function H$1(e) {
  if (e == null) return window;
  if (e.toString() !== "[object Window]") {
    var t = e.ownerDocument;
    return t && t.defaultView || window;
  }
  return e;
}
function Q$1(e) {
  return e instanceof H$1(e).Element || e instanceof Element;
}
function B$1(e) {
  return e instanceof H$1(e).HTMLElement || e instanceof HTMLElement;
}
function Pe$1(e) {
  return typeof ShadowRoot > "u" ? false : e instanceof H$1(e).ShadowRoot || e instanceof ShadowRoot;
}
function Mt(e) {
  var t = e.state;
  Object.keys(t.elements).forEach(function(e2) {
    var n = t.styles[e2] || {}, r = t.attributes[e2] || {}, i = t.elements[e2];
    !B$1(i) || !C$1(i) || (Object.assign(i.style, n), Object.keys(r).forEach(function(e3) {
      var t2 = r[e3];
      t2 === false ? i.removeAttribute(e3) : i.setAttribute(e3, t2 === true ? "" : t2);
    }));
  });
}
function Rt(e) {
  var t = e.state, n = {
    popper: {
      position: t.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: { position: "absolute" },
    reference: {}
  };
  return Object.assign(t.elements.popper.style, n.popper), t.styles = n, t.elements.arrow && Object.assign(t.elements.arrow.style, n.arrow), function() {
    Object.keys(t.elements).forEach(function(e2) {
      var r = t.elements[e2], i = t.attributes[e2] || {}, o = Object.keys(t.styles.hasOwnProperty(e2) ? t.styles[e2] : n[e2]).reduce(function(e3, t2) {
        return e3[t2] = "", e3;
      }, {});
      !B$1(r) || !C$1(r) || (Object.assign(r.style, o), Object.keys(i).forEach(function(e3) {
        r.removeAttribute(e3);
      }));
    });
  };
}
var Ae$1 = {
  name: "applyStyles",
  enabled: true,
  phase: "write",
  fn: Mt,
  effect: Rt,
  requires: ["computeStyles"]
};
function q(e) {
  return e.split("-")[0];
}
var X$1 = Math.max;
var ve$1 = Math.min;
var Z = Math.round;
function ee$2(e, t) {
  t === void 0 && (t = false);
  var n = e.getBoundingClientRect(), r = 1, i = 1;
  if (B$1(e) && t) {
    var o = e.offsetHeight, s = e.offsetWidth;
    s > 0 && (r = Z(n.width) / s || 1), o > 0 && (i = Z(n.height) / o || 1);
  }
  return {
    width: n.width / r,
    height: n.height / i,
    top: n.top / i,
    right: n.right / r,
    bottom: n.bottom / i,
    left: n.left / r,
    x: n.left / r,
    y: n.top / i
  };
}
function ke$1(e) {
  var t = ee$2(e), n = e.offsetWidth, r = e.offsetHeight;
  return Math.abs(t.width - n) <= 1 && (n = t.width), Math.abs(t.height - r) <= 1 && (r = t.height), {
    x: e.offsetLeft,
    y: e.offsetTop,
    width: n,
    height: r
  };
}
function it$3(e, t) {
  var n = t.getRootNode && t.getRootNode();
  if (e.contains(t)) return true;
  if (n && Pe$1(n)) {
    var r = t;
    do {
      if (r && e.isSameNode(r)) return true;
      r = r.parentNode || r.host;
    } while (r);
  }
  return false;
}
function N$1(e) {
  return H$1(e).getComputedStyle(e);
}
function Wt(e) {
  return [
    "table",
    "td",
    "th"
  ].indexOf(C$1(e)) >= 0;
}
function I$1(e) {
  return ((Q$1(e) ? e.ownerDocument : e.document) || window.document).documentElement;
}
function ge$2(e) {
  return C$1(e) === "html" ? e : e.assignedSlot || e.parentNode || (Pe$1(e) ? e.host : null) || I$1(e);
}
function at$1(e) {
  return !B$1(e) || N$1(e).position === "fixed" ? null : e.offsetParent;
}
function Bt(e) {
  var t = navigator.userAgent.toLowerCase().indexOf("firefox") !== -1;
  if (navigator.userAgent.indexOf("Trident") !== -1 && B$1(e) && N$1(e).position === "fixed") return null;
  var n = ge$2(e);
  for (Pe$1(n) && (n = n.host); B$1(n) && ["html", "body"].indexOf(C$1(n)) < 0; ) {
    var r = N$1(n);
    if (r.transform !== "none" || r.perspective !== "none" || r.contain === "paint" || ["transform", "perspective"].indexOf(r.willChange) !== -1 || t && r.willChange === "filter" || t && r.filter && r.filter !== "none") return n;
    n = n.parentNode;
  }
  return null;
}
function se$1(e) {
  for (var t = H$1(e), n = at$1(e); n && Wt(n) && N$1(n).position === "static"; ) n = at$1(n);
  return n && (C$1(n) === "html" || C$1(n) === "body" && N$1(n).position === "static") ? t : n || Bt(e) || t;
}
function Le$1(e) {
  return ["top", "bottom"].indexOf(e) >= 0 ? "x" : "y";
}
function fe$1(e, t, n) {
  return X$1(e, ve$1(t, n));
}
function St$1(e, t, n) {
  var r = fe$1(e, t, n);
  return r > n ? n : r;
}
function st$1() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
function ft$1(e) {
  return Object.assign({}, st$1(), e);
}
function ct$1(e, t) {
  return t.reduce(function(t2, n) {
    return t2[n] = e, t2;
  }, {});
}
var Tt = function(e, t) {
  return e = typeof e == "function" ? e(Object.assign({}, t.rects, { placement: t.placement })) : e, ft$1(typeof e == "number" ? ct$1(e, G$1) : e);
};
function Ht(e) {
  var t, n = e.state, r = e.name, i = e.options, o = n.elements.arrow, s = n.modifiersData.popperOffsets, l = q(n.placement), d = Le$1(l), f = ["left", "right"].indexOf(l) >= 0 ? "height" : "width";
  if (!(!o || !s)) {
    var p2 = Tt(i.padding, n), _ = ke$1(o), y = d === "y" ? "top" : P$1, x = d === "y" ? R$1 : W$1, w = n.rects.reference[f] + n.rects.reference[d] - s[d] - n.rects.popper[f], k = s[d] - n.rects.reference[d], $ = se$1(o), A7 = $ ? d === "y" ? $.clientHeight || 0 : $.clientWidth || 0 : 0, j7 = w / 2 - k / 2, M7 = p2[y], N7 = A7 - _[f] - p2[x], P7 = A7 / 2 - _[f] / 2 + j7, F7 = fe$1(M7, P7, N7), I7 = d;
    n.modifiersData[r] = (t = {}, t[I7] = F7, t.centerOffset = F7 - P7, t);
  }
}
function Ct$1(e) {
  var t = e.state, n = e.options.element, r = n === void 0 ? "[data-popper-arrow]" : n;
  r != null && (typeof r == "string" && (r = t.elements.popper.querySelector(r), !r) || !it$3(t.elements.popper, r) || (t.elements.arrow = r));
}
var pt$1 = {
  name: "arrow",
  enabled: true,
  phase: "main",
  fn: Ht,
  effect: Ct$1,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};
function te$1(e) {
  return e.split("-")[1];
}
var qt$1 = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function Vt(e) {
  var t = e.x, n = e.y, r = window.devicePixelRatio || 1;
  return {
    x: Z(t * r) / r || 0,
    y: Z(n * r) / r || 0
  };
}
function ut$1(e) {
  var t, n = e.popper, r = e.popperRect, i = e.placement, o = e.variation, s = e.offsets, l = e.position, d = e.gpuAcceleration, f = e.adaptive, p2 = e.roundOffsets, _ = e.isFixed, y = s.x, x = y === void 0 ? 0 : y, w = s.y, k = w === void 0 ? 0 : w, $ = typeof p2 == "function" ? p2({
    x,
    y: k
  }) : {
    x,
    y: k
  };
  x = $.x, k = $.y;
  var A7 = s.hasOwnProperty("x"), j7 = s.hasOwnProperty("y"), M7 = P$1, N7 = "top", P7 = window;
  if (f) {
    var F7 = se$1(n), I7 = "clientHeight", L7 = "clientWidth";
    if (F7 === H$1(n) && (F7 = I$1(n), N$1(F7).position !== "static" && l === "absolute" && (I7 = "scrollHeight", L7 = "scrollWidth")), F7 = F7, i === "top" || (i === "left" || i === "right") && o === "end") {
      N7 = R$1;
      var R7 = _ && F7 === P7 && P7.visualViewport ? P7.visualViewport.height : F7[I7];
      k -= R7 - r.height, k *= d ? 1 : -1;
    }
    if (i === "left" || (i === "top" || i === "bottom") && o === "end") {
      M7 = W$1;
      var z7 = _ && F7 === P7 && P7.visualViewport ? P7.visualViewport.width : F7[L7];
      x -= z7 - r.width, x *= d ? 1 : -1;
    }
  }
  var B7 = Object.assign({ position: l }, f && qt$1), V7 = p2 === true ? Vt({
    x,
    y: k
  }) : {
    x,
    y: k
  };
  if (x = V7.x, k = V7.y, d) {
    var H7;
    return Object.assign({}, B7, (H7 = {}, H7[N7] = j7 ? "0" : "", H7[M7] = A7 ? "0" : "", H7.transform = (P7.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + k + "px)" : "translate3d(" + x + "px, " + k + "px, 0)", H7));
  }
  return Object.assign({}, B7, (t = {}, t[N7] = j7 ? k + "px" : "", t[M7] = A7 ? x + "px" : "", t.transform = "", t));
}
function Nt(e) {
  var t = e.state, n = e.options, r = n.gpuAcceleration, i = r === void 0 ? true : r, o = n.adaptive, s = o === void 0 ? true : o, l = n.roundOffsets, d = l === void 0 ? true : l, f = {
    placement: q(t.placement),
    variation: te$1(t.placement),
    popper: t.elements.popper,
    popperRect: t.rects.popper,
    gpuAcceleration: i,
    isFixed: t.options.strategy === "fixed"
  };
  t.modifiersData.popperOffsets != null && (t.styles.popper = Object.assign({}, t.styles.popper, ut$1(Object.assign({}, f, {
    offsets: t.modifiersData.popperOffsets,
    position: t.options.strategy,
    adaptive: s,
    roundOffsets: d
  })))), t.modifiersData.arrow != null && (t.styles.arrow = Object.assign({}, t.styles.arrow, ut$1(Object.assign({}, f, {
    offsets: t.modifiersData.arrow,
    position: "absolute",
    adaptive: false,
    roundOffsets: d
  })))), t.attributes.popper = Object.assign({}, t.attributes.popper, { "data-popper-placement": t.placement });
}
var Me$1 = {
  name: "computeStyles",
  enabled: true,
  phase: "beforeWrite",
  fn: Nt,
  data: {}
};
var ye$1 = { passive: true };
function It$1(e) {
  var t = e.state, n = e.instance, r = e.options, i = r.scroll, o = i === void 0 ? true : i, s = r.resize, l = s === void 0 ? true : s, d = H$1(t.elements.popper), f = [].concat(t.scrollParents.reference, t.scrollParents.popper);
  return o && f.forEach(function(e2) {
    e2.addEventListener("scroll", n.update, ye$1);
  }), l && d.addEventListener("resize", n.update, ye$1), function() {
    o && f.forEach(function(e2) {
      e2.removeEventListener("scroll", n.update, ye$1);
    }), l && d.removeEventListener("resize", n.update, ye$1);
  };
}
var Re$2 = {
  name: "eventListeners",
  enabled: true,
  phase: "write",
  fn: function() {
  },
  effect: It$1,
  data: {}
};
var _t$1 = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function be$1(e) {
  return e.replace(/left|right|bottom|top/g, function(e2) {
    return _t$1[e2];
  });
}
var zt = {
  start: "end",
  end: "start"
};
function lt$2(e) {
  return e.replace(/start|end/g, function(e2) {
    return zt[e2];
  });
}
function We$1(e) {
  var t = H$1(e);
  return {
    scrollLeft: t.pageXOffset,
    scrollTop: t.pageYOffset
  };
}
function Be$1(e) {
  return ee$2(I$1(e)).left + We$1(e).scrollLeft;
}
function Ft(e) {
  var t = H$1(e), n = I$1(e), r = t.visualViewport, i = n.clientWidth, o = n.clientHeight, s = 0, l = 0;
  return r && (i = r.width, o = r.height, /^((?!chrome|android).)*safari/i.test(navigator.userAgent) || (s = r.offsetLeft, l = r.offsetTop)), {
    width: i,
    height: o,
    x: s + Be$1(e),
    y: l
  };
}
function Ut(e) {
  var t = I$1(e), n = We$1(e), r = e.ownerDocument?.body, i = X$1(t.scrollWidth, t.clientWidth, r ? r.scrollWidth : 0, r ? r.clientWidth : 0), o = X$1(t.scrollHeight, t.clientHeight, r ? r.scrollHeight : 0, r ? r.clientHeight : 0), s = -n.scrollLeft + Be$1(e), l = -n.scrollTop;
  return N$1(r || t).direction === "rtl" && (s += X$1(t.clientWidth, r ? r.clientWidth : 0) - i), {
    width: i,
    height: o,
    x: s,
    y: l
  };
}
function Se$1(e) {
  var t = N$1(e), n = t.overflow, r = t.overflowX, i = t.overflowY;
  return /auto|scroll|overlay|hidden/.test(n + i + r);
}
function dt$1(e) {
  return [
    "html",
    "body",
    "#document"
  ].indexOf(C$1(e)) >= 0 ? e.ownerDocument.body : B$1(e) && Se$1(e) ? e : dt$1(ge$2(e));
}
function ce$1(e, t) {
  t === void 0 && (t = []);
  var n = dt$1(e), r = n === e.ownerDocument?.body, i = H$1(n), o = r ? [i].concat(i.visualViewport || [], Se$1(n) ? n : []) : n, s = t.concat(o);
  return r ? s : s.concat(ce$1(ge$2(o)));
}
function Te$1(e) {
  return Object.assign({}, e, {
    left: e.x,
    top: e.y,
    right: e.x + e.width,
    bottom: e.y + e.height
  });
}
function Xt(e) {
  var t = ee$2(e);
  return t.top += e.clientTop, t.left += e.clientLeft, t.bottom = t.top + e.clientHeight, t.right = t.left + e.clientWidth, t.width = e.clientWidth, t.height = e.clientHeight, t.x = t.left, t.y = t.top, t;
}
function ht$1(e, t) {
  return t === "viewport" ? Te$1(Ft(e)) : Q$1(t) ? Xt(t) : Te$1(Ut(I$1(e)));
}
function Yt(e) {
  var t = ce$1(ge$2(e)), n = ["absolute", "fixed"].indexOf(N$1(e).position) >= 0 && B$1(e) ? se$1(e) : e;
  return Q$1(n) ? t.filter(function(e2) {
    return Q$1(e2) && it$3(e2, n) && C$1(e2) !== "body";
  }) : [];
}
function Gt$1(e, t, n) {
  var r = t === "clippingParents" ? Yt(e) : [].concat(t), i = [].concat(r, [n]), o = i[0], s = i.reduce(function(t2, n2) {
    var r2 = ht$1(e, n2);
    return t2.top = X$1(r2.top, t2.top), t2.right = ve$1(r2.right, t2.right), t2.bottom = ve$1(r2.bottom, t2.bottom), t2.left = X$1(r2.left, t2.left), t2;
  }, ht$1(e, o));
  return s.width = s.right - s.left, s.height = s.bottom - s.top, s.x = s.left, s.y = s.top, s;
}
function mt$1(e) {
  var t = e.reference, n = e.element, r = e.placement, i = r ? q(r) : null, o = r ? te$1(r) : null, s = t.x + t.width / 2 - n.width / 2, l = t.y + t.height / 2 - n.height / 2, d;
  switch (i) {
    case "top":
      d = {
        x: s,
        y: t.y - n.height
      };
      break;
    case R$1:
      d = {
        x: s,
        y: t.y + t.height
      };
      break;
    case W$1:
      d = {
        x: t.x + t.width,
        y: l
      };
      break;
    case P$1:
      d = {
        x: t.x - n.width,
        y: l
      };
      break;
    default:
      d = {
        x: t.x,
        y: t.y
      };
  }
  var f = i ? Le$1(i) : null;
  if (f != null) {
    var p2 = f === "y" ? "height" : "width";
    switch (o) {
      case U$1:
        d[f] = d[f] - (t[p2] / 2 - n[p2] / 2);
        break;
      case "end":
        d[f] = d[f] + (t[p2] / 2 - n[p2] / 2);
        break;
    }
  }
  return d;
}
function ne$2(e, t) {
  t === void 0 && (t = {});
  var n = t, r = n.placement, i = r === void 0 ? e.placement : r, o = n.boundary, s = o === void 0 ? Xe$1 : o, l = n.rootBoundary, d = l === void 0 ? je$1 : l, f = n.elementContext, p2 = f === void 0 ? K$1 : f, _ = n.altBoundary, y = _ === void 0 ? false : _, x = n.padding, w = x === void 0 ? 0 : x, k = ft$1(typeof w == "number" ? ct$1(w, G$1) : w), $ = p2 === "popper" ? Ye$1 : K$1, A7 = e.rects.popper, j7 = e.elements[y ? $ : p2], M7 = Gt$1(Q$1(j7) ? j7 : j7.contextElement || I$1(e.elements.popper), s, d), N7 = ee$2(e.elements.reference), P7 = mt$1({
    reference: N7,
    element: A7,
    strategy: "absolute",
    placement: i
  }), F7 = Te$1(Object.assign({}, A7, P7)), I7 = p2 === "popper" ? F7 : N7, L7 = {
    top: M7.top - I7.top + k.top,
    bottom: I7.bottom - M7.bottom + k.bottom,
    left: M7.left - I7.left + k.left,
    right: I7.right - M7.right + k.right
  }, R7 = e.modifiersData.offset;
  if (p2 === "popper" && R7) {
    var z7 = R7[i];
    Object.keys(L7).forEach(function(e2) {
      var t2 = ["right", "bottom"].indexOf(e2) >= 0 ? 1 : -1, n2 = ["top", "bottom"].indexOf(e2) >= 0 ? "y" : "x";
      L7[e2] += z7[n2] * t2;
    });
  }
  return L7;
}
function Jt(e, t) {
  t === void 0 && (t = {});
  var n = t, r = n.placement, i = n.boundary, o = n.rootBoundary, s = n.padding, l = n.flipVariations, d = n.allowedAutoPlacements, f = d === void 0 ? Ee$1 : d, p2 = te$1(r), _ = p2 ? l ? De$1 : De$1.filter(function(e2) {
    return te$1(e2) === p2;
  }) : G$1, y = _.filter(function(e2) {
    return f.indexOf(e2) >= 0;
  });
  y.length === 0 && (y = _);
  var x = y.reduce(function(t2, n2) {
    return t2[n2] = ne$2(e, {
      placement: n2,
      boundary: i,
      rootBoundary: o,
      padding: s
    })[q(n2)], t2;
  }, {});
  return Object.keys(x).sort(function(e2, t2) {
    return x[e2] - x[t2];
  });
}
function Kt(e) {
  if (q(e) === "auto") return [];
  var t = be$1(e);
  return [
    lt$2(e),
    t,
    lt$2(t)
  ];
}
function Qt(e) {
  var t = e.state, n = e.options, r = e.name;
  if (!t.modifiersData[r]._skip) {
    for (var i = n.mainAxis, o = i === void 0 ? true : i, s = n.altAxis, l = s === void 0 ? true : s, d = n.fallbackPlacements, f = n.padding, p2 = n.boundary, _ = n.rootBoundary, y = n.altBoundary, x = n.flipVariations, w = x === void 0 ? true : x, k = n.allowedAutoPlacements, $ = t.options.placement, A7 = q($) === $, j7 = d || (A7 || !w ? [be$1($)] : Kt($)), M7 = [$].concat(j7).reduce(function(e2, n2) {
      return e2.concat(q(n2) === "auto" ? Jt(t, {
        placement: n2,
        boundary: p2,
        rootBoundary: _,
        padding: f,
        flipVariations: w,
        allowedAutoPlacements: k
      }) : n2);
    }, []), N7 = t.rects.reference, P7 = t.rects.popper, F7 = /* @__PURE__ */ new Map(), I7 = true, L7 = M7[0], R7 = 0; R7 < M7.length; R7++) {
      var z7 = M7[R7], B7 = q(z7), V7 = te$1(z7) === U$1, H7 = ["top", R$1].indexOf(B7) >= 0, U7 = H7 ? "width" : "height", W7 = ne$2(t, {
        placement: z7,
        boundary: p2,
        rootBoundary: _,
        altBoundary: y,
        padding: f
      }), G7 = H7 ? V7 ? W$1 : P$1 : V7 ? R$1 : "top";
      N7[U7] > P7[U7] && (G7 = be$1(G7));
      var K7 = be$1(G7), q7 = [];
      if (o && q7.push(W7[B7] <= 0), l && q7.push(W7[G7] <= 0, W7[K7] <= 0), q7.every(function(e2) {
        return e2;
      })) {
        L7 = z7, I7 = false;
        break;
      }
      F7.set(z7, q7);
    }
    if (I7) for (var J7 = w ? 3 : 1, Y7 = function(e2) {
      var t2 = M7.find(function(t3) {
        var n2 = F7.get(t3);
        if (n2) return n2.slice(0, e2).every(function(e3) {
          return e3;
        });
      });
      if (t2) return L7 = t2, "break";
    }, X7 = J7; X7 > 0 && Y7(X7) !== "break"; X7--) ;
    t.placement !== L7 && (t.modifiersData[r]._skip = true, t.placement = L7, t.reset = true);
  }
}
var vt$1 = {
  name: "flip",
  enabled: true,
  phase: "main",
  fn: Qt,
  requiresIfExists: ["offset"],
  data: { _skip: false }
};
function gt$2(e, t, n) {
  return n === void 0 && (n = {
    x: 0,
    y: 0
  }), {
    top: e.top - t.height - n.y,
    right: e.right - t.width + n.x,
    bottom: e.bottom - t.height + n.y,
    left: e.left - t.width - n.x
  };
}
function yt$1(e) {
  return [
    "top",
    W$1,
    R$1,
    P$1
  ].some(function(t) {
    return e[t] >= 0;
  });
}
function Zt$1(e) {
  var t = e.state, n = e.name, r = t.rects.reference, i = t.rects.popper, o = t.modifiersData.preventOverflow, s = ne$2(t, { elementContext: "reference" }), l = ne$2(t, { altBoundary: true }), d = gt$2(s, r), f = gt$2(l, i, o), p2 = yt$1(d), _ = yt$1(f);
  t.modifiersData[n] = {
    referenceClippingOffsets: d,
    popperEscapeOffsets: f,
    isReferenceHidden: p2,
    hasPopperEscaped: _
  }, t.attributes.popper = Object.assign({}, t.attributes.popper, {
    "data-popper-reference-hidden": p2,
    "data-popper-escaped": _
  });
}
var bt = {
  name: "hide",
  enabled: true,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: Zt$1
};
function en(e, t, n) {
  var r = q(e), i = ["left", "top"].indexOf(r) >= 0 ? -1 : 1, o = typeof n == "function" ? n(Object.assign({}, t, { placement: e })) : n, s = o[0], l = o[1];
  return s ||= 0, l = (l || 0) * i, ["left", "right"].indexOf(r) >= 0 ? {
    x: l,
    y: s
  } : {
    x: s,
    y: l
  };
}
function tn(e) {
  var t = e.state, n = e.options, r = e.name, i = n.offset, o = i === void 0 ? [0, 0] : i, s = Ee$1.reduce(function(e2, n2) {
    return e2[n2] = en(n2, t.rects, o), e2;
  }, {}), l = s[t.placement], d = l.x, f = l.y;
  t.modifiersData.popperOffsets != null && (t.modifiersData.popperOffsets.x += d, t.modifiersData.popperOffsets.y += f), t.modifiersData[r] = s;
}
var wt$1 = {
  name: "offset",
  enabled: true,
  phase: "main",
  requires: ["popperOffsets"],
  fn: tn
};
function nn(e) {
  var t = e.state, n = e.name;
  t.modifiersData[n] = mt$1({
    reference: t.rects.reference,
    element: t.rects.popper,
    strategy: "absolute",
    placement: t.placement
  });
}
var He$1 = {
  name: "popperOffsets",
  enabled: true,
  phase: "read",
  fn: nn,
  data: {}
};
function rn(e) {
  return e === "x" ? "y" : "x";
}
function on$1(e) {
  var t = e.state, n = e.options, r = e.name, i = n.mainAxis, o = i === void 0 ? true : i, s = n.altAxis, l = s === void 0 ? false : s, d = n.boundary, f = n.rootBoundary, p2 = n.altBoundary, _ = n.padding, y = n.tether, x = y === void 0 ? true : y, w = n.tetherOffset, k = w === void 0 ? 0 : w, $ = ne$2(t, {
    boundary: d,
    rootBoundary: f,
    padding: _,
    altBoundary: p2
  }), A7 = q(t.placement), j7 = te$1(t.placement), M7 = !j7, N7 = Le$1(A7), P7 = rn(N7), F7 = t.modifiersData.popperOffsets, I7 = t.rects.reference, L7 = t.rects.popper, R7 = typeof k == "function" ? k(Object.assign({}, t.rects, { placement: t.placement })) : k, z7 = typeof R7 == "number" ? {
    mainAxis: R7,
    altAxis: R7
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, R7), B7 = t.modifiersData.offset ? t.modifiersData.offset[t.placement] : null, V7 = {
    x: 0,
    y: 0
  };
  if (F7) {
    if (o) {
      var H7 = N7 === "y" ? "top" : P$1, U7 = N7 === "y" ? R$1 : W$1, W7 = N7 === "y" ? "height" : "width", G7 = F7[N7], K7 = G7 + $[H7], q7 = G7 - $[U7], J7 = x ? -L7[W7] / 2 : 0, Y7 = j7 === "start" ? I7[W7] : L7[W7], X7 = j7 === "start" ? -L7[W7] : -I7[W7], Z7 = t.elements.arrow, Q7 = x && Z7 ? ke$1(Z7) : {
        width: 0,
        height: 0
      }, $7 = t.modifiersData["arrow#persistent"] ? t.modifiersData["arrow#persistent"].padding : st$1(), e9 = $7[H7], t9 = $7[U7], n9 = fe$1(0, I7[W7], Q7[W7]), r9 = M7 ? I7[W7] / 2 - J7 - n9 - e9 - z7.mainAxis : Y7 - n9 - e9 - z7.mainAxis, i9 = M7 ? -I7[W7] / 2 + J7 + n9 + t9 + z7.mainAxis : X7 + n9 + t9 + z7.mainAxis, a9 = t.elements.arrow && se$1(t.elements.arrow), o9 = a9 ? N7 === "y" ? a9.clientTop || 0 : a9.clientLeft || 0 : 0, s9 = B7?.[N7] ?? 0, c9 = G7 + r9 - s9 - o9, l9 = G7 + i9 - s9, u9 = fe$1(x ? ve$1(K7, c9) : K7, G7, x ? X$1(q7, l9) : q7);
      F7[N7] = u9, V7[N7] = u9 - G7;
    }
    if (l) {
      var d9 = N7 === "x" ? "top" : P$1, f9 = N7 === "x" ? R$1 : W$1, p9 = F7[P7], m9 = P7 === "y" ? "height" : "width", h9 = p9 + $[d9], g9 = p9 - $[f9], _9 = ["top", P$1].indexOf(A7) !== -1, v9 = B7?.[P7] ?? 0, y9 = _9 ? h9 : p9 - I7[m9] - L7[m9] - v9 + z7.altAxis, b9 = _9 ? p9 + I7[m9] + L7[m9] - v9 - z7.altAxis : g9, x9 = x && _9 ? St$1(y9, p9, b9) : fe$1(x ? y9 : h9, p9, x ? b9 : g9);
      F7[P7] = x9, V7[P7] = x9 - p9;
    }
    t.modifiersData[r] = V7;
  }
}
var xt = {
  name: "preventOverflow",
  enabled: true,
  phase: "main",
  fn: on$1,
  requiresIfExists: ["offset"]
};
function an(e) {
  return {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  };
}
function sn(e) {
  return e === H$1(e) || !B$1(e) ? We$1(e) : an(e);
}
function fn(e) {
  var t = e.getBoundingClientRect(), n = Z(t.width) / e.offsetWidth || 1, r = Z(t.height) / e.offsetHeight || 1;
  return n !== 1 || r !== 1;
}
function cn$1(e, t, n) {
  n === void 0 && (n = false);
  var r = B$1(t), i = B$1(t) && fn(t), o = I$1(t), s = ee$2(e, i), l = {
    scrollLeft: 0,
    scrollTop: 0
  }, d = {
    x: 0,
    y: 0
  };
  return (r || !r && !n) && ((C$1(t) !== "body" || Se$1(o)) && (l = sn(t)), B$1(t) ? (d = ee$2(t, true), d.x += t.clientLeft, d.y += t.clientTop) : o && (d.x = Be$1(o))), {
    x: s.left + l.scrollLeft - d.x,
    y: s.top + l.scrollTop - d.y,
    width: s.width,
    height: s.height
  };
}
function pn(e) {
  var t = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Set(), r = [];
  e.forEach(function(e2) {
    t.set(e2.name, e2);
  });
  function i(e2) {
    n.add(e2.name), [].concat(e2.requires || [], e2.requiresIfExists || []).forEach(function(e3) {
      if (!n.has(e3)) {
        var r2 = t.get(e3);
        r2 && i(r2);
      }
    }), r.push(e2);
  }
  return e.forEach(function(e2) {
    n.has(e2.name) || i(e2);
  }), r;
}
function un(e) {
  var t = pn(e);
  return ot$1.reduce(function(e2, n) {
    return e2.concat(t.filter(function(e3) {
      return e3.phase === n;
    }));
  }, []);
}
function ln(e) {
  var t;
  return function() {
    return t ||= new Promise(function(n) {
      Promise.resolve().then(function() {
        t = void 0, n(e());
      });
    }), t;
  };
}
function dn(e) {
  var t = e.reduce(function(e2, t2) {
    var n = e2[t2.name];
    return e2[t2.name] = n ? Object.assign({}, n, t2, {
      options: Object.assign({}, n.options, t2.options),
      data: Object.assign({}, n.data, t2.data)
    }) : t2, e2;
  }, {});
  return Object.keys(t).map(function(e2) {
    return t[e2];
  });
}
var Ot = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function $t$1() {
  return ![...arguments].some(function(e) {
    return !(e && typeof e.getBoundingClientRect == "function");
  });
}
function we$1(e) {
  e === void 0 && (e = {});
  var t = e, n = t.defaultModifiers, r = n === void 0 ? [] : n, i = t.defaultOptions, o = i === void 0 ? Ot : i;
  return function(e2, t2, n2) {
    n2 === void 0 && (n2 = o);
    var i2 = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, Ot, o),
      modifiersData: {},
      elements: {
        reference: e2,
        popper: t2
      },
      attributes: {},
      styles: {}
    }, s = [], l = false, d = {
      state: i2,
      setOptions: function(n3) {
        var s2 = typeof n3 == "function" ? n3(i2.options) : n3;
        return p2(), i2.options = Object.assign({}, o, i2.options, s2), i2.scrollParents = {
          reference: Q$1(e2) ? ce$1(e2) : e2.contextElement ? ce$1(e2.contextElement) : [],
          popper: ce$1(t2)
        }, i2.orderedModifiers = un(dn([].concat(r, i2.options.modifiers))).filter(function(e3) {
          return e3.enabled;
        }), f(), d.update();
      },
      forceUpdate: function() {
        if (!l) {
          var e3 = i2.elements, t3 = e3.reference, n3 = e3.popper;
          if ($t$1(t3, n3)) {
            i2.rects = {
              reference: cn$1(t3, se$1(n3), i2.options.strategy === "fixed"),
              popper: ke$1(n3)
            }, i2.reset = false, i2.placement = i2.options.placement, i2.orderedModifiers.forEach(function(e4) {
              return i2.modifiersData[e4.name] = Object.assign({}, e4.data);
            });
            for (var r2 = 0; r2 < i2.orderedModifiers.length; r2++) {
              if (i2.reset === true) {
                i2.reset = false, r2 = -1;
                continue;
              }
              var o3 = i2.orderedModifiers[r2], s2 = o3.fn, f2 = o3.options, p3 = f2 === void 0 ? {} : f2, _ = o3.name;
              typeof s2 == "function" && (i2 = s2({
                state: i2,
                options: p3,
                name: _,
                instance: d
              }) || i2);
            }
          }
        }
      },
      update: ln(function() {
        return new Promise(function(e3) {
          d.forceUpdate(), e3(i2);
        });
      }),
      destroy: function() {
        p2(), l = true;
      }
    };
    if (!$t$1(e2, t2)) return d;
    d.setOptions(n2).then(function(e3) {
      !l && n2.onFirstUpdate && n2.onFirstUpdate(e3);
    });
    function f() {
      i2.orderedModifiers.forEach(function(e3) {
        var t3 = e3.name, n3 = e3.options, r2 = n3 === void 0 ? {} : n3, o3 = e3.effect;
        if (typeof o3 == "function") {
          var l2 = o3({
            state: i2,
            name: t3,
            instance: d,
            options: r2
          });
          s.push(l2 || function() {
          });
        }
      });
    }
    function p2() {
      s.forEach(function(e3) {
        return e3();
      }), s = [];
    }
    return d;
  };
}
we$1(), we$1({ defaultModifiers: [
  Re$2,
  He$1,
  Me$1,
  Ae$1
] });
var yn = we$1({ defaultModifiers: [
  Re$2,
  He$1,
  Me$1,
  Ae$1,
  wt$1,
  vt$1,
  xt,
  pt$1,
  bt
] });
var usePopper = (e, t, n = {}) => {
  let r = {
    name: "updateState",
    enabled: true,
    phase: "write",
    fn: ({ state: e2 }) => {
      let t2 = deriveState(e2);
      Object.assign(s.value, t2);
    },
    requires: ["computeStyles"]
  }, i = computed2(() => {
    let { onFirstUpdate: e2, placement: t2, strategy: i2, modifiers: o3 } = unref(n);
    return {
      onFirstUpdate: e2,
      placement: t2 || "bottom",
      strategy: i2 || "absolute",
      modifiers: [
        ...o3 || [],
        r,
        {
          name: "applyStyles",
          enabled: false
        }
      ]
    };
  }), o = shallowRef(), s = ref({
    styles: {
      popper: {
        position: unref(i).strategy,
        left: "0",
        top: "0"
      },
      arrow: { position: "absolute" }
    },
    attributes: {}
  }), d = () => {
    o.value &&= (o.value.destroy(), void 0);
  };
  return watch2(i, (e2) => {
    let t2 = unref(o);
    t2 && t2.setOptions(e2);
  }, { deep: true }), watch2([e, t], ([e2, t2]) => {
    d(), !(!e2 || !t2) && (o.value = yn(e2, t2, unref(i)));
  }), onBeforeUnmount(() => {
    d();
  }), {
    state: computed2(() => ({ ...unref(o)?.state || {} })),
    styles: computed2(() => unref(s).styles),
    attributes: computed2(() => unref(s).attributes),
    update: () => unref(o)?.update(),
    forceUpdate: () => unref(o)?.forceUpdate(),
    instanceRef: computed2(() => unref(o))
  };
};
function deriveState(e) {
  let t = Object.keys(e.elements);
  return {
    styles: fromPairs_default(t.map((t2) => [t2, e.styles[t2] || {}])),
    attributes: fromPairs_default(t.map((t2) => [t2, e.attributes[t2]]))
  };
}
var useThrottleRender = (e, t = 0) => {
  if (t === 0) return e;
  let n = ref(false), r = 0, i = () => {
    r && clearTimeout(r), r = window.setTimeout(() => {
      n.value = e.value;
    }, t);
  };
  return onMounted(i), watch2(() => e.value, (e2) => {
    e2 ? i() : n.value = e2;
  }), n;
};
function useTimeout() {
  let e, t = (t2, r) => {
    n(), e = window.setTimeout(t2, r);
  }, n = () => window.clearTimeout(e);
  return tryOnScopeDispose(() => n()), {
    registerTimeout: t,
    cancelTimeout: n
  };
}
var defaultIdInjection = {
  prefix: Math.floor(Math.random() * 1e4),
  current: 0
};
var ID_INJECTION_KEY = Symbol("elIdInjection");
var useIdInjection = () => getCurrentInstance() ? inject(ID_INJECTION_KEY, defaultIdInjection) : defaultIdInjection;
var useId2 = (e) => {
  let t = useIdInjection(), n = useGetDerivedNamespace();
  return computed2(() => unref(e) || `${n.value}-id-${t.prefix}-${t.current++}`);
};
var registeredEscapeHandlers = [];
var cachedHandler = (e) => {
  let t = e;
  t.key === EVENT_CODE.esc && registeredEscapeHandlers.forEach((e2) => e2(t));
};
var useEscapeKeydown = (e) => {
  onMounted(() => {
    registeredEscapeHandlers.length === 0 && document.addEventListener("keydown", cachedHandler), isClient && registeredEscapeHandlers.push(e);
  }), onBeforeUnmount(() => {
    registeredEscapeHandlers = registeredEscapeHandlers.filter((t) => t !== e), registeredEscapeHandlers.length === 0 && isClient && document.removeEventListener("keydown", cachedHandler);
  });
};
var cachedContainer;
var usePopperContainerId = () => {
  let e = useGetDerivedNamespace(), t = useIdInjection(), n = computed2(() => `${e.value}-popper-container-${t.prefix}`);
  return {
    id: n,
    selector: computed2(() => `#${n.value}`)
  };
};
var createContainer = (e) => {
  let t = document.createElement("div");
  return t.id = e, document.body.appendChild(t), t;
};
var usePopperContainer = () => {
  let { id: e, selector: t } = usePopperContainerId();
  return onBeforeMount(() => {
    isClient && !cachedContainer && !document.body.querySelector(t.value) && (cachedContainer = createContainer(e.value));
  }), {
    id: e,
    selector: t
  };
};
var useDelayedToggleProps = buildProps({
  showAfter: {
    type: Number,
    default: 0
  },
  hideAfter: {
    type: Number,
    default: 200
  },
  autoClose: {
    type: Number,
    default: 0
  }
});
var useDelayedToggle = ({ showAfter: e, hideAfter: t, autoClose: n, open: r, close: i }) => {
  let { registerTimeout: o } = useTimeout(), { registerTimeout: s, cancelTimeout: l } = useTimeout();
  return {
    onOpen: (t2) => {
      o(() => {
        r(t2);
        let e2 = unref(n);
        isNumber(e2) && e2 > 0 && s(() => {
          i(t2);
        }, e2);
      }, unref(e));
    },
    onClose: (e2) => {
      l(), o(() => {
        i(e2);
      }, unref(t));
    }
  };
};
var FORWARD_REF_INJECTION_KEY = Symbol("elForwardRef");
var useForwardRef = (e) => {
  provide(FORWARD_REF_INJECTION_KEY, { setForwardRef: (t) => {
    e.value = t;
  } });
};
var useForwardRefDirective = (e) => ({
  mounted(t) {
    e(t);
  },
  updated(t) {
    e(t);
  },
  unmounted() {
    e(null);
  }
});
var zIndex = ref(0);
var defaultInitialZIndex = 2e3;
var zIndexContextKey = Symbol("zIndexContextKey");
var useZIndex = (e) => {
  let t = e || (getCurrentInstance() ? inject(zIndexContextKey, void 0) : void 0), n = computed2(() => {
    let e2 = unref(t);
    return isNumber(e2) ? e2 : defaultInitialZIndex;
  }), r = computed2(() => n.value + zIndex.value);
  return {
    initialZIndex: n,
    currentZIndex: r,
    nextZIndex: () => (zIndex.value++, r.value)
  };
};
function useCursor(e) {
  let t = ref();
  function n() {
    if (e.value == null) return;
    let { selectionStart: n2, selectionEnd: r2, value: i } = e.value;
    n2 == null || r2 == null || (t.value = {
      selectionStart: n2,
      selectionEnd: r2,
      value: i,
      beforeTxt: i.slice(0, Math.max(0, n2)),
      afterTxt: i.slice(Math.max(0, r2))
    });
  }
  function r() {
    if (e.value == null || t.value == null) return;
    let { value: n2 } = e.value, { beforeTxt: r2, afterTxt: i, selectionStart: o } = t.value;
    if (r2 == null || i == null || o == null) return;
    let s = n2.length;
    if (n2.endsWith(i)) s = n2.length - i.length;
    else if (n2.startsWith(r2)) s = r2.length;
    else {
      let e2 = r2[o - 1], t2 = n2.indexOf(e2, o - 1);
      t2 !== -1 && (s = t2 + 1);
    }
    e.value.setSelectionRange(s, s);
  }
  return [n, r];
}
var useSizeProp = buildProp({
  type: String,
  values: componentSizes,
  required: false
});
var SIZE_INJECTION_KEY = Symbol("size");
var useGlobalSize = () => {
  let e = inject(SIZE_INJECTION_KEY, {});
  return computed2(() => unref(e.size) || "");
};
function useFocusController(e, { afterFocus: t, beforeBlur: n, afterBlur: r } = {}) {
  let { emit: i } = getCurrentInstance(), o = shallowRef(), s = ref(false);
  return watch2(o, (e2) => {
    e2 && e2.setAttribute("tabindex", "-1");
  }), useEventListener(o, "click", () => {
    var t2;
    (t2 = e.value) == null || t2.focus();
  }), {
    wrapperRef: o,
    isFocused: s,
    handleFocus: (e2) => {
      s.value || (s.value = true, i("focus", e2), t?.());
    },
    handleBlur: (e2) => {
      isFunction$3(n) && n(e2) || e2.relatedTarget && o.value?.contains(e2.relatedTarget) || (s.value = false, i("blur", e2), r?.());
    }
  };
}
var configProviderContextKey = Symbol();
var globalConfig = ref();
function useGlobalConfig(e, t = void 0) {
  let n = getCurrentInstance() ? inject(configProviderContextKey, globalConfig) : globalConfig;
  return e ? computed2(() => n.value?.[e] ?? t) : n;
}
var _export_sfc = (e, t) => {
  let n = e.__vccOpts || e;
  for (let [e2, r] of t) n[e2] = r;
  return n;
};
var iconProps = buildProps({
  size: { type: definePropType([Number, String]) },
  color: { type: String }
});
var ElIcon = withInstall(_export_sfc(defineComponent({
  ...defineComponent({
    name: "ElIcon",
    inheritAttrs: false
  }),
  props: iconProps,
  setup(e) {
    let t = e, n = useNamespace("icon"), r = computed2(() => {
      let { size: e2, color: n2 } = t;
      return !e2 && !n2 ? {} : {
        fontSize: isUndefined(e2) ? void 0 : addUnit(e2),
        "--color": n2
      };
    });
    return (e2, t2) => (openBlock(), createElementBlock("i", mergeProps({
      class: unref(n).b(),
      style: unref(r)
    }, e2.$attrs), [renderSlot(e2.$slots, "default")], 16));
  }
}), [["__file", "/home/runner/work/element-plus/element-plus/packages/components/icon/src/icon.vue"]]));
var formContextKey = Symbol("formContextKey");
var formItemContextKey = Symbol("formItemContextKey");
var useFormSize = (e, t = {}) => {
  let n = ref(void 0), r = t.prop ? n : useProp("size"), i = t.global ? n : useGlobalSize(), o = t.form ? { size: void 0 } : inject(formContextKey, void 0), s = t.formItem ? { size: void 0 } : inject(formItemContextKey, void 0);
  return computed2(() => r.value || unref(e) || s?.size || o?.size || i.value || "");
};
var useFormDisabled = (e) => {
  let t = useProp("disabled"), n = inject(formContextKey, void 0);
  return computed2(() => t.value || unref(e) || n?.disabled || false);
};
var useFormItem = () => ({
  form: inject(formContextKey, void 0),
  formItem: inject(formItemContextKey, void 0)
});
var useFormItemInputId = (e, { formItemContext: t, disableIdGeneration: n, disableIdManagement: r }) => {
  n ||= ref(false), r ||= ref(false);
  let i = ref(), o, s = computed2(() => !!(!e.label && t && t.inputIds && t.inputIds?.length <= 1));
  return onMounted(() => {
    o = watch2([toRef(e, "id"), n], ([e2, n2]) => {
      let o3 = e2 ?? (n2 ? void 0 : useId2().value);
      o3 !== i.value && (t?.removeInputId && (i.value && t.removeInputId(i.value), !r?.value && !n2 && o3 && t.addInputId(o3)), i.value = o3);
    }, { immediate: true });
  }), onUnmounted(() => {
    o && o(), t?.removeInputId && i.value && t.removeInputId(i.value);
  }), {
    isLabeledByFormItem: s,
    inputId: i
  };
};
var hiddenTextarea = void 0;
var HIDDEN_STYLE = `
  height:0 !important;
  visibility:hidden !important;
  ${isFirefox() ? "" : "overflow:hidden !important;"}
  position:absolute !important;
  z-index:-1000 !important;
  top:0 !important;
  right:0 !important;
`;
var CONTEXT_STYLE = [
  "letter-spacing",
  "line-height",
  "padding-top",
  "padding-bottom",
  "font-family",
  "font-weight",
  "font-size",
  "text-rendering",
  "text-transform",
  "width",
  "text-indent",
  "padding-left",
  "padding-right",
  "border-width",
  "box-sizing"
];
function calculateNodeStyling(e) {
  let t = window.getComputedStyle(e), n = t.getPropertyValue("box-sizing"), r = Number.parseFloat(t.getPropertyValue("padding-bottom")) + Number.parseFloat(t.getPropertyValue("padding-top")), i = Number.parseFloat(t.getPropertyValue("border-bottom-width")) + Number.parseFloat(t.getPropertyValue("border-top-width"));
  return {
    contextStyle: CONTEXT_STYLE.map((e2) => `${e2}:${t.getPropertyValue(e2)}`).join(";"),
    paddingSize: r,
    borderSize: i,
    boxSizing: n
  };
}
function calcTextareaHeight(e, t = 1, n) {
  var r;
  hiddenTextarea || (hiddenTextarea = document.createElement("textarea"), document.body.appendChild(hiddenTextarea));
  let { paddingSize: i, borderSize: o, boxSizing: s, contextStyle: l } = calculateNodeStyling(e);
  hiddenTextarea.setAttribute("style", `${l};${HIDDEN_STYLE}`), hiddenTextarea.value = e.value || e.placeholder || "";
  let d = hiddenTextarea.scrollHeight, f = {};
  s === "border-box" ? d += o : s === "content-box" && (d -= i), hiddenTextarea.value = "";
  let p2 = hiddenTextarea.scrollHeight - i;
  if (isNumber(t)) {
    let e2 = p2 * t;
    s === "border-box" && (e2 = e2 + i + o), d = Math.max(e2, d), f.minHeight = `${e2}px`;
  }
  if (isNumber(n)) {
    let e2 = p2 * n;
    s === "border-box" && (e2 = e2 + i + o), d = Math.min(e2, d);
  }
  return f.height = `${d}px`, (r = hiddenTextarea.parentNode) == null || r.removeChild(hiddenTextarea), hiddenTextarea = void 0, f;
}
var inputProps = buildProps({
  id: {
    type: String,
    default: void 0
  },
  size: useSizeProp,
  disabled: Boolean,
  modelValue: {
    type: definePropType([
      String,
      Number,
      Object
    ]),
    default: ""
  },
  type: {
    type: String,
    default: "text"
  },
  resize: {
    type: String,
    values: [
      "none",
      "both",
      "horizontal",
      "vertical"
    ]
  },
  autosize: {
    type: definePropType([Boolean, Object]),
    default: false
  },
  autocomplete: {
    type: String,
    default: "off"
  },
  formatter: { type: Function },
  parser: { type: Function },
  placeholder: { type: String },
  form: { type: String },
  readonly: {
    type: Boolean,
    default: false
  },
  clearable: {
    type: Boolean,
    default: false
  },
  showPassword: {
    type: Boolean,
    default: false
  },
  showWordLimit: {
    type: Boolean,
    default: false
  },
  suffixIcon: { type: iconPropType },
  prefixIcon: { type: iconPropType },
  containerRole: {
    type: String,
    default: void 0
  },
  label: {
    type: String,
    default: void 0
  },
  tabindex: {
    type: [String, Number],
    default: 0
  },
  validateEvent: {
    type: Boolean,
    default: true
  },
  inputStyle: {
    type: definePropType([
      Object,
      Array,
      String
    ]),
    default: () => mutable({})
  },
  autofocus: {
    type: Boolean,
    default: false
  }
});
var inputEmits = {
  [UPDATE_MODEL_EVENT]: (e) => isString$2(e),
  input: (e) => isString$2(e),
  change: (e) => isString$2(e),
  focus: (e) => e instanceof FocusEvent,
  blur: (e) => e instanceof FocusEvent,
  clear: () => true,
  mouseleave: (e) => e instanceof MouseEvent,
  mouseenter: (e) => e instanceof MouseEvent,
  keydown: (e) => e instanceof Event,
  compositionstart: (e) => e instanceof CompositionEvent,
  compositionupdate: (e) => e instanceof CompositionEvent,
  compositionend: (e) => e instanceof CompositionEvent
};
var _hoisted_1$19 = ["role"];
var _hoisted_2$13 = [
  "id",
  "type",
  "disabled",
  "formatter",
  "parser",
  "readonly",
  "autocomplete",
  "tabindex",
  "aria-label",
  "placeholder",
  "form",
  "autofocus"
];
var _hoisted_3$4 = [
  "id",
  "tabindex",
  "disabled",
  "readonly",
  "autocomplete",
  "aria-label",
  "placeholder",
  "form",
  "autofocus"
];
var ElInput = withInstall(_export_sfc(defineComponent({
  ...defineComponent({
    name: "ElInput",
    inheritAttrs: false
  }),
  props: inputProps,
  emits: inputEmits,
  setup(e, { expose: t, emit: r }) {
    let i = e, o = useAttrs(), s = useSlots(), d = computed2(() => {
      let e2 = {};
      return i.containerRole === "combobox" && (e2["aria-haspopup"] = o["aria-haspopup"], e2["aria-owns"] = o["aria-owns"], e2["aria-expanded"] = o["aria-expanded"]), e2;
    }), x = computed2(() => [
      i.type === "textarea" ? I7.b() : F7.b(),
      F7.m(N7.value),
      F7.is("disabled", P7.value),
      F7.is("exceed", E9.value),
      {
        [F7.b("group")]: s.prepend || s.append,
        [F7.bm("group", "append")]: s.append,
        [F7.bm("group", "prepend")]: s.prepend,
        [F7.m("prefix")]: s.prefix || i.prefixIcon,
        [F7.m("suffix")]: s.suffix || i.suffixIcon || i.clearable || i.showPassword,
        [F7.bm("suffix", "password-clear")]: v9.value && b9.value
      },
      o.class
    ]), w = computed2(() => [F7.e("wrapper"), F7.is("focus", Q7.value)]), k = useAttrs$1({ excludeKeys: computed2(() => Object.keys(d.value)) }), { form: A7, formItem: j7 } = useFormItem(), { inputId: M7 } = useFormItemInputId(i, { formItemContext: j7 }), N7 = useFormSize(), P7 = useFormDisabled(), F7 = useNamespace("input"), I7 = useNamespace("textarea"), B7 = shallowRef(), H7 = shallowRef(), U7 = ref(false), W7 = ref(false), K7 = ref(false), q7 = ref(), Y7 = shallowRef(i.inputStyle), X7 = computed2(() => B7.value || H7.value), { wrapperRef: Z7, isFocused: Q7, handleFocus: $7, handleBlur: t9 } = useFocusController(X7, { afterBlur() {
      var e2;
      i.validateEvent && ((e2 = j7?.validate) == null || e2.call(j7, "blur").catch((e3) => void 0));
    } }), r9 = computed2(() => A7?.statusIcon ?? false), i9 = computed2(() => j7?.validateState || ""), c9 = computed2(() => i9.value && ValidateComponentsMap[i9.value]), u9 = computed2(() => K7.value ? view_default : hide_default), d9 = computed2(() => [o.style, i.inputStyle]), m9 = computed2(() => [
      i.inputStyle,
      Y7.value,
      { resize: i.resize }
    ]), g9 = computed2(() => isNil_default(i.modelValue) ? "" : String(i.modelValue)), v9 = computed2(() => i.clearable && !P7.value && !i.readonly && !!g9.value && (Q7.value || U7.value)), b9 = computed2(() => i.showPassword && !P7.value && !i.readonly && !!g9.value && (!!g9.value || Q7.value)), C9 = computed2(() => i.showWordLimit && !!k.value.maxlength && (i.type === "text" || i.type === "textarea") && !P7.value && !i.readonly && !i.showPassword), T9 = computed2(() => g9.value.length), E9 = computed2(() => !!C9.value && T9.value > Number(k.value.maxlength)), D9 = computed2(() => !!s.suffix || !!i.suffixIcon || v9.value || i.showPassword || C9.value || !!i9.value && r9.value), [O9, k9] = useCursor(B7);
    useResizeObserver(H7, (e2) => {
      if (j9(), !C9.value || i.resize !== "both") return;
      let { width: t2 } = e2[0].contentRect;
      q7.value = { right: `calc(100% - ${t2 + 15 + 6}px)` };
    });
    let A9 = () => {
      let { type: e2, autosize: t2 } = i;
      if (!(!isClient || e2 !== "textarea" || !H7.value)) if (t2) {
        let e3 = isObject$4(t2) ? t2.minRows : void 0, n = isObject$4(t2) ? t2.maxRows : void 0, r2 = calcTextareaHeight(H7.value, e3, n);
        Y7.value = {
          overflowY: "hidden",
          ...r2
        }, nextTick(() => {
          H7.value.offsetHeight, Y7.value = r2;
        });
      } else Y7.value = { minHeight: calcTextareaHeight(H7.value).minHeight };
    }, j9 = /* @__PURE__ */ ((e2) => {
      let t2 = false;
      return () => {
        t2 || !i.autosize || H7.value?.offsetParent !== null && (e2(), t2 = true);
      };
    })(A9), M9 = () => {
      let e2 = X7.value, t2 = i.formatter ? i.formatter(g9.value) : g9.value;
      !e2 || e2.value === t2 || (e2.value = t2);
    }, N9 = async (e2) => {
      O9();
      let { value: t2 } = e2.target;
      if (i.formatter && (t2 = i.parser ? i.parser(t2) : t2), !W7.value) {
        if (t2 === g9.value) {
          M9();
          return;
        }
        r(UPDATE_MODEL_EVENT, t2), r("input", t2), await nextTick(), M9(), k9();
      }
    }, P9 = (e2) => {
      r("change", e2.target.value);
    }, F9 = (e2) => {
      r("compositionstart", e2), W7.value = true;
    }, I9 = (e2) => {
      r("compositionupdate", e2);
      let t2 = e2.target?.value;
      W7.value = !isKorean(t2[t2.length - 1] || "");
    }, L9 = (e2) => {
      r("compositionend", e2), W7.value && (W7.value = false, N9(e2));
    }, R9 = () => {
      K7.value = !K7.value, z9();
    }, z9 = async () => {
      var e2;
      await nextTick(), (e2 = X7.value) == null || e2.focus();
    }, B9 = () => X7.value?.blur(), V9 = (e2) => {
      U7.value = false, r("mouseleave", e2);
    }, H9 = (e2) => {
      U7.value = true, r("mouseenter", e2);
    }, U9 = (e2) => {
      r("keydown", e2);
    }, W9 = () => {
      var e2;
      (e2 = X7.value) == null || e2.select();
    }, G9 = () => {
      r(UPDATE_MODEL_EVENT, ""), r("change", ""), r("clear"), r("input", "");
    };
    return watch2(() => i.modelValue, () => {
      var e2;
      nextTick(() => A9()), i.validateEvent && ((e2 = j7?.validate) == null || e2.call(j7, "change").catch((e3) => void 0));
    }), watch2(g9, () => M9()), watch2(() => i.type, async () => {
      await nextTick(), M9(), A9();
    }), onMounted(() => {
      !i.formatter && i.parser, M9(), nextTick(A9);
    }), t({
      input: B7,
      textarea: H7,
      ref: X7,
      textareaStyle: m9,
      autosize: toRef(i, "autosize"),
      focus: z9,
      blur: B9,
      select: W9,
      clear: G9,
      resizeTextarea: A9
    }), (e2, t2) => withDirectives((openBlock(), createElementBlock("div", mergeProps(unref(d), {
      class: unref(x),
      style: unref(d9),
      role: e2.containerRole,
      onMouseenter: H9,
      onMouseleave: V9
    }), [createCommentVNode(" input "), e2.type === "textarea" ? (openBlock(), createElementBlock(Fragment, { key: 1 }, [
      createCommentVNode(" textarea "),
      createBaseVNode("textarea", mergeProps({
        id: unref(M7),
        ref_key: "textarea",
        ref: H7,
        class: unref(I7).e("inner")
      }, unref(k), {
        tabindex: e2.tabindex,
        disabled: unref(P7),
        readonly: e2.readonly,
        autocomplete: e2.autocomplete,
        style: unref(m9),
        "aria-label": e2.label,
        placeholder: e2.placeholder,
        form: i.form,
        autofocus: i.autofocus,
        onCompositionstart: F9,
        onCompositionupdate: I9,
        onCompositionend: L9,
        onInput: N9,
        onFocus: t2[2] ||= (...e3) => unref($7) && unref($7)(...e3),
        onBlur: t2[3] ||= (...e3) => unref(t9) && unref(t9)(...e3),
        onChange: P9,
        onKeydown: U9
      }), null, 16, _hoisted_3$4),
      unref(C9) ? (openBlock(), createElementBlock("span", {
        key: 0,
        style: normalizeStyle(q7.value),
        class: normalizeClass(unref(F7).e("count"))
      }, toDisplayString(unref(T9)) + " / " + toDisplayString(unref(k).maxlength), 7)) : createCommentVNode("v-if", true)
    ], 64)) : (openBlock(), createElementBlock(Fragment, { key: 0 }, [
      createCommentVNode(" prepend slot "),
      e2.$slots.prepend ? (openBlock(), createElementBlock("div", {
        key: 0,
        class: normalizeClass(unref(F7).be("group", "prepend"))
      }, [renderSlot(e2.$slots, "prepend")], 2)) : createCommentVNode("v-if", true),
      createBaseVNode("div", {
        ref_key: "wrapperRef",
        ref: Z7,
        class: normalizeClass(unref(w))
      }, [
        createCommentVNode(" prefix slot "),
        e2.$slots.prefix || e2.prefixIcon ? (openBlock(), createElementBlock("span", {
          key: 0,
          class: normalizeClass(unref(F7).e("prefix"))
        }, [createBaseVNode("span", { class: normalizeClass(unref(F7).e("prefix-inner")) }, [renderSlot(e2.$slots, "prefix"), e2.prefixIcon ? (openBlock(), createBlock(unref(ElIcon), {
          key: 0,
          class: normalizeClass(unref(F7).e("icon"))
        }, {
          default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(e2.prefixIcon)))]),
          _: 1
        }, 8, ["class"])) : createCommentVNode("v-if", true)], 2)], 2)) : createCommentVNode("v-if", true),
        createBaseVNode("input", mergeProps({
          id: unref(M7),
          ref_key: "input",
          ref: B7,
          class: unref(F7).e("inner")
        }, unref(k), {
          type: e2.showPassword ? K7.value ? "text" : "password" : e2.type,
          disabled: unref(P7),
          formatter: e2.formatter,
          parser: e2.parser,
          readonly: e2.readonly,
          autocomplete: e2.autocomplete,
          tabindex: e2.tabindex,
          "aria-label": e2.label,
          placeholder: e2.placeholder,
          style: e2.inputStyle,
          form: i.form,
          autofocus: i.autofocus,
          onCompositionstart: F9,
          onCompositionupdate: I9,
          onCompositionend: L9,
          onInput: N9,
          onFocus: t2[0] ||= (...e3) => unref($7) && unref($7)(...e3),
          onBlur: t2[1] ||= (...e3) => unref(t9) && unref(t9)(...e3),
          onChange: P9,
          onKeydown: U9
        }), null, 16, _hoisted_2$13),
        createCommentVNode(" suffix slot "),
        unref(D9) ? (openBlock(), createElementBlock("span", {
          key: 1,
          class: normalizeClass(unref(F7).e("suffix"))
        }, [createBaseVNode("span", { class: normalizeClass(unref(F7).e("suffix-inner")) }, [
          !unref(v9) || !unref(b9) || !unref(C9) ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [renderSlot(e2.$slots, "suffix"), e2.suffixIcon ? (openBlock(), createBlock(unref(ElIcon), {
            key: 0,
            class: normalizeClass(unref(F7).e("icon"))
          }, {
            default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(e2.suffixIcon)))]),
            _: 1
          }, 8, ["class"])) : createCommentVNode("v-if", true)], 64)) : createCommentVNode("v-if", true),
          unref(v9) ? (openBlock(), createBlock(unref(ElIcon), {
            key: 1,
            class: normalizeClass([unref(F7).e("icon"), unref(F7).e("clear")]),
            onMousedown: withModifiers(unref(NOOP2), ["prevent"]),
            onClick: G9
          }, {
            default: withCtx(() => [createVNode(unref(circle_close_default))]),
            _: 1
          }, 8, ["class", "onMousedown"])) : createCommentVNode("v-if", true),
          unref(b9) ? (openBlock(), createBlock(unref(ElIcon), {
            key: 2,
            class: normalizeClass([unref(F7).e("icon"), unref(F7).e("password")]),
            onClick: R9
          }, {
            default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(unref(u9))))]),
            _: 1
          }, 8, ["class"])) : createCommentVNode("v-if", true),
          unref(C9) ? (openBlock(), createElementBlock("span", {
            key: 3,
            class: normalizeClass(unref(F7).e("count"))
          }, [createBaseVNode("span", { class: normalizeClass(unref(F7).e("count-inner")) }, toDisplayString(unref(T9)) + " / " + toDisplayString(unref(k).maxlength), 3)], 2)) : createCommentVNode("v-if", true),
          unref(i9) && unref(c9) && unref(r9) ? (openBlock(), createBlock(unref(ElIcon), {
            key: 4,
            class: normalizeClass([
              unref(F7).e("icon"),
              unref(F7).e("validateIcon"),
              unref(F7).is("loading", unref(i9) === "validating")
            ])
          }, {
            default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(unref(c9))))]),
            _: 1
          }, 8, ["class"])) : createCommentVNode("v-if", true)
        ], 2)], 2)) : createCommentVNode("v-if", true)
      ], 2),
      createCommentVNode(" append slot "),
      e2.$slots.append ? (openBlock(), createElementBlock("div", {
        key: 1,
        class: normalizeClass(unref(F7).be("group", "append"))
      }, [renderSlot(e2.$slots, "append")], 2)) : createCommentVNode("v-if", true)
    ], 64))], 16, _hoisted_1$19)), [[vShow, e2.type !== "hidden"]]);
  }
}), [["__file", "/home/runner/work/element-plus/element-plus/packages/components/input/src/input.vue"]]));
var BAR_MAP = {
  vertical: {
    offset: "offsetHeight",
    scroll: "scrollTop",
    scrollSize: "scrollHeight",
    size: "height",
    key: "vertical",
    axis: "Y",
    client: "clientY",
    direction: "top"
  },
  horizontal: {
    offset: "offsetWidth",
    scroll: "scrollLeft",
    scrollSize: "scrollWidth",
    size: "width",
    key: "horizontal",
    axis: "X",
    client: "clientX",
    direction: "left"
  }
};
var renderThumbStyle = ({ move: e, size: t, bar: n }) => ({
  [n.size]: t,
  transform: `translate${n.axis}(${e}%)`
});
var scrollbarContextKey = Symbol("scrollbarContextKey");
var thumbProps = buildProps({
  vertical: Boolean,
  size: String,
  move: Number,
  ratio: {
    type: Number,
    required: true
  },
  always: Boolean
});
var COMPONENT_NAME$2 = "Thumb";
var Thumb = _export_sfc(defineComponent({
  __name: "thumb",
  props: thumbProps,
  setup(e) {
    let t = e, n = inject(scrollbarContextKey), r = useNamespace("scrollbar");
    n || throwError(COMPONENT_NAME$2, "can not inject scrollbar context");
    let i = ref(), s = ref(), d = ref({}), p2 = ref(false), _ = false, x = false, w = isClient ? document.onselectstart : null, k = computed2(() => BAR_MAP[t.vertical ? "vertical" : "horizontal"]), $ = computed2(() => renderThumbStyle({
      size: t.size,
      move: t.move,
      bar: k.value
    })), A7 = computed2(() => i.value[k.value.offset] ** 2 / n.wrapElement[k.value.scrollSize] / t.ratio / s.value[k.value.offset]), j7 = (e2) => {
      var t2;
      if (e2.stopPropagation(), e2.ctrlKey || [1, 2].includes(e2.button)) return;
      (t2 = window.getSelection()) == null || t2.removeAllRanges(), N7(e2);
      let n2 = e2.currentTarget;
      n2 && (d.value[k.value.axis] = n2[k.value.offset] - (e2[k.value.client] - n2.getBoundingClientRect()[k.value.direction]));
    }, M7 = (e2) => {
      if (!s.value || !i.value || !n.wrapElement) return;
      let t2 = (Math.abs(e2.target.getBoundingClientRect()[k.value.direction] - e2[k.value.client]) - s.value[k.value.offset] / 2) * 100 * A7.value / i.value[k.value.offset];
      n.wrapElement[k.value.scroll] = t2 * n.wrapElement[k.value.scrollSize] / 100;
    }, N7 = (e2) => {
      e2.stopImmediatePropagation(), _ = true, document.addEventListener("mousemove", F7), document.addEventListener("mouseup", I7), w = document.onselectstart, document.onselectstart = () => false;
    }, F7 = (e2) => {
      if (!i.value || !s.value || _ === false) return;
      let t2 = d.value[k.value.axis];
      if (!t2) return;
      let r2 = ((i.value.getBoundingClientRect()[k.value.direction] - e2[k.value.client]) * -1 - (s.value[k.value.offset] - t2)) * 100 * A7.value / i.value[k.value.offset];
      n.wrapElement[k.value.scroll] = r2 * n.wrapElement[k.value.scrollSize] / 100;
    }, I7 = () => {
      _ = false, d.value[k.value.axis] = 0, document.removeEventListener("mousemove", F7), document.removeEventListener("mouseup", I7), B7(), x && (p2.value = false);
    }, L7 = () => {
      x = false, p2.value = !!t.size;
    }, R7 = () => {
      x = true, p2.value = _;
    };
    onBeforeUnmount(() => {
      B7(), document.removeEventListener("mouseup", I7);
    });
    let B7 = () => {
      document.onselectstart !== w && (document.onselectstart = w);
    };
    return useEventListener(toRef(n, "scrollbarElement"), "mousemove", L7), useEventListener(toRef(n, "scrollbarElement"), "mouseleave", R7), (e2, t2) => (openBlock(), createBlock(Transition, {
      name: unref(r).b("fade"),
      persisted: ""
    }, {
      default: withCtx(() => [withDirectives(createBaseVNode("div", {
        ref_key: "instance",
        ref: i,
        class: normalizeClass([unref(r).e("bar"), unref(r).is(unref(k).key)]),
        onMousedown: M7
      }, [createBaseVNode("div", {
        ref_key: "thumb",
        ref: s,
        class: normalizeClass(unref(r).e("thumb")),
        style: normalizeStyle(unref($)),
        onMousedown: j7
      }, null, 38)], 34), [[vShow, e2.always || p2.value]])]),
      _: 1
    }, 8, ["name"]));
  }
}), [["__file", "/home/runner/work/element-plus/element-plus/packages/components/scrollbar/src/thumb.vue"]]);
var Bar = _export_sfc(defineComponent({
  __name: "bar",
  props: buildProps({
    always: {
      type: Boolean,
      default: true
    },
    width: String,
    height: String,
    ratioX: {
      type: Number,
      default: 1
    },
    ratioY: {
      type: Number,
      default: 1
    }
  }),
  setup(e, { expose: t }) {
    let r = e, i = ref(0), o = ref(0);
    return t({ handleScroll: (e2) => {
      if (e2) {
        let t2 = e2.offsetHeight - 4, n = e2.offsetWidth - 4;
        o.value = e2.scrollTop * 100 / t2 * r.ratioY, i.value = e2.scrollLeft * 100 / n * r.ratioX;
      }
    } }), (e2, t2) => (openBlock(), createElementBlock(Fragment, null, [createVNode(Thumb, {
      move: i.value,
      ratio: e2.ratioX,
      size: e2.width,
      always: e2.always
    }, null, 8, [
      "move",
      "ratio",
      "size",
      "always"
    ]), createVNode(Thumb, {
      move: o.value,
      ratio: e2.ratioY,
      size: e2.height,
      vertical: "",
      always: e2.always
    }, null, 8, [
      "move",
      "ratio",
      "size",
      "always"
    ])], 64));
  }
}), [["__file", "/home/runner/work/element-plus/element-plus/packages/components/scrollbar/src/bar.vue"]]);
var scrollbarProps = buildProps({
  height: {
    type: [String, Number],
    default: ""
  },
  maxHeight: {
    type: [String, Number],
    default: ""
  },
  native: {
    type: Boolean,
    default: false
  },
  wrapStyle: {
    type: definePropType([
      String,
      Object,
      Array
    ]),
    default: ""
  },
  wrapClass: {
    type: [String, Array],
    default: ""
  },
  viewClass: {
    type: [String, Array],
    default: ""
  },
  viewStyle: {
    type: [
      String,
      Array,
      Object
    ],
    default: ""
  },
  noresize: Boolean,
  tag: {
    type: String,
    default: "div"
  },
  always: Boolean,
  minSize: {
    type: Number,
    default: 20
  },
  id: String,
  role: String,
  ariaLabel: String,
  ariaOrientation: {
    type: String,
    values: ["horizontal", "vertical"]
  }
});
var scrollbarEmits = { scroll: ({ scrollTop: e, scrollLeft: t }) => [e, t].every(isNumber) };
var ElScrollbar = withInstall(_export_sfc(defineComponent({
  ...defineComponent({ name: "ElScrollbar" }),
  props: scrollbarProps,
  emits: scrollbarEmits,
  setup(e, { expose: t, emit: n }) {
    let r = e, i = useNamespace("scrollbar"), o, s, d = ref(), x = ref(), w = ref(), k = ref("0"), $ = ref("0"), A7 = ref(), j7 = ref(1), M7 = ref(1), N7 = computed2(() => {
      let e2 = {};
      return r.height && (e2.height = addUnit(r.height)), r.maxHeight && (e2.maxHeight = addUnit(r.maxHeight)), [r.wrapStyle, e2];
    }), P7 = computed2(() => [
      r.wrapClass,
      i.e("wrap"),
      { [i.em("wrap", "hidden-default")]: !r.native }
    ]), F7 = computed2(() => [i.e("view"), r.viewClass]), I7 = () => {
      var e2;
      x.value && ((e2 = A7.value) == null || e2.handleScroll(x.value), n("scroll", {
        scrollTop: x.value.scrollTop,
        scrollLeft: x.value.scrollLeft
      }));
    };
    function L7(e2, t2) {
      isObject$4(e2) ? x.value.scrollTo(e2) : isNumber(e2) && isNumber(t2) && x.value.scrollTo(e2, t2);
    }
    let B7 = (e2) => {
      isNumber(e2) && (x.value.scrollTop = e2);
    }, H7 = (e2) => {
      isNumber(e2) && (x.value.scrollLeft = e2);
    }, U7 = () => {
      if (!x.value) return;
      let e2 = x.value.offsetHeight - 4, t2 = x.value.offsetWidth - 4, n2 = e2 ** 2 / x.value.scrollHeight, i2 = t2 ** 2 / x.value.scrollWidth, o3 = Math.max(n2, r.minSize), s2 = Math.max(i2, r.minSize);
      j7.value = n2 / (e2 - n2) / (o3 / (e2 - o3)), M7.value = i2 / (t2 - i2) / (s2 / (t2 - s2)), $.value = o3 + 4 < e2 ? `${o3}px` : "", k.value = s2 + 4 < t2 ? `${s2}px` : "";
    };
    return watch2(() => r.noresize, (e2) => {
      e2 ? (o?.(), s?.()) : ({ stop: o } = useResizeObserver(w, U7), s = useEventListener("resize", U7));
    }, { immediate: true }), watch2(() => [r.maxHeight, r.height], () => {
      r.native || nextTick(() => {
        var e2;
        U7(), x.value && ((e2 = A7.value) == null || e2.handleScroll(x.value));
      });
    }), provide(scrollbarContextKey, reactive({
      scrollbarElement: d,
      wrapElement: x
    })), onMounted(() => {
      r.native || nextTick(() => {
        U7();
      });
    }), onUpdated(() => U7()), t({
      wrapRef: x,
      update: U7,
      scrollTo: L7,
      setScrollTop: B7,
      setScrollLeft: H7,
      handleScroll: I7
    }), (e2, t2) => (openBlock(), createElementBlock("div", {
      ref_key: "scrollbarRef",
      ref: d,
      class: normalizeClass(unref(i).b())
    }, [createBaseVNode("div", {
      ref_key: "wrapRef",
      ref: x,
      class: normalizeClass(unref(P7)),
      style: normalizeStyle(unref(N7)),
      onScroll: I7
    }, [(openBlock(), createBlock(resolveDynamicComponent(e2.tag), {
      id: e2.id,
      ref_key: "resizeRef",
      ref: w,
      class: normalizeClass(unref(F7)),
      style: normalizeStyle(e2.viewStyle),
      role: e2.role,
      "aria-label": e2.ariaLabel,
      "aria-orientation": e2.ariaOrientation
    }, {
      default: withCtx(() => [renderSlot(e2.$slots, "default")]),
      _: 3
    }, 8, [
      "id",
      "class",
      "style",
      "role",
      "aria-label",
      "aria-orientation"
    ]))], 38), e2.native ? createCommentVNode("v-if", true) : (openBlock(), createBlock(Bar, {
      key: 0,
      ref_key: "barRef",
      ref: A7,
      height: $.value,
      width: k.value,
      always: e2.always,
      "ratio-x": M7.value,
      "ratio-y": j7.value
    }, null, 8, [
      "height",
      "width",
      "always",
      "ratio-x",
      "ratio-y"
    ]))], 2));
  }
}), [["__file", "/home/runner/work/element-plus/element-plus/packages/components/scrollbar/src/scrollbar.vue"]]));
var POPPER_INJECTION_KEY = Symbol("popper");
var POPPER_CONTENT_INJECTION_KEY = Symbol("popperContent");
var popperProps = buildProps({ role: {
  type: String,
  values: [
    "dialog",
    "grid",
    "group",
    "listbox",
    "menu",
    "navigation",
    "tooltip",
    "tree"
  ],
  default: "tooltip"
} });
var Popper = _export_sfc(defineComponent({
  ...defineComponent({
    name: "ElPopper",
    inheritAttrs: false
  }),
  props: popperProps,
  setup(e, { expose: t }) {
    let n = e, r = {
      triggerRef: ref(),
      popperInstanceRef: ref(),
      contentRef: ref(),
      referenceRef: ref(),
      role: computed2(() => n.role)
    };
    return t(r), provide(POPPER_INJECTION_KEY, r), (e2, t2) => renderSlot(e2.$slots, "default");
  }
}), [["__file", "/home/runner/work/element-plus/element-plus/packages/components/popper/src/popper.vue"]]);
var popperArrowProps = buildProps({ arrowOffset: {
  type: Number,
  default: 5
} });
var ElPopperArrow = _export_sfc(defineComponent({
  ...defineComponent({
    name: "ElPopperArrow",
    inheritAttrs: false
  }),
  props: popperArrowProps,
  setup(e, { expose: t }) {
    let n = e, r = useNamespace("popper"), { arrowOffset: i, arrowRef: o, arrowStyle: s } = inject(POPPER_CONTENT_INJECTION_KEY, void 0);
    return watch2(() => n.arrowOffset, (e2) => {
      i.value = e2;
    }), onBeforeUnmount(() => {
      o.value = void 0;
    }), t({ arrowRef: o }), (e2, t2) => (openBlock(), createElementBlock("span", {
      ref_key: "arrowRef",
      ref: o,
      class: normalizeClass(unref(r).e("arrow")),
      style: normalizeStyle(unref(s)),
      "data-popper-arrow": ""
    }, null, 6));
  }
}), [["__file", "/home/runner/work/element-plus/element-plus/packages/components/popper/src/arrow.vue"]]);
var OnlyChild = defineComponent({
  name: "ElOnlyChild",
  setup(e, { slots: t, attrs: n }) {
    let r = useForwardRefDirective(inject(FORWARD_REF_INJECTION_KEY)?.setForwardRef ?? NOOP2);
    return () => {
      let e2 = t.default?.call(t, n);
      if (!e2 || e2.length > 1) return null;
      let i = findFirstLegitChild(e2);
      return i ? withDirectives(cloneVNode(i, n), [[r]]) : null;
    };
  }
});
function findFirstLegitChild(e) {
  if (!e) return null;
  let r = e;
  for (let e2 of r) {
    if (isObject$4(e2)) switch (e2.type) {
      case Comment:
        continue;
      case Text:
      case "svg":
        return wrapTextContent(e2);
      case Fragment:
        return findFirstLegitChild(e2.children);
      default:
        return e2;
    }
    return wrapTextContent(e2);
  }
  return null;
}
function wrapTextContent(e) {
  return createVNode("span", { class: useNamespace("only-child").e("content") }, [e]);
}
var popperTriggerProps = buildProps({
  virtualRef: { type: definePropType(Object) },
  virtualTriggering: Boolean,
  onMouseenter: { type: definePropType(Function) },
  onMouseleave: { type: definePropType(Function) },
  onClick: { type: definePropType(Function) },
  onKeydown: { type: definePropType(Function) },
  onFocus: { type: definePropType(Function) },
  onBlur: { type: definePropType(Function) },
  onContextmenu: { type: definePropType(Function) },
  id: String,
  open: Boolean
});
var ElPopperTrigger = _export_sfc(defineComponent({
  ...defineComponent({
    name: "ElPopperTrigger",
    inheritAttrs: false
  }),
  props: popperTriggerProps,
  setup(e, { expose: t }) {
    let n = e, { role: r, triggerRef: i } = inject(POPPER_INJECTION_KEY, void 0);
    useForwardRef(i);
    let o = computed2(() => d.value ? n.id : void 0), s = computed2(() => {
      if (r && r.value === "tooltip") return n.open && n.id ? n.id : void 0;
    }), d = computed2(() => {
      if (r && r.value !== "tooltip") return r.value;
    }), _ = computed2(() => d.value ? `${n.open}` : void 0), y;
    return onMounted(() => {
      watch2(() => n.virtualRef, (e2) => {
        e2 && (i.value = unrefElement(e2));
      }, { immediate: true }), watch2(i, (e2, t2) => {
        y?.(), y = void 0, isElement(e2) && ([
          "onMouseenter",
          "onMouseleave",
          "onClick",
          "onKeydown",
          "onFocus",
          "onBlur",
          "onContextmenu"
        ].forEach((r2) => {
          var i2;
          let o3 = n[r2];
          o3 && (e2.addEventListener(r2.slice(2).toLowerCase(), o3), (i2 = t2?.removeEventListener) == null || i2.call(t2, r2.slice(2).toLowerCase(), o3));
        }), y = watch2([
          o,
          s,
          d,
          _
        ], (t3) => {
          [
            "aria-controls",
            "aria-describedby",
            "aria-haspopup",
            "aria-expanded"
          ].forEach((n2, r2) => {
            isNil_default(t3[r2]) ? e2.removeAttribute(n2) : e2.setAttribute(n2, t3[r2]);
          });
        }, { immediate: true })), isElement(t2) && [
          "aria-controls",
          "aria-describedby",
          "aria-haspopup",
          "aria-expanded"
        ].forEach((e3) => t2.removeAttribute(e3));
      }, { immediate: true });
    }), onBeforeUnmount(() => {
      y?.(), y = void 0;
    }), t({ triggerRef: i }), (e2, t2) => e2.virtualTriggering ? createCommentVNode("v-if", true) : (openBlock(), createBlock(unref(OnlyChild), mergeProps({ key: 0 }, e2.$attrs, {
      "aria-controls": unref(o),
      "aria-describedby": unref(s),
      "aria-expanded": unref(_),
      "aria-haspopup": unref(d)
    }), {
      default: withCtx(() => [renderSlot(e2.$slots, "default")]),
      _: 3
    }, 16, [
      "aria-controls",
      "aria-describedby",
      "aria-expanded",
      "aria-haspopup"
    ]));
  }
}), [["__file", "/home/runner/work/element-plus/element-plus/packages/components/popper/src/trigger.vue"]]);
var FOCUS_AFTER_TRAPPED = "focus-trap.focus-after-trapped";
var FOCUS_AFTER_RELEASED = "focus-trap.focus-after-released";
var FOCUSOUT_PREVENTED = "focus-trap.focusout-prevented";
var FOCUS_AFTER_TRAPPED_OPTS = {
  cancelable: true,
  bubbles: false
};
var FOCUSOUT_PREVENTED_OPTS = {
  cancelable: true,
  bubbles: false
};
var ON_TRAP_FOCUS_EVT = "focusAfterTrapped";
var ON_RELEASE_FOCUS_EVT = "focusAfterReleased";
var FOCUS_TRAP_INJECTION_KEY = Symbol("elFocusTrap");
var focusReason = ref();
var lastUserFocusTimestamp = ref(0);
var lastAutomatedFocusTimestamp = ref(0);
var focusReasonUserCount = 0;
var obtainAllFocusableElements = (e) => {
  let t = [], n = document.createTreeWalker(e, NodeFilter.SHOW_ELEMENT, { acceptNode: (e2) => {
    let t2 = e2.tagName === "INPUT" && e2.type === "hidden";
    return e2.disabled || e2.hidden || t2 ? NodeFilter.FILTER_SKIP : e2.tabIndex >= 0 || e2 === document.activeElement ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
  } });
  for (; n.nextNode(); ) t.push(n.currentNode);
  return t;
};
var getVisibleElement = (e, t) => {
  for (let n of e) if (!isHidden(n, t)) return n;
};
var isHidden = (e, t) => {
  if (getComputedStyle(e).visibility === "hidden") return true;
  for (; e; ) {
    if (t && e === t) return false;
    if (getComputedStyle(e).display === "none") return true;
    e = e.parentElement;
  }
  return false;
};
var getEdges = (e) => {
  let t = obtainAllFocusableElements(e);
  return [getVisibleElement(t, e), getVisibleElement(t.reverse(), e)];
};
var isSelectable = (e) => e instanceof HTMLInputElement && "select" in e;
var tryFocus = (e, t) => {
  if (e && e.focus) {
    let n = document.activeElement;
    e.focus({ preventScroll: true }), lastAutomatedFocusTimestamp.value = window.performance.now(), e !== n && isSelectable(e) && t && e.select();
  }
};
function removeFromStack(e, t) {
  let n = [...e], r = e.indexOf(t);
  return r !== -1 && n.splice(r, 1), n;
}
var createFocusableStack = () => {
  let e = [];
  return {
    push: (t) => {
      let n = e[0];
      n && t !== n && n.pause(), e = removeFromStack(e, t), e.unshift(t);
    },
    remove: (t) => {
      var n, r;
      e = removeFromStack(e, t), (r = (n = e[0])?.resume) == null || r.call(n);
    }
  };
};
var focusFirstDescendant = (e, t = false) => {
  let n = document.activeElement;
  for (let r of e) if (tryFocus(r, t), document.activeElement !== n) return;
};
var focusableStack = createFocusableStack();
var isFocusCausedByUserEvent = () => lastUserFocusTimestamp.value > lastAutomatedFocusTimestamp.value;
var notifyFocusReasonPointer = () => {
  focusReason.value = "pointer", lastUserFocusTimestamp.value = window.performance.now();
};
var notifyFocusReasonKeydown = () => {
  focusReason.value = "keyboard", lastUserFocusTimestamp.value = window.performance.now();
};
var useFocusReason = () => (onMounted(() => {
  focusReasonUserCount === 0 && (document.addEventListener("mousedown", notifyFocusReasonPointer), document.addEventListener("touchstart", notifyFocusReasonPointer), document.addEventListener("keydown", notifyFocusReasonKeydown)), focusReasonUserCount++;
}), onBeforeUnmount(() => {
  focusReasonUserCount--, focusReasonUserCount <= 0 && (document.removeEventListener("mousedown", notifyFocusReasonPointer), document.removeEventListener("touchstart", notifyFocusReasonPointer), document.removeEventListener("keydown", notifyFocusReasonKeydown));
}), {
  focusReason,
  lastUserFocusTimestamp,
  lastAutomatedFocusTimestamp
});
var createFocusOutPreventedEvent = (e) => new CustomEvent(FOCUSOUT_PREVENTED, {
  ...FOCUSOUT_PREVENTED_OPTS,
  detail: e
});
var _sfc_main$9 = defineComponent({
  name: "ElFocusTrap",
  inheritAttrs: false,
  props: {
    loop: Boolean,
    trapped: Boolean,
    focusTrapEl: Object,
    focusStartEl: {
      type: [Object, String],
      default: "first"
    }
  },
  emits: [
    ON_TRAP_FOCUS_EVT,
    ON_RELEASE_FOCUS_EVT,
    "focusin",
    "focusout",
    "focusout-prevented",
    "release-requested"
  ],
  setup(e, { emit: t }) {
    let n = ref(), r, i, { focusReason: o } = useFocusReason();
    useEscapeKeydown((n2) => {
      e.trapped && !s.paused && t("release-requested", n2);
    });
    let s = {
      paused: false,
      pause() {
        this.paused = true;
      },
      resume() {
        this.paused = false;
      }
    }, l = (n2) => {
      if (!e.loop && !e.trapped || s.paused) return;
      let { key: r2, altKey: i2, ctrlKey: l2, metaKey: d2, currentTarget: f2, shiftKey: p3 } = n2, { loop: _2 } = e, y2 = r2 === EVENT_CODE.tab && !i2 && !l2 && !d2, x2 = document.activeElement;
      if (y2 && x2) {
        let e2 = f2, [r3, i3] = getEdges(e2);
        if (r3 && i3) {
          if (!p3 && x2 === i3) {
            let e3 = createFocusOutPreventedEvent({ focusReason: o.value });
            t("focusout-prevented", e3), e3.defaultPrevented || (n2.preventDefault(), _2 && tryFocus(r3, true));
          } else if (p3 && [r3, e2].includes(x2)) {
            let e3 = createFocusOutPreventedEvent({ focusReason: o.value });
            t("focusout-prevented", e3), e3.defaultPrevented || (n2.preventDefault(), _2 && tryFocus(i3, true));
          }
        } else if (x2 === e2) {
          let e3 = createFocusOutPreventedEvent({ focusReason: o.value });
          t("focusout-prevented", e3), e3.defaultPrevented || n2.preventDefault();
        }
      }
    };
    provide(FOCUS_TRAP_INJECTION_KEY, {
      focusTrapRef: n,
      onKeydown: l
    }), watch2(() => e.focusTrapEl, (e2) => {
      e2 && (n.value = e2);
    }, { immediate: true }), watch2([n], ([e2], [t2]) => {
      e2 && (e2.addEventListener("keydown", l), e2.addEventListener("focusin", p2), e2.addEventListener("focusout", _)), t2 && (t2.removeEventListener("keydown", l), t2.removeEventListener("focusin", p2), t2.removeEventListener("focusout", _));
    });
    let d = (e2) => {
      t(ON_TRAP_FOCUS_EVT, e2);
    }, f = (e2) => t(ON_RELEASE_FOCUS_EVT, e2), p2 = (o3) => {
      let l2 = unref(n);
      if (!l2) return;
      let d2 = o3.target, f2 = o3.relatedTarget, p3 = d2 && l2.contains(d2);
      e.trapped || f2 && l2.contains(f2) || (r = f2), p3 && t("focusin", o3), !s.paused && e.trapped && (p3 ? i = d2 : tryFocus(i, true));
    }, _ = (r2) => {
      let l2 = unref(n);
      if (!(s.paused || !l2)) if (e.trapped) {
        let n2 = r2.relatedTarget;
        !isNil_default(n2) && !l2.contains(n2) && setTimeout(() => {
          if (!s.paused && e.trapped) {
            let e2 = createFocusOutPreventedEvent({ focusReason: o.value });
            t("focusout-prevented", e2), e2.defaultPrevented || tryFocus(i, true);
          }
        }, 0);
      } else {
        let e2 = r2.target;
        e2 && l2.contains(e2) || t("focusout", r2);
      }
    };
    async function y() {
      await nextTick();
      let t2 = unref(n);
      if (t2) {
        focusableStack.push(s);
        let n2 = t2.contains(document.activeElement) ? r : document.activeElement;
        if (r = n2, !t2.contains(n2)) {
          let r2 = new Event(FOCUS_AFTER_TRAPPED, FOCUS_AFTER_TRAPPED_OPTS);
          t2.addEventListener(FOCUS_AFTER_TRAPPED, d), t2.dispatchEvent(r2), r2.defaultPrevented || nextTick(() => {
            let r3 = e.focusStartEl;
            isString$2(r3) || (tryFocus(r3), document.activeElement !== r3 && (r3 = "first")), r3 === "first" && focusFirstDescendant(obtainAllFocusableElements(t2), true), (document.activeElement === n2 || r3 === "container") && tryFocus(t2);
          });
        }
      }
    }
    function x() {
      let e2 = unref(n);
      if (e2) {
        e2.removeEventListener(FOCUS_AFTER_TRAPPED, d);
        let t2 = new CustomEvent(FOCUS_AFTER_RELEASED, {
          ...FOCUS_AFTER_TRAPPED_OPTS,
          detail: { focusReason: o.value }
        });
        e2.addEventListener(FOCUS_AFTER_RELEASED, f), e2.dispatchEvent(t2), !t2.defaultPrevented && (o.value == "keyboard" || !isFocusCausedByUserEvent() || e2.contains(document.activeElement)) && tryFocus(r ?? document.body), e2.removeEventListener(FOCUS_AFTER_RELEASED, f), focusableStack.remove(s);
      }
    }
    return onMounted(() => {
      e.trapped && y(), watch2(() => e.trapped, (e2) => {
        e2 ? y() : x();
      });
    }), onBeforeUnmount(() => {
      e.trapped && x();
    }), { onKeydown: l };
  }
});
function _sfc_render$9(e, t, n, r, i, o) {
  return renderSlot(e.$slots, "default", { handleKeydown: e.onKeydown });
}
var ElFocusTrap = _export_sfc(_sfc_main$9, [["render", _sfc_render$9], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/focus-trap/src/focus-trap.vue"]]);
var popperContentProps = buildProps({
  ...buildProps({
    boundariesPadding: {
      type: Number,
      default: 0
    },
    fallbackPlacements: {
      type: definePropType(Array),
      default: void 0
    },
    gpuAcceleration: {
      type: Boolean,
      default: true
    },
    offset: {
      type: Number,
      default: 12
    },
    placement: {
      type: String,
      values: Ee$1,
      default: "bottom"
    },
    popperOptions: {
      type: definePropType(Object),
      default: () => ({})
    },
    strategy: {
      type: String,
      values: ["fixed", "absolute"],
      default: "absolute"
    }
  }),
  id: String,
  style: { type: definePropType([
    String,
    Array,
    Object
  ]) },
  className: { type: definePropType([
    String,
    Array,
    Object
  ]) },
  effect: {
    type: String,
    default: "dark"
  },
  visible: Boolean,
  enterable: {
    type: Boolean,
    default: true
  },
  pure: Boolean,
  focusOnShow: {
    type: Boolean,
    default: false
  },
  trapping: {
    type: Boolean,
    default: false
  },
  popperClass: { type: definePropType([
    String,
    Array,
    Object
  ]) },
  popperStyle: { type: definePropType([
    String,
    Array,
    Object
  ]) },
  referenceEl: { type: definePropType(Object) },
  triggerTargetEl: { type: definePropType(Object) },
  stopPopperMouseEvent: {
    type: Boolean,
    default: true
  },
  ariaLabel: {
    type: String,
    default: void 0
  },
  virtualTriggering: Boolean,
  zIndex: Number
});
var popperContentEmits = {
  mouseenter: (e) => e instanceof MouseEvent,
  mouseleave: (e) => e instanceof MouseEvent,
  focus: () => true,
  blur: () => true,
  close: () => true
};
var buildPopperOptions = (e, t = []) => {
  let { placement: n, strategy: r, popperOptions: i } = e, o = {
    placement: n,
    strategy: r,
    ...i,
    modifiers: [...genModifiers(e), ...t]
  };
  return deriveExtraModifiers(o, i?.modifiers), o;
};
var unwrapMeasurableEl = (e) => {
  if (isClient) return unrefElement(e);
};
function genModifiers(e) {
  let { offset: t, gpuAcceleration: n, fallbackPlacements: r } = e;
  return [
    {
      name: "offset",
      options: { offset: [0, t ?? 12] }
    },
    {
      name: "preventOverflow",
      options: { padding: {
        top: 2,
        bottom: 2,
        left: 5,
        right: 5
      } }
    },
    {
      name: "flip",
      options: {
        padding: 5,
        fallbackPlacements: r
      }
    },
    {
      name: "computeStyles",
      options: { gpuAcceleration: n }
    }
  ];
}
function deriveExtraModifiers(e, t) {
  t && (e.modifiers = [...e.modifiers, ...t ?? []]);
}
var DEFAULT_ARROW_OFFSET = 0;
var usePopperContent = (e) => {
  let { popperInstanceRef: t, contentRef: n, triggerRef: r, role: i } = inject(POPPER_INJECTION_KEY, void 0), o = ref(), s = ref(), d = computed2(() => ({
    name: "eventListeners",
    enabled: !!e.visible
  })), f = computed2(() => {
    let e2 = unref(o), t2 = unref(s) ?? DEFAULT_ARROW_OFFSET;
    return {
      name: "arrow",
      enabled: !isUndefined_default(e2),
      options: {
        element: e2,
        padding: t2
      }
    };
  }), p2 = computed2(() => ({
    onFirstUpdate: () => {
      k();
    },
    ...buildPopperOptions(e, [unref(f), unref(d)])
  })), _ = computed2(() => unwrapMeasurableEl(e.referenceEl) || unref(r)), { attributes: y, state: x, styles: w, update: k, forceUpdate: $, instanceRef: A7 } = usePopper(_, n, p2);
  return watch2(A7, (e2) => t.value = e2), onMounted(() => {
    watch2(() => unref(_)?.getBoundingClientRect(), () => {
      k();
    });
  }), {
    attributes: y,
    arrowRef: o,
    contentRef: n,
    instanceRef: A7,
    state: x,
    styles: w,
    role: i,
    forceUpdate: $,
    update: k
  };
};
var usePopperContentDOM = (e, { attributes: t, styles: n, role: r }) => {
  let { nextZIndex: i } = useZIndex(), o = useNamespace("popper"), s = computed2(() => unref(t).popper), d = ref(isNumber(e.zIndex) ? e.zIndex : i()), f = computed2(() => [
    o.b(),
    o.is("pure", e.pure),
    o.is(e.effect),
    e.popperClass
  ]), p2 = computed2(() => [
    { zIndex: unref(d) },
    unref(n).popper,
    e.popperStyle || {}
  ]);
  return {
    ariaModal: computed2(() => r.value === "dialog" ? "false" : void 0),
    arrowStyle: computed2(() => unref(n).arrow || {}),
    contentAttrs: s,
    contentClass: f,
    contentStyle: p2,
    contentZIndex: d,
    updateZIndex: () => {
      d.value = isNumber(e.zIndex) ? e.zIndex : i();
    }
  };
};
var usePopperContentFocusTrap = (e, t) => {
  let n = ref(false), r = ref();
  return {
    focusStartRef: r,
    trapped: n,
    onFocusAfterReleased: (e2) => {
      e2.detail?.focusReason !== "pointer" && (r.value = "first", t("blur"));
    },
    onFocusAfterTrapped: () => {
      t("focus");
    },
    onFocusInTrap: (t2) => {
      e.visible && !n.value && (t2.target && (r.value = t2.target), n.value = true);
    },
    onFocusoutPrevented: (t2) => {
      e.trapping || (t2.detail.focusReason === "pointer" && t2.preventDefault(), n.value = false);
    },
    onReleaseRequested: () => {
      n.value = false, t("close");
    }
  };
};
var ElPopperContent = _export_sfc(defineComponent({
  ...defineComponent({ name: "ElPopperContent" }),
  props: popperContentProps,
  emits: popperContentEmits,
  setup(e, { expose: t, emit: n }) {
    let r = e, { focusStartRef: i, trapped: o, onFocusAfterReleased: s, onFocusAfterTrapped: l, onFocusInTrap: d, onFocusoutPrevented: f, onReleaseRequested: p2 } = usePopperContentFocusTrap(r, n), { attributes: y, arrowRef: x, contentRef: w, styles: k, instanceRef: A7, role: j7, update: M7 } = usePopperContent(r), { ariaModal: N7, arrowStyle: F7, contentAttrs: I7, contentClass: R7, contentStyle: z7, updateZIndex: B7 } = usePopperContentDOM(r, {
      styles: k,
      attributes: y,
      role: j7
    }), V7 = inject(formItemContextKey, void 0);
    provide(POPPER_CONTENT_INJECTION_KEY, {
      arrowStyle: F7,
      arrowRef: x,
      arrowOffset: ref()
    }), V7 && (V7.addInputId || V7.removeInputId) && provide(formItemContextKey, {
      ...V7,
      addInputId: NOOP2,
      removeInputId: NOOP2
    });
    let H7, W7 = (e2 = true) => {
      M7(), e2 && B7();
    }, K7 = () => {
      W7(false), r.visible && r.focusOnShow ? o.value = true : r.visible === false && (o.value = false);
    };
    return onMounted(() => {
      watch2(() => r.triggerTargetEl, (e2, t2) => {
        H7?.(), H7 = void 0;
        let n2 = unref(e2 || w.value), i2 = unref(t2 || w.value);
        isElement(n2) && (H7 = watch2([
          j7,
          () => r.ariaLabel,
          N7,
          () => r.id
        ], (e3) => {
          [
            "role",
            "aria-label",
            "aria-modal",
            "id"
          ].forEach((t3, r2) => {
            isNil_default(e3[r2]) ? n2.removeAttribute(t3) : n2.setAttribute(t3, e3[r2]);
          });
        }, { immediate: true })), i2 !== n2 && isElement(i2) && [
          "role",
          "aria-label",
          "aria-modal",
          "id"
        ].forEach((e3) => {
          i2.removeAttribute(e3);
        });
      }, { immediate: true }), watch2(() => r.visible, K7, { immediate: true });
    }), onBeforeUnmount(() => {
      H7?.(), H7 = void 0;
    }), t({
      popperContentRef: w,
      popperInstanceRef: A7,
      updatePopper: W7,
      contentStyle: z7
    }), (e2, t2) => (openBlock(), createElementBlock("div", mergeProps({
      ref_key: "contentRef",
      ref: w
    }, unref(I7), {
      style: unref(z7),
      class: unref(R7),
      tabindex: "-1",
      onMouseenter: t2[0] ||= (t3) => e2.$emit("mouseenter", t3),
      onMouseleave: t2[1] ||= (t3) => e2.$emit("mouseleave", t3)
    }), [createVNode(unref(ElFocusTrap), {
      trapped: unref(o),
      "trap-on-focus-in": true,
      "focus-trap-el": unref(w),
      "focus-start-el": unref(i),
      onFocusAfterTrapped: unref(l),
      onFocusAfterReleased: unref(s),
      onFocusin: unref(d),
      onFocusoutPrevented: unref(f),
      onReleaseRequested: unref(p2)
    }, {
      default: withCtx(() => [renderSlot(e2.$slots, "default")]),
      _: 3
    }, 8, [
      "trapped",
      "focus-trap-el",
      "focus-start-el",
      "onFocusAfterTrapped",
      "onFocusAfterReleased",
      "onFocusin",
      "onFocusoutPrevented",
      "onReleaseRequested"
    ])], 16));
  }
}), [["__file", "/home/runner/work/element-plus/element-plus/packages/components/popper/src/content.vue"]]);
var ElPopper = withInstall(Popper);
var TOOLTIP_INJECTION_KEY = Symbol("elTooltip");
var useTooltipContentProps = buildProps({
  ...useDelayedToggleProps,
  ...popperContentProps,
  appendTo: { type: definePropType([String, Object]) },
  content: {
    type: String,
    default: ""
  },
  rawContent: {
    type: Boolean,
    default: false
  },
  persistent: Boolean,
  ariaLabel: String,
  visible: {
    type: definePropType(Boolean),
    default: null
  },
  transition: String,
  teleported: {
    type: Boolean,
    default: true
  },
  disabled: Boolean
});
var useTooltipTriggerProps = buildProps({
  ...popperTriggerProps,
  disabled: Boolean,
  trigger: {
    type: definePropType([String, Array]),
    default: "hover"
  },
  triggerKeys: {
    type: definePropType(Array),
    default: () => [EVENT_CODE.enter, EVENT_CODE.space]
  }
});
var { useModelToggleProps: useTooltipModelToggleProps, useModelToggleEmits: useTooltipModelToggleEmits, useModelToggle: useTooltipModelToggle } = createModelToggleComposable("visible");
var useTooltipProps = buildProps({
  ...popperProps,
  ...useTooltipModelToggleProps,
  ...useTooltipContentProps,
  ...useTooltipTriggerProps,
  ...popperArrowProps,
  showArrow: {
    type: Boolean,
    default: true
  }
});
var tooltipEmits = [
  ...useTooltipModelToggleEmits,
  "before-show",
  "before-hide",
  "show",
  "hide",
  "open",
  "close"
];
var isTriggerType = (e, t) => isArray$5(e) ? e.includes(t) : e === t;
var whenTrigger = (e, t, n) => (r) => {
  isTriggerType(unref(e), t) && n(r);
};
var ElTooltipTrigger = _export_sfc(defineComponent({
  ...defineComponent({ name: "ElTooltipTrigger" }),
  props: useTooltipTriggerProps,
  setup(e, { expose: t }) {
    let n = e, r = useNamespace("tooltip"), { controlled: i, id: o, open: s, onOpen: l, onClose: d, onToggle: p2 } = inject(TOOLTIP_INJECTION_KEY, void 0), _ = ref(null), y = () => {
      if (unref(i) || n.disabled) return true;
    }, x = toRef(n, "trigger"), w = composeEventHandlers(y, whenTrigger(x, "hover", l)), k = composeEventHandlers(y, whenTrigger(x, "hover", d)), $ = composeEventHandlers(y, whenTrigger(x, "click", (e2) => {
      e2.button === 0 && p2(e2);
    })), A7 = composeEventHandlers(y, whenTrigger(x, "focus", l)), j7 = composeEventHandlers(y, whenTrigger(x, "focus", d)), M7 = composeEventHandlers(y, whenTrigger(x, "contextmenu", (e2) => {
      e2.preventDefault(), p2(e2);
    })), N7 = composeEventHandlers(y, (e2) => {
      let { code: t2 } = e2;
      n.triggerKeys.includes(t2) && (e2.preventDefault(), p2(e2));
    });
    return t({ triggerRef: _ }), (e2, t2) => (openBlock(), createBlock(unref(ElPopperTrigger), {
      id: unref(o),
      "virtual-ref": e2.virtualRef,
      open: unref(s),
      "virtual-triggering": e2.virtualTriggering,
      class: normalizeClass(unref(r).e("trigger")),
      onBlur: unref(j7),
      onClick: unref($),
      onContextmenu: unref(M7),
      onFocus: unref(A7),
      onMouseenter: unref(w),
      onMouseleave: unref(k),
      onKeydown: unref(N7)
    }, {
      default: withCtx(() => [renderSlot(e2.$slots, "default")]),
      _: 3
    }, 8, [
      "id",
      "virtual-ref",
      "open",
      "virtual-triggering",
      "class",
      "onBlur",
      "onClick",
      "onContextmenu",
      "onFocus",
      "onMouseenter",
      "onMouseleave",
      "onKeydown"
    ]));
  }
}), [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tooltip/src/trigger.vue"]]);
var ElTooltipContent = _export_sfc(defineComponent({
  ...defineComponent({
    name: "ElTooltipContent",
    inheritAttrs: false
  }),
  props: useTooltipContentProps,
  setup(e, { expose: t }) {
    let n = e, { selector: i } = usePopperContainerId(), s = useNamespace("tooltip"), d = ref(null), _ = ref(false), { controlled: y, id: x, open: w, trigger: k, onClose: A7, onOpen: j7, onShow: M7, onHide: N7, onBeforeShow: F7, onBeforeHide: I7 } = inject(TOOLTIP_INJECTION_KEY, void 0), R7 = computed2(() => n.transition || `${s.namespace.value}-fade-in-linear`), z7 = computed2(() => n.persistent);
    onBeforeUnmount(() => {
      _.value = true;
    });
    let B7 = computed2(() => unref(z7) ? true : unref(w)), V7 = computed2(() => n.disabled ? false : unref(w)), H7 = computed2(() => n.appendTo || i.value), W7 = computed2(() => n.style ?? {}), G7 = computed2(() => !unref(w)), K7 = () => {
      N7();
    }, q7 = () => {
      if (unref(y)) return true;
    }, Y7 = composeEventHandlers(q7, () => {
      n.enterable && unref(k) === "hover" && j7();
    }), X7 = composeEventHandlers(q7, () => {
      unref(k) === "hover" && A7();
    }), Z7 = () => {
      var e2, t2;
      (t2 = (e2 = d.value)?.updatePopper) == null || t2.call(e2), F7?.();
    }, Q7 = () => {
      I7?.();
    }, $7 = () => {
      M7(), r9 = onClickOutside(computed2(() => d.value?.popperContentRef), () => {
        unref(y) || unref(k) !== "hover" && A7();
      });
    }, t9 = () => {
      n.virtualTriggering || A7();
    }, r9;
    return watch2(() => unref(w), (e2) => {
      e2 || r9?.();
    }, { flush: "post" }), watch2(() => n.content, () => {
      var e2, t2;
      (t2 = (e2 = d.value)?.updatePopper) == null || t2.call(e2);
    }), t({ contentRef: d }), (e2, t2) => (openBlock(), createBlock(Teleport, {
      disabled: !e2.teleported,
      to: unref(H7)
    }, [createVNode(Transition, {
      name: unref(R7),
      onAfterLeave: K7,
      onBeforeEnter: Z7,
      onAfterEnter: $7,
      onBeforeLeave: Q7
    }, {
      default: withCtx(() => [unref(B7) ? withDirectives((openBlock(), createBlock(unref(ElPopperContent), mergeProps({
        key: 0,
        id: unref(x),
        ref_key: "contentRef",
        ref: d
      }, e2.$attrs, {
        "aria-label": e2.ariaLabel,
        "aria-hidden": unref(G7),
        "boundaries-padding": e2.boundariesPadding,
        "fallback-placements": e2.fallbackPlacements,
        "gpu-acceleration": e2.gpuAcceleration,
        offset: e2.offset,
        placement: e2.placement,
        "popper-options": e2.popperOptions,
        strategy: e2.strategy,
        effect: e2.effect,
        enterable: e2.enterable,
        pure: e2.pure,
        "popper-class": e2.popperClass,
        "popper-style": [e2.popperStyle, unref(W7)],
        "reference-el": e2.referenceEl,
        "trigger-target-el": e2.triggerTargetEl,
        visible: unref(V7),
        "z-index": e2.zIndex,
        onMouseenter: unref(Y7),
        onMouseleave: unref(X7),
        onBlur: t9,
        onClose: unref(A7)
      }), {
        default: withCtx(() => [_.value ? createCommentVNode("v-if", true) : renderSlot(e2.$slots, "default", { key: 0 })]),
        _: 3
      }, 16, [
        "id",
        "aria-label",
        "aria-hidden",
        "boundaries-padding",
        "fallback-placements",
        "gpu-acceleration",
        "offset",
        "placement",
        "popper-options",
        "strategy",
        "effect",
        "enterable",
        "pure",
        "popper-class",
        "popper-style",
        "reference-el",
        "trigger-target-el",
        "visible",
        "z-index",
        "onMouseenter",
        "onMouseleave",
        "onClose"
      ])), [[vShow, unref(V7)]]) : createCommentVNode("v-if", true)]),
      _: 3
    }, 8, ["name"])], 8, ["disabled", "to"]));
  }
}), [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tooltip/src/content.vue"]]);
var _hoisted_1$18 = ["innerHTML"];
var _hoisted_2$12 = { key: 1 };
var ElTooltip = withInstall(_export_sfc(defineComponent({
  ...defineComponent({ name: "ElTooltip" }),
  props: useTooltipProps,
  emits: tooltipEmits,
  setup(e, { expose: t, emit: n }) {
    let r = e;
    usePopperContainer();
    let i = useId2(), o = ref(), s = ref(), d = () => {
      var e2;
      let t2 = unref(o);
      t2 && ((e2 = t2.popperInstanceRef) == null || e2.update());
    }, y = ref(false), x = ref(), { show: w, hide: k, hasUpdateHandler: A7 } = useTooltipModelToggle({
      indicator: y,
      toggleReason: x
    }), { onOpen: j7, onClose: M7 } = useDelayedToggle({
      showAfter: toRef(r, "showAfter"),
      hideAfter: toRef(r, "hideAfter"),
      autoClose: toRef(r, "autoClose"),
      open: w,
      close: k
    });
    return provide(TOOLTIP_INJECTION_KEY, {
      controlled: computed2(() => isBoolean2(r.visible) && !A7.value),
      id: i,
      open: readonly(y),
      trigger: toRef(r, "trigger"),
      onOpen: (e2) => {
        j7(e2);
      },
      onClose: (e2) => {
        M7(e2);
      },
      onToggle: (e2) => {
        unref(y) ? M7(e2) : j7(e2);
      },
      onShow: () => {
        n("show", x.value);
      },
      onHide: () => {
        n("hide", x.value);
      },
      onBeforeShow: () => {
        n("before-show", x.value);
      },
      onBeforeHide: () => {
        n("before-hide", x.value);
      },
      updatePopper: d
    }), watch2(() => r.disabled, (e2) => {
      e2 && y.value && (y.value = false);
    }), onDeactivated(() => y.value && k()), t({
      popperRef: o,
      contentRef: s,
      isFocusInsideContent: (e2) => {
        let t2 = s.value?.contentRef?.popperContentRef, n2 = e2?.relatedTarget || document.activeElement;
        return t2 && t2.contains(n2);
      },
      updatePopper: d,
      onOpen: j7,
      onClose: M7,
      hide: k
    }), (e2, t2) => (openBlock(), createBlock(unref(ElPopper), {
      ref_key: "popperRef",
      ref: o,
      role: e2.role
    }, {
      default: withCtx(() => [createVNode(ElTooltipTrigger, {
        disabled: e2.disabled,
        trigger: e2.trigger,
        "trigger-keys": e2.triggerKeys,
        "virtual-ref": e2.virtualRef,
        "virtual-triggering": e2.virtualTriggering
      }, {
        default: withCtx(() => [e2.$slots.default ? renderSlot(e2.$slots, "default", { key: 0 }) : createCommentVNode("v-if", true)]),
        _: 3
      }, 8, [
        "disabled",
        "trigger",
        "trigger-keys",
        "virtual-ref",
        "virtual-triggering"
      ]), createVNode(ElTooltipContent, {
        ref_key: "contentRef",
        ref: s,
        "aria-label": e2.ariaLabel,
        "boundaries-padding": e2.boundariesPadding,
        content: e2.content,
        disabled: e2.disabled,
        effect: e2.effect,
        enterable: e2.enterable,
        "fallback-placements": e2.fallbackPlacements,
        "hide-after": e2.hideAfter,
        "gpu-acceleration": e2.gpuAcceleration,
        offset: e2.offset,
        persistent: e2.persistent,
        "popper-class": e2.popperClass,
        "popper-style": e2.popperStyle,
        placement: e2.placement,
        "popper-options": e2.popperOptions,
        pure: e2.pure,
        "raw-content": e2.rawContent,
        "reference-el": e2.referenceEl,
        "trigger-target-el": e2.triggerTargetEl,
        "show-after": e2.showAfter,
        strategy: e2.strategy,
        teleported: e2.teleported,
        transition: e2.transition,
        "virtual-triggering": e2.virtualTriggering,
        "z-index": e2.zIndex,
        "append-to": e2.appendTo
      }, {
        default: withCtx(() => [renderSlot(e2.$slots, "content", {}, () => [e2.rawContent ? (openBlock(), createElementBlock("span", {
          key: 0,
          innerHTML: e2.content
        }, null, 8, _hoisted_1$18)) : (openBlock(), createElementBlock("span", _hoisted_2$12, toDisplayString(e2.content), 1))]), e2.showArrow ? (openBlock(), createBlock(unref(ElPopperArrow), {
          key: 0,
          "arrow-offset": e2.arrowOffset
        }, null, 8, ["arrow-offset"])) : createCommentVNode("v-if", true)]),
        _: 3
      }, 8, "aria-label.boundaries-padding.content.disabled.effect.enterable.fallback-placements.hide-after.gpu-acceleration.offset.persistent.popper-class.popper-style.placement.popper-options.pure.raw-content.reference-el.trigger-target-el.show-after.strategy.teleported.transition.virtual-triggering.z-index.append-to".split("."))]),
      _: 3
    }, 8, ["role"]));
  }
}), [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tooltip/src/tooltip.vue"]]));
var buttonGroupContextKey = Symbol("buttonGroupContextKey");
var useButton = (e, t) => {
  useDeprecated({
    from: "type.text",
    replacement: "link",
    version: "3.0.0",
    scope: "props",
    ref: "https://element-plus.org/en-US/component/button.html#button-attributes"
  }, computed2(() => e.type === "text"));
  let n = inject(buttonGroupContextKey, void 0), r = useGlobalConfig("button"), { form: o } = useFormItem(), s = useFormSize(computed2(() => n?.size)), d = useFormDisabled(), f = ref(), p2 = useSlots(), _ = computed2(() => e.type || n?.type || ""), y = computed2(() => e.autoInsertSpace ?? r.value?.autoInsertSpace ?? false);
  return {
    _disabled: d,
    _size: s,
    _type: _,
    _ref: f,
    _props: computed2(() => e.tag === "button" ? {
      ariaDisabled: d.value || e.loading,
      disabled: d.value || e.loading,
      autofocus: e.autofocus,
      type: e.nativeType
    } : {}),
    shouldAddSpace: computed2(() => {
      let e2 = p2.default?.call(p2);
      if (y.value && e2?.length === 1) {
        let t2 = e2[0];
        if (t2?.type === Text) {
          let e3 = t2.children;
          return new RegExp("^\\p{Unified_Ideograph}{2}$", "u").test(e3.trim());
        }
      }
      return false;
    }),
    handleClick: (n2) => {
      e.nativeType === "reset" && o?.resetFields(), t("click", n2);
    }
  };
};
var buttonProps = buildProps({
  size: useSizeProp,
  disabled: Boolean,
  type: {
    type: String,
    values: [
      "default",
      "primary",
      "success",
      "warning",
      "info",
      "danger",
      "text",
      ""
    ],
    default: ""
  },
  icon: { type: iconPropType },
  nativeType: {
    type: String,
    values: [
      "button",
      "submit",
      "reset"
    ],
    default: "button"
  },
  loading: Boolean,
  loadingIcon: {
    type: iconPropType,
    default: () => loading_default
  },
  plain: Boolean,
  text: Boolean,
  link: Boolean,
  bg: Boolean,
  autofocus: Boolean,
  round: Boolean,
  circle: Boolean,
  color: String,
  dark: Boolean,
  autoInsertSpace: {
    type: Boolean,
    default: void 0
  },
  tag: {
    type: definePropType([String, Object]),
    default: "button"
  }
});
var buttonEmits = { click: (e) => e instanceof MouseEvent };
function bound01$1(e, t) {
  isOnePointZero$1(e) && (e = "100%");
  var n = isPercentage$1(e);
  return e = t === 360 ? e : Math.min(t, Math.max(0, parseFloat(e))), n && (e = parseInt(String(e * t), 10) / 100), Math.abs(e - t) < 1e-6 ? 1 : (e = t === 360 ? (e < 0 ? e % t + t : e % t) / parseFloat(String(t)) : e % t / parseFloat(String(t)), e);
}
function clamp01(e) {
  return Math.min(1, Math.max(0, e));
}
function isOnePointZero$1(e) {
  return typeof e == "string" && e.indexOf(".") !== -1 && parseFloat(e) === 1;
}
function isPercentage$1(e) {
  return typeof e == "string" && e.indexOf("%") !== -1;
}
function boundAlpha(e) {
  return e = parseFloat(e), (isNaN(e) || e < 0 || e > 1) && (e = 1), e;
}
function convertToPercentage(e) {
  return e <= 1 ? `${Number(e) * 100}%` : e;
}
function pad2(e) {
  return e.length === 1 ? "0" + e : String(e);
}
function rgbToRgb(e, t, n) {
  return {
    r: bound01$1(e, 255) * 255,
    g: bound01$1(t, 255) * 255,
    b: bound01$1(n, 255) * 255
  };
}
function rgbToHsl(e, t, n) {
  e = bound01$1(e, 255), t = bound01$1(t, 255), n = bound01$1(n, 255);
  var r = Math.max(e, t, n), i = Math.min(e, t, n), o = 0, s = 0, l = (r + i) / 2;
  if (r === i) s = 0, o = 0;
  else {
    var d = r - i;
    switch (s = l > 0.5 ? d / (2 - r - i) : d / (r + i), r) {
      case e:
        o = (t - n) / d + (t < n ? 6 : 0);
        break;
      case t:
        o = (n - e) / d + 2;
        break;
      case n:
        o = (e - t) / d + 4;
        break;
      default:
        break;
    }
    o /= 6;
  }
  return {
    h: o,
    s,
    l
  };
}
function hue2rgb(e, t, n) {
  return n < 0 && (n += 1), n > 1 && --n, n < 1 / 6 ? e + (t - e) * (6 * n) : n < 1 / 2 ? t : n < 2 / 3 ? e + (t - e) * (2 / 3 - n) * 6 : e;
}
function hslToRgb(e, t, n) {
  var r, i, o;
  if (e = bound01$1(e, 360), t = bound01$1(t, 100), n = bound01$1(n, 100), t === 0) i = n, o = n, r = n;
  else {
    var s = n < 0.5 ? n * (1 + t) : n + t - n * t, l = 2 * n - s;
    r = hue2rgb(l, s, e + 1 / 3), i = hue2rgb(l, s, e), o = hue2rgb(l, s, e - 1 / 3);
  }
  return {
    r: r * 255,
    g: i * 255,
    b: o * 255
  };
}
function rgbToHsv(e, t, n) {
  e = bound01$1(e, 255), t = bound01$1(t, 255), n = bound01$1(n, 255);
  var r = Math.max(e, t, n), i = Math.min(e, t, n), o = 0, s = r, l = r - i, d = r === 0 ? 0 : l / r;
  if (r === i) o = 0;
  else {
    switch (r) {
      case e:
        o = (t - n) / l + (t < n ? 6 : 0);
        break;
      case t:
        o = (n - e) / l + 2;
        break;
      case n:
        o = (e - t) / l + 4;
        break;
      default:
        break;
    }
    o /= 6;
  }
  return {
    h: o,
    s: d,
    v: s
  };
}
function hsvToRgb(e, t, n) {
  e = bound01$1(e, 360) * 6, t = bound01$1(t, 100), n = bound01$1(n, 100);
  var r = Math.floor(e), i = e - r, o = n * (1 - t), s = n * (1 - i * t), l = n * (1 - (1 - i) * t), d = r % 6, f = [
    n,
    s,
    o,
    o,
    l,
    n
  ][d], p2 = [
    l,
    n,
    n,
    s,
    o,
    o
  ][d], _ = [
    o,
    o,
    l,
    n,
    n,
    s
  ][d];
  return {
    r: f * 255,
    g: p2 * 255,
    b: _ * 255
  };
}
function rgbToHex(e, t, n, r) {
  var i = [
    pad2(Math.round(e).toString(16)),
    pad2(Math.round(t).toString(16)),
    pad2(Math.round(n).toString(16))
  ];
  return r && i[0].startsWith(i[0].charAt(1)) && i[1].startsWith(i[1].charAt(1)) && i[2].startsWith(i[2].charAt(1)) ? i[0].charAt(0) + i[1].charAt(0) + i[2].charAt(0) : i.join("");
}
function rgbaToHex(e, t, n, r, i) {
  var o = [
    pad2(Math.round(e).toString(16)),
    pad2(Math.round(t).toString(16)),
    pad2(Math.round(n).toString(16)),
    pad2(convertDecimalToHex(r))
  ];
  return i && o[0].startsWith(o[0].charAt(1)) && o[1].startsWith(o[1].charAt(1)) && o[2].startsWith(o[2].charAt(1)) && o[3].startsWith(o[3].charAt(1)) ? o[0].charAt(0) + o[1].charAt(0) + o[2].charAt(0) + o[3].charAt(0) : o.join("");
}
function convertDecimalToHex(e) {
  return Math.round(parseFloat(e) * 255).toString(16);
}
function convertHexToDecimal(e) {
  return parseIntFromHex(e) / 255;
}
function parseIntFromHex(e) {
  return parseInt(e, 16);
}
function numberInputToObject(e) {
  return {
    r: e >> 16,
    g: (e & 65280) >> 8,
    b: e & 255
  };
}
var names = {
  aliceblue: "#f0f8ff",
  antiquewhite: "#faebd7",
  aqua: "#00ffff",
  aquamarine: "#7fffd4",
  azure: "#f0ffff",
  beige: "#f5f5dc",
  bisque: "#ffe4c4",
  black: "#000000",
  blanchedalmond: "#ffebcd",
  blue: "#0000ff",
  blueviolet: "#8a2be2",
  brown: "#a52a2a",
  burlywood: "#deb887",
  cadetblue: "#5f9ea0",
  chartreuse: "#7fff00",
  chocolate: "#d2691e",
  coral: "#ff7f50",
  cornflowerblue: "#6495ed",
  cornsilk: "#fff8dc",
  crimson: "#dc143c",
  cyan: "#00ffff",
  darkblue: "#00008b",
  darkcyan: "#008b8b",
  darkgoldenrod: "#b8860b",
  darkgray: "#a9a9a9",
  darkgreen: "#006400",
  darkgrey: "#a9a9a9",
  darkkhaki: "#bdb76b",
  darkmagenta: "#8b008b",
  darkolivegreen: "#556b2f",
  darkorange: "#ff8c00",
  darkorchid: "#9932cc",
  darkred: "#8b0000",
  darksalmon: "#e9967a",
  darkseagreen: "#8fbc8f",
  darkslateblue: "#483d8b",
  darkslategray: "#2f4f4f",
  darkslategrey: "#2f4f4f",
  darkturquoise: "#00ced1",
  darkviolet: "#9400d3",
  deeppink: "#ff1493",
  deepskyblue: "#00bfff",
  dimgray: "#696969",
  dimgrey: "#696969",
  dodgerblue: "#1e90ff",
  firebrick: "#b22222",
  floralwhite: "#fffaf0",
  forestgreen: "#228b22",
  fuchsia: "#ff00ff",
  gainsboro: "#dcdcdc",
  ghostwhite: "#f8f8ff",
  goldenrod: "#daa520",
  gold: "#ffd700",
  gray: "#808080",
  green: "#008000",
  greenyellow: "#adff2f",
  grey: "#808080",
  honeydew: "#f0fff0",
  hotpink: "#ff69b4",
  indianred: "#cd5c5c",
  indigo: "#4b0082",
  ivory: "#fffff0",
  khaki: "#f0e68c",
  lavenderblush: "#fff0f5",
  lavender: "#e6e6fa",
  lawngreen: "#7cfc00",
  lemonchiffon: "#fffacd",
  lightblue: "#add8e6",
  lightcoral: "#f08080",
  lightcyan: "#e0ffff",
  lightgoldenrodyellow: "#fafad2",
  lightgray: "#d3d3d3",
  lightgreen: "#90ee90",
  lightgrey: "#d3d3d3",
  lightpink: "#ffb6c1",
  lightsalmon: "#ffa07a",
  lightseagreen: "#20b2aa",
  lightskyblue: "#87cefa",
  lightslategray: "#778899",
  lightslategrey: "#778899",
  lightsteelblue: "#b0c4de",
  lightyellow: "#ffffe0",
  lime: "#00ff00",
  limegreen: "#32cd32",
  linen: "#faf0e6",
  magenta: "#ff00ff",
  maroon: "#800000",
  mediumaquamarine: "#66cdaa",
  mediumblue: "#0000cd",
  mediumorchid: "#ba55d3",
  mediumpurple: "#9370db",
  mediumseagreen: "#3cb371",
  mediumslateblue: "#7b68ee",
  mediumspringgreen: "#00fa9a",
  mediumturquoise: "#48d1cc",
  mediumvioletred: "#c71585",
  midnightblue: "#191970",
  mintcream: "#f5fffa",
  mistyrose: "#ffe4e1",
  moccasin: "#ffe4b5",
  navajowhite: "#ffdead",
  navy: "#000080",
  oldlace: "#fdf5e6",
  olive: "#808000",
  olivedrab: "#6b8e23",
  orange: "#ffa500",
  orangered: "#ff4500",
  orchid: "#da70d6",
  palegoldenrod: "#eee8aa",
  palegreen: "#98fb98",
  paleturquoise: "#afeeee",
  palevioletred: "#db7093",
  papayawhip: "#ffefd5",
  peachpuff: "#ffdab9",
  peru: "#cd853f",
  pink: "#ffc0cb",
  plum: "#dda0dd",
  powderblue: "#b0e0e6",
  purple: "#800080",
  rebeccapurple: "#663399",
  red: "#ff0000",
  rosybrown: "#bc8f8f",
  royalblue: "#4169e1",
  saddlebrown: "#8b4513",
  salmon: "#fa8072",
  sandybrown: "#f4a460",
  seagreen: "#2e8b57",
  seashell: "#fff5ee",
  sienna: "#a0522d",
  silver: "#c0c0c0",
  skyblue: "#87ceeb",
  slateblue: "#6a5acd",
  slategray: "#708090",
  slategrey: "#708090",
  snow: "#fffafa",
  springgreen: "#00ff7f",
  steelblue: "#4682b4",
  tan: "#d2b48c",
  teal: "#008080",
  thistle: "#d8bfd8",
  tomato: "#ff6347",
  turquoise: "#40e0d0",
  violet: "#ee82ee",
  wheat: "#f5deb3",
  white: "#ffffff",
  whitesmoke: "#f5f5f5",
  yellow: "#ffff00",
  yellowgreen: "#9acd32"
};
function inputToRGB(e) {
  var t = {
    r: 0,
    g: 0,
    b: 0
  }, n = 1, r = null, i = null, o = null, s = false, l = false;
  return typeof e == "string" && (e = stringInputToObject(e)), typeof e == "object" && (isValidCSSUnit(e.r) && isValidCSSUnit(e.g) && isValidCSSUnit(e.b) ? (t = rgbToRgb(e.r, e.g, e.b), s = true, l = String(e.r).substr(-1) === "%" ? "prgb" : "rgb") : isValidCSSUnit(e.h) && isValidCSSUnit(e.s) && isValidCSSUnit(e.v) ? (r = convertToPercentage(e.s), i = convertToPercentage(e.v), t = hsvToRgb(e.h, r, i), s = true, l = "hsv") : isValidCSSUnit(e.h) && isValidCSSUnit(e.s) && isValidCSSUnit(e.l) && (r = convertToPercentage(e.s), o = convertToPercentage(e.l), t = hslToRgb(e.h, r, o), s = true, l = "hsl"), Object.prototype.hasOwnProperty.call(e, "a") && (n = e.a)), n = boundAlpha(n), {
    ok: s,
    format: e.format || l,
    r: Math.min(255, Math.max(t.r, 0)),
    g: Math.min(255, Math.max(t.g, 0)),
    b: Math.min(255, Math.max(t.b, 0)),
    a: n
  };
}
var CSS_UNIT = "(?:[-\\+]?\\d*\\.\\d+%?)|(?:[-\\+]?\\d+%?)";
var PERMISSIVE_MATCH3 = `[\\s|\\(]+(${CSS_UNIT})[,|\\s]+(${CSS_UNIT})[,|\\s]+(${CSS_UNIT})\\s*\\)?`;
var PERMISSIVE_MATCH4 = `[\\s|\\(]+(${CSS_UNIT})[,|\\s]+(${CSS_UNIT})[,|\\s]+(${CSS_UNIT})[,|\\s]+(${CSS_UNIT})\\s*\\)?`;
var matchers = {
  CSS_UNIT: new RegExp(CSS_UNIT),
  rgb: RegExp("rgb" + PERMISSIVE_MATCH3),
  rgba: RegExp("rgba" + PERMISSIVE_MATCH4),
  hsl: RegExp("hsl" + PERMISSIVE_MATCH3),
  hsla: RegExp("hsla" + PERMISSIVE_MATCH4),
  hsv: RegExp("hsv" + PERMISSIVE_MATCH3),
  hsva: RegExp("hsva" + PERMISSIVE_MATCH4),
  hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
  hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
  hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
  hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
};
function stringInputToObject(e) {
  if (e = e.trim().toLowerCase(), e.length === 0) return false;
  var t = false;
  if (names[e]) e = names[e], t = true;
  else if (e === "transparent") return {
    r: 0,
    g: 0,
    b: 0,
    a: 0,
    format: "name"
  };
  var n = matchers.rgb.exec(e);
  return n ? {
    r: n[1],
    g: n[2],
    b: n[3]
  } : (n = matchers.rgba.exec(e), n ? {
    r: n[1],
    g: n[2],
    b: n[3],
    a: n[4]
  } : (n = matchers.hsl.exec(e), n ? {
    h: n[1],
    s: n[2],
    l: n[3]
  } : (n = matchers.hsla.exec(e), n ? {
    h: n[1],
    s: n[2],
    l: n[3],
    a: n[4]
  } : (n = matchers.hsv.exec(e), n ? {
    h: n[1],
    s: n[2],
    v: n[3]
  } : (n = matchers.hsva.exec(e), n ? {
    h: n[1],
    s: n[2],
    v: n[3],
    a: n[4]
  } : (n = matchers.hex8.exec(e), n ? {
    r: parseIntFromHex(n[1]),
    g: parseIntFromHex(n[2]),
    b: parseIntFromHex(n[3]),
    a: convertHexToDecimal(n[4]),
    format: t ? "name" : "hex8"
  } : (n = matchers.hex6.exec(e), n ? {
    r: parseIntFromHex(n[1]),
    g: parseIntFromHex(n[2]),
    b: parseIntFromHex(n[3]),
    format: t ? "name" : "hex"
  } : (n = matchers.hex4.exec(e), n ? {
    r: parseIntFromHex(n[1] + n[1]),
    g: parseIntFromHex(n[2] + n[2]),
    b: parseIntFromHex(n[3] + n[3]),
    a: convertHexToDecimal(n[4] + n[4]),
    format: t ? "name" : "hex8"
  } : (n = matchers.hex3.exec(e), n ? {
    r: parseIntFromHex(n[1] + n[1]),
    g: parseIntFromHex(n[2] + n[2]),
    b: parseIntFromHex(n[3] + n[3]),
    format: t ? "name" : "hex"
  } : false)))))))));
}
function isValidCSSUnit(e) {
  return !!matchers.CSS_UNIT.exec(String(e));
}
var TinyColor = (function() {
  function e(t, n) {
    if (t === void 0 && (t = ""), n === void 0 && (n = {}), t instanceof e) return t;
    typeof t == "number" && (t = numberInputToObject(t)), this.originalInput = t;
    var r = inputToRGB(t);
    this.originalInput = t, this.r = r.r, this.g = r.g, this.b = r.b, this.a = r.a, this.roundA = Math.round(100 * this.a) / 100, this.format = n.format ?? r.format, this.gradientType = n.gradientType, this.r < 1 && (this.r = Math.round(this.r)), this.g < 1 && (this.g = Math.round(this.g)), this.b < 1 && (this.b = Math.round(this.b)), this.isValid = r.ok;
  }
  return e.prototype.isDark = function() {
    return this.getBrightness() < 128;
  }, e.prototype.isLight = function() {
    return !this.isDark();
  }, e.prototype.getBrightness = function() {
    var e2 = this.toRgb();
    return (e2.r * 299 + e2.g * 587 + e2.b * 114) / 1e3;
  }, e.prototype.getLuminance = function() {
    var e2 = this.toRgb(), t, n, r, i = e2.r / 255, o = e2.g / 255, s = e2.b / 255;
    return t = i <= 0.03928 ? i / 12.92 : ((i + 0.055) / 1.055) ** 2.4, n = o <= 0.03928 ? o / 12.92 : ((o + 0.055) / 1.055) ** 2.4, r = s <= 0.03928 ? s / 12.92 : ((s + 0.055) / 1.055) ** 2.4, 0.2126 * t + 0.7152 * n + 0.0722 * r;
  }, e.prototype.getAlpha = function() {
    return this.a;
  }, e.prototype.setAlpha = function(e2) {
    return this.a = boundAlpha(e2), this.roundA = Math.round(100 * this.a) / 100, this;
  }, e.prototype.isMonochrome = function() {
    return this.toHsl().s === 0;
  }, e.prototype.toHsv = function() {
    var e2 = rgbToHsv(this.r, this.g, this.b);
    return {
      h: e2.h * 360,
      s: e2.s,
      v: e2.v,
      a: this.a
    };
  }, e.prototype.toHsvString = function() {
    var e2 = rgbToHsv(this.r, this.g, this.b), t = Math.round(e2.h * 360), n = Math.round(e2.s * 100), r = Math.round(e2.v * 100);
    return this.a === 1 ? `hsv(${t}, ${n}%, ${r}%)` : `hsva(${t}, ${n}%, ${r}%, ${this.roundA})`;
  }, e.prototype.toHsl = function() {
    var e2 = rgbToHsl(this.r, this.g, this.b);
    return {
      h: e2.h * 360,
      s: e2.s,
      l: e2.l,
      a: this.a
    };
  }, e.prototype.toHslString = function() {
    var e2 = rgbToHsl(this.r, this.g, this.b), t = Math.round(e2.h * 360), n = Math.round(e2.s * 100), r = Math.round(e2.l * 100);
    return this.a === 1 ? `hsl(${t}, ${n}%, ${r}%)` : `hsla(${t}, ${n}%, ${r}%, ${this.roundA})`;
  }, e.prototype.toHex = function(e2) {
    return e2 === void 0 && (e2 = false), rgbToHex(this.r, this.g, this.b, e2);
  }, e.prototype.toHexString = function(e2) {
    return e2 === void 0 && (e2 = false), "#" + this.toHex(e2);
  }, e.prototype.toHex8 = function(e2) {
    return e2 === void 0 && (e2 = false), rgbaToHex(this.r, this.g, this.b, this.a, e2);
  }, e.prototype.toHex8String = function(e2) {
    return e2 === void 0 && (e2 = false), "#" + this.toHex8(e2);
  }, e.prototype.toHexShortString = function(e2) {
    return e2 === void 0 && (e2 = false), this.a === 1 ? this.toHexString(e2) : this.toHex8String(e2);
  }, e.prototype.toRgb = function() {
    return {
      r: Math.round(this.r),
      g: Math.round(this.g),
      b: Math.round(this.b),
      a: this.a
    };
  }, e.prototype.toRgbString = function() {
    var e2 = Math.round(this.r), t = Math.round(this.g), n = Math.round(this.b);
    return this.a === 1 ? `rgb(${e2}, ${t}, ${n})` : `rgba(${e2}, ${t}, ${n}, ${this.roundA})`;
  }, e.prototype.toPercentageRgb = function() {
    var e2 = function(e3) {
      return `${Math.round(bound01$1(e3, 255) * 100)}%`;
    };
    return {
      r: e2(this.r),
      g: e2(this.g),
      b: e2(this.b),
      a: this.a
    };
  }, e.prototype.toPercentageRgbString = function() {
    var e2 = function(e3) {
      return Math.round(bound01$1(e3, 255) * 100);
    };
    return this.a === 1 ? `rgb(${e2(this.r)}%, ${e2(this.g)}%, ${e2(this.b)}%)` : `rgba(${e2(this.r)}%, ${e2(this.g)}%, ${e2(this.b)}%, ${this.roundA})`;
  }, e.prototype.toName = function() {
    if (this.a === 0) return "transparent";
    if (this.a < 1) return false;
    for (var e2 = "#" + rgbToHex(this.r, this.g, this.b, false), t = 0, n = Object.entries(names); t < n.length; t++) {
      var r = n[t], i = r[0];
      if (e2 === r[1]) return i;
    }
    return false;
  }, e.prototype.toString = function(e2) {
    var t = !!e2;
    e2 ??= this.format;
    var n = false, r = this.a < 1 && this.a >= 0;
    return !t && r && (e2.startsWith("hex") || e2 === "name") ? e2 === "name" && this.a === 0 ? this.toName() : this.toRgbString() : (e2 === "rgb" && (n = this.toRgbString()), e2 === "prgb" && (n = this.toPercentageRgbString()), (e2 === "hex" || e2 === "hex6") && (n = this.toHexString()), e2 === "hex3" && (n = this.toHexString(true)), e2 === "hex4" && (n = this.toHex8String(true)), e2 === "hex8" && (n = this.toHex8String()), e2 === "name" && (n = this.toName()), e2 === "hsl" && (n = this.toHslString()), e2 === "hsv" && (n = this.toHsvString()), n || this.toHexString());
  }, e.prototype.toNumber = function() {
    return (Math.round(this.r) << 16) + (Math.round(this.g) << 8) + Math.round(this.b);
  }, e.prototype.clone = function() {
    return new e(this.toString());
  }, e.prototype.lighten = function(t) {
    t === void 0 && (t = 10);
    var n = this.toHsl();
    return n.l += t / 100, n.l = clamp01(n.l), new e(n);
  }, e.prototype.brighten = function(t) {
    t === void 0 && (t = 10);
    var n = this.toRgb();
    return n.r = Math.max(0, Math.min(255, n.r - Math.round(255 * -(t / 100)))), n.g = Math.max(0, Math.min(255, n.g - Math.round(255 * -(t / 100)))), n.b = Math.max(0, Math.min(255, n.b - Math.round(255 * -(t / 100)))), new e(n);
  }, e.prototype.darken = function(t) {
    t === void 0 && (t = 10);
    var n = this.toHsl();
    return n.l -= t / 100, n.l = clamp01(n.l), new e(n);
  }, e.prototype.tint = function(e2) {
    return e2 === void 0 && (e2 = 10), this.mix("white", e2);
  }, e.prototype.shade = function(e2) {
    return e2 === void 0 && (e2 = 10), this.mix("black", e2);
  }, e.prototype.desaturate = function(t) {
    t === void 0 && (t = 10);
    var n = this.toHsl();
    return n.s -= t / 100, n.s = clamp01(n.s), new e(n);
  }, e.prototype.saturate = function(t) {
    t === void 0 && (t = 10);
    var n = this.toHsl();
    return n.s += t / 100, n.s = clamp01(n.s), new e(n);
  }, e.prototype.greyscale = function() {
    return this.desaturate(100);
  }, e.prototype.spin = function(t) {
    var n = this.toHsl(), r = (n.h + t) % 360;
    return n.h = r < 0 ? 360 + r : r, new e(n);
  }, e.prototype.mix = function(t, n) {
    n === void 0 && (n = 50);
    var r = this.toRgb(), i = new e(t).toRgb(), o = n / 100;
    return new e({
      r: (i.r - r.r) * o + r.r,
      g: (i.g - r.g) * o + r.g,
      b: (i.b - r.b) * o + r.b,
      a: (i.a - r.a) * o + r.a
    });
  }, e.prototype.analogous = function(t, n) {
    t === void 0 && (t = 6), n === void 0 && (n = 30);
    var r = this.toHsl(), i = 360 / n, o = [this];
    for (r.h = (r.h - (i * t >> 1) + 720) % 360; --t; ) r.h = (r.h + i) % 360, o.push(new e(r));
    return o;
  }, e.prototype.complement = function() {
    var t = this.toHsl();
    return t.h = (t.h + 180) % 360, new e(t);
  }, e.prototype.monochromatic = function(t) {
    t === void 0 && (t = 6);
    for (var n = this.toHsv(), r = n.h, i = n.s, o = n.v, s = [], l = 1 / t; t--; ) s.push(new e({
      h: r,
      s: i,
      v: o
    })), o = (o + l) % 1;
    return s;
  }, e.prototype.splitcomplement = function() {
    var t = this.toHsl(), n = t.h;
    return [
      this,
      new e({
        h: (n + 72) % 360,
        s: t.s,
        l: t.l
      }),
      new e({
        h: (n + 216) % 360,
        s: t.s,
        l: t.l
      })
    ];
  }, e.prototype.onBackground = function(t) {
    var n = this.toRgb(), r = new e(t).toRgb(), i = n.a + r.a * (1 - n.a);
    return new e({
      r: (n.r * n.a + r.r * r.a * (1 - n.a)) / i,
      g: (n.g * n.a + r.g * r.a * (1 - n.a)) / i,
      b: (n.b * n.a + r.b * r.a * (1 - n.a)) / i,
      a: i
    });
  }, e.prototype.triad = function() {
    return this.polyad(3);
  }, e.prototype.tetrad = function() {
    return this.polyad(4);
  }, e.prototype.polyad = function(t) {
    for (var n = this.toHsl(), r = n.h, i = [this], o = 360 / t, s = 1; s < t; s++) i.push(new e({
      h: (r + s * o) % 360,
      s: n.s,
      l: n.l
    }));
    return i;
  }, e.prototype.equals = function(t) {
    return this.toRgbString() === new e(t).toRgbString();
  }, e;
})();
function darken(e, t = 20) {
  return e.mix("#141414", t).toString();
}
function useButtonCustomStyle(e) {
  let t = useFormDisabled(), n = useNamespace("button");
  return computed2(() => {
    let r = {}, i = e.color;
    if (i) {
      let o = new TinyColor(i), s = e.dark ? o.tint(20).toString() : darken(o, 20);
      if (e.plain) r = n.cssVarBlock({
        "bg-color": e.dark ? darken(o, 90) : o.tint(90).toString(),
        "text-color": i,
        "border-color": e.dark ? darken(o, 50) : o.tint(50).toString(),
        "hover-text-color": `var(${n.cssVarName("color-white")})`,
        "hover-bg-color": i,
        "hover-border-color": i,
        "active-bg-color": s,
        "active-text-color": `var(${n.cssVarName("color-white")})`,
        "active-border-color": s
      }), t.value && (r[n.cssVarBlockName("disabled-bg-color")] = e.dark ? darken(o, 90) : o.tint(90).toString(), r[n.cssVarBlockName("disabled-text-color")] = e.dark ? darken(o, 50) : o.tint(50).toString(), r[n.cssVarBlockName("disabled-border-color")] = e.dark ? darken(o, 80) : o.tint(80).toString());
      else {
        let l = e.dark ? darken(o, 30) : o.tint(30).toString(), d = o.isDark() ? `var(${n.cssVarName("color-white")})` : `var(${n.cssVarName("color-black")})`;
        if (r = n.cssVarBlock({
          "bg-color": i,
          "text-color": d,
          "border-color": i,
          "hover-bg-color": l,
          "hover-text-color": d,
          "hover-border-color": l,
          "active-bg-color": s,
          "active-border-color": s
        }), t.value) {
          let t2 = e.dark ? darken(o, 50) : o.tint(50).toString();
          r[n.cssVarBlockName("disabled-bg-color")] = t2, r[n.cssVarBlockName("disabled-text-color")] = e.dark ? "rgba(255, 255, 255, 0.5)" : `var(${n.cssVarName("color-white")})`, r[n.cssVarBlockName("disabled-border-color")] = t2;
        }
      }
    }
    return r;
  });
}
var Button = _export_sfc(defineComponent({
  ...defineComponent({ name: "ElButton" }),
  props: buttonProps,
  emits: buttonEmits,
  setup(e, { expose: t, emit: r }) {
    let i = e, o = useButtonCustomStyle(i), s = useNamespace("button"), { _ref: l, _size: d, _type: y, _disabled: x, _props: w, shouldAddSpace: k, handleClick: $ } = useButton(i, r);
    return t({
      ref: l,
      size: d,
      type: y,
      disabled: x,
      shouldAddSpace: k
    }), (e2, t2) => (openBlock(), createBlock(resolveDynamicComponent(e2.tag), mergeProps({
      ref_key: "_ref",
      ref: l
    }, unref(w), {
      class: [
        unref(s).b(),
        unref(s).m(unref(y)),
        unref(s).m(unref(d)),
        unref(s).is("disabled", unref(x)),
        unref(s).is("loading", e2.loading),
        unref(s).is("plain", e2.plain),
        unref(s).is("round", e2.round),
        unref(s).is("circle", e2.circle),
        unref(s).is("text", e2.text),
        unref(s).is("link", e2.link),
        unref(s).is("has-bg", e2.bg)
      ],
      style: unref(o),
      onClick: unref($)
    }), {
      default: withCtx(() => [e2.loading ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [e2.$slots.loading ? renderSlot(e2.$slots, "loading", { key: 0 }) : (openBlock(), createBlock(unref(ElIcon), {
        key: 1,
        class: normalizeClass(unref(s).is("loading"))
      }, {
        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(e2.loadingIcon)))]),
        _: 1
      }, 8, ["class"]))], 64)) : e2.icon || e2.$slots.icon ? (openBlock(), createBlock(unref(ElIcon), { key: 1 }, {
        default: withCtx(() => [e2.icon ? (openBlock(), createBlock(resolveDynamicComponent(e2.icon), { key: 0 })) : renderSlot(e2.$slots, "icon", { key: 1 })]),
        _: 3
      })) : createCommentVNode("v-if", true), e2.$slots.default ? (openBlock(), createElementBlock("span", {
        key: 2,
        class: normalizeClass({ [unref(s).em("text", "expand")]: unref(k) })
      }, [renderSlot(e2.$slots, "default")], 2)) : createCommentVNode("v-if", true)]),
      _: 3
    }, 16, [
      "class",
      "style",
      "onClick"
    ]));
  }
}), [["__file", "/home/runner/work/element-plus/element-plus/packages/components/button/src/button.vue"]]);
var buttonGroupProps = {
  size: buttonProps.size,
  type: buttonProps.type
};
var ButtonGroup = _export_sfc(defineComponent({
  ...defineComponent({ name: "ElButtonGroup" }),
  props: buttonGroupProps,
  setup(e) {
    let t = e;
    provide(buttonGroupContextKey, reactive({
      size: toRef(t, "size"),
      type: toRef(t, "type")
    }));
    let n = useNamespace("button");
    return (e2, t2) => (openBlock(), createElementBlock("div", { class: normalizeClass(`${unref(n).b("group")}`) }, [renderSlot(e2.$slots, "default")], 2));
  }
}), [["__file", "/home/runner/work/element-plus/element-plus/packages/components/button/src/button-group.vue"]]);
var ElButton = withInstall(Button, { ButtonGroup });
withNoopInstall(ButtonGroup);
var nodeList = /* @__PURE__ */ new Map();
var startClick;
isClient && (document.addEventListener("mousedown", (e) => startClick = e), document.addEventListener("mouseup", (e) => {
  for (let t of nodeList.values()) for (let { documentHandler: n } of t) n(e, startClick);
}));
function createDocumentHandler(e, t) {
  let n = [];
  return Array.isArray(t.arg) ? n = t.arg : isElement(t.arg) && n.push(t.arg), function(r, i) {
    let o = t.instance.popperRef, s = r.target, l = i?.target, d = !t || !t.instance, f = !s || !l, p2 = e.contains(s) || e.contains(l), _ = e === s, y = n.length && n.some((e2) => e2?.contains(s)) || n.length && n.includes(l), x = o && (o.contains(s) || o.contains(l));
    d || f || p2 || _ || y || x || t.value(r, i);
  };
}
var ClickOutside = {
  beforeMount(e, t) {
    nodeList.has(e) || nodeList.set(e, []), nodeList.get(e).push({
      documentHandler: createDocumentHandler(e, t),
      bindingFn: t.value
    });
  },
  updated(e, t) {
    nodeList.has(e) || nodeList.set(e, []);
    let n = nodeList.get(e), r = n.findIndex((e2) => e2.bindingFn === t.oldValue), i = {
      documentHandler: createDocumentHandler(e, t),
      bindingFn: t.value
    };
    r >= 0 ? n.splice(r, 1, i) : n.push(i);
  },
  unmounted(e) {
    nodeList.delete(e);
  }
};
var tagProps = buildProps({
  type: {
    type: String,
    values: [
      "success",
      "info",
      "warning",
      "danger",
      ""
    ],
    default: ""
  },
  closable: Boolean,
  disableTransitions: Boolean,
  hit: Boolean,
  color: {
    type: String,
    default: ""
  },
  size: {
    type: String,
    values: componentSizes,
    default: ""
  },
  effect: {
    type: String,
    values: [
      "dark",
      "light",
      "plain"
    ],
    default: "light"
  },
  round: Boolean
});
var tagEmits = {
  close: (e) => e instanceof MouseEvent,
  click: (e) => e instanceof MouseEvent
};
var ElTag = withInstall(_export_sfc(defineComponent({
  ...defineComponent({ name: "ElTag" }),
  props: tagProps,
  emits: tagEmits,
  setup(e, { emit: t }) {
    let n = e, r = useFormSize(), i = useNamespace("tag"), s = computed2(() => {
      let { type: e2, hit: t2, effect: o, closable: s2, round: l } = n;
      return [
        i.b(),
        i.is("closable", s2),
        i.m(e2),
        i.m(r.value),
        i.m(o),
        i.is("hit", t2),
        i.is("round", l)
      ];
    }), d = (e2) => {
      t("close", e2);
    }, x = (e2) => {
      t("click", e2);
    };
    return (e2, t2) => e2.disableTransitions ? (openBlock(), createElementBlock("span", {
      key: 0,
      class: normalizeClass(unref(s)),
      style: normalizeStyle({ backgroundColor: e2.color }),
      onClick: x
    }, [createBaseVNode("span", { class: normalizeClass(unref(i).e("content")) }, [renderSlot(e2.$slots, "default")], 2), e2.closable ? (openBlock(), createBlock(unref(ElIcon), {
      key: 0,
      class: normalizeClass(unref(i).e("close")),
      onClick: withModifiers(d, ["stop"])
    }, {
      default: withCtx(() => [createVNode(unref(close_default$1))]),
      _: 1
    }, 8, ["class", "onClick"])) : createCommentVNode("v-if", true)], 6)) : (openBlock(), createBlock(Transition, {
      key: 1,
      name: `${unref(i).namespace.value}-zoom-in-center`,
      appear: ""
    }, {
      default: withCtx(() => [createBaseVNode("span", {
        class: normalizeClass(unref(s)),
        style: normalizeStyle({ backgroundColor: e2.color }),
        onClick: x
      }, [createBaseVNode("span", { class: normalizeClass(unref(i).e("content")) }, [renderSlot(e2.$slots, "default")], 2), e2.closable ? (openBlock(), createBlock(unref(ElIcon), {
        key: 0,
        class: normalizeClass(unref(i).e("close")),
        onClick: withModifiers(d, ["stop"])
      }, {
        default: withCtx(() => [createVNode(unref(close_default$1))]),
        _: 1
      }, 8, ["class", "onClick"])) : createCommentVNode("v-if", true)], 6)]),
      _: 3
    }, 8, ["name"]));
  }
}), [["__file", "/home/runner/work/element-plus/element-plus/packages/components/tag/src/tag.vue"]]));
var alphaSliderProps = buildProps({
  color: {
    type: definePropType(Object),
    required: true
  },
  vertical: {
    type: Boolean,
    default: false
  }
});
var isDragging = false;
function draggable(e, t) {
  if (!isClient) return;
  let n = function(e2) {
    var n2;
    (n2 = t.drag) == null || n2.call(t, e2);
  }, r = function(e2) {
    var i2;
    document.removeEventListener("mousemove", n), document.removeEventListener("mouseup", r), document.removeEventListener("touchmove", n), document.removeEventListener("touchend", r), document.onselectstart = null, document.ondragstart = null, isDragging = false, (i2 = t.end) == null || i2.call(t, e2);
  }, i = function(e2) {
    var i2;
    isDragging || (e2.preventDefault(), document.onselectstart = () => false, document.ondragstart = () => false, document.addEventListener("mousemove", n), document.addEventListener("mouseup", r), document.addEventListener("touchmove", n), document.addEventListener("touchend", r), isDragging = true, (i2 = t.start) == null || i2.call(t, e2));
  };
  e.addEventListener("mousedown", i), e.addEventListener("touchstart", i);
}
var useAlphaSlider = (e) => {
  let t = getCurrentInstance(), n = shallowRef(), r = shallowRef();
  function i(e2) {
    e2.target !== n.value && o(e2);
  }
  function o(i2) {
    if (!r.value || !n.value) return;
    let o3 = t.vnode.el.getBoundingClientRect(), { clientX: s, clientY: l } = getClientXY(i2);
    if (e.vertical) {
      let t2 = l - o3.top;
      t2 = Math.max(n.value.offsetHeight / 2, t2), t2 = Math.min(t2, o3.height - n.value.offsetHeight / 2), e.color.set("alpha", Math.round((t2 - n.value.offsetHeight / 2) / (o3.height - n.value.offsetHeight) * 100));
    } else {
      let t2 = s - o3.left;
      t2 = Math.max(n.value.offsetWidth / 2, t2), t2 = Math.min(t2, o3.width - n.value.offsetWidth / 2), e.color.set("alpha", Math.round((t2 - n.value.offsetWidth / 2) / (o3.width - n.value.offsetWidth) * 100));
    }
  }
  return {
    thumb: n,
    bar: r,
    handleDrag: o,
    handleClick: i
  };
};
var useAlphaSliderDOM = (e, { bar: t, thumb: n, handleDrag: r }) => {
  let i = getCurrentInstance(), o = useNamespace("color-alpha-slider"), s = ref(0), d = ref(0), f = ref();
  function p2() {
    if (!n.value || e.vertical) return 0;
    let t2 = i.vnode.el, r2 = e.color.get("alpha");
    return t2 ? Math.round(r2 * (t2.offsetWidth - n.value.offsetWidth / 2) / 100) : 0;
  }
  function _() {
    if (!n.value) return 0;
    let t2 = i.vnode.el;
    if (!e.vertical) return 0;
    let r2 = e.color.get("alpha");
    return t2 ? Math.round(r2 * (t2.offsetHeight - n.value.offsetHeight / 2) / 100) : 0;
  }
  function y() {
    if (e.color && e.color.value) {
      let { r: t2, g: n2, b: r2 } = e.color.toRgb();
      return `linear-gradient(to right, rgba(${t2}, ${n2}, ${r2}, 0) 0%, rgba(${t2}, ${n2}, ${r2}, 1) 100%)`;
    }
    return "";
  }
  function x() {
    s.value = p2(), d.value = _(), f.value = y();
  }
  onMounted(() => {
    if (!t.value || !n.value) return;
    let e2 = {
      drag: (e3) => {
        r(e3);
      },
      end: (e3) => {
        r(e3);
      }
    };
    draggable(t.value, e2), draggable(n.value, e2), x();
  }), watch2(() => e.color.get("alpha"), () => x()), watch2(() => e.color.value, () => x());
  let w = computed2(() => [o.b(), o.is("vertical", e.vertical)]), k = computed2(() => o.e("bar")), $ = computed2(() => o.e("thumb"));
  return {
    rootKls: w,
    barKls: k,
    barStyle: computed2(() => ({ background: f.value })),
    thumbKls: $,
    thumbStyle: computed2(() => ({
      left: addUnit(s.value),
      top: addUnit(d.value)
    })),
    update: x
  };
};
var AlphaSlider = _export_sfc(defineComponent({
  ...defineComponent({ name: "ElColorAlphaSlider" }),
  props: alphaSliderProps,
  setup(e, { expose: t }) {
    let n = e, { bar: r, thumb: i, handleDrag: o, handleClick: s } = useAlphaSlider(n), { rootKls: l, barKls: d, barStyle: f, thumbKls: p2, thumbStyle: x, update: w } = useAlphaSliderDOM(n, {
      bar: r,
      thumb: i,
      handleDrag: o
    });
    return t({
      update: w,
      bar: r,
      thumb: i
    }), (e2, t2) => (openBlock(), createElementBlock("div", { class: normalizeClass(unref(l)) }, [createBaseVNode("div", {
      ref_key: "bar",
      ref: r,
      class: normalizeClass(unref(d)),
      style: normalizeStyle(unref(f)),
      onClick: t2[0] ||= (...e3) => unref(s) && unref(s)(...e3)
    }, null, 6), createBaseVNode("div", {
      ref_key: "thumb",
      ref: i,
      class: normalizeClass(unref(p2)),
      style: normalizeStyle(unref(x))
    }, null, 6)], 2));
  }
}), [["__file", "/home/runner/work/element-plus/element-plus/packages/components/color-picker/src/components/alpha-slider.vue"]]);
var _sfc_main$8 = defineComponent({
  name: "ElColorHueSlider",
  props: {
    color: {
      type: Object,
      required: true
    },
    vertical: Boolean
  },
  setup(e) {
    let t = useNamespace("color-hue-slider"), n = getCurrentInstance(), r = ref(), i = ref(), o = ref(0), s = ref(0), d = computed2(() => e.color.get("hue"));
    watch2(() => d.value, () => {
      x();
    });
    function f(e2) {
      e2.target !== r.value && p2(e2);
    }
    function p2(t2) {
      if (!i.value || !r.value) return;
      let o3 = n.vnode.el.getBoundingClientRect(), { clientX: s2, clientY: l } = getClientXY(t2), d2;
      if (e.vertical) {
        let e2 = l - o3.top;
        e2 = Math.min(e2, o3.height - r.value.offsetHeight / 2), e2 = Math.max(r.value.offsetHeight / 2, e2), d2 = Math.round((e2 - r.value.offsetHeight / 2) / (o3.height - r.value.offsetHeight) * 360);
      } else {
        let e2 = s2 - o3.left;
        e2 = Math.min(e2, o3.width - r.value.offsetWidth / 2), e2 = Math.max(r.value.offsetWidth / 2, e2), d2 = Math.round((e2 - r.value.offsetWidth / 2) / (o3.width - r.value.offsetWidth) * 360);
      }
      e.color.set("hue", d2);
    }
    function _() {
      if (!r.value) return 0;
      let t2 = n.vnode.el;
      if (e.vertical) return 0;
      let i2 = e.color.get("hue");
      return t2 ? Math.round(i2 * (t2.offsetWidth - r.value.offsetWidth / 2) / 360) : 0;
    }
    function y() {
      if (!r.value) return 0;
      let t2 = n.vnode.el;
      if (!e.vertical) return 0;
      let i2 = e.color.get("hue");
      return t2 ? Math.round(i2 * (t2.offsetHeight - r.value.offsetHeight / 2) / 360) : 0;
    }
    function x() {
      o.value = _(), s.value = y();
    }
    return onMounted(() => {
      if (!i.value || !r.value) return;
      let e2 = {
        drag: (e3) => {
          p2(e3);
        },
        end: (e3) => {
          p2(e3);
        }
      };
      draggable(i.value, e2), draggable(r.value, e2), x();
    }), {
      bar: i,
      thumb: r,
      thumbLeft: o,
      thumbTop: s,
      hueValue: d,
      handleClick: f,
      update: x,
      ns: t
    };
  }
});
function _sfc_render$8(e, t, n, r, i, o) {
  return openBlock(), createElementBlock("div", { class: normalizeClass([e.ns.b(), e.ns.is("vertical", e.vertical)]) }, [createBaseVNode("div", {
    ref: "bar",
    class: normalizeClass(e.ns.e("bar")),
    onClick: t[0] ||= (...t2) => e.handleClick && e.handleClick(...t2)
  }, null, 2), createBaseVNode("div", {
    ref: "thumb",
    class: normalizeClass(e.ns.e("thumb")),
    style: normalizeStyle({
      left: e.thumbLeft + "px",
      top: e.thumbTop + "px"
    })
  }, null, 6)], 2);
}
var HueSlider = _export_sfc(_sfc_main$8, [["render", _sfc_render$8], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/color-picker/src/components/hue-slider.vue"]]);
var colorPickerProps = buildProps({
  modelValue: String,
  id: String,
  showAlpha: Boolean,
  colorFormat: String,
  disabled: Boolean,
  size: useSizeProp,
  popperClass: {
    type: String,
    default: ""
  },
  label: {
    type: String,
    default: void 0
  },
  tabindex: {
    type: [String, Number],
    default: 0
  },
  predefine: { type: definePropType(Array) },
  validateEvent: {
    type: Boolean,
    default: true
  }
});
var colorPickerEmits = {
  [UPDATE_MODEL_EVENT]: (e) => isString$2(e) || isNil_default(e),
  [CHANGE_EVENT]: (e) => isString$2(e) || isNil_default(e),
  activeChange: (e) => isString$2(e) || isNil_default(e),
  focus: (e) => e instanceof FocusEvent,
  blur: (e) => e instanceof FocusEvent
};
var colorPickerContextKey = Symbol("colorPickerContextKey");
var hsv2hsl = function(e, t, n) {
  return [
    e,
    t * n / ((e = (2 - t) * n) < 1 ? e : 2 - e) || 0,
    e / 2
  ];
};
var isOnePointZero = function(e) {
  return typeof e == "string" && e.includes(".") && Number.parseFloat(e) === 1;
};
var isPercentage = function(e) {
  return typeof e == "string" && e.includes("%");
};
var bound01 = function(e, t) {
  isOnePointZero(e) && (e = "100%");
  let n = isPercentage(e);
  return e = Math.min(t, Math.max(0, Number.parseFloat(`${e}`))), n && (e = Number.parseInt(`${e * t}`, 10) / 100), Math.abs(e - t) < 1e-6 ? 1 : e % t / Number.parseFloat(t);
};
var INT_HEX_MAP = {
  10: "A",
  11: "B",
  12: "C",
  13: "D",
  14: "E",
  15: "F"
};
var hexOne = (e) => {
  e = Math.min(Math.round(e), 255);
  let t = Math.floor(e / 16), n = e % 16;
  return `${INT_HEX_MAP[t] || t}${INT_HEX_MAP[n] || n}`;
};
var toHex = function({ r: e, g: t, b: n }) {
  return Number.isNaN(+e) || Number.isNaN(+t) || Number.isNaN(+n) ? "" : `#${hexOne(e)}${hexOne(t)}${hexOne(n)}`;
};
var HEX_INT_MAP = {
  A: 10,
  B: 11,
  C: 12,
  D: 13,
  E: 14,
  F: 15
};
var parseHexChannel = function(e) {
  return e.length === 2 ? (HEX_INT_MAP[e[0].toUpperCase()] || +e[0]) * 16 + (HEX_INT_MAP[e[1].toUpperCase()] || +e[1]) : HEX_INT_MAP[e[1].toUpperCase()] || +e[1];
};
var hsl2hsv = function(e, t, n) {
  t /= 100, n /= 100;
  let r = t, i = Math.max(n, 0.01);
  n *= 2, t *= n <= 1 ? n : 2 - n, r *= i <= 1 ? i : 2 - i;
  let o = (n + t) / 2;
  return {
    h: e,
    s: (n === 0 ? 2 * r / (i + r) : 2 * t / (n + t)) * 100,
    v: o * 100
  };
};
var rgb2hsv = (e, t, n) => {
  e = bound01(e, 255), t = bound01(t, 255), n = bound01(n, 255);
  let r = Math.max(e, t, n), i = Math.min(e, t, n), o, s = r, l = r - i, d = r === 0 ? 0 : l / r;
  if (r === i) o = 0;
  else {
    switch (r) {
      case e:
        o = (t - n) / l + (t < n ? 6 : 0);
        break;
      case t:
        o = (n - e) / l + 2;
        break;
      case n:
        o = (e - t) / l + 4;
        break;
    }
    o /= 6;
  }
  return {
    h: o * 360,
    s: d * 100,
    v: s * 100
  };
};
var hsv2rgb = function(e, t, n) {
  e = bound01(e, 360) * 6, t = bound01(t, 100), n = bound01(n, 100);
  let r = Math.floor(e), i = e - r, o = n * (1 - t), s = n * (1 - i * t), l = n * (1 - (1 - i) * t), d = r % 6, f = [
    n,
    s,
    o,
    o,
    l,
    n
  ][d], p2 = [
    l,
    n,
    n,
    s,
    o,
    o
  ][d], _ = [
    o,
    o,
    l,
    n,
    n,
    s
  ][d];
  return {
    r: Math.round(f * 255),
    g: Math.round(p2 * 255),
    b: Math.round(_ * 255)
  };
};
var Color = class {
  constructor(e = {}) {
    for (let t in this._hue = 0, this._saturation = 100, this._value = 100, this._alpha = 100, this.enableAlpha = false, this.format = "hex", this.value = "", e) hasOwn2(e, t) && (this[t] = e[t]);
    e.value ? this.fromString(e.value) : this.doOnChange();
  }
  set(e, t) {
    if (arguments.length === 1 && typeof e == "object") {
      for (let t2 in e) hasOwn2(e, t2) && this.set(t2, e[t2]);
      return;
    }
    this[`_${e}`] = t, this.doOnChange();
  }
  get(e) {
    return e === "alpha" ? Math.floor(this[`_${e}`]) : this[`_${e}`];
  }
  toRgb() {
    return hsv2rgb(this._hue, this._saturation, this._value);
  }
  fromString(e) {
    if (!e) {
      this._hue = 0, this._saturation = 100, this._value = 100, this.doOnChange();
      return;
    }
    let t = (e2, t2, n) => {
      this._hue = Math.max(0, Math.min(360, e2)), this._saturation = Math.max(0, Math.min(100, t2)), this._value = Math.max(0, Math.min(100, n)), this.doOnChange();
    };
    if (e.includes("hsl")) {
      let n = e.replace(/hsla|hsl|\(|\)/gm, "").split(/\s|,/g).filter((e2) => e2 !== "").map((e2, t2) => t2 > 2 ? Number.parseFloat(e2) : Number.parseInt(e2, 10));
      if (n.length === 4 ? this._alpha = Number.parseFloat(n[3]) * 100 : n.length === 3 && (this._alpha = 100), n.length >= 3) {
        let { h: e2, s: r, v: i } = hsl2hsv(n[0], n[1], n[2]);
        t(e2, r, i);
      }
    } else if (e.includes("hsv")) {
      let n = e.replace(/hsva|hsv|\(|\)/gm, "").split(/\s|,/g).filter((e2) => e2 !== "").map((e2, t2) => t2 > 2 ? Number.parseFloat(e2) : Number.parseInt(e2, 10));
      n.length === 4 ? this._alpha = Number.parseFloat(n[3]) * 100 : n.length === 3 && (this._alpha = 100), n.length >= 3 && t(n[0], n[1], n[2]);
    } else if (e.includes("rgb")) {
      let n = e.replace(/rgba|rgb|\(|\)/gm, "").split(/\s|,/g).filter((e2) => e2 !== "").map((e2, t2) => t2 > 2 ? Number.parseFloat(e2) : Number.parseInt(e2, 10));
      if (n.length === 4 ? this._alpha = Number.parseFloat(n[3]) * 100 : n.length === 3 && (this._alpha = 100), n.length >= 3) {
        let { h: e2, s: r, v: i } = rgb2hsv(n[0], n[1], n[2]);
        t(e2, r, i);
      }
    } else if (e.includes("#")) {
      let n = e.replace("#", "").trim();
      if (!/^[0-9a-fA-F]{3}$|^[0-9a-fA-F]{6}$|^[0-9a-fA-F]{8}$/.test(n)) return;
      let r, i, o;
      n.length === 3 ? (r = parseHexChannel(n[0] + n[0]), i = parseHexChannel(n[1] + n[1]), o = parseHexChannel(n[2] + n[2])) : (n.length === 6 || n.length === 8) && (r = parseHexChannel(n.slice(0, 2)), i = parseHexChannel(n.slice(2, 4)), o = parseHexChannel(n.slice(4, 6))), n.length === 8 ? this._alpha = parseHexChannel(n.slice(6)) / 255 * 100 : (n.length === 3 || n.length === 6) && (this._alpha = 100);
      let { h: s, s: l, v: d } = rgb2hsv(r, i, o);
      t(s, l, d);
    }
  }
  compare(e) {
    return Math.abs(e._hue - this._hue) < 2 && Math.abs(e._saturation - this._saturation) < 1 && Math.abs(e._value - this._value) < 1 && Math.abs(e._alpha - this._alpha) < 1;
  }
  doOnChange() {
    let { _hue: e, _saturation: t, _value: n, _alpha: r, format: i } = this;
    if (this.enableAlpha) switch (i) {
      case "hsl": {
        let r2 = hsv2hsl(e, t / 100, n / 100);
        this.value = `hsla(${e}, ${Math.round(r2[1] * 100)}%, ${Math.round(r2[2] * 100)}%, ${this.get("alpha") / 100})`;
        break;
      }
      case "hsv":
        this.value = `hsva(${e}, ${Math.round(t)}%, ${Math.round(n)}%, ${this.get("alpha") / 100})`;
        break;
      case "hex":
        this.value = `${toHex(hsv2rgb(e, t, n))}${hexOne(r * 255 / 100)}`;
        break;
      default: {
        let { r: r2, g: i2, b: o } = hsv2rgb(e, t, n);
        this.value = `rgba(${r2}, ${i2}, ${o}, ${this.get("alpha") / 100})`;
      }
    }
    else switch (i) {
      case "hsl": {
        let r2 = hsv2hsl(e, t / 100, n / 100);
        this.value = `hsl(${e}, ${Math.round(r2[1] * 100)}%, ${Math.round(r2[2] * 100)}%)`;
        break;
      }
      case "hsv":
        this.value = `hsv(${e}, ${Math.round(t)}%, ${Math.round(n)}%)`;
        break;
      case "rgb": {
        let { r: r2, g: i2, b: o } = hsv2rgb(e, t, n);
        this.value = `rgb(${r2}, ${i2}, ${o})`;
        break;
      }
      default:
        this.value = toHex(hsv2rgb(e, t, n));
    }
  }
};
var _sfc_main$7 = defineComponent({
  props: {
    colors: {
      type: Array,
      required: true
    },
    color: {
      type: Object,
      required: true
    }
  },
  setup(e) {
    let t = useNamespace("color-predefine"), { currentColor: n } = inject(colorPickerContextKey), r = ref(o(e.colors, e.color));
    watch2(() => n.value, (e2) => {
      let t2 = new Color();
      t2.fromString(e2), r.value.forEach((e3) => {
        e3.selected = t2.compare(e3);
      });
    }), watchEffect(() => {
      r.value = o(e.colors, e.color);
    });
    function i(t2) {
      e.color.fromString(e.colors[t2]);
    }
    function o(e2, t2) {
      return e2.map((e3) => {
        let n2 = new Color();
        return n2.enableAlpha = true, n2.format = "rgba", n2.fromString(e3), n2.selected = n2.value === t2.value, n2;
      });
    }
    return {
      rgbaColors: r,
      handleSelect: i,
      ns: t
    };
  }
});
var _hoisted_1$17 = ["onClick"];
function _sfc_render$7(e, t, r, i, o, s) {
  return openBlock(), createElementBlock("div", { class: normalizeClass(e.ns.b()) }, [createBaseVNode("div", { class: normalizeClass(e.ns.e("colors")) }, [(openBlock(true), createElementBlock(Fragment, null, renderList(e.rgbaColors, (t2, n) => (openBlock(), createElementBlock("div", {
    key: e.colors[n],
    class: normalizeClass([
      e.ns.e("color-selector"),
      e.ns.is("alpha", t2._alpha < 100),
      { selected: t2.selected }
    ]),
    onClick: (t3) => e.handleSelect(n)
  }, [createBaseVNode("div", { style: normalizeStyle({ backgroundColor: t2.value }) }, null, 4)], 10, _hoisted_1$17))), 128))], 2)], 2);
}
var Predefine = _export_sfc(_sfc_main$7, [["render", _sfc_render$7], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/color-picker/src/components/predefine.vue"]]);
var _sfc_main$6 = defineComponent({
  name: "ElSlPanel",
  props: { color: {
    type: Object,
    required: true
  } },
  setup(e) {
    let t = useNamespace("color-svpanel"), n = getCurrentInstance(), r = ref(0), i = ref(0), o = ref("hsl(0, 100%, 50%)"), s = computed2(() => ({
      hue: e.color.get("hue"),
      value: e.color.get("value")
    }));
    function d() {
      let t2 = e.color.get("saturation"), s2 = e.color.get("value"), { clientWidth: l, clientHeight: d2 } = n.vnode.el;
      i.value = t2 * l / 100, r.value = (100 - s2) * d2 / 100, o.value = `hsl(${e.color.get("hue")}, 100%, 50%)`;
    }
    function f(t2) {
      let o3 = n.vnode.el.getBoundingClientRect(), { clientX: s2, clientY: l } = getClientXY(t2), d2 = s2 - o3.left, f2 = l - o3.top;
      d2 = Math.max(0, d2), d2 = Math.min(d2, o3.width), f2 = Math.max(0, f2), f2 = Math.min(f2, o3.height), i.value = d2, r.value = f2, e.color.set({
        saturation: d2 / o3.width * 100,
        value: 100 - f2 / o3.height * 100
      });
    }
    return watch2(() => s.value, () => {
      d();
    }), onMounted(() => {
      draggable(n.vnode.el, {
        drag: (e2) => {
          f(e2);
        },
        end: (e2) => {
          f(e2);
        }
      }), d();
    }), {
      cursorTop: r,
      cursorLeft: i,
      background: o,
      colorValue: s,
      handleDrag: f,
      update: d,
      ns: t
    };
  }
});
var _hoisted_2$11 = [createBaseVNode("div", null, null, -1)];
function _sfc_render$6(e, t, n, r, i, o) {
  return openBlock(), createElementBlock("div", {
    class: normalizeClass(e.ns.b()),
    style: normalizeStyle({ backgroundColor: e.background })
  }, [
    createBaseVNode("div", { class: normalizeClass(e.ns.e("white")) }, null, 2),
    createBaseVNode("div", { class: normalizeClass(e.ns.e("black")) }, null, 2),
    createBaseVNode("div", {
      class: normalizeClass(e.ns.e("cursor")),
      style: normalizeStyle({
        top: e.cursorTop + "px",
        left: e.cursorLeft + "px"
      })
    }, _hoisted_2$11, 6)
  ], 6);
}
var SvPanel = _export_sfc(_sfc_main$6, [["render", _sfc_render$6], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/color-picker/src/components/sv-panel.vue"]]);
var _hoisted_1$16 = ["onKeydown"];
var _hoisted_2$10 = [
  "id",
  "aria-label",
  "aria-labelledby",
  "aria-description",
  "aria-disabled",
  "tabindex"
];
withInstall(_export_sfc(defineComponent({
  ...defineComponent({ name: "ElColorPicker" }),
  props: colorPickerProps,
  emits: colorPickerEmits,
  setup(e, { expose: t, emit: n }) {
    let r = e, { t: i } = useLocale(), o = useNamespace("color"), { formItem: s } = useFormItem(), d = useFormSize(), x = useFormDisabled(), { inputId: w, isLabeledByFormItem: A7 } = useFormItemInputId(r, { formItemContext: s }), j7 = ref(), M7 = ref(), N7 = ref(), P7 = ref(), F7 = ref(), I7 = ref(), { isFocused: L7, handleFocus: B7, handleBlur: H7 } = useFocusController(F7, {
      beforeBlur(e2) {
        return P7.value?.isFocusInsideContent(e2);
      },
      afterBlur() {
        o9(false), d9();
      }
    }), U7 = (e2) => {
      if (x.value) return E9();
      B7(e2);
    }, W7 = true, K7 = reactive(new Color({
      enableAlpha: r.showAlpha,
      format: r.colorFormat || "",
      value: r.modelValue
    })), q7 = ref(false), Y7 = ref(false), Z7 = ref(""), $7 = computed2(() => !r.modelValue && !Y7.value ? "transparent" : a9(K7, r.showAlpha)), t9 = computed2(() => !r.modelValue && !Y7.value ? "" : K7.value), n9 = computed2(() => A7.value ? void 0 : r.label || i("el.colorpicker.defaultLabel")), r9 = computed2(() => A7.value ? s?.labelId : void 0), i9 = computed2(() => [
      o.b("picker"),
      o.is("disabled", x.value),
      o.bm("picker", d.value),
      o.is("focused", L7.value)
    ]);
    function a9(e2, t2) {
      if (!(e2 instanceof Color)) throw TypeError("color should be instance of _color Class");
      let { r: n2, g: r2, b: i2 } = e2.toRgb();
      return t2 ? `rgba(${n2}, ${r2}, ${i2}, ${e2.get("alpha") / 100})` : `rgb(${n2}, ${r2}, ${i2})`;
    }
    function o9(e2) {
      q7.value = e2;
    }
    let c9 = debounce_default(o9, 100, { leading: true });
    function l9() {
      x.value || o9(true);
    }
    function u9() {
      c9(false), d9();
    }
    function d9() {
      nextTick(() => {
        r.modelValue ? K7.fromString(r.modelValue) : (K7.value = "", nextTick(() => {
          Y7.value = false;
        }));
      });
    }
    function p9() {
      x.value || c9(!q7.value);
    }
    function m9() {
      K7.fromString(Z7.value);
    }
    function h9() {
      let e2 = K7.value;
      n(UPDATE_MODEL_EVENT, e2), n("change", e2), r.validateEvent && s?.validate("change").catch((e3) => void 0), c9(false), nextTick(() => {
        let e3 = new Color({
          enableAlpha: r.showAlpha,
          format: r.colorFormat || "",
          value: r.modelValue
        });
        K7.compare(e3) || d9();
      });
    }
    function g9() {
      c9(false), n(UPDATE_MODEL_EVENT, null), n("change", null), r.modelValue !== null && r.validateEvent && s?.validate("change").catch((e2) => void 0), d9();
    }
    function v9(e2) {
      q7.value && (u9(), L7.value && H7(new FocusEvent("focus", e2)));
    }
    function b9(e2) {
      e2.preventDefault(), e2.stopPropagation(), o9(false), d9();
    }
    function w9(e2) {
      switch (e2.code) {
        case EVENT_CODE.enter:
        case EVENT_CODE.space:
          e2.preventDefault(), e2.stopPropagation(), l9(), I7.value.focus();
          break;
        case EVENT_CODE.esc:
          b9(e2);
          break;
      }
    }
    function T9() {
      F7.value.focus();
    }
    function E9() {
      F7.value.blur();
    }
    return onMounted(() => {
      r.modelValue && (Z7.value = t9.value);
    }), watch2(() => r.modelValue, (e2) => {
      e2 ? e2 && e2 !== K7.value && (W7 = false, K7.fromString(e2)) : Y7.value = false;
    }), watch2(() => t9.value, (e2) => {
      Z7.value = e2, W7 && n("activeChange", e2), W7 = true;
    }), watch2(() => K7.value, () => {
      !r.modelValue && !Y7.value && (Y7.value = true);
    }), watch2(() => q7.value, () => {
      nextTick(() => {
        var e2, t2, n2;
        (e2 = j7.value) == null || e2.update(), (t2 = M7.value) == null || t2.update(), (n2 = N7.value) == null || n2.update();
      });
    }), provide(colorPickerContextKey, { currentColor: t9 }), t({
      color: K7,
      show: l9,
      hide: u9,
      focus: T9,
      blur: E9
    }), (e2, t2) => (openBlock(), createBlock(unref(ElTooltip), {
      ref_key: "popper",
      ref: P7,
      visible: q7.value,
      "show-arrow": false,
      "fallback-placements": [
        "bottom",
        "top",
        "right",
        "left"
      ],
      offset: 0,
      "gpu-acceleration": false,
      "popper-class": [
        unref(o).be("picker", "panel"),
        unref(o).b("dropdown"),
        e2.popperClass
      ],
      "stop-popper-mouse-event": false,
      effect: "light",
      trigger: "click",
      transition: `${unref(o).namespace.value}-zoom-in-top`,
      persistent: "",
      onHide: t2[2] ||= (e3) => o9(false)
    }, {
      content: withCtx(() => [withDirectives((openBlock(), createElementBlock("div", { onKeydown: withKeys(b9, ["esc"]) }, [
        createBaseVNode("div", { class: normalizeClass(unref(o).be("dropdown", "main-wrapper")) }, [createVNode(HueSlider, {
          ref_key: "hue",
          ref: j7,
          class: "hue-slider",
          color: unref(K7),
          vertical: ""
        }, null, 8, ["color"]), createVNode(SvPanel, {
          ref_key: "sv",
          ref: M7,
          color: unref(K7)
        }, null, 8, ["color"])], 2),
        e2.showAlpha ? (openBlock(), createBlock(AlphaSlider, {
          key: 0,
          ref_key: "alpha",
          ref: N7,
          color: unref(K7)
        }, null, 8, ["color"])) : createCommentVNode("v-if", true),
        e2.predefine ? (openBlock(), createBlock(Predefine, {
          key: 1,
          ref: "predefine",
          color: unref(K7),
          colors: e2.predefine
        }, null, 8, ["color", "colors"])) : createCommentVNode("v-if", true),
        createBaseVNode("div", { class: normalizeClass(unref(o).be("dropdown", "btns")) }, [
          createBaseVNode("span", { class: normalizeClass(unref(o).be("dropdown", "value")) }, [createVNode(unref(ElInput), {
            ref_key: "inputRef",
            ref: I7,
            modelValue: Z7.value,
            "onUpdate:modelValue": t2[0] ||= (e3) => Z7.value = e3,
            "validate-event": false,
            size: "small",
            onKeyup: withKeys(m9, ["enter"]),
            onBlur: m9
          }, null, 8, ["modelValue", "onKeyup"])], 2),
          createVNode(unref(ElButton), {
            class: normalizeClass(unref(o).be("dropdown", "link-btn")),
            text: "",
            size: "small",
            onClick: g9
          }, {
            default: withCtx(() => [createTextVNode(toDisplayString(unref(i)("el.colorpicker.clear")), 1)]),
            _: 1
          }, 8, ["class"]),
          createVNode(unref(ElButton), {
            plain: "",
            size: "small",
            class: normalizeClass(unref(o).be("dropdown", "btn")),
            onClick: h9
          }, {
            default: withCtx(() => [createTextVNode(toDisplayString(unref(i)("el.colorpicker.confirm")), 1)]),
            _: 1
          }, 8, ["class"])
        ], 2)
      ], 40, _hoisted_1$16)), [[unref(ClickOutside), v9]])]),
      default: withCtx(() => [createBaseVNode("div", {
        id: unref(w),
        ref_key: "triggerRef",
        ref: F7,
        class: normalizeClass(unref(i9)),
        role: "button",
        "aria-label": unref(n9),
        "aria-labelledby": unref(r9),
        "aria-description": unref(i)("el.colorpicker.description", { color: e2.modelValue || "" }),
        "aria-disabled": unref(x),
        tabindex: unref(x) ? -1 : e2.tabindex,
        onKeydown: w9,
        onFocus: U7,
        onBlur: t2[1] ||= (...e3) => unref(H7) && unref(H7)(...e3)
      }, [unref(x) ? (openBlock(), createElementBlock("div", {
        key: 0,
        class: normalizeClass(unref(o).be("picker", "mask"))
      }, null, 2)) : createCommentVNode("v-if", true), createBaseVNode("div", {
        class: normalizeClass(unref(o).be("picker", "trigger")),
        onClick: p9
      }, [createBaseVNode("span", { class: normalizeClass([unref(o).be("picker", "color"), unref(o).is("alpha", e2.showAlpha)]) }, [createBaseVNode("span", {
        class: normalizeClass(unref(o).be("picker", "color-inner")),
        style: normalizeStyle({ backgroundColor: unref($7) })
      }, [withDirectives(createVNode(unref(ElIcon), { class: normalizeClass([unref(o).be("picker", "icon"), unref(o).is("icon-arrow-down")]) }, {
        default: withCtx(() => [createVNode(unref(arrow_down_default))]),
        _: 1
      }, 8, ["class"]), [[vShow, e2.modelValue || Y7.value]]), withDirectives(createVNode(unref(ElIcon), { class: normalizeClass([unref(o).be("picker", "empty"), unref(o).is("icon-close")]) }, {
        default: withCtx(() => [createVNode(unref(close_default$1))]),
        _: 1
      }, 8, ["class"]), [[vShow, !e2.modelValue && !Y7.value]])], 6)], 2)], 2)], 42, _hoisted_2$10)]),
      _: 1
    }, 8, [
      "visible",
      "popper-class",
      "transition"
    ]));
  }
}), [["__file", "/home/runner/work/element-plus/element-plus/packages/components/color-picker/src/color-picker.vue"]]));
var _sfc_main$5 = defineComponent({ inheritAttrs: false });
function _sfc_render$5(e, t, n, r, i, o) {
  return renderSlot(e.$slots, "default");
}
var Collection = _export_sfc(_sfc_main$5, [["render", _sfc_render$5], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/collection/src/collection.vue"]]);
var _sfc_main$4 = defineComponent({
  name: "ElCollectionItem",
  inheritAttrs: false
});
function _sfc_render$4(e, t, n, r, i, o) {
  return renderSlot(e.$slots, "default");
}
var CollectionItem = _export_sfc(_sfc_main$4, [["render", _sfc_render$4], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/collection/src/collection-item.vue"]]);
var COLLECTION_ITEM_SIGN = "data-el-collection-item";
var createCollectionWithScope = (e) => {
  let t = `El${e}Collection`, n = `${t}Item`, r = Symbol(t), i = Symbol(n);
  return {
    COLLECTION_INJECTION_KEY: r,
    COLLECTION_ITEM_INJECTION_KEY: i,
    ElCollection: {
      ...Collection,
      name: t,
      setup() {
        let e2 = ref(null), t2 = /* @__PURE__ */ new Map();
        provide(r, {
          itemMap: t2,
          getItems: () => {
            let n2 = unref(e2);
            if (!n2) return [];
            let r2 = Array.from(n2.querySelectorAll(`[${COLLECTION_ITEM_SIGN}]`));
            return [...t2.values()].sort((e3, t3) => r2.indexOf(e3.ref) - r2.indexOf(t3.ref));
          },
          collectionRef: e2
        });
      }
    },
    ElCollectionItem: {
      ...CollectionItem,
      name: n,
      setup(e2, { attrs: t2 }) {
        let n2 = ref(null), o = inject(r, void 0);
        provide(i, { collectionItemRef: n2 }), onMounted(() => {
          let e3 = unref(n2);
          e3 && o.itemMap.set(e3, {
            ref: e3,
            ...t2
          });
        }), onBeforeUnmount(() => {
          let e3 = unref(n2);
          o.itemMap.delete(e3);
        });
      }
    }
  };
};
var dropdownProps = buildProps({
  trigger: useTooltipTriggerProps.trigger,
  effect: {
    ...useTooltipContentProps.effect,
    default: "light"
  },
  type: { type: definePropType(String) },
  placement: {
    type: definePropType(String),
    default: "bottom"
  },
  popperOptions: {
    type: definePropType(Object),
    default: () => ({})
  },
  id: String,
  size: {
    type: String,
    default: ""
  },
  splitButton: Boolean,
  hideOnClick: {
    type: Boolean,
    default: true
  },
  loop: {
    type: Boolean,
    default: true
  },
  showTimeout: {
    type: Number,
    default: 150
  },
  hideTimeout: {
    type: Number,
    default: 150
  },
  tabindex: {
    type: definePropType([Number, String]),
    default: 0
  },
  maxHeight: {
    type: definePropType([Number, String]),
    default: ""
  },
  popperClass: {
    type: String,
    default: ""
  },
  disabled: {
    type: Boolean,
    default: false
  },
  role: {
    type: String,
    default: "menu"
  },
  buttonProps: { type: definePropType(Object) },
  teleported: useTooltipContentProps.teleported
});
buildProps({
  command: {
    type: [
      Object,
      String,
      Number
    ],
    default: () => ({})
  },
  disabled: Boolean,
  divided: Boolean,
  textValue: String,
  icon: { type: iconPropType }
}), buildProps({ onKeydown: { type: definePropType(Function) } });
var FIRST_KEYS = [
  EVENT_CODE.down,
  EVENT_CODE.pageDown,
  EVENT_CODE.home
];
var LAST_KEYS = [
  EVENT_CODE.up,
  EVENT_CODE.pageUp,
  EVENT_CODE.end
];
[...FIRST_KEYS, ...LAST_KEYS];
var { ElCollection, ElCollectionItem, COLLECTION_INJECTION_KEY, COLLECTION_ITEM_INJECTION_KEY } = createCollectionWithScope("Dropdown");
var elPaginationKey = Symbol("elPaginationKey");
var paginationPrevProps = buildProps({
  disabled: Boolean,
  currentPage: {
    type: Number,
    default: 1
  },
  prevText: { type: String },
  prevIcon: { type: iconPropType }
});
var paginationPrevEmits = { click: (e) => e instanceof MouseEvent };
var _hoisted_1$15 = [
  "disabled",
  "aria-label",
  "aria-disabled"
];
var _hoisted_2$9 = { key: 0 };
var Prev = _export_sfc(defineComponent({
  ...defineComponent({ name: "ElPaginationPrev" }),
  props: paginationPrevProps,
  emits: paginationPrevEmits,
  setup(e) {
    let t = e, { t: n } = useLocale(), r = computed2(() => t.disabled || t.currentPage <= 1);
    return (e2, t2) => (openBlock(), createElementBlock("button", {
      type: "button",
      class: "btn-prev",
      disabled: unref(r),
      "aria-label": e2.prevText || unref(n)("el.pagination.prev"),
      "aria-disabled": unref(r),
      onClick: t2[0] ||= (t3) => e2.$emit("click", t3)
    }, [e2.prevText ? (openBlock(), createElementBlock("span", _hoisted_2$9, toDisplayString(e2.prevText), 1)) : (openBlock(), createBlock(unref(ElIcon), { key: 1 }, {
      default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(e2.prevIcon)))]),
      _: 1
    }))], 8, _hoisted_1$15));
  }
}), [["__file", "/home/runner/work/element-plus/element-plus/packages/components/pagination/src/components/prev.vue"]]);
var paginationNextProps = buildProps({
  disabled: Boolean,
  currentPage: {
    type: Number,
    default: 1
  },
  pageCount: {
    type: Number,
    default: 50
  },
  nextText: { type: String },
  nextIcon: { type: iconPropType }
});
var _hoisted_1$14 = [
  "disabled",
  "aria-label",
  "aria-disabled"
];
var _hoisted_2$8 = { key: 0 };
var Next = _export_sfc(defineComponent({
  ...defineComponent({ name: "ElPaginationNext" }),
  props: paginationNextProps,
  emits: ["click"],
  setup(e) {
    let t = e, { t: n } = useLocale(), r = computed2(() => t.disabled || t.currentPage === t.pageCount || t.pageCount === 0);
    return (e2, t2) => (openBlock(), createElementBlock("button", {
      type: "button",
      class: "btn-next",
      disabled: unref(r),
      "aria-label": e2.nextText || unref(n)("el.pagination.next"),
      "aria-disabled": unref(r),
      onClick: t2[0] ||= (t3) => e2.$emit("click", t3)
    }, [e2.nextText ? (openBlock(), createElementBlock("span", _hoisted_2$8, toDisplayString(e2.nextText), 1)) : (openBlock(), createBlock(unref(ElIcon), { key: 1 }, {
      default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(e2.nextIcon)))]),
      _: 1
    }))], 8, _hoisted_1$14));
  }
}), [["__file", "/home/runner/work/element-plus/element-plus/packages/components/pagination/src/components/next.vue"]]);
var selectGroupKey = Symbol("ElSelectGroup");
var selectKey = Symbol("ElSelect");
function useOption(e, t) {
  let n = inject(selectKey), r = inject(selectGroupKey, { disabled: false }), i = computed2(() => isObject$4(e.value)), o = computed2(() => n.props.multiple ? y(n.props.modelValue, e.value) : x(e.value, n.props.modelValue)), s = computed2(() => {
    if (n.props.multiple) {
      let e2 = n.props.modelValue || [];
      return !o.value && e2.length >= n.props.multipleLimit && n.props.multipleLimit > 0;
    } else return false;
  }), d = computed2(() => e.label || (i.value ? "" : e.value)), f = computed2(() => e.value || e.label || ""), p2 = computed2(() => e.disabled || t.groupDisabled || s.value), _ = getCurrentInstance(), y = (e2 = [], t2) => {
    if (i.value) {
      let r2 = n.props.valueKey;
      return e2 && e2.some((e3) => toRaw(get_default(e3, r2)) === get_default(t2, r2));
    } else return e2 && e2.includes(t2);
  }, x = (e2, t2) => {
    if (i.value) {
      let { valueKey: r2 } = n.props;
      return get_default(e2, r2) === get_default(t2, r2);
    } else return e2 === t2;
  }, w = () => {
    !e.disabled && !r.disabled && (n.hoverIndex = n.optionsArray.indexOf(_.proxy));
  };
  watch2(() => d.value, () => {
    !e.created && !n.props.remote && n.setSelected();
  }), watch2(() => e.value, (t2, r2) => {
    let { remote: i2, valueKey: o3 } = n.props;
    if (Object.is(t2, r2) || (n.onOptionDestroy(r2, _.proxy), n.onOptionCreate(_.proxy)), !e.created && !i2) {
      if (o3 && isObject$4(t2) && isObject$4(r2) && t2[o3] === r2[o3]) return;
      n.setSelected();
    }
  }), watch2(() => r.disabled, () => {
    t.groupDisabled = r.disabled;
  }, { immediate: true });
  let { queryChange: k } = toRaw(n);
  return watch2(k, (r2) => {
    let { query: i2 } = unref(r2);
    t.visible = new RegExp(escapeStringRegexp(i2), "i").test(d.value) || e.created, t.visible || n.filteredOptionsCount--;
  }, { immediate: true }), {
    select: n,
    currentLabel: d,
    currentValue: f,
    itemSelected: o,
    isDisabled: p2,
    hoverItem: w
  };
}
var _sfc_main$3 = defineComponent({
  name: "ElOption",
  componentName: "ElOption",
  props: {
    value: {
      required: true,
      type: [
        String,
        Number,
        Boolean,
        Object
      ]
    },
    label: [String, Number],
    created: Boolean,
    disabled: Boolean
  },
  setup(e) {
    let t = useNamespace("select"), n = useId2(), r = computed2(() => [
      t.be("dropdown", "item"),
      t.is("disabled", unref(d)),
      {
        selected: unref(s),
        hover: unref(y)
      }
    ]), i = reactive({
      index: -1,
      groupDisabled: false,
      visible: true,
      hitState: false,
      hover: false
    }), { currentLabel: o, itemSelected: s, isDisabled: d, select: f, hoverItem: p2 } = useOption(e, i), { visible: _, hover: y } = toRefs(i), x = getCurrentInstance().proxy;
    f.onOptionCreate(x), onBeforeUnmount(() => {
      let e2 = x.value, { selected: t2 } = f, n2 = (f.props.multiple ? t2 : [t2]).some((e3) => e3.value === x.value);
      nextTick(() => {
        f.cachedOptions.get(e2) === x && !n2 && f.cachedOptions.delete(e2);
      }), f.onOptionDestroy(e2, x);
    });
    function w() {
      e.disabled !== true && i.groupDisabled !== true && f.handleOptionSelect(x);
    }
    return {
      ns: t,
      id: n,
      containerKls: r,
      currentLabel: o,
      itemSelected: s,
      isDisabled: d,
      select: f,
      hoverItem: p2,
      visible: _,
      hover: y,
      selectOptionClick: w,
      states: i
    };
  }
});
var _hoisted_1$13 = [
  "id",
  "aria-disabled",
  "aria-selected"
];
function _sfc_render$3(e, t, n, r, i, o) {
  return withDirectives((openBlock(), createElementBlock("li", {
    id: e.id,
    class: normalizeClass(e.containerKls),
    role: "option",
    "aria-disabled": e.isDisabled || void 0,
    "aria-selected": e.itemSelected,
    onMouseenter: t[0] ||= (...t2) => e.hoverItem && e.hoverItem(...t2),
    onClick: t[1] ||= withModifiers((...t2) => e.selectOptionClick && e.selectOptionClick(...t2), ["stop"])
  }, [renderSlot(e.$slots, "default", {}, () => [createBaseVNode("span", null, toDisplayString(e.currentLabel), 1)])], 42, _hoisted_1$13)), [[vShow, e.visible]]);
}
var Option = _export_sfc(_sfc_main$3, [["render", _sfc_render$3], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/select/src/option.vue"]]);
var _sfc_main$2 = defineComponent({
  name: "ElSelectDropdown",
  componentName: "ElSelectDropdown",
  setup() {
    let e = inject(selectKey), t = useNamespace("select"), n = computed2(() => e.props.popperClass), r = computed2(() => e.props.multiple), i = computed2(() => e.props.fitInputWidth), o = ref("");
    function s() {
      o.value = `${e.selectWrapper?.offsetWidth}px`;
    }
    return onMounted(() => {
      s(), useResizeObserver(e.selectWrapper, s);
    }), {
      ns: t,
      minWidth: o,
      popperClass: n,
      isMultiple: r,
      isFitInputWidth: i
    };
  }
});
function _sfc_render$2(e, t, n, r, i, o) {
  return openBlock(), createElementBlock("div", {
    class: normalizeClass([
      e.ns.b("dropdown"),
      e.ns.is("multiple", e.isMultiple),
      e.popperClass
    ]),
    style: normalizeStyle({ [e.isFitInputWidth ? "width" : "minWidth"]: e.minWidth })
  }, [
    e.$slots.header ? (openBlock(), createElementBlock("div", {
      key: 0,
      class: normalizeClass(e.ns.be("dropdown", "header"))
    }, [renderSlot(e.$slots, "header")], 2)) : createCommentVNode("v-if", true),
    renderSlot(e.$slots, "default"),
    e.$slots.footer ? (openBlock(), createElementBlock("div", {
      key: 1,
      class: normalizeClass(e.ns.be("dropdown", "footer"))
    }, [renderSlot(e.$slots, "footer")], 2)) : createCommentVNode("v-if", true)
  ], 6);
}
var ElSelectMenu = _export_sfc(_sfc_main$2, [["render", _sfc_render$2], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/select/src/select-dropdown.vue"]]);
function useSelectStates(e) {
  let { t } = useLocale();
  return reactive({
    options: /* @__PURE__ */ new Map(),
    cachedOptions: /* @__PURE__ */ new Map(),
    disabledOptions: /* @__PURE__ */ new Map(),
    createdLabel: null,
    createdSelected: false,
    selected: e.multiple ? [] : {},
    inputLength: 20,
    inputWidth: 0,
    optionsCount: 0,
    filteredOptionsCount: 0,
    visible: false,
    selectedLabel: "",
    hoverIndex: -1,
    query: "",
    previousQuery: null,
    inputHovering: false,
    cachedPlaceHolder: "",
    currentPlaceholder: t("el.select.placeholder"),
    menuVisibleOnFocus: false,
    isOnComposition: false,
    prefixWidth: 11,
    mouseEnter: false,
    focused: false
  });
}
var useSelect = (e, t, n) => {
  let { t: r } = useLocale(), i = useNamespace("select");
  useDeprecated({
    from: "suffixTransition",
    replacement: "override style scheme",
    version: "2.3.0",
    scope: "props",
    ref: "https://element-plus.org/en-US/component/select.html#select-attributes"
  }, computed2(() => e.suffixTransition === false));
  let o = ref(null), s = ref(null), d = ref(null), f = ref(null), p2 = ref(null), _ = ref(null), y = ref(null), x = ref(null), w = ref(), k = shallowRef({ query: "" }), $ = shallowRef(""), A7 = ref([]), j7 = 0, { form: M7, formItem: N7 } = useFormItem(), P7 = computed2(() => !e.filterable || e.multiple || !t.visible), F7 = computed2(() => e.disabled || M7?.disabled), I7 = computed2(() => {
    let n2 = e.multiple ? Array.isArray(e.modelValue) && e.modelValue.length > 0 : e.modelValue !== void 0 && e.modelValue !== null && e.modelValue !== "";
    return e.clearable && !F7.value && t.inputHovering && n2;
  }), L7 = computed2(() => e.remote && e.filterable && !e.remoteShowSuffix ? "" : e.suffixIcon), z7 = computed2(() => i.is("reverse", L7.value && t.visible && e.suffixTransition)), B7 = computed2(() => M7?.statusIcon && N7?.validateState && ValidateComponentsMap[N7?.validateState]), V7 = computed2(() => e.remote ? 300 : 0), H7 = computed2(() => e.loading ? e.loadingText || r("el.select.loading") : e.remote && t.query === "" && t.options.size === 0 ? false : e.filterable && t.query && t.options.size > 0 && t.filteredOptionsCount === 0 ? e.noMatchText || r("el.select.noMatch") : t.options.size === 0 ? e.noDataText || r("el.select.noData") : null), U7 = computed2(() => {
    let e2 = Array.from(t.options.values()), n2 = [];
    return A7.value.forEach((t2) => {
      let r2 = e2.findIndex((e3) => e3.currentLabel === t2);
      r2 > -1 && n2.push(e2[r2]);
    }), n2.length >= e2.length ? n2 : e2;
  }), W7 = computed2(() => Array.from(t.cachedOptions.values())), G7 = computed2(() => {
    let n2 = U7.value.filter((e2) => !e2.created).some((e2) => e2.currentLabel === t.query);
    return e.filterable && e.allowCreate && t.query !== "" && !n2;
  }), K7 = useFormSize(), q7 = computed2(() => ["small"].includes(K7.value) ? "small" : "default"), J7 = computed2({
    get() {
      return t.visible && H7.value !== false;
    },
    set(e2) {
      t.visible = e2;
    }
  });
  watch2([
    () => F7.value,
    () => K7.value,
    () => M7?.size
  ], () => {
    nextTick(() => {
      Y7();
    });
  }), watch2(() => e.placeholder, (n2) => {
    t.cachedPlaceHolder = t.currentPlaceholder = n2, e.multiple && Array.isArray(e.modelValue) && e.modelValue.length > 0 && (t.currentPlaceholder = "");
  }), watch2(() => e.modelValue, (n2, r2) => {
    e.multiple && (Y7(), n2 && n2.length > 0 || s.value && t.query !== "" ? t.currentPlaceholder = "" : t.currentPlaceholder = t.cachedPlaceHolder, e.filterable && !e.reserveKeyword && (t.query = "", X7(t.query))), $7(), e.filterable && !e.multiple && (t.inputLength = 20), !isEqual_default(n2, r2) && e.validateEvent && N7?.validate("change").catch((e2) => void 0);
  }, {
    flush: "post",
    deep: true
  }), watch2(() => t.visible, (r2) => {
    var i2, o3, l, p3, _2;
    r2 ? ((o3 = (i2 = f.value)?.updatePopper) == null || o3.call(i2), e.filterable && (t.filteredOptionsCount = t.optionsCount, t.query = e.remote ? "" : t.selectedLabel, (p3 = (l = d.value)?.focus) == null || p3.call(l), e.multiple ? (_2 = s.value) == null || _2.focus() : t.selectedLabel &&= (t.currentPlaceholder = `${t.selectedLabel}`, ""), X7(t.query), !e.multiple && !e.remote && (k.value.query = "", triggerRef(k), triggerRef($)))) : (e.filterable && (isFunction$3(e.filterMethod) && e.filterMethod(""), isFunction$3(e.remoteMethod) && e.remoteMethod("")), t.query = "", t.previousQuery = null, t.selectedLabel = "", t.inputLength = 20, t.menuVisibleOnFocus = false, n9(), nextTick(() => {
      s.value && s.value.value === "" && t.selected.length === 0 && (t.currentPlaceholder = t.cachedPlaceHolder);
    }), e.multiple || (t.selected && (e.filterable && e.allowCreate && t.createdSelected && t.createdLabel ? t.selectedLabel = t.createdLabel : t.selectedLabel = t.selected.currentLabel, e.filterable && (t.query = t.selectedLabel)), e.filterable && (t.currentPlaceholder = t.cachedPlaceHolder))), n.emit("visible-change", r2);
  }), watch2(() => t.options.entries(), () => {
    var n2, r2;
    if (!isClient) return;
    (r2 = (n2 = f.value)?.updatePopper) == null || r2.call(n2), e.multiple && Y7();
    let i2 = y.value?.querySelectorAll("input") || [];
    (!e.filterable && !e.defaultFirstOption && !isUndefined(e.modelValue) || !Array.from(i2).includes(document.activeElement)) && $7(), e.defaultFirstOption && (e.filterable || e.remote) && t.filteredOptionsCount && Q7();
  }, { flush: "post" }), watch2(() => t.hoverIndex, (e2) => {
    isNumber(e2) && e2 > -1 ? w.value = U7.value[e2] || {} : w.value = {}, U7.value.forEach((e3) => {
      e3.hover = w.value === e3;
    });
  });
  let Y7 = () => {
    nextTick(() => {
      var e2, n2;
      if (!o.value) return;
      let r2 = o.value.$el.querySelector("input");
      j7 ||= r2.clientHeight > 0 ? r2.clientHeight + 2 : 0;
      let s2 = _.value, l = getComputedStyle(r2).getPropertyValue(i.cssVarName("input-height")), d2 = Number.parseFloat(l) || getComponentSize(K7.value || M7?.size), p3 = K7.value || d2 === j7 || j7 <= 0 ? d2 : j7;
      r2.offsetParent !== null && (r2.style.height = `${(t.selected.length === 0 ? p3 : Math.max(s2 ? s2.clientHeight + (s2.clientHeight > p3 ? 6 : 0) : 0, p3)) - 2}px`), t.visible && H7.value !== false && ((n2 = (e2 = f.value)?.updatePopper) == null || n2.call(e2));
    });
  }, X7 = async (n2) => {
    if (!(t.previousQuery === n2 || t.isOnComposition)) {
      if (t.previousQuery === null && (isFunction$3(e.filterMethod) || isFunction$3(e.remoteMethod))) {
        t.previousQuery = n2;
        return;
      }
      t.previousQuery = n2, nextTick(() => {
        var e2, n3;
        t.visible && ((n3 = (e2 = f.value)?.updatePopper) == null || n3.call(e2));
      }), t.hoverIndex = -1, e.multiple && e.filterable && nextTick(() => {
        if (!F7.value) {
          let n3 = s.value.value.length * 15 + 20;
          t.inputLength = e.collapseTags ? Math.min(50, n3) : n3, Z7();
        }
        Y7();
      }), e.remote && isFunction$3(e.remoteMethod) ? (t.hoverIndex = -1, e.remoteMethod(n2)) : isFunction$3(e.filterMethod) ? (e.filterMethod(n2), triggerRef($)) : (t.filteredOptionsCount = t.optionsCount, k.value.query = n2, triggerRef(k), triggerRef($)), e.defaultFirstOption && (e.filterable || e.remote) && t.filteredOptionsCount && (await nextTick(), Q7());
    }
  }, Z7 = () => {
    t.currentPlaceholder !== "" && (t.currentPlaceholder = s.value.value ? "" : t.cachedPlaceHolder);
  }, Q7 = () => {
    let e2 = U7.value.filter((e3) => e3.visible && !e3.disabled && !e3.states.groupDisabled), n2 = e2.find((e3) => e3.created), r2 = e2[0];
    t.hoverIndex = v9(U7.value, n2 || r2);
  }, $7 = () => {
    if (e.multiple) t.selectedLabel = "";
    else {
      let n3 = t9(e.modelValue);
      n3.props?.created ? (t.createdLabel = n3.props.value, t.createdSelected = true) : t.createdSelected = false, t.selectedLabel = n3.currentLabel, t.selected = n3, e.filterable && (t.query = t.selectedLabel);
      return;
    }
    let n2 = [];
    Array.isArray(e.modelValue) && e.modelValue.forEach((e2) => {
      n2.push(t9(e2));
    }), t.selected = n2, nextTick(() => {
      Y7();
    });
  }, t9 = (n2) => {
    let r2, i2 = toRawType2(n2).toLowerCase() === "object", o3 = toRawType2(n2).toLowerCase() === "null", s2 = toRawType2(n2).toLowerCase() === "undefined";
    for (let o4 = t.cachedOptions.size - 1; o4 >= 0; o4--) {
      let t2 = W7.value[o4];
      if (i2 ? get_default(t2.value, e.valueKey) === get_default(n2, e.valueKey) : t2.value === n2) {
        r2 = {
          value: n2,
          currentLabel: t2.currentLabel,
          isDisabled: t2.isDisabled
        };
        break;
      }
    }
    if (r2) return r2;
    let l = {
      value: n2,
      currentLabel: i2 ? n2.label : !o3 && !s2 ? n2 : ""
    };
    return e.multiple && (l.hitState = false), l;
  }, n9 = () => {
    setTimeout(() => {
      let n2 = e.valueKey;
      e.multiple ? t.selected.length > 0 ? t.hoverIndex = Math.min.apply(null, t.selected.map((e2) => U7.value.findIndex((t2) => get_default(t2, n2) === get_default(e2, n2)))) : t.hoverIndex = -1 : t.hoverIndex = U7.value.findIndex((e2) => L9(e2) === L9(t.selected));
    }, 300);
  }, r9 = () => {
    var t2, n2;
    i9(), (n2 = (t2 = f.value)?.updatePopper) == null || n2.call(t2), e.multiple && Y7();
  }, i9 = () => {
    t.inputWidth = o.value?.$el.offsetWidth;
  }, a9 = () => {
    e.filterable && t.query !== t.selectedLabel && (t.query = t.selectedLabel, X7(t.query));
  }, s9 = debounce_default(() => {
    a9();
  }, V7.value), l9 = debounce_default((e2) => {
    X7(e2.target.value);
  }, V7.value), u9 = (t2) => {
    isEqual_default(e.modelValue, t2) || n.emit(CHANGE_EVENT, t2);
  }, p9 = (e2) => findLastIndex_default(e2, (e3) => !t.disabledOptions.has(e3)), m9 = (r2) => {
    if (r2.code !== EVENT_CODE.delete) {
      if (r2.target.value.length <= 0 && !T9()) {
        let t2 = e.modelValue.slice(), r3 = p9(t2);
        if (r3 < 0) return;
        t2.splice(r3, 1), n.emit(UPDATE_MODEL_EVENT, t2), u9(t2);
      }
      r2.target.value.length === 1 && e.modelValue.length === 0 && (t.currentPlaceholder = t.cachedPlaceHolder);
    }
  }, h9 = (r2, i2) => {
    let o3 = t.selected.indexOf(i2);
    if (o3 > -1 && !F7.value) {
      let t2 = e.modelValue.slice();
      t2.splice(o3, 1), n.emit(UPDATE_MODEL_EVENT, t2), u9(t2), n.emit("remove-tag", i2.value);
    }
    r2.stopPropagation(), k9();
  }, g9 = (r2) => {
    r2.stopPropagation();
    let i2 = e.multiple ? [] : "";
    if (!isString$2(i2)) for (let e2 of t.selected) e2.isDisabled && i2.push(e2.value);
    n.emit(UPDATE_MODEL_EVENT, i2), u9(i2), t.hoverIndex = -1, t.visible = false, n.emit("clear"), k9();
  }, _9 = (r2) => {
    var i2;
    if (e.multiple) {
      let o3 = (e.modelValue || []).slice(), l = v9(o3, r2.value);
      l > -1 ? o3.splice(l, 1) : (e.multipleLimit <= 0 || o3.length < e.multipleLimit) && o3.push(r2.value), n.emit(UPDATE_MODEL_EVENT, o3), u9(o3), r2.created && (t.query = "", X7(""), t.inputLength = 20), e.filterable && ((i2 = s.value) == null || i2.focus());
    } else n.emit(UPDATE_MODEL_EVENT, r2.value), u9(r2.value), t.visible = false;
    b9(), !t.visible && nextTick(() => {
      x9(r2);
    });
  }, v9 = (t2 = [], n2) => {
    if (!isObject$4(n2)) return t2.indexOf(n2);
    let r2 = e.valueKey, i2 = -1;
    return t2.some((e2, t3) => toRaw(get_default(e2, r2)) === get_default(n2, r2) ? (i2 = t3, true) : false), i2;
  }, b9 = () => {
    let e2 = s.value || o.value;
    e2 && e2?.focus();
  }, x9 = (e2) => {
    var t2, n2;
    let r2 = Array.isArray(e2) ? e2[0] : e2, o3 = null;
    if (r2?.value) {
      let e3 = U7.value.filter((e4) => e4.value === r2.value);
      e3.length > 0 && (o3 = e3[0].$el);
    }
    if (f.value && o3) {
      let e3 = (t2 = f.value?.popperRef?.contentRef)?.querySelector?.call(t2, `.${i.be("dropdown", "wrap")}`);
      e3 && scrollIntoView(e3, o3);
    }
    (n2 = x.value) == null || n2.handleScroll();
  }, S9 = (e2) => {
    t.optionsCount++, t.filteredOptionsCount++, t.options.set(e2.value, e2), t.cachedOptions.set(e2.value, e2), e2.disabled && t.disabledOptions.set(e2.value, e2);
  }, C9 = (e2, n2) => {
    t.options.get(e2) === n2 && (t.optionsCount--, t.filteredOptionsCount--, t.options.delete(e2));
  }, w9 = (e2) => {
    e2.code !== EVENT_CODE.backspace && T9(false), t.inputLength = s.value.value.length * 15 + 20, Y7();
  }, T9 = (e2) => {
    if (!Array.isArray(t.selected)) return;
    let n2 = p9(t.selected.map((e3) => e3.value)), r2 = t.selected[n2];
    if (r2) return e2 === true || e2 === false ? (r2.hitState = e2, e2) : (r2.hitState = !r2.hitState, r2.hitState);
  }, E9 = (e2) => {
    let n2 = e2.target.value;
    e2.type === "compositionend" ? (t.isOnComposition = false, nextTick(() => X7(n2))) : t.isOnComposition = !isKorean(n2[n2.length - 1] || "");
  }, D9 = () => {
    nextTick(() => x9(t.selected));
  }, O9 = (r2) => {
    t.focused || ((e.automaticDropdown || e.filterable) && (e.filterable && !t.visible && (t.menuVisibleOnFocus = true), t.visible = true), t.focused = true, n.emit("focus", r2));
  }, k9 = () => {
    var e2, n2;
    t.visible ? (e2 = s.value || o.value) == null || e2.focus() : (n2 = o.value) == null || n2.focus();
  }, A9 = () => {
    var e2, n2, r2;
    t.visible = false, (e2 = o.value) == null || e2.blur(), (r2 = (n2 = d.value)?.blur) == null || r2.call(n2);
  }, j9 = (e2) => {
    f.value?.isFocusInsideContent(e2) || p2.value?.isFocusInsideContent(e2) || y.value?.contains(e2.relatedTarget) || (t.visible && N9(), t.focused = false, n.emit("blur", e2));
  }, M9 = (e2) => {
    g9(e2);
  }, N9 = () => {
    t.visible = false;
  }, P9 = (e2) => {
    t.visible &&= (e2.preventDefault(), e2.stopPropagation(), false);
  }, F9 = (e2) => {
    e2 && !t.mouseEnter || F7.value || (t.menuVisibleOnFocus ? t.menuVisibleOnFocus = false : (!f.value || !f.value.isFocusInsideContent()) && (t.visible = !t.visible), k9());
  }, I9 = () => {
    t.visible ? U7.value[t.hoverIndex] && _9(U7.value[t.hoverIndex]) : F9();
  }, L9 = (t2) => isObject$4(t2.value) ? get_default(t2.value, e.valueKey) : t2.value, R9 = computed2(() => U7.value.filter((e2) => e2.visible).every((e2) => e2.disabled)), z9 = computed2(() => e.multiple ? t.selected.slice(0, e.maxCollapseTags) : []), B9 = computed2(() => e.multiple ? t.selected.slice(e.maxCollapseTags) : []), V9 = (e2) => {
    if (!t.visible) {
      t.visible = true;
      return;
    }
    if (!(t.options.size === 0 || t.filteredOptionsCount === 0) && !t.isOnComposition && !R9.value) {
      e2 === "next" ? (t.hoverIndex++, t.hoverIndex === t.options.size && (t.hoverIndex = 0)) : e2 === "prev" && (t.hoverIndex--, t.hoverIndex < 0 && (t.hoverIndex = t.options.size - 1));
      let n2 = U7.value[t.hoverIndex];
      (n2.disabled === true || n2.states.groupDisabled === true || !n2.visible) && V9(e2), nextTick(() => x9(w.value));
    }
  };
  return {
    optionList: A7,
    optionsArray: U7,
    hoverOption: w,
    selectSize: K7,
    handleResize: r9,
    debouncedOnInputChange: s9,
    debouncedQueryChange: l9,
    deletePrevTag: m9,
    deleteTag: h9,
    deleteSelected: g9,
    handleOptionSelect: _9,
    scrollToOption: x9,
    readonly: P7,
    resetInputHeight: Y7,
    showClose: I7,
    iconComponent: L7,
    iconReverse: z7,
    showNewOption: G7,
    collapseTagSize: q7,
    setSelected: $7,
    managePlaceholder: Z7,
    selectDisabled: F7,
    emptyText: H7,
    toggleLastOptionHitState: T9,
    resetInputState: w9,
    handleComposition: E9,
    onOptionCreate: S9,
    onOptionDestroy: C9,
    handleMenuEnter: D9,
    handleFocus: O9,
    focus: k9,
    blur: A9,
    handleBlur: j9,
    handleClearClick: M9,
    handleClose: N9,
    handleKeydownEscape: P9,
    toggleMenu: F9,
    selectOption: I9,
    getValueKey: L9,
    navigateOptions: V9,
    handleDeleteTooltipTag: (e2, t2) => {
      var n2, r2;
      h9(e2, t2), (r2 = (n2 = p2.value)?.updatePopper) == null || r2.call(n2);
    },
    dropMenuVisible: J7,
    queryChange: k,
    groupQueryChange: $,
    showTagList: z9,
    collapseTagList: B9,
    selectTagsStyle: computed2(() => ({
      maxWidth: `${unref(t.inputWidth) - 32 - (B7.value ? 22 : 0)}px`,
      width: "100%"
    })),
    reference: o,
    input: s,
    iOSInput: d,
    tooltipRef: f,
    tagTooltipRef: p2,
    tags: _,
    selectWrapper: y,
    scrollbar: x,
    handleMouseEnter: () => {
      t.mouseEnter = true;
    },
    handleMouseLeave: () => {
      t.mouseEnter = false;
    }
  };
};
var ElOptions = defineComponent({
  name: "ElOptions",
  emits: ["update-options"],
  setup(e, { slots: t, emit: n }) {
    let r = [];
    function i(e2, t2) {
      if (e2.length !== t2.length) return false;
      for (let [n2] of e2.entries()) if (e2[n2] != t2[n2]) return false;
      return true;
    }
    return () => {
      let e2 = t.default?.call(t), o = [];
      function s(e3) {
        Array.isArray(e3) && e3.forEach((e4) => {
          let t2 = (e4?.type || {})?.name;
          t2 === "ElOptionGroup" ? s(!isString$2(e4.children) && !Array.isArray(e4.children) && isFunction$3(e4.children?.default) ? e4.children?.default() : e4.children) : t2 === "ElOption" ? o.push(e4.props?.label) : Array.isArray(e4.children) && s(e4.children);
        });
      }
      return e2.length && s(e2[0]?.children), i(o, r) || (r = o, n("update-options", o)), e2;
    };
  }
});
var COMPONENT_NAME = "ElSelect";
var _sfc_main$1 = defineComponent({
  name: COMPONENT_NAME,
  componentName: COMPONENT_NAME,
  components: {
    ElInput,
    ElSelectMenu,
    ElOption: Option,
    ElOptions,
    ElTag,
    ElScrollbar,
    ElTooltip,
    ElIcon
  },
  directives: { ClickOutside },
  props: {
    name: String,
    id: String,
    modelValue: {
      type: [
        Array,
        String,
        Number,
        Boolean,
        Object
      ],
      default: void 0
    },
    autocomplete: {
      type: String,
      default: "off"
    },
    automaticDropdown: Boolean,
    size: {
      type: String,
      validator: isValidComponentSize
    },
    effect: {
      type: String,
      default: "light"
    },
    disabled: Boolean,
    clearable: Boolean,
    filterable: Boolean,
    allowCreate: Boolean,
    loading: Boolean,
    popperClass: {
      type: String,
      default: ""
    },
    popperOptions: {
      type: Object,
      default: () => ({})
    },
    remote: Boolean,
    loadingText: String,
    noMatchText: String,
    noDataText: String,
    remoteMethod: Function,
    filterMethod: Function,
    multiple: Boolean,
    multipleLimit: {
      type: Number,
      default: 0
    },
    placeholder: { type: String },
    defaultFirstOption: Boolean,
    reserveKeyword: {
      type: Boolean,
      default: true
    },
    valueKey: {
      type: String,
      default: "value"
    },
    collapseTags: Boolean,
    collapseTagsTooltip: Boolean,
    maxCollapseTags: {
      type: Number,
      default: 1
    },
    teleported: useTooltipContentProps.teleported,
    persistent: {
      type: Boolean,
      default: true
    },
    clearIcon: {
      type: iconPropType,
      default: circle_close_default
    },
    fitInputWidth: Boolean,
    suffixIcon: {
      type: iconPropType,
      default: arrow_down_default
    },
    tagType: {
      ...tagProps.type,
      default: "info"
    },
    validateEvent: {
      type: Boolean,
      default: true
    },
    remoteShowSuffix: Boolean,
    suffixTransition: {
      type: Boolean,
      default: true
    },
    placement: {
      type: String,
      values: Ee$1,
      default: "bottom-start"
    },
    ariaLabel: {
      type: String,
      default: void 0
    }
  },
  emits: [
    UPDATE_MODEL_EVENT,
    CHANGE_EVENT,
    "remove-tag",
    "clear",
    "visible-change",
    "focus",
    "blur"
  ],
  setup(e, t) {
    let n = useNamespace("select"), r = useNamespace("input"), { t: i } = useLocale(), o = useId2(), s = useSelectStates(e), { optionList: d, optionsArray: f, hoverOption: p2, selectSize: _, readonly: y, handleResize: x, collapseTagSize: w, debouncedOnInputChange: k, debouncedQueryChange: $, deletePrevTag: A7, deleteTag: j7, deleteSelected: M7, handleOptionSelect: N7, scrollToOption: P7, setSelected: F7, resetInputHeight: I7, managePlaceholder: L7, showClose: z7, selectDisabled: B7, iconComponent: V7, iconReverse: H7, showNewOption: U7, emptyText: W7, toggleLastOptionHitState: K7, resetInputState: q7, handleComposition: J7, onOptionCreate: Y7, onOptionDestroy: Z7, handleMenuEnter: $7, handleFocus: e9, focus: t9, blur: n9, handleBlur: r9, handleClearClick: i9, handleClose: a9, handleKeydownEscape: o9, toggleMenu: s9, selectOption: c9, getValueKey: l9, navigateOptions: d9, handleDeleteTooltipTag: p9, dropMenuVisible: m9, reference: h9, input: g9, iOSInput: _9, tooltipRef: v9, tagTooltipRef: y9, tags: b9, selectWrapper: x9, scrollbar: S9, queryChange: C9, groupQueryChange: w9, handleMouseEnter: T9, handleMouseLeave: E9, showTagList: D9, collapseTagList: O9, selectTagsStyle: k9 } = useSelect(e, s, t), { inputWidth: A9, selected: j9, inputLength: M9, filteredOptionsCount: N9, visible: P9, selectedLabel: F9, hoverIndex: I9, query: L9, inputHovering: R9, currentPlaceholder: z9, menuVisibleOnFocus: B9, isOnComposition: V9, options: H9, cachedOptions: U9, optionsCount: W9, prefixWidth: G9 } = toRefs(s), K9 = computed2(() => {
      let t2 = [n.b()], r2 = unref(_);
      return r2 && t2.push(n.m(r2)), e.disabled && t2.push(n.m("disabled")), t2;
    }), q9 = computed2(() => [n.e("tags"), n.is("disabled", unref(B7))]), J9 = computed2(() => [n.b("tags-wrapper"), { "has-prefix": unref(G9) && unref(j9).length }]), Y9 = computed2(() => [
      n.e("input"),
      n.is(unref(_)),
      n.is("disabled", unref(B7))
    ]), X9 = computed2(() => [
      n.e("input"),
      n.is(unref(_)),
      n.em("input", "iOS")
    ]), Z9 = computed2(() => [n.is("empty", !e.allowCreate && !!unref(L9) && unref(N9) === 0)]), Q9 = computed2(() => ({ maxWidth: `${unref(A9) > 123 && unref(j9).length > e.maxCollapseTags ? unref(A9) - 123 : unref(A9) - 75}px` })), $9 = computed2(() => ({
      marginLeft: `${unref(G9)}px`,
      flexGrow: 1,
      width: `${unref(M9) / (unref(A9) - 32)}%`,
      maxWidth: `${unref(A9) - 42}px`
    }));
    return provide(selectKey, reactive({
      props: e,
      options: H9,
      optionsArray: f,
      cachedOptions: U9,
      optionsCount: W9,
      filteredOptionsCount: N9,
      hoverIndex: I9,
      handleOptionSelect: N7,
      onOptionCreate: Y7,
      onOptionDestroy: Z7,
      selectWrapper: x9,
      selected: j9,
      setSelected: F7,
      queryChange: C9,
      groupQueryChange: w9
    })), onMounted(() => {
      s.cachedPlaceHolder = z9.value = e.placeholder || (() => i("el.select.placeholder")), e.multiple && Array.isArray(e.modelValue) && e.modelValue.length > 0 && (z9.value = ""), useResizeObserver(x9, x), e.remote && e.multiple && I7(), nextTick(() => {
        let e2 = h9.value && h9.value.$el;
        if (e2 && (A9.value = e2.getBoundingClientRect().width, t.slots.prefix)) {
          let t2 = e2.querySelector(`.${r.e("prefix")}`);
          G9.value = Math.max(t2.getBoundingClientRect().width + 11, 30);
        }
      }), F7();
    }), e.multiple && !Array.isArray(e.modelValue) && t.emit(UPDATE_MODEL_EVENT, []), !e.multiple && Array.isArray(e.modelValue) && t.emit(UPDATE_MODEL_EVENT, ""), {
      isIOS,
      onOptionsRendered: (e2) => {
        d.value = e2;
      },
      prefixWidth: G9,
      selectSize: _,
      readonly: y,
      handleResize: x,
      collapseTagSize: w,
      debouncedOnInputChange: k,
      debouncedQueryChange: $,
      deletePrevTag: A7,
      deleteTag: j7,
      handleDeleteTooltipTag: p9,
      deleteSelected: M7,
      handleOptionSelect: N7,
      scrollToOption: P7,
      inputWidth: A9,
      selected: j9,
      inputLength: M9,
      filteredOptionsCount: N9,
      visible: P9,
      selectedLabel: F9,
      hoverIndex: I9,
      query: L9,
      inputHovering: R9,
      currentPlaceholder: z9,
      menuVisibleOnFocus: B9,
      isOnComposition: V9,
      options: H9,
      resetInputHeight: I7,
      managePlaceholder: L7,
      showClose: z7,
      selectDisabled: B7,
      iconComponent: V7,
      iconReverse: H7,
      showNewOption: U7,
      emptyText: W7,
      toggleLastOptionHitState: K7,
      resetInputState: q7,
      handleComposition: J7,
      handleMenuEnter: $7,
      handleFocus: e9,
      focus: t9,
      blur: n9,
      handleBlur: r9,
      handleClearClick: i9,
      handleClose: a9,
      handleKeydownEscape: o9,
      toggleMenu: s9,
      selectOption: c9,
      getValueKey: l9,
      navigateOptions: d9,
      dropMenuVisible: m9,
      reference: h9,
      input: g9,
      iOSInput: _9,
      tooltipRef: v9,
      popperPaneRef: computed2(() => v9.value?.popperRef?.contentRef),
      tags: b9,
      selectWrapper: x9,
      scrollbar: S9,
      wrapperKls: K9,
      tagsKls: q9,
      tagWrapperKls: J9,
      inputKls: Y9,
      iOSInputKls: X9,
      scrollbarKls: Z9,
      selectTagsStyle: k9,
      nsSelect: n,
      tagTextStyle: Q9,
      inputStyle: $9,
      handleMouseEnter: T9,
      handleMouseLeave: E9,
      showTagList: D9,
      collapseTagList: O9,
      tagTooltipRef: y9,
      contentId: o,
      hoverOption: p2
    };
  }
});
var _hoisted_1$12 = [
  "disabled",
  "autocomplete",
  "aria-activedescendant",
  "aria-controls",
  "aria-expanded",
  "aria-label"
];
var _hoisted_2$7 = ["disabled"];
var _hoisted_3$3 = { style: {
  height: "100%",
  display: "flex",
  "justify-content": "center",
  "align-items": "center"
} };
function _sfc_render$1(e, t, r, i, s, l) {
  let d = resolveComponent("el-tag"), w = resolveComponent("el-tooltip"), k = resolveComponent("el-icon"), A7 = resolveComponent("el-input"), j7 = resolveComponent("el-option"), M7 = resolveComponent("el-options"), N7 = resolveComponent("el-scrollbar"), P7 = resolveComponent("el-select-menu"), F7 = resolveDirective("click-outside");
  return withDirectives((openBlock(), createElementBlock("div", {
    ref: "selectWrapper",
    class: normalizeClass(e.wrapperKls),
    onMouseenter: t[22] ||= (...t2) => e.handleMouseEnter && e.handleMouseEnter(...t2),
    onMouseleave: t[23] ||= (...t2) => e.handleMouseLeave && e.handleMouseLeave(...t2),
    onClick: t[24] ||= withModifiers((...t2) => e.toggleMenu && e.toggleMenu(...t2), ["stop"])
  }, [createVNode(w, {
    ref: "tooltipRef",
    visible: e.dropMenuVisible,
    placement: e.placement,
    teleported: e.teleported,
    "popper-class": [e.nsSelect.e("popper"), e.popperClass],
    "popper-options": e.popperOptions,
    "fallback-placements": [
      "bottom-start",
      "top-start",
      "right",
      "left"
    ],
    effect: e.effect,
    pure: "",
    trigger: "click",
    transition: `${e.nsSelect.namespace.value}-zoom-in-top`,
    "stop-popper-mouse-event": false,
    "gpu-acceleration": false,
    persistent: e.persistent,
    onShow: e.handleMenuEnter
  }, {
    default: withCtx(() => [createBaseVNode("div", {
      class: "select-trigger",
      onMouseenter: t[20] ||= (t2) => e.inputHovering = true,
      onMouseleave: t[21] ||= (t2) => e.inputHovering = false
    }, [
      e.multiple ? (openBlock(), createElementBlock("div", {
        key: 0,
        ref: "tags",
        tabindex: "-1",
        class: normalizeClass(e.tagsKls),
        style: normalizeStyle(e.selectTagsStyle),
        onClick: t[15] ||= (...t2) => e.focus && e.focus(...t2)
      }, [
        e.collapseTags && e.selected.length ? (openBlock(), createBlock(Transition, {
          key: 0,
          onAfterLeave: e.resetInputHeight
        }, {
          default: withCtx(() => [createBaseVNode("span", { class: normalizeClass(e.tagWrapperKls) }, [(openBlock(true), createElementBlock(Fragment, null, renderList(e.showTagList, (t2) => (openBlock(), createBlock(d, {
            key: e.getValueKey(t2),
            closable: !e.selectDisabled && !t2.isDisabled,
            size: e.collapseTagSize,
            hit: t2.hitState,
            type: e.tagType,
            "disable-transitions": "",
            onClose: (n) => e.deleteTag(n, t2)
          }, {
            default: withCtx(() => [createBaseVNode("span", {
              class: normalizeClass(e.nsSelect.e("tags-text")),
              style: normalizeStyle(e.tagTextStyle)
            }, toDisplayString(t2.currentLabel), 7)]),
            _: 2
          }, 1032, [
            "closable",
            "size",
            "hit",
            "type",
            "onClose"
          ]))), 128)), e.selected.length > e.maxCollapseTags ? (openBlock(), createBlock(d, {
            key: 0,
            closable: false,
            size: e.collapseTagSize,
            type: e.tagType,
            "disable-transitions": ""
          }, {
            default: withCtx(() => [e.collapseTagsTooltip ? (openBlock(), createBlock(w, {
              key: 0,
              ref: "tagTooltipRef",
              disabled: e.dropMenuVisible,
              "fallback-placements": [
                "bottom",
                "top",
                "right",
                "left"
              ],
              effect: e.effect,
              placement: "bottom",
              teleported: e.teleported
            }, {
              default: withCtx(() => [createBaseVNode("span", { class: normalizeClass(e.nsSelect.e("tags-text")) }, "+ " + toDisplayString(e.selected.length - e.maxCollapseTags), 3)]),
              content: withCtx(() => [createBaseVNode("div", { class: normalizeClass(e.nsSelect.e("collapse-tags")) }, [(openBlock(true), createElementBlock(Fragment, null, renderList(e.collapseTagList, (t2) => (openBlock(), createElementBlock("div", {
                key: e.getValueKey(t2),
                class: normalizeClass(e.nsSelect.e("collapse-tag"))
              }, [createVNode(d, {
                class: "in-tooltip",
                closable: !e.selectDisabled && !t2.isDisabled,
                size: e.collapseTagSize,
                hit: t2.hitState,
                type: e.tagType,
                "disable-transitions": "",
                style: { margin: "2px" },
                onClose: (n) => e.handleDeleteTooltipTag(n, t2)
              }, {
                default: withCtx(() => [createBaseVNode("span", {
                  class: normalizeClass(e.nsSelect.e("tags-text")),
                  style: normalizeStyle({ maxWidth: e.inputWidth - 75 + "px" })
                }, toDisplayString(t2.currentLabel), 7)]),
                _: 2
              }, 1032, [
                "closable",
                "size",
                "hit",
                "type",
                "onClose"
              ])], 2))), 128))], 2)]),
              _: 1
            }, 8, [
              "disabled",
              "effect",
              "teleported"
            ])) : (openBlock(), createElementBlock("span", {
              key: 1,
              class: normalizeClass(e.nsSelect.e("tags-text"))
            }, "+ " + toDisplayString(e.selected.length - e.maxCollapseTags), 3))]),
            _: 1
          }, 8, ["size", "type"])) : createCommentVNode("v-if", true)], 2)]),
          _: 1
        }, 8, ["onAfterLeave"])) : createCommentVNode("v-if", true),
        e.collapseTags ? createCommentVNode("v-if", true) : (openBlock(), createBlock(Transition, {
          key: 1,
          onAfterLeave: e.resetInputHeight
        }, {
          default: withCtx(() => [createBaseVNode("span", {
            class: normalizeClass(e.tagWrapperKls),
            style: normalizeStyle(e.prefixWidth && e.selected.length ? { marginLeft: `${e.prefixWidth}px` } : "")
          }, [(openBlock(true), createElementBlock(Fragment, null, renderList(e.selected, (t2) => (openBlock(), createBlock(d, {
            key: e.getValueKey(t2),
            closable: !e.selectDisabled && !t2.isDisabled,
            size: e.collapseTagSize,
            hit: t2.hitState,
            type: e.tagType,
            "disable-transitions": "",
            onClose: (n) => e.deleteTag(n, t2)
          }, {
            default: withCtx(() => [createBaseVNode("span", {
              class: normalizeClass(e.nsSelect.e("tags-text")),
              style: normalizeStyle({ maxWidth: e.inputWidth - 75 + "px" })
            }, toDisplayString(t2.currentLabel), 7)]),
            _: 2
          }, 1032, [
            "closable",
            "size",
            "hit",
            "type",
            "onClose"
          ]))), 128))], 6)]),
          _: 1
        }, 8, ["onAfterLeave"])),
        e.filterable && !e.selectDisabled ? withDirectives((openBlock(), createElementBlock("input", {
          key: 2,
          ref: "input",
          "onUpdate:modelValue": t[0] ||= (t2) => e.query = t2,
          type: "text",
          class: normalizeClass(e.inputKls),
          disabled: e.selectDisabled,
          autocomplete: e.autocomplete,
          style: normalizeStyle(e.inputStyle),
          role: "combobox",
          "aria-activedescendant": e.hoverOption?.id || "",
          "aria-controls": e.contentId,
          "aria-expanded": e.dropMenuVisible,
          "aria-label": e.ariaLabel,
          "aria-autocomplete": "none",
          "aria-haspopup": "listbox",
          onFocus: t[1] ||= (...t2) => e.handleFocus && e.handleFocus(...t2),
          onBlur: t[2] ||= (...t2) => e.handleBlur && e.handleBlur(...t2),
          onKeyup: t[3] ||= (...t2) => e.managePlaceholder && e.managePlaceholder(...t2),
          onKeydown: [
            t[4] ||= (...t2) => e.resetInputState && e.resetInputState(...t2),
            t[5] ||= withKeys(withModifiers((t2) => e.navigateOptions("next"), ["prevent"]), ["down"]),
            t[6] ||= withKeys(withModifiers((t2) => e.navigateOptions("prev"), ["prevent"]), ["up"]),
            t[7] ||= withKeys((...t2) => e.handleKeydownEscape && e.handleKeydownEscape(...t2), ["esc"]),
            t[8] ||= withKeys(withModifiers((...t2) => e.selectOption && e.selectOption(...t2), ["stop", "prevent"]), ["enter"]),
            t[9] ||= withKeys((...t2) => e.deletePrevTag && e.deletePrevTag(...t2), ["delete"]),
            t[10] ||= withKeys((t2) => e.visible = false, ["tab"])
          ],
          onCompositionstart: t[11] ||= (...t2) => e.handleComposition && e.handleComposition(...t2),
          onCompositionupdate: t[12] ||= (...t2) => e.handleComposition && e.handleComposition(...t2),
          onCompositionend: t[13] ||= (...t2) => e.handleComposition && e.handleComposition(...t2),
          onInput: t[14] ||= (...t2) => e.debouncedQueryChange && e.debouncedQueryChange(...t2)
        }, null, 46, _hoisted_1$12)), [[vModelText, e.query]]) : createCommentVNode("v-if", true)
      ], 6)) : createCommentVNode("v-if", true),
      e.isIOS && !e.multiple && e.filterable && e.readonly ? (openBlock(), createElementBlock("input", {
        key: 1,
        ref: "iOSInput",
        class: normalizeClass(e.iOSInputKls),
        disabled: e.selectDisabled,
        type: "text"
      }, null, 10, _hoisted_2$7)) : createCommentVNode("v-if", true),
      createVNode(A7, {
        id: e.id,
        ref: "reference",
        modelValue: e.selectedLabel,
        "onUpdate:modelValue": t[16] ||= (t2) => e.selectedLabel = t2,
        type: "text",
        placeholder: typeof e.currentPlaceholder == "function" ? e.currentPlaceholder() : e.currentPlaceholder,
        name: e.name,
        autocomplete: e.autocomplete,
        size: e.selectSize,
        disabled: e.selectDisabled,
        readonly: e.readonly,
        "validate-event": false,
        class: normalizeClass([e.nsSelect.is("focus", e.visible)]),
        tabindex: e.multiple && e.filterable ? -1 : void 0,
        role: "combobox",
        "aria-activedescendant": e.hoverOption?.id || "",
        "aria-controls": e.contentId,
        "aria-expanded": e.dropMenuVisible,
        label: e.ariaLabel,
        "aria-autocomplete": "none",
        "aria-haspopup": "listbox",
        onFocus: e.handleFocus,
        onBlur: e.handleBlur,
        onInput: e.debouncedOnInputChange,
        onPaste: e.debouncedOnInputChange,
        onCompositionstart: e.handleComposition,
        onCompositionupdate: e.handleComposition,
        onCompositionend: e.handleComposition,
        onKeydown: [
          t[17] ||= withKeys(withModifiers((t2) => e.navigateOptions("next"), ["stop", "prevent"]), ["down"]),
          t[18] ||= withKeys(withModifiers((t2) => e.navigateOptions("prev"), ["stop", "prevent"]), ["up"]),
          withKeys(withModifiers(e.selectOption, ["stop", "prevent"]), ["enter"]),
          withKeys(e.handleKeydownEscape, ["esc"]),
          t[19] ||= withKeys((t2) => e.visible = false, ["tab"])
        ]
      }, createSlots({
        suffix: withCtx(() => [e.iconComponent && !e.showClose ? (openBlock(), createBlock(k, {
          key: 0,
          class: normalizeClass([
            e.nsSelect.e("caret"),
            e.nsSelect.e("icon"),
            e.iconReverse
          ])
        }, {
          default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(e.iconComponent)))]),
          _: 1
        }, 8, ["class"])) : createCommentVNode("v-if", true), e.showClose && e.clearIcon ? (openBlock(), createBlock(k, {
          key: 1,
          class: normalizeClass([e.nsSelect.e("caret"), e.nsSelect.e("icon")]),
          onClick: e.handleClearClick
        }, {
          default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(e.clearIcon)))]),
          _: 1
        }, 8, ["class", "onClick"])) : createCommentVNode("v-if", true)]),
        _: 2
      }, [e.$slots.prefix ? {
        name: "prefix",
        fn: withCtx(() => [createBaseVNode("div", _hoisted_3$3, [renderSlot(e.$slots, "prefix")])])
      } : void 0]), 1032, [
        "id",
        "modelValue",
        "placeholder",
        "name",
        "autocomplete",
        "size",
        "disabled",
        "readonly",
        "class",
        "tabindex",
        "aria-activedescendant",
        "aria-controls",
        "aria-expanded",
        "label",
        "onFocus",
        "onBlur",
        "onInput",
        "onPaste",
        "onCompositionstart",
        "onCompositionupdate",
        "onCompositionend",
        "onKeydown"
      ])
    ], 32)]),
    content: withCtx(() => [createVNode(P7, null, createSlots({
      default: withCtx(() => [withDirectives(createVNode(N7, {
        id: e.contentId,
        ref: "scrollbar",
        tag: "ul",
        "wrap-class": e.nsSelect.be("dropdown", "wrap"),
        "view-class": e.nsSelect.be("dropdown", "list"),
        class: normalizeClass(e.scrollbarKls),
        role: "listbox",
        "aria-label": e.ariaLabel,
        "aria-orientation": "vertical"
      }, {
        default: withCtx(() => [e.showNewOption ? (openBlock(), createBlock(j7, {
          key: 0,
          value: e.query,
          created: true
        }, null, 8, ["value"])) : createCommentVNode("v-if", true), createVNode(M7, { onUpdateOptions: e.onOptionsRendered }, {
          default: withCtx(() => [renderSlot(e.$slots, "default")]),
          _: 3
        }, 8, ["onUpdateOptions"])]),
        _: 3
      }, 8, [
        "id",
        "wrap-class",
        "view-class",
        "class",
        "aria-label"
      ]), [[vShow, e.options.size > 0 && !e.loading]]), e.emptyText && (!e.allowCreate || e.loading || e.allowCreate && e.options.size === 0) ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [e.$slots.empty ? renderSlot(e.$slots, "empty", { key: 0 }) : (openBlock(), createElementBlock("p", {
        key: 1,
        class: normalizeClass(e.nsSelect.be("dropdown", "empty"))
      }, toDisplayString(e.emptyText), 3))], 64)) : createCommentVNode("v-if", true)]),
      _: 2
    }, [e.$slots.header ? {
      name: "header",
      fn: withCtx(() => [renderSlot(e.$slots, "header")])
    } : void 0, e.$slots.footer ? {
      name: "footer",
      fn: withCtx(() => [renderSlot(e.$slots, "footer")])
    } : void 0]), 1024)]),
    _: 3
  }, 8, [
    "visible",
    "placement",
    "teleported",
    "popper-class",
    "popper-options",
    "effect",
    "transition",
    "persistent",
    "onShow"
  ])], 34)), [[
    F7,
    e.handleClose,
    e.popperPaneRef
  ]]);
}
var Select = _export_sfc(_sfc_main$1, [["render", _sfc_render$1], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/select/src/select.vue"]]);
var _sfc_main = defineComponent({
  name: "ElOptionGroup",
  componentName: "ElOptionGroup",
  props: {
    label: String,
    disabled: Boolean
  },
  setup(e) {
    let t = useNamespace("select"), n = ref(true), r = getCurrentInstance(), i = ref([]);
    provide(selectGroupKey, reactive({ ...toRefs(e) }));
    let o = inject(selectKey);
    onMounted(() => {
      i.value = s(r.subTree);
    });
    let s = (e2) => {
      let t2 = [];
      return Array.isArray(e2.children) && e2.children.forEach((e3) => {
        e3.type && e3.type.name === "ElOption" && e3.component && e3.component.proxy ? t2.push(e3.component.proxy) : e3.children?.length && t2.push(...s(e3));
      }), t2;
    }, { groupQueryChange: l } = toRaw(o);
    return watch2(l, () => {
      n.value = i.value.some((e2) => e2.visible === true);
    }, { flush: "post" }), {
      visible: n,
      ns: t
    };
  }
});
function _sfc_render(e, t, n, r, i, o) {
  return withDirectives((openBlock(), createElementBlock("ul", { class: normalizeClass(e.ns.be("group", "wrap")) }, [createBaseVNode("li", { class: normalizeClass(e.ns.be("group", "title")) }, toDisplayString(e.label), 3), createBaseVNode("li", null, [createBaseVNode("ul", { class: normalizeClass(e.ns.b("group")) }, [renderSlot(e.$slots, "default")], 2)])], 2)), [[vShow, e.visible]]);
}
var OptionGroup = _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "/home/runner/work/element-plus/element-plus/packages/components/select/src/option-group.vue"]]);
var ElSelect = withInstall(Select, {
  Option,
  OptionGroup
});
var ElOption = withNoopInstall(Option);
withNoopInstall(OptionGroup);
var usePagination = () => inject(elPaginationKey, {});
var paginationSizesProps = buildProps({
  pageSize: {
    type: Number,
    required: true
  },
  pageSizes: {
    type: definePropType(Array),
    default: () => mutable([
      10,
      20,
      30,
      40,
      50,
      100
    ])
  },
  popperClass: { type: String },
  disabled: Boolean,
  teleported: Boolean,
  size: {
    type: String,
    values: componentSizes
  }
});
var Sizes = _export_sfc(defineComponent({
  ...defineComponent({ name: "ElPaginationSizes" }),
  props: paginationSizesProps,
  emits: ["page-size-change"],
  setup(e, { emit: t }) {
    let r = e, { t: i } = useLocale(), o = useNamespace("pagination"), s = usePagination(), d = ref(r.pageSize);
    watch2(() => r.pageSizes, (e2, n) => {
      isEqual_default(e2, n) || Array.isArray(e2) && t("page-size-change", e2.includes(r.pageSize) ? r.pageSize : r.pageSizes[0]);
    }), watch2(() => r.pageSize, (e2) => {
      d.value = e2;
    });
    let p2 = computed2(() => r.pageSizes);
    function y(e2) {
      var t2;
      e2 !== d.value && (d.value = e2, (t2 = s.handleSizeChange) == null || t2.call(s, Number(e2)));
    }
    return (e2, t2) => (openBlock(), createElementBlock("span", { class: normalizeClass(unref(o).e("sizes")) }, [createVNode(unref(ElSelect), {
      "model-value": d.value,
      disabled: e2.disabled,
      "popper-class": e2.popperClass,
      size: e2.size,
      teleported: e2.teleported,
      "validate-event": false,
      onChange: y
    }, {
      default: withCtx(() => [(openBlock(true), createElementBlock(Fragment, null, renderList(unref(p2), (e3) => (openBlock(), createBlock(unref(ElOption), {
        key: e3,
        value: e3,
        label: e3 + unref(i)("el.pagination.pagesize")
      }, null, 8, ["value", "label"]))), 128))]),
      _: 1
    }, 8, [
      "model-value",
      "disabled",
      "popper-class",
      "size",
      "teleported"
    ])], 2));
  }
}), [["__file", "/home/runner/work/element-plus/element-plus/packages/components/pagination/src/components/sizes.vue"]]);
var paginationJumperProps = buildProps({ size: {
  type: String,
  values: componentSizes
} });
var _hoisted_1$11 = ["disabled"];
var Jumper = _export_sfc(defineComponent({
  ...defineComponent({ name: "ElPaginationJumper" }),
  props: paginationJumperProps,
  setup(e) {
    let { t } = useLocale(), n = useNamespace("pagination"), { pageCount: r, disabled: i, currentPage: o, changeEvent: s } = usePagination(), d = ref(), f = computed2(() => d.value ?? o?.value);
    function p2(e2) {
      d.value = e2 ? +e2 : "";
    }
    function x(e2) {
      e2 = Math.trunc(+e2), s?.(e2), d.value = void 0;
    }
    return (e2, o3) => (openBlock(), createElementBlock("span", {
      class: normalizeClass(unref(n).e("jump")),
      disabled: unref(i)
    }, [
      createBaseVNode("span", { class: normalizeClass([unref(n).e("goto")]) }, toDisplayString(unref(t)("el.pagination.goto")), 3),
      createVNode(unref(ElInput), {
        size: e2.size,
        class: normalizeClass([unref(n).e("editor"), unref(n).is("in-pagination")]),
        min: 1,
        max: unref(r),
        disabled: unref(i),
        "model-value": unref(f),
        "validate-event": false,
        label: unref(t)("el.pagination.page"),
        type: "number",
        "onUpdate:modelValue": p2,
        onChange: x
      }, null, 8, [
        "size",
        "class",
        "max",
        "disabled",
        "model-value",
        "label"
      ]),
      createBaseVNode("span", { class: normalizeClass([unref(n).e("classifier")]) }, toDisplayString(unref(t)("el.pagination.pageClassifier")), 3)
    ], 10, _hoisted_1$11));
  }
}), [["__file", "/home/runner/work/element-plus/element-plus/packages/components/pagination/src/components/jumper.vue"]]);
var paginationTotalProps = buildProps({ total: {
  type: Number,
  default: 1e3
} });
var _hoisted_1$10 = ["disabled"];
var Total = _export_sfc(defineComponent({
  ...defineComponent({ name: "ElPaginationTotal" }),
  props: paginationTotalProps,
  setup(e) {
    let { t } = useLocale(), n = useNamespace("pagination"), { disabled: r } = usePagination();
    return (e2, i) => (openBlock(), createElementBlock("span", {
      class: normalizeClass(unref(n).e("total")),
      disabled: unref(r)
    }, toDisplayString(unref(t)("el.pagination.total", { total: e2.total })), 11, _hoisted_1$10));
  }
}), [["__file", "/home/runner/work/element-plus/element-plus/packages/components/pagination/src/components/total.vue"]]);
var paginationPagerProps = buildProps({
  currentPage: {
    type: Number,
    default: 1
  },
  pageCount: {
    type: Number,
    required: true
  },
  pagerCount: {
    type: Number,
    default: 7
  },
  disabled: Boolean
});
var _hoisted_1$9 = ["onKeyup"];
var _hoisted_2$6 = [
  "aria-current",
  "aria-label",
  "tabindex"
];
var _hoisted_3$2 = ["tabindex", "aria-label"];
var _hoisted_4 = [
  "aria-current",
  "aria-label",
  "tabindex"
];
var _hoisted_5 = ["tabindex", "aria-label"];
var _hoisted_6 = [
  "aria-current",
  "aria-label",
  "tabindex"
];
var Pager = _export_sfc(defineComponent({
  ...defineComponent({ name: "ElPaginationPager" }),
  props: paginationPagerProps,
  emits: ["change"],
  setup(e, { emit: t }) {
    let r = e, i = useNamespace("pager"), o = useNamespace("icon"), { t: s } = useLocale(), d = ref(false), y = ref(false), x = ref(false), w = ref(false), k = ref(false), $ = ref(false), A7 = computed2(() => {
      let e2 = r.pagerCount, t2 = (e2 - 1) / 2, n = Number(r.currentPage), i2 = Number(r.pageCount), o3 = false, s2 = false;
      i2 > e2 && (n > e2 - t2 && (o3 = true), n < i2 - t2 && (s2 = true));
      let l = [];
      if (o3 && !s2) {
        let t3 = i2 - (e2 - 2);
        for (let e3 = t3; e3 < i2; e3++) l.push(e3);
      } else if (!o3 && s2) for (let t3 = 2; t3 < e2; t3++) l.push(t3);
      else if (o3 && s2) {
        let t3 = Math.floor(e2 / 2) - 1;
        for (let e3 = n - t3; e3 <= n + t3; e3++) l.push(e3);
      } else for (let e3 = 2; e3 < i2; e3++) l.push(e3);
      return l;
    }), j7 = computed2(() => [
      "more",
      "btn-quickprev",
      o.b(),
      i.is("disabled", r.disabled)
    ]), M7 = computed2(() => [
      "more",
      "btn-quicknext",
      o.b(),
      i.is("disabled", r.disabled)
    ]), N7 = computed2(() => r.disabled ? -1 : 0);
    watchEffect(() => {
      let e2 = (r.pagerCount - 1) / 2;
      d.value = false, y.value = false, r.pageCount > r.pagerCount && (r.currentPage > r.pagerCount - e2 && (d.value = true), r.currentPage < r.pageCount - e2 && (y.value = true));
    });
    function P7(e2 = false) {
      r.disabled || (e2 ? x.value = true : w.value = true);
    }
    function F7(e2 = false) {
      e2 ? k.value = true : $.value = true;
    }
    function I7(e2) {
      let n = e2.target;
      if (n.tagName.toLowerCase() === "li" && Array.from(n.classList).includes("number")) {
        let e3 = Number(n.textContent);
        e3 !== r.currentPage && t("change", e3);
      } else n.tagName.toLowerCase() === "li" && Array.from(n.classList).includes("more") && L7(e2);
    }
    function L7(e2) {
      let n = e2.target;
      if (n.tagName.toLowerCase() === "ul" || r.disabled) return;
      let i2 = Number(n.textContent), o3 = r.pageCount, s2 = r.currentPage, l = r.pagerCount - 2;
      n.className.includes("more") && (n.className.includes("quickprev") ? i2 = s2 - l : n.className.includes("quicknext") && (i2 = s2 + l)), Number.isNaN(+i2) || (i2 < 1 && (i2 = 1), i2 > o3 && (i2 = o3)), i2 !== s2 && t("change", i2);
    }
    return (e2, t2) => (openBlock(), createElementBlock("ul", {
      class: normalizeClass(unref(i).b()),
      onClick: L7,
      onKeyup: withKeys(I7, ["enter"])
    }, [
      e2.pageCount > 0 ? (openBlock(), createElementBlock("li", {
        key: 0,
        class: normalizeClass([[unref(i).is("active", e2.currentPage === 1), unref(i).is("disabled", e2.disabled)], "number"]),
        "aria-current": e2.currentPage === 1,
        "aria-label": unref(s)("el.pagination.currentPage", { pager: 1 }),
        tabindex: unref(N7)
      }, " 1 ", 10, _hoisted_2$6)) : createCommentVNode("v-if", true),
      d.value ? (openBlock(), createElementBlock("li", {
        key: 1,
        class: normalizeClass(unref(j7)),
        tabindex: unref(N7),
        "aria-label": unref(s)("el.pagination.prevPages", { pager: e2.pagerCount - 2 }),
        onMouseenter: t2[0] ||= (e3) => P7(true),
        onMouseleave: t2[1] ||= (e3) => x.value = false,
        onFocus: t2[2] ||= (e3) => F7(true),
        onBlur: t2[3] ||= (e3) => k.value = false
      }, [(x.value || k.value) && !e2.disabled ? (openBlock(), createBlock(unref(d_arrow_left_default), { key: 0 })) : (openBlock(), createBlock(unref(more_filled_default), { key: 1 }))], 42, _hoisted_3$2)) : createCommentVNode("v-if", true),
      (openBlock(true), createElementBlock(Fragment, null, renderList(unref(A7), (t3) => (openBlock(), createElementBlock("li", {
        key: t3,
        class: normalizeClass([[unref(i).is("active", e2.currentPage === t3), unref(i).is("disabled", e2.disabled)], "number"]),
        "aria-current": e2.currentPage === t3,
        "aria-label": unref(s)("el.pagination.currentPage", { pager: t3 }),
        tabindex: unref(N7)
      }, toDisplayString(t3), 11, _hoisted_4))), 128)),
      y.value ? (openBlock(), createElementBlock("li", {
        key: 2,
        class: normalizeClass(unref(M7)),
        tabindex: unref(N7),
        "aria-label": unref(s)("el.pagination.nextPages", { pager: e2.pagerCount - 2 }),
        onMouseenter: t2[4] ||= (e3) => P7(),
        onMouseleave: t2[5] ||= (e3) => w.value = false,
        onFocus: t2[6] ||= (e3) => F7(),
        onBlur: t2[7] ||= (e3) => $.value = false
      }, [(w.value || $.value) && !e2.disabled ? (openBlock(), createBlock(unref(d_arrow_right_default), { key: 0 })) : (openBlock(), createBlock(unref(more_filled_default), { key: 1 }))], 42, _hoisted_5)) : createCommentVNode("v-if", true),
      e2.pageCount > 1 ? (openBlock(), createElementBlock("li", {
        key: 3,
        class: normalizeClass([[unref(i).is("active", e2.currentPage === e2.pageCount), unref(i).is("disabled", e2.disabled)], "number"]),
        "aria-current": e2.currentPage === e2.pageCount,
        "aria-label": unref(s)("el.pagination.currentPage", { pager: e2.pageCount }),
        tabindex: unref(N7)
      }, toDisplayString(e2.pageCount), 11, _hoisted_6)) : createCommentVNode("v-if", true)
    ], 42, _hoisted_1$9));
  }
}), [["__file", "/home/runner/work/element-plus/element-plus/packages/components/pagination/src/components/pager.vue"]]);
var isAbsent = (e) => typeof e != "number";
var paginationProps = buildProps({
  pageSize: Number,
  defaultPageSize: Number,
  total: Number,
  pageCount: Number,
  pagerCount: {
    type: Number,
    validator: (e) => isNumber(e) && Math.trunc(e) === e && e > 4 && e < 22 && e % 2 == 1,
    default: 7
  },
  currentPage: Number,
  defaultCurrentPage: Number,
  layout: {
    type: String,
    default: [
      "prev",
      "pager",
      "next",
      "jumper",
      "->",
      "total"
    ].join(", ")
  },
  pageSizes: {
    type: definePropType(Array),
    default: () => mutable([
      10,
      20,
      30,
      40,
      50,
      100
    ])
  },
  popperClass: {
    type: String,
    default: ""
  },
  prevText: {
    type: String,
    default: ""
  },
  prevIcon: {
    type: iconPropType,
    default: () => arrow_left_default
  },
  nextText: {
    type: String,
    default: ""
  },
  nextIcon: {
    type: iconPropType,
    default: () => arrow_right_default
  },
  teleported: {
    type: Boolean,
    default: true
  },
  small: Boolean,
  background: Boolean,
  disabled: Boolean,
  hideOnSinglePage: Boolean
});
withInstall(defineComponent({
  name: "ElPagination",
  props: paginationProps,
  emits: {
    "update:current-page": (e) => isNumber(e),
    "update:page-size": (e) => isNumber(e),
    "size-change": (e) => isNumber(e),
    "current-change": (e) => isNumber(e),
    "prev-click": (e) => isNumber(e),
    "next-click": (e) => isNumber(e)
  },
  setup(e, { emit: t, slots: n }) {
    let { t: r } = useLocale(), i = useNamespace("pagination"), o = getCurrentInstance().vnode.props || {}, s = "onUpdate:currentPage" in o || "onUpdate:current-page" in o || "onCurrentChange" in o, d = "onUpdate:pageSize" in o || "onUpdate:page-size" in o || "onSizeChange" in o, f = computed2(() => {
      if (isAbsent(e.total) && isAbsent(e.pageCount) || !isAbsent(e.currentPage) && !s) return false;
      if (e.layout.includes("sizes")) {
        if (isAbsent(e.pageCount)) {
          if (!isAbsent(e.total) && !isAbsent(e.pageSize) && !d) return false;
        } else if (!d) return false;
      }
      return true;
    }), p2 = ref(isAbsent(e.defaultPageSize) ? 10 : e.defaultPageSize), _ = ref(isAbsent(e.defaultCurrentPage) ? 1 : e.defaultCurrentPage), y = computed2({
      get() {
        return isAbsent(e.pageSize) ? p2.value : e.pageSize;
      },
      set(n2) {
        isAbsent(e.pageSize) && (p2.value = n2), d && (t("update:page-size", n2), t("size-change", n2));
      }
    }), x = computed2(() => {
      let t2 = 0;
      return isAbsent(e.pageCount) ? isAbsent(e.total) || (t2 = Math.max(1, Math.ceil(e.total / y.value))) : t2 = e.pageCount, t2;
    }), w = computed2({
      get() {
        return isAbsent(e.currentPage) ? _.value : e.currentPage;
      },
      set(n2) {
        let r2 = n2;
        n2 < 1 ? r2 = 1 : n2 > x.value && (r2 = x.value), isAbsent(e.currentPage) && (_.value = r2), s && (t("update:current-page", r2), t("current-change", r2));
      }
    });
    watch2(x, (e2) => {
      w.value > e2 && (w.value = e2);
    });
    function k(e2) {
      w.value = e2;
    }
    function $(e2) {
      y.value = e2;
      let t2 = x.value;
      w.value > t2 && (w.value = t2);
    }
    function A7() {
      e.disabled || (--w.value, t("prev-click", w.value));
    }
    function M7() {
      e.disabled || (w.value += 1, t("next-click", w.value));
    }
    function P7(e2, t2) {
      e2 && (e2.props ||= {}, e2.props.class = [e2.props.class, t2].join(" "));
    }
    return provide(elPaginationKey, {
      pageCount: x,
      disabled: computed2(() => e.disabled),
      currentPage: w,
      changeEvent: k,
      handleSizeChange: $
    }), () => {
      if (!f.value) return r("el.pagination.deprecationWarning"), null;
      if (!e.layout || e.hideOnSinglePage && x.value <= 1) return null;
      let t2 = [], o3 = [], s2 = h("div", { class: i.e("rightwrapper") }, o3), l = {
        prev: h(Prev, {
          disabled: e.disabled,
          currentPage: w.value,
          prevText: e.prevText,
          prevIcon: e.prevIcon,
          onClick: A7
        }),
        jumper: h(Jumper, { size: e.small ? "small" : "default" }),
        pager: h(Pager, {
          currentPage: w.value,
          pageCount: x.value,
          pagerCount: e.pagerCount,
          onChange: k,
          disabled: e.disabled
        }),
        next: h(Next, {
          disabled: e.disabled,
          currentPage: w.value,
          pageCount: x.value,
          nextText: e.nextText,
          nextIcon: e.nextIcon,
          onClick: M7
        }),
        sizes: h(Sizes, {
          pageSize: y.value,
          pageSizes: e.pageSizes,
          popperClass: e.popperClass,
          disabled: e.disabled,
          teleported: e.teleported,
          size: e.small ? "small" : "default"
        }),
        slot: n?.default?.call(n) ?? null,
        total: h(Total, { total: isAbsent(e.total) ? 0 : e.total })
      }, d2 = e.layout.split(",").map((e2) => e2.trim()), p3 = false;
      return d2.forEach((e2) => {
        if (e2 === "->") {
          p3 = true;
          return;
        }
        p3 ? o3.push(l[e2]) : t2.push(l[e2]);
      }), P7(t2[0], i.is("first")), P7(t2[t2.length - 1], i.is("last")), p3 && o3.length > 0 && (P7(o3[0], i.is("first")), P7(o3[o3.length - 1], i.is("last")), t2.push(s2)), h("div", { class: [
        i.b(),
        i.is("background", e.background),
        { [i.m("small")]: e.small }
      ] }, t2);
    };
  }
}));
var popoverProps = buildProps({
  trigger: useTooltipTriggerProps.trigger,
  placement: dropdownProps.placement,
  disabled: useTooltipTriggerProps.disabled,
  visible: useTooltipContentProps.visible,
  transition: useTooltipContentProps.transition,
  popperOptions: dropdownProps.popperOptions,
  tabindex: dropdownProps.tabindex,
  content: useTooltipContentProps.content,
  popperStyle: useTooltipContentProps.popperStyle,
  popperClass: useTooltipContentProps.popperClass,
  enterable: {
    ...useTooltipContentProps.enterable,
    default: true
  },
  effect: {
    ...useTooltipContentProps.effect,
    default: "light"
  },
  teleported: useTooltipContentProps.teleported,
  title: String,
  width: {
    type: [String, Number],
    default: 150
  },
  offset: {
    type: Number,
    default: void 0
  },
  showAfter: {
    type: Number,
    default: 0
  },
  hideAfter: {
    type: Number,
    default: 200
  },
  autoClose: {
    type: Number,
    default: 0
  },
  showArrow: {
    type: Boolean,
    default: true
  },
  persistent: {
    type: Boolean,
    default: true
  },
  "onUpdate:visible": { type: Function }
});
var popoverEmits = {
  "update:visible": (e) => isBoolean2(e),
  "before-enter": () => true,
  "before-leave": () => true,
  "after-enter": () => true,
  "after-leave": () => true
};
var updateEventKeyRaw = "onUpdate:visible";
var Popover = _export_sfc(defineComponent({
  ...defineComponent({ name: "ElPopover" }),
  props: popoverProps,
  emits: popoverEmits,
  setup(e, { expose: t, emit: n }) {
    let r = e, i = computed2(() => r[updateEventKeyRaw]), o = useNamespace("popover"), s = ref(), d = computed2(() => unref(s)?.popperRef), y = computed2(() => [{ width: addUnit(r.width) }, r.popperStyle]), x = computed2(() => [
      o.b(),
      r.popperClass,
      { [o.m("plain")]: !!r.content }
    ]), w = computed2(() => r.transition === `${o.namespace.value}-fade-in-linear`), $ = () => {
      var e2;
      (e2 = s.value) == null || e2.hide();
    }, A7 = () => {
      n("before-enter");
    }, j7 = () => {
      n("before-leave");
    }, M7 = () => {
      n("after-enter");
    }, N7 = () => {
      n("update:visible", false), n("after-leave");
    };
    return t({
      popperRef: d,
      hide: $
    }), (e2, t2) => (openBlock(), createBlock(unref(ElTooltip), mergeProps({
      ref_key: "tooltipRef",
      ref: s
    }, e2.$attrs, {
      trigger: e2.trigger,
      placement: e2.placement,
      disabled: e2.disabled,
      visible: e2.visible,
      transition: e2.transition,
      "popper-options": e2.popperOptions,
      tabindex: e2.tabindex,
      content: e2.content,
      offset: e2.offset,
      "show-after": e2.showAfter,
      "hide-after": e2.hideAfter,
      "auto-close": e2.autoClose,
      "show-arrow": e2.showArrow,
      "aria-label": e2.title,
      effect: e2.effect,
      enterable: e2.enterable,
      "popper-class": unref(x),
      "popper-style": unref(y),
      teleported: e2.teleported,
      persistent: e2.persistent,
      "gpu-acceleration": unref(w),
      "onUpdate:visible": unref(i),
      onBeforeShow: A7,
      onBeforeHide: j7,
      onShow: M7,
      onHide: N7
    }), {
      content: withCtx(() => [e2.title ? (openBlock(), createElementBlock("div", {
        key: 0,
        class: normalizeClass(unref(o).e("title")),
        role: "title"
      }, toDisplayString(e2.title), 3)) : createCommentVNode("v-if", true), renderSlot(e2.$slots, "default", {}, () => [createTextVNode(toDisplayString(e2.content), 1)])]),
      default: withCtx(() => [e2.$slots.reference ? renderSlot(e2.$slots, "reference", { key: 0 }) : createCommentVNode("v-if", true)]),
      _: 3
    }, 16, [
      "trigger",
      "placement",
      "disabled",
      "visible",
      "transition",
      "popper-options",
      "tabindex",
      "content",
      "offset",
      "show-after",
      "hide-after",
      "auto-close",
      "show-arrow",
      "aria-label",
      "effect",
      "enterable",
      "popper-class",
      "popper-style",
      "teleported",
      "persistent",
      "gpu-acceleration",
      "onUpdate:visible"
    ]));
  }
}), [["__file", "/home/runner/work/element-plus/element-plus/packages/components/popover/src/popover.vue"]]);
var attachEvents = (e, t) => {
  let n = (t.arg || t.value)?.popperRef;
  n && (n.triggerRef = e);
};
withInstall(Popover, { directive: withInstallDirective({
  mounted(e, t) {
    attachEvents(e, t);
  },
  updated(e, t) {
    attachEvents(e, t);
  }
}, "popover") });
var skeletonProps = buildProps({
  animated: {
    type: Boolean,
    default: false
  },
  count: {
    type: Number,
    default: 1
  },
  rows: {
    type: Number,
    default: 3
  },
  loading: {
    type: Boolean,
    default: true
  },
  throttle: { type: Number }
});
var skeletonItemProps = buildProps({ variant: {
  type: String,
  values: [
    "circle",
    "rect",
    "h1",
    "h3",
    "text",
    "caption",
    "p",
    "image",
    "button"
  ],
  default: "text"
} });
var SkeletonItem = _export_sfc(defineComponent({
  ...defineComponent({ name: "ElSkeletonItem" }),
  props: skeletonItemProps,
  setup(e) {
    let t = useNamespace("skeleton");
    return (e2, n) => (openBlock(), createElementBlock("div", { class: normalizeClass([unref(t).e("item"), unref(t).e(e2.variant)]) }, [e2.variant === "image" ? (openBlock(), createBlock(unref(picture_filled_default), { key: 0 })) : createCommentVNode("v-if", true)], 2));
  }
}), [["__file", "/home/runner/work/element-plus/element-plus/packages/components/skeleton/src/skeleton-item.vue"]]);
withInstall(_export_sfc(defineComponent({
  ...defineComponent({ name: "ElSkeleton" }),
  props: skeletonProps,
  setup(e, { expose: t }) {
    let r = e, i = useNamespace("skeleton"), o = useThrottleRender(toRef(r, "loading"), r.throttle);
    return t({ uiLoading: o }), (e2, t2) => unref(o) ? (openBlock(), createElementBlock("div", mergeProps({
      key: 0,
      class: [unref(i).b(), unref(i).is("animated", e2.animated)]
    }, e2.$attrs), [(openBlock(true), createElementBlock(Fragment, null, renderList(e2.count, (t3) => (openBlock(), createElementBlock(Fragment, { key: t3 }, [e2.loading ? renderSlot(e2.$slots, "template", { key: t3 }, () => [createVNode(SkeletonItem, {
      class: normalizeClass(unref(i).is("first")),
      variant: "p"
    }, null, 8, ["class"]), (openBlock(true), createElementBlock(Fragment, null, renderList(e2.rows, (t4) => (openBlock(), createBlock(SkeletonItem, {
      key: t4,
      class: normalizeClass([unref(i).e("paragraph"), unref(i).is("last", t4 === e2.rows && e2.rows > 1)]),
      variant: "p"
    }, null, 8, ["class"]))), 128))]) : createCommentVNode("v-if", true)], 64))), 128))], 16)) : renderSlot(e2.$slots, "default", normalizeProps(mergeProps({ key: 1 }, e2.$attrs)));
  }
}), [["__file", "/home/runner/work/element-plus/element-plus/packages/components/skeleton/src/skeleton.vue"]]), { SkeletonItem }), withNoopInstall(SkeletonItem), { ...ElTooltip.props }, String, String, Array;
function uid2(e) {
  return `${e ? `${e}-` : ""}${Math.random().toString(36).substring(2, 11)}`;
}
var m$1 = (e) => {
  let t = 0;
  for (let n = 0; n < e.length; n++) {
    let r = e.charCodeAt(n);
    t = (t << 5) - t + r, t &= t;
  }
  return Math.abs(t);
};
var I = (e, t) => Math.floor(e / 10 ** t % 10);
var C = (e, t) => !(I(e, t) % 2);
var h$1 = (e, t, n) => {
  let r = e % t;
  return n && I(e, n) % 2 == 0 ? -r : r;
};
var u = (e, t, n) => t[e % n];
var F = (e) => {
  e.slice(0, 1) === "#" && (e = e.slice(1));
  let t = parseInt(e.substring(0, 2), 16), n = parseInt(e.substring(2, 4), 16), r = parseInt(e.substring(4, 6), 16);
  return (t * 299 + n * 587 + r * 114) / 1e3 >= 128 ? "#000000" : "#FFFFFF";
};
var B = 4;
var E = 80;
function z(e, t) {
  let n = m$1(e), r = t && t.length;
  return Array.from({ length: B }, (e2, i) => ({
    color: u(n + i, t, r),
    translateX: h$1(n * (i + 1), E / 2 - (i + 17), 1),
    translateY: h$1(n * (i + 1), E / 2 - (i + 17), 2),
    rotate: h$1(n * (i + 1), 360),
    isSquare: C(n, 2)
  }));
}
var b$1 = defineComponent({
  props: {
    colors: {
      type: Array,
      required: true
    },
    name: {
      type: String,
      required: true
    },
    square: {
      type: Boolean,
      required: false,
      default: false
    },
    size: {
      type: Number,
      required: true
    },
    title: {
      type: Boolean,
      required: false,
      default: false
    }
  },
  setup(e) {
    return {
      properties: computed2(() => z(e.name, e.colors)),
      SIZE: E
    };
  }
});
var g = (e, t) => {
  let n = e.__vccOpts || e;
  for (let [e2, r] of t) n[e2] = r;
  return n;
};
var A = [
  "viewBox",
  "width",
  "height"
];
var M = { key: 0 };
var N = ["width", "height"];
var U = [
  "width",
  "height",
  "rx"
];
var L = { mask: "url(#mask__bauhaus)" };
var O = [
  "width",
  "height",
  "fill"
];
var T = [
  "x",
  "y",
  "width",
  "height",
  "fill",
  "transform"
];
var X = [
  "cx",
  "cy",
  "fill",
  "r",
  "transform"
];
var Y = [
  "y1",
  "x2",
  "y2",
  "stroke",
  "transform"
];
function R(e, t, n, r, i, o) {
  return openBlock(), createElementBlock("svg", {
    viewBox: `0 0 ${e.SIZE} ${e.SIZE}`,
    fill: "none",
    role: "img",
    xmlns: "http://www.w3.org/2000/svg",
    width: e.size,
    height: e.size
  }, [
    e.title ? (openBlock(), createElementBlock("title", M, toDisplayString(e.name), 1)) : createCommentVNode("", true),
    createBaseVNode("mask", {
      id: "mask__bauhaus",
      maskUnits: "userSpaceOnUse",
      x: 0,
      y: 0,
      width: e.SIZE,
      height: e.SIZE
    }, [createBaseVNode("rect", {
      width: e.SIZE,
      height: e.SIZE,
      rx: e.square ? void 0 : e.SIZE * 2,
      fill: "#FFFFFF"
    }, null, 8, U)], 8, N),
    createBaseVNode("g", L, [
      createBaseVNode("rect", {
        width: e.SIZE,
        height: e.SIZE,
        fill: e.properties[0].color
      }, null, 8, O),
      createBaseVNode("rect", {
        x: (e.SIZE - 60) / 2,
        y: (e.SIZE - 20) / 2,
        width: e.SIZE,
        height: e.properties[1].isSquare ? e.SIZE : e.SIZE / 8,
        fill: e.properties[1].color,
        transform: `translate(${e.properties[1].translateX} ${e.properties[1].translateY}) rotate(${e.properties[1].rotate} ${e.SIZE / 2} ${e.SIZE / 2})`
      }, null, 8, T),
      createBaseVNode("circle", {
        cx: e.SIZE / 2,
        cy: e.SIZE / 2,
        fill: e.properties[2].color,
        r: e.SIZE / 5,
        transform: `translate(${e.properties[2].translateX} ${e.properties[2].translateY})`
      }, null, 8, X),
      createBaseVNode("line", {
        x1: 0,
        y1: e.SIZE / 2,
        x2: e.SIZE,
        y2: e.SIZE / 2,
        "stroke-width": 2,
        stroke: e.properties[3].color,
        transform: `translate(${e.properties[3].translateX} ${e.properties[3].translateY}) rotate(${e.properties[3].rotate} ${e.SIZE / 2} ${e.SIZE / 2})`
      }, null, 8, Y)
    ])
  ], 8, A);
}
var D = g(b$1, [["render", R]]);
var c = 36;
function H(e, t) {
  let n = m$1(e), r = t && t.length, i = u(n, t, r), o = h$1(n, 10, 1), s = o < 5 ? o + c / 9 : o, l = h$1(n, 10, 2), d = l < 5 ? l + c / 9 : l;
  return {
    wrapperColor: i,
    faceColor: F(i),
    backgroundColor: u(n + 13, t, r),
    wrapperTranslateX: s,
    wrapperTranslateY: d,
    wrapperRotate: h$1(n, 360),
    wrapperScale: 1 + h$1(n, c / 12) / 10,
    isMouthOpen: C(n, 2),
    isCircle: C(n, 1),
    eyeSpread: h$1(n, 5),
    mouthSpread: h$1(n, 3),
    faceRotate: h$1(n, 10, 3),
    faceTranslateX: s > c / 6 ? s / 2 : h$1(n, 8, 1),
    faceTranslateY: d > c / 6 ? d / 2 : h$1(n, 7, 2)
  };
}
var G = defineComponent({
  props: {
    colors: {
      type: Array,
      required: true
    },
    name: {
      type: String,
      required: true
    },
    square: {
      type: Boolean,
      required: false,
      default: false
    },
    size: {
      type: Number,
      required: true
    },
    title: {
      type: Boolean,
      required: false,
      default: false
    }
  },
  setup(e) {
    return {
      data: computed2(() => H(e.name, e.colors)),
      SIZE: c
    };
  }
});
var P = [
  "viewBox",
  "width",
  "height"
];
var V = { key: 0 };
var j = ["width", "height"];
var J = [
  "width",
  "height",
  "rx"
];
var K = { mask: "url(#mask__beam)" };
var Q = [
  "width",
  "height",
  "fill"
];
var W = [
  "width",
  "height",
  "transform",
  "fill",
  "rx"
];
var x$1 = ["transform"];
var ee$1 = ["d", "stroke"];
var le$1 = ["d", "fill"];
var te = [
  "x",
  "width",
  "fill"
];
var ie = [
  "x",
  "width",
  "fill"
];
function oe(e, t, n, r, i, o) {
  return openBlock(), createElementBlock("svg", {
    viewBox: `0 0 ${e.SIZE} ${e.SIZE}`,
    fill: "none",
    role: "img",
    xmlns: "http://www.w3.org/2000/svg",
    width: e.size,
    height: e.size
  }, [
    e.title ? (openBlock(), createElementBlock("title", V, toDisplayString(e.name), 1)) : createCommentVNode("", true),
    createBaseVNode("mask", {
      id: "mask__beam",
      maskUnits: "userSpaceOnUse",
      x: 0,
      y: 0,
      width: e.SIZE,
      height: e.SIZE
    }, [createBaseVNode("rect", {
      width: e.SIZE,
      height: e.SIZE,
      rx: e.square ? void 0 : e.SIZE * 2,
      fill: "#FFFFFF"
    }, null, 8, J)], 8, j),
    createBaseVNode("g", K, [
      createBaseVNode("rect", {
        width: e.SIZE,
        height: e.SIZE,
        fill: e.data.backgroundColor
      }, null, 8, Q),
      createBaseVNode("rect", {
        x: 0,
        y: 0,
        width: e.SIZE,
        height: e.SIZE,
        transform: `translate(${e.data.wrapperTranslateX} ${e.data.wrapperTranslateY}) rotate(${e.data.wrapperRotate} ${e.SIZE / 2} ${e.SIZE / 2}) scale(${e.data.wrapperScale})`,
        fill: e.data.wrapperColor,
        rx: e.data.isCircle ? e.SIZE : e.SIZE / 6
      }, null, 8, W),
      createBaseVNode("g", { transform: `translate(${e.data.faceTranslateX} ${e.data.faceTranslateY}) rotate(${e.data.faceRotate} ${e.SIZE / 2} ${e.SIZE / 2})` }, [
        e.data.isMouthOpen ? (openBlock(), createElementBlock("path", {
          key: 0,
          d: `M15 ${19 + e.data.mouthSpread}c2 1
        4 1 6 0`,
          stroke: e.data.faceColor,
          fill: "none",
          "stroke-linecap": "round"
        }, null, 8, ee$1)) : (openBlock(), createElementBlock("path", {
          key: 1,
          d: `M13,${19 + e.data.mouthSpread} a1,0.75 0 0,0 10,0`,
          fill: e.data.faceColor
        }, null, 8, le$1)),
        createBaseVNode("rect", {
          x: 14 - e.data.eyeSpread,
          y: 14,
          width: 1.5,
          height: 2,
          rx: 1,
          stroke: "none",
          fill: e.data.faceColor
        }, null, 8, te),
        createBaseVNode("rect", {
          x: 20 + e.data.eyeSpread,
          y: 14,
          width: 1.5,
          height: 2,
          rx: 1,
          stroke: "none",
          fill: e.data.faceColor
        }, null, 8, ie)
      ], 8, x$1)
    ])
  ], 8, P);
}
var re = g(G, [["render", oe]]);
var se = 3;
var S = 80;
function ne$1(e, t) {
  let n = m$1(e), r = t && t.length;
  return Array.from({ length: se }, (e2, i) => ({
    color: u(n + i, t, r),
    translateX: h$1(n * (i + 1), S / 10, 1),
    translateY: h$1(n * (i + 1), S / 10, 2),
    scale: 1.2 + h$1(n * (i + 1), S / 20) / 10,
    rotate: h$1(n * (i + 1), 360, 1)
  }));
}
var he = defineComponent({
  props: {
    colors: {
      type: Array,
      required: true
    },
    name: {
      type: String,
      required: true
    },
    square: {
      type: Boolean,
      required: false,
      default: false
    },
    size: {
      type: Number,
      required: true
    },
    title: {
      type: Boolean,
      required: false,
      default: false
    }
  },
  setup(e) {
    return {
      properties: computed2(() => ne$1(e.name, e.colors)),
      SIZE: S
    };
  }
});
var ae = (e) => (pushScopeId("data-v-3c8b58b0"), e = e(), popScopeId(), e);
var de$1 = [
  "viewBox",
  "width",
  "height"
];
var fe = { key: 0 };
var ue = ["width", "height"];
var pe = [
  "width",
  "height",
  "rx"
];
var ge$1 = { mask: "url(#mask__marble)" };
var ce = [
  "width",
  "height",
  "fill"
];
var we = ["fill", "transform"];
var $e = ["fill", "transform"];
var me = ae(() => createBaseVNode("defs", null, [createBaseVNode("filter", {
  id: "prefix__filter0_f",
  filterUnits: "userSpaceOnUse",
  "color-interpolation-filters": "sRGB"
}, [
  createBaseVNode("feFlood", {
    "flood-opacity": 0,
    result: "BackgroundImageFix"
  }),
  createBaseVNode("feBlend", {
    in: "SourceGraphic",
    in2: "BackgroundImageFix",
    result: "shape"
  }),
  createBaseVNode("feGaussianBlur", {
    stdDeviation: 7,
    result: "effect1_foregroundBlur"
  })
])], -1));
function ye(e, t, n, r, i, o) {
  return openBlock(), createElementBlock("svg", {
    viewBox: `0 0 ${e.SIZE} ${e.SIZE}`,
    fill: "none",
    role: "img",
    xmlns: "http://www.w3.org/2000/svg",
    width: e.size,
    height: e.size
  }, [
    e.title ? (openBlock(), createElementBlock("title", fe, toDisplayString(e.name), 1)) : createCommentVNode("", true),
    createBaseVNode("mask", {
      id: "mask__marble",
      maskUnits: "userSpaceOnUse",
      x: 0,
      y: 0,
      width: e.SIZE,
      height: e.SIZE
    }, [createBaseVNode("rect", {
      width: e.SIZE,
      height: e.SIZE,
      rx: e.square ? void 0 : e.SIZE * 2,
      fill: "#FFFFFF"
    }, null, 8, pe)], 8, ue),
    createBaseVNode("g", ge$1, [
      createBaseVNode("rect", {
        width: e.SIZE,
        height: e.SIZE,
        fill: e.properties[0].color
      }, null, 8, ce),
      createBaseVNode("path", {
        filter: "url(#prefix__filter0_f)",
        d: "M32.414 59.35L50.376 70.5H72.5v-71H33.728L26.5 13.381l19.057 27.08L32.414 59.35z",
        fill: e.properties[1].color,
        transform: `translate(${e.properties[1].translateX} ${e.properties[1].translateY}) rotate(${e.properties[1].rotate} ${e.SIZE / 2} ${e.SIZE / 2}) scale(${e.properties[2].scale})`
      }, null, 8, we),
      createBaseVNode("path", {
        filter: "url(#prefix__filter0_f)",
        class: "mix-blend-overlay",
        d: "M22.216 24L0 46.75l14.108 38.129L78 86l-3.081-59.276-22.378 4.005 12.972 20.186-23.35 27.395L22.215 24z",
        fill: e.properties[2].color,
        transform: `translate(${e.properties[2].translateX} ${e.properties[2].translateY}) rotate(${e.properties[2].rotate} ${e.SIZE / 2} ${e.SIZE / 2}) scale(${e.properties[2].scale})`
      }, null, 8, $e)
    ]),
    me
  ], 8, de$1);
}
var Se = g(he, [["render", ye], ["__scopeId", "data-v-3c8b58b0"]]);
var _e = 64;
var Ce = 80;
function Ee(e, t) {
  let n = m$1(e), r = t && t.length;
  return Array.from({ length: _e }, (e2, i) => u(n % i, t, r));
}
var Ie = defineComponent({
  props: {
    colors: {
      type: Array,
      required: true
    },
    name: {
      type: String,
      required: true
    },
    square: {
      type: Boolean,
      required: false,
      default: false
    },
    size: {
      type: Number,
      required: true
    },
    title: {
      type: Boolean,
      required: false,
      default: false
    }
  },
  setup(e) {
    return {
      pixelColors: computed2(() => Ee(e.name, e.colors)),
      SIZE: Ce
    };
  }
});
var Ze = [
  "viewBox",
  "width",
  "height"
];
var ve = { key: 0 };
var qe = ["width", "height"];
var ke = [
  "width",
  "height",
  "rx"
];
var Fe = { mask: "url(#mask__pixel)" };
var Be = ["fill"];
var ze = ["fill"];
var be = ["fill"];
var Ae = ["fill"];
var Me = ["fill"];
var Ne = ["fill"];
var Ue = ["fill"];
var Le = ["fill"];
var Oe = ["fill"];
var Te = ["fill"];
var Xe = ["fill"];
var Ye = ["fill"];
var Re$1 = ["fill"];
var De = ["fill"];
var He = ["fill"];
var Ge = ["fill"];
var Pe = ["fill"];
var Ve = ["fill"];
var je = ["fill"];
var Je = ["fill"];
var Ke = ["fill"];
var Qe = ["fill"];
var We = ["fill"];
var xe = ["fill"];
var el$1 = ["fill"];
var ll$1 = ["fill"];
var tl = ["fill"];
var il = ["fill"];
var ol = ["fill"];
var rl = ["fill"];
var sl = ["fill"];
var nl = ["fill"];
var hl = ["fill"];
var al = ["fill"];
var dl = ["fill"];
var fl = ["fill"];
var ul = ["fill"];
var pl = ["fill"];
var gl$1 = ["fill"];
var cl$1 = ["fill"];
var wl = ["fill"];
var $l = ["fill"];
var ml = ["fill"];
var yl = ["fill"];
var Sl = ["fill"];
var _l = ["fill"];
var Cl = ["fill"];
var El = ["fill"];
var Il = ["fill"];
var Zl = ["fill"];
var vl = ["fill"];
var ql = ["fill"];
var kl = ["fill"];
var Fl = ["fill"];
var Bl = ["fill"];
var zl = ["fill"];
var bl = ["fill"];
var Al = ["fill"];
var Ml = ["fill"];
var Nl = ["fill"];
var Ul = ["fill"];
var Ll$1 = ["fill"];
var Ol = ["fill"];
var Tl = ["fill"];
function Xl(e, t, n, r, i, o) {
  return openBlock(), createElementBlock("svg", {
    viewBox: `0 0 ${e.SIZE} ${e.SIZE}`,
    fill: "none",
    role: "img",
    xmlns: "http://www.w3.org/2000/svg",
    width: e.size,
    height: e.size
  }, [
    e.title ? (openBlock(), createElementBlock("title", ve, toDisplayString(e.name), 1)) : createCommentVNode("", true),
    createBaseVNode("mask", {
      id: "mask__pixel",
      "mask-type": "alpha",
      maskUnits: "userSpaceOnUse",
      x: 0,
      y: 0,
      width: e.SIZE,
      height: e.SIZE
    }, [createBaseVNode("rect", {
      width: e.SIZE,
      height: e.SIZE,
      rx: e.square ? void 0 : e.SIZE * 2,
      fill: "#FFFFFF"
    }, null, 8, ke)], 8, qe),
    createBaseVNode("g", Fe, [
      createBaseVNode("rect", {
        width: 10,
        height: 10,
        fill: e.pixelColors[0]
      }, null, 8, Be),
      createBaseVNode("rect", {
        x: 20,
        width: 10,
        height: 10,
        fill: e.pixelColors[1]
      }, null, 8, ze),
      createBaseVNode("rect", {
        x: 40,
        width: 10,
        height: 10,
        fill: e.pixelColors[2]
      }, null, 8, be),
      createBaseVNode("rect", {
        x: 60,
        width: 10,
        height: 10,
        fill: e.pixelColors[3]
      }, null, 8, Ae),
      createBaseVNode("rect", {
        x: 10,
        width: 10,
        height: 10,
        fill: e.pixelColors[4]
      }, null, 8, Me),
      createBaseVNode("rect", {
        x: 30,
        width: 10,
        height: 10,
        fill: e.pixelColors[5]
      }, null, 8, Ne),
      createBaseVNode("rect", {
        x: 50,
        width: 10,
        height: 10,
        fill: e.pixelColors[6]
      }, null, 8, Ue),
      createBaseVNode("rect", {
        x: 70,
        width: 10,
        height: 10,
        fill: e.pixelColors[7]
      }, null, 8, Le),
      createBaseVNode("rect", {
        y: 10,
        width: 10,
        height: 10,
        fill: e.pixelColors[8]
      }, null, 8, Oe),
      createBaseVNode("rect", {
        y: 20,
        width: 10,
        height: 10,
        fill: e.pixelColors[9]
      }, null, 8, Te),
      createBaseVNode("rect", {
        y: 30,
        width: 10,
        height: 10,
        fill: e.pixelColors[10]
      }, null, 8, Xe),
      createBaseVNode("rect", {
        y: 40,
        width: 10,
        height: 10,
        fill: e.pixelColors[11]
      }, null, 8, Ye),
      createBaseVNode("rect", {
        y: 50,
        width: 10,
        height: 10,
        fill: e.pixelColors[12]
      }, null, 8, Re$1),
      createBaseVNode("rect", {
        y: 60,
        width: 10,
        height: 10,
        fill: e.pixelColors[13]
      }, null, 8, De),
      createBaseVNode("rect", {
        y: 70,
        width: 10,
        height: 10,
        fill: e.pixelColors[14]
      }, null, 8, He),
      createBaseVNode("rect", {
        x: 20,
        y: 10,
        width: 10,
        height: 10,
        fill: e.pixelColors[15]
      }, null, 8, Ge),
      createBaseVNode("rect", {
        x: 20,
        y: 20,
        width: 10,
        height: 10,
        fill: e.pixelColors[16]
      }, null, 8, Pe),
      createBaseVNode("rect", {
        x: 20,
        y: 30,
        width: 10,
        height: 10,
        fill: e.pixelColors[17]
      }, null, 8, Ve),
      createBaseVNode("rect", {
        x: 20,
        y: 40,
        width: 10,
        height: 10,
        fill: e.pixelColors[18]
      }, null, 8, je),
      createBaseVNode("rect", {
        x: 20,
        y: 50,
        width: 10,
        height: 10,
        fill: e.pixelColors[19]
      }, null, 8, Je),
      createBaseVNode("rect", {
        x: 20,
        y: 60,
        width: 10,
        height: 10,
        fill: e.pixelColors[20]
      }, null, 8, Ke),
      createBaseVNode("rect", {
        x: 20,
        y: 70,
        width: 10,
        height: 10,
        fill: e.pixelColors[21]
      }, null, 8, Qe),
      createBaseVNode("rect", {
        x: 40,
        y: 10,
        width: 10,
        height: 10,
        fill: e.pixelColors[22]
      }, null, 8, We),
      createBaseVNode("rect", {
        x: 40,
        y: 20,
        width: 10,
        height: 10,
        fill: e.pixelColors[23]
      }, null, 8, xe),
      createBaseVNode("rect", {
        x: 40,
        y: 30,
        width: 10,
        height: 10,
        fill: e.pixelColors[24]
      }, null, 8, el$1),
      createBaseVNode("rect", {
        x: 40,
        y: 40,
        width: 10,
        height: 10,
        fill: e.pixelColors[25]
      }, null, 8, ll$1),
      createBaseVNode("rect", {
        x: 40,
        y: 50,
        width: 10,
        height: 10,
        fill: e.pixelColors[26]
      }, null, 8, tl),
      createBaseVNode("rect", {
        x: 40,
        y: 60,
        width: 10,
        height: 10,
        fill: e.pixelColors[27]
      }, null, 8, il),
      createBaseVNode("rect", {
        x: 40,
        y: 70,
        width: 10,
        height: 10,
        fill: e.pixelColors[28]
      }, null, 8, ol),
      createBaseVNode("rect", {
        x: 60,
        y: 10,
        width: 10,
        height: 10,
        fill: e.pixelColors[29]
      }, null, 8, rl),
      createBaseVNode("rect", {
        x: 60,
        y: 20,
        width: 10,
        height: 10,
        fill: e.pixelColors[30]
      }, null, 8, sl),
      createBaseVNode("rect", {
        x: 60,
        y: 30,
        width: 10,
        height: 10,
        fill: e.pixelColors[31]
      }, null, 8, nl),
      createBaseVNode("rect", {
        x: 60,
        y: 40,
        width: 10,
        height: 10,
        fill: e.pixelColors[32]
      }, null, 8, hl),
      createBaseVNode("rect", {
        x: 60,
        y: 50,
        width: 10,
        height: 10,
        fill: e.pixelColors[33]
      }, null, 8, al),
      createBaseVNode("rect", {
        x: 60,
        y: 60,
        width: 10,
        height: 10,
        fill: e.pixelColors[34]
      }, null, 8, dl),
      createBaseVNode("rect", {
        x: 60,
        y: 70,
        width: 10,
        height: 10,
        fill: e.pixelColors[35]
      }, null, 8, fl),
      createBaseVNode("rect", {
        x: 10,
        y: 10,
        width: 10,
        height: 10,
        fill: e.pixelColors[36]
      }, null, 8, ul),
      createBaseVNode("rect", {
        x: 10,
        y: 20,
        width: 10,
        height: 10,
        fill: e.pixelColors[37]
      }, null, 8, pl),
      createBaseVNode("rect", {
        x: 10,
        y: 30,
        width: 10,
        height: 10,
        fill: e.pixelColors[38]
      }, null, 8, gl$1),
      createBaseVNode("rect", {
        x: 10,
        y: 40,
        width: 10,
        height: 10,
        fill: e.pixelColors[39]
      }, null, 8, cl$1),
      createBaseVNode("rect", {
        x: 10,
        y: 50,
        width: 10,
        height: 10,
        fill: e.pixelColors[40]
      }, null, 8, wl),
      createBaseVNode("rect", {
        x: 10,
        y: 60,
        width: 10,
        height: 10,
        fill: e.pixelColors[41]
      }, null, 8, $l),
      createBaseVNode("rect", {
        x: 10,
        y: 70,
        width: 10,
        height: 10,
        fill: e.pixelColors[42]
      }, null, 8, ml),
      createBaseVNode("rect", {
        x: 30,
        y: 10,
        width: 10,
        height: 10,
        fill: e.pixelColors[43]
      }, null, 8, yl),
      createBaseVNode("rect", {
        x: 30,
        y: 20,
        width: 10,
        height: 10,
        fill: e.pixelColors[44]
      }, null, 8, Sl),
      createBaseVNode("rect", {
        x: 30,
        y: 30,
        width: 10,
        height: 10,
        fill: e.pixelColors[45]
      }, null, 8, _l),
      createBaseVNode("rect", {
        x: 30,
        y: 40,
        width: 10,
        height: 10,
        fill: e.pixelColors[46]
      }, null, 8, Cl),
      createBaseVNode("rect", {
        x: 30,
        y: 50,
        width: 10,
        height: 10,
        fill: e.pixelColors[47]
      }, null, 8, El),
      createBaseVNode("rect", {
        x: 30,
        y: 60,
        width: 10,
        height: 10,
        fill: e.pixelColors[48]
      }, null, 8, Il),
      createBaseVNode("rect", {
        x: 30,
        y: 70,
        width: 10,
        height: 10,
        fill: e.pixelColors[49]
      }, null, 8, Zl),
      createBaseVNode("rect", {
        x: 50,
        y: 10,
        width: 10,
        height: 10,
        fill: e.pixelColors[50]
      }, null, 8, vl),
      createBaseVNode("rect", {
        x: 50,
        y: 20,
        width: 10,
        height: 10,
        fill: e.pixelColors[51]
      }, null, 8, ql),
      createBaseVNode("rect", {
        x: 50,
        y: 30,
        width: 10,
        height: 10,
        fill: e.pixelColors[52]
      }, null, 8, kl),
      createBaseVNode("rect", {
        x: 50,
        y: 40,
        width: 10,
        height: 10,
        fill: e.pixelColors[53]
      }, null, 8, Fl),
      createBaseVNode("rect", {
        x: 50,
        y: 50,
        width: 10,
        height: 10,
        fill: e.pixelColors[54]
      }, null, 8, Bl),
      createBaseVNode("rect", {
        x: 50,
        y: 60,
        width: 10,
        height: 10,
        fill: e.pixelColors[55]
      }, null, 8, zl),
      createBaseVNode("rect", {
        x: 50,
        y: 70,
        width: 10,
        height: 10,
        fill: e.pixelColors[56]
      }, null, 8, bl),
      createBaseVNode("rect", {
        x: 70,
        y: 10,
        width: 10,
        height: 10,
        fill: e.pixelColors[57]
      }, null, 8, Al),
      createBaseVNode("rect", {
        x: 70,
        y: 20,
        width: 10,
        height: 10,
        fill: e.pixelColors[58]
      }, null, 8, Ml),
      createBaseVNode("rect", {
        x: 70,
        y: 30,
        width: 10,
        height: 10,
        fill: e.pixelColors[59]
      }, null, 8, Nl),
      createBaseVNode("rect", {
        x: 70,
        y: 40,
        width: 10,
        height: 10,
        fill: e.pixelColors[60]
      }, null, 8, Ul),
      createBaseVNode("rect", {
        x: 70,
        y: 50,
        width: 10,
        height: 10,
        fill: e.pixelColors[61]
      }, null, 8, Ll$1),
      createBaseVNode("rect", {
        x: 70,
        y: 60,
        width: 10,
        height: 10,
        fill: e.pixelColors[62]
      }, null, 8, Ol),
      createBaseVNode("rect", {
        x: 70,
        y: 70,
        width: 10,
        height: 10,
        fill: e.pixelColors[63]
      }, null, 8, Tl)
    ])
  ], 8, Ze);
}
var Yl = g(Ie, [["render", Xl]]);
var Rl = 90;
var Dl = 5;
function Hl(e, t) {
  let n = m$1(e), r = t && t.length, i = Array.from({ length: Dl }, (e2, i2) => u(n + i2, t, r)), o = [];
  return o[0] = i[0], o[1] = i[1], o[2] = i[1], o[3] = i[2], o[4] = i[2], o[5] = i[3], o[6] = i[3], o[7] = i[0], o[8] = i[4], o;
}
var Gl = defineComponent({
  props: {
    colors: {
      type: Array,
      required: true
    },
    name: {
      type: String,
      required: true
    },
    square: {
      type: Boolean,
      required: false,
      default: false
    },
    size: {
      type: Number,
      required: true
    },
    title: {
      type: Boolean,
      required: false,
      default: false
    }
  },
  setup(e) {
    return {
      ringColors: computed2(() => Hl(e.name, e.colors)),
      SIZE: Rl
    };
  }
});
var Pl = [
  "viewBox",
  "width",
  "height"
];
var Vl = { key: 0 };
var jl = ["width", "height"];
var Jl = [
  "width",
  "height",
  "rx"
];
var Kl = { mask: "url(#mask__ring)" };
var Ql = ["fill"];
var Wl = ["fill"];
var xl = ["fill"];
var et = ["fill"];
var lt$1 = ["fill"];
var tt2 = ["fill"];
var it$2 = ["fill"];
var ot = ["fill"];
var rt = ["fill"];
function st(e, t, n, r, i, o) {
  return openBlock(), createElementBlock("svg", {
    viewBox: `0 0 ${e.SIZE} ${e.SIZE}`,
    fill: "none",
    role: "img",
    xmlns: "http://www.w3.org/2000/svg",
    width: e.size,
    height: e.size
  }, [
    e.title ? (openBlock(), createElementBlock("title", Vl, toDisplayString(e.name), 1)) : createCommentVNode("", true),
    createBaseVNode("mask", {
      id: "mask__ring",
      maskUnits: "userSpaceOnUse",
      x: 0,
      y: 0,
      width: e.SIZE,
      height: e.SIZE
    }, [createBaseVNode("rect", {
      width: e.SIZE,
      height: e.SIZE,
      rx: e.square ? void 0 : e.SIZE * 2,
      fill: "#FFFFFF"
    }, null, 8, Jl)], 8, jl),
    createBaseVNode("g", Kl, [
      createBaseVNode("path", {
        d: "M0 0h90v45H0z",
        fill: e.ringColors[0]
      }, null, 8, Ql),
      createBaseVNode("path", {
        d: "M0 45h90v45H0z",
        fill: e.ringColors[1]
      }, null, 8, Wl),
      createBaseVNode("path", {
        d: "M83 45a38 38 0 00-76 0h76z",
        fill: e.ringColors[2]
      }, null, 8, xl),
      createBaseVNode("path", {
        d: "M83 45a38 38 0 01-76 0h76z",
        fill: e.ringColors[3]
      }, null, 8, et),
      createBaseVNode("path", {
        d: "M77 45a32 32 0 10-64 0h64z",
        fill: e.ringColors[4]
      }, null, 8, lt$1),
      createBaseVNode("path", {
        d: "M77 45a32 32 0 11-64 0h64z",
        fill: e.ringColors[5]
      }, null, 8, tt2),
      createBaseVNode("path", {
        d: "M71 45a26 26 0 00-52 0h52z",
        fill: e.ringColors[6]
      }, null, 8, it$2),
      createBaseVNode("path", {
        d: "M71 45a26 26 0 01-52 0h52z",
        fill: e.ringColors[7]
      }, null, 8, ot),
      createBaseVNode("circle", {
        cx: 45,
        cy: 45,
        r: 23,
        fill: e.ringColors[8]
      }, null, 8, rt)
    ])
  ], 8, Pl);
}
var nt = g(Gl, [["render", st]]);
var ht = 4;
var at = 80;
function dt(e, t) {
  let n = m$1(e), r = t && t.length;
  return Array.from({ length: ht }, (e2, i) => u(n + i, t, r));
}
var ft = defineComponent({
  props: {
    colors: {
      type: Array,
      required: true
    },
    name: {
      type: String,
      required: true
    },
    square: {
      type: Boolean,
      required: false,
      default: false
    },
    size: {
      type: Number,
      required: true
    },
    title: {
      type: Boolean,
      required: false,
      default: false
    }
  },
  setup(e) {
    return {
      sunsetColors: computed2(() => dt(e.name, e.colors)),
      formattedName: computed2(() => e.name.replace(/\s/g, "")),
      SIZE: at
    };
  }
});
var ut = [
  "viewBox",
  "width",
  "height"
];
var pt = { key: 0 };
var gt$1 = ["width", "height"];
var ct = [
  "width",
  "height",
  "rx"
];
var wt = { mask: "url(#mask__sunset)" };
var $t = ["fill"];
var mt = ["fill"];
var yt = [
  "id",
  "x1",
  "x2",
  "y2"
];
var St = ["stop-color"];
var _t = ["stop-color"];
var Ct = [
  "id",
  "x1",
  "y1",
  "x2",
  "y2"
];
var Et = ["stop-color"];
var It = ["stop-color"];
function Zt(e, t, n, r, i, o) {
  return openBlock(), createElementBlock("svg", {
    viewBox: `0 0 ${e.SIZE} ${e.SIZE}`,
    fill: "none",
    role: "img",
    xmlns: "http://www.w3.org/2000/svg",
    width: e.size,
    height: e.size
  }, [
    e.title ? (openBlock(), createElementBlock("title", pt, toDisplayString(e.name), 1)) : createCommentVNode("", true),
    createBaseVNode("mask", {
      id: "mask__sunset",
      maskUnits: "userSpaceOnUse",
      x: 0,
      y: 0,
      width: e.SIZE,
      height: e.SIZE
    }, [createBaseVNode("rect", {
      width: e.SIZE,
      height: e.SIZE,
      rx: e.square ? void 0 : e.SIZE * 2,
      fill: "#FFFFFF"
    }, null, 8, ct)], 8, gt$1),
    createBaseVNode("g", wt, [createBaseVNode("path", {
      fill: `url(#gradient_paint0_linear_${e.formattedName})`,
      d: "M0 0h80v40H0z"
    }, null, 8, $t), createBaseVNode("path", {
      fill: `url(#gradient_paint1_linear_${e.formattedName})`,
      d: "M0 40h80v40H0z"
    }, null, 8, mt)]),
    createBaseVNode("defs", null, [createBaseVNode("linearGradient", {
      id: `gradient_paint0_linear_${e.formattedName}`,
      x1: e.SIZE / 2,
      y1: 0,
      x2: e.SIZE / 2,
      y2: e.SIZE / 2,
      gradientUnits: "userSpaceOnUse"
    }, [createBaseVNode("stop", { "stop-color": e.sunsetColors[0] }, null, 8, St), createBaseVNode("stop", {
      offset: 1,
      "stop-color": e.sunsetColors[1]
    }, null, 8, _t)], 8, yt), createBaseVNode("linearGradient", {
      id: `gradient_paint1_linear_${e.formattedName}`,
      x1: e.SIZE / 2,
      y1: e.SIZE / 2,
      x2: e.SIZE / 2,
      y2: e.SIZE,
      gradientUnits: "userSpaceOnUse"
    }, [createBaseVNode("stop", { "stop-color": e.sunsetColors[2] }, null, 8, Et), createBaseVNode("stop", {
      offset: 1,
      "stop-color": e.sunsetColors[3]
    }, null, 8, It)], 8, Ct)])
  ], 8, ut);
}
var vt = g(ft, [["render", Zt]]);
defineComponent({
  name: "Avatar",
  props: {
    variant: {
      type: String,
      required: false,
      default: "marble",
      validator(e) {
        return [
          "bauhaus",
          "beam",
          "marble",
          "pixel",
          "ring",
          "sunset"
        ].includes(e);
      }
    },
    colors: {
      type: Array,
      required: false,
      default: () => [
        "#92A1C6",
        "#146A7C",
        "#F0AB3D",
        "#C271B4",
        "#C20D90"
      ]
    },
    name: {
      type: String,
      required: false,
      default: "Clara Barton"
    },
    square: {
      type: Boolean,
      required: false,
      default: false
    },
    size: {
      type: Number,
      required: false,
      default: 40
    },
    title: {
      type: Boolean,
      required: false,
      default: false
    }
  },
  setup() {
    return {};
  },
  components: {
    AvatarBauhaus: D,
    AvatarBeam: re,
    AvatarMarble: Se,
    AvatarPixel: Yl,
    AvatarRing: nt,
    AvatarSunset: vt
  }
});
var entities_exports = __export2({
  AElig: () => "Æ",
  AMP: () => "&",
  Aacute: () => "Á",
  Abreve: () => "Ă",
  Acirc: () => "Â",
  Acy: () => "А",
  Afr: () => Afr,
  Agrave: () => "À",
  Alpha: () => "Α",
  Amacr: () => "Ā",
  And: () => "⩓",
  Aogon: () => "Ą",
  Aopf: () => Aopf,
  ApplyFunction: () => "⁡",
  Aring: () => "Å",
  Ascr: () => Ascr,
  Assign: () => "≔",
  Atilde: () => "Ã",
  Auml: () => "Ä",
  Backslash: () => "∖",
  Barv: () => "⫧",
  Barwed: () => "⌆",
  Bcy: () => "Б",
  Because: () => "∵",
  Bernoullis: () => "ℬ",
  Beta: () => "Β",
  Bfr: () => Bfr,
  Bopf: () => Bopf,
  Breve: () => "˘",
  Bscr: () => "ℬ",
  Bumpeq: () => "≎",
  CHcy: () => "Ч",
  COPY: () => "©",
  Cacute: () => "Ć",
  Cap: () => "⋒",
  CapitalDifferentialD: () => "ⅅ",
  Cayleys: () => "ℭ",
  Ccaron: () => "Č",
  Ccedil: () => "Ç",
  Ccirc: () => "Ĉ",
  Cconint: () => "∰",
  Cdot: () => "Ċ",
  Cedilla: () => "¸",
  CenterDot: () => "·",
  Cfr: () => "ℭ",
  Chi: () => "Χ",
  CircleDot: () => "⊙",
  CircleMinus: () => "⊖",
  CirclePlus: () => "⊕",
  CircleTimes: () => "⊗",
  ClockwiseContourIntegral: () => "∲",
  CloseCurlyDoubleQuote: () => "”",
  CloseCurlyQuote: () => "’",
  Colon: () => "∷",
  Colone: () => "⩴",
  Congruent: () => "≡",
  Conint: () => "∯",
  ContourIntegral: () => "∮",
  Copf: () => "ℂ",
  Coproduct: () => "∐",
  CounterClockwiseContourIntegral: () => "∳",
  Cross: () => "⨯",
  Cscr: () => Cscr,
  Cup: () => "⋓",
  CupCap: () => "≍",
  DD: () => "ⅅ",
  DDotrahd: () => "⤑",
  DJcy: () => "Ђ",
  DScy: () => "Ѕ",
  DZcy: () => "Џ",
  Dagger: () => "‡",
  Darr: () => "↡",
  Dashv: () => "⫤",
  Dcaron: () => "Ď",
  Dcy: () => "Д",
  Del: () => "∇",
  Delta: () => "Δ",
  Dfr: () => Dfr,
  DiacriticalAcute: () => "´",
  DiacriticalDot: () => "˙",
  DiacriticalDoubleAcute: () => "˝",
  DiacriticalGrave: () => "`",
  DiacriticalTilde: () => "˜",
  Diamond: () => "⋄",
  DifferentialD: () => "ⅆ",
  Dopf: () => Dopf,
  Dot: () => "¨",
  DotDot: () => "⃜",
  DotEqual: () => "≐",
  DoubleContourIntegral: () => "∯",
  DoubleDot: () => "¨",
  DoubleDownArrow: () => "⇓",
  DoubleLeftArrow: () => "⇐",
  DoubleLeftRightArrow: () => "⇔",
  DoubleLeftTee: () => "⫤",
  DoubleLongLeftArrow: () => "⟸",
  DoubleLongLeftRightArrow: () => "⟺",
  DoubleLongRightArrow: () => "⟹",
  DoubleRightArrow: () => "⇒",
  DoubleRightTee: () => "⊨",
  DoubleUpArrow: () => "⇑",
  DoubleUpDownArrow: () => "⇕",
  DoubleVerticalBar: () => "∥",
  DownArrow: () => "↓",
  DownArrowBar: () => "⤓",
  DownArrowUpArrow: () => "⇵",
  DownBreve: () => "̑",
  DownLeftRightVector: () => "⥐",
  DownLeftTeeVector: () => "⥞",
  DownLeftVector: () => "↽",
  DownLeftVectorBar: () => "⥖",
  DownRightTeeVector: () => "⥟",
  DownRightVector: () => "⇁",
  DownRightVectorBar: () => "⥗",
  DownTee: () => "⊤",
  DownTeeArrow: () => "↧",
  Downarrow: () => "⇓",
  Dscr: () => Dscr,
  Dstrok: () => "Đ",
  ENG: () => "Ŋ",
  ETH: () => "Ð",
  Eacute: () => "É",
  Ecaron: () => "Ě",
  Ecirc: () => "Ê",
  Ecy: () => "Э",
  Edot: () => "Ė",
  Efr: () => Efr,
  Egrave: () => "È",
  Element: () => "∈",
  Emacr: () => "Ē",
  EmptySmallSquare: () => "◻",
  EmptyVerySmallSquare: () => "▫",
  Eogon: () => "Ę",
  Eopf: () => Eopf,
  Epsilon: () => "Ε",
  Equal: () => "⩵",
  EqualTilde: () => "≂",
  Equilibrium: () => "⇌",
  Escr: () => "ℰ",
  Esim: () => "⩳",
  Eta: () => "Η",
  Euml: () => "Ë",
  Exists: () => "∃",
  ExponentialE: () => "ⅇ",
  Fcy: () => "Ф",
  Ffr: () => Ffr,
  FilledSmallSquare: () => "◼",
  FilledVerySmallSquare: () => "▪",
  Fopf: () => Fopf,
  ForAll: () => "∀",
  Fouriertrf: () => "ℱ",
  Fscr: () => "ℱ",
  GJcy: () => "Ѓ",
  GT: () => ">",
  Gamma: () => "Γ",
  Gammad: () => "Ϝ",
  Gbreve: () => "Ğ",
  Gcedil: () => "Ģ",
  Gcirc: () => "Ĝ",
  Gcy: () => "Г",
  Gdot: () => "Ġ",
  Gfr: () => Gfr,
  Gg: () => "⋙",
  Gopf: () => Gopf,
  GreaterEqual: () => "≥",
  GreaterEqualLess: () => "⋛",
  GreaterFullEqual: () => "≧",
  GreaterGreater: () => "⪢",
  GreaterLess: () => "≷",
  GreaterSlantEqual: () => "⩾",
  GreaterTilde: () => "≳",
  Gscr: () => Gscr,
  Gt: () => "≫",
  HARDcy: () => "Ъ",
  Hacek: () => "ˇ",
  Hat: () => "^",
  Hcirc: () => "Ĥ",
  Hfr: () => "ℌ",
  HilbertSpace: () => "ℋ",
  Hopf: () => "ℍ",
  HorizontalLine: () => "─",
  Hscr: () => "ℋ",
  Hstrok: () => "Ħ",
  HumpDownHump: () => "≎",
  HumpEqual: () => "≏",
  IEcy: () => "Е",
  IJlig: () => "Ĳ",
  IOcy: () => "Ё",
  Iacute: () => "Í",
  Icirc: () => "Î",
  Icy: () => "И",
  Idot: () => "İ",
  Ifr: () => "ℑ",
  Igrave: () => "Ì",
  Im: () => "ℑ",
  Imacr: () => "Ī",
  ImaginaryI: () => "ⅈ",
  Implies: () => "⇒",
  Int: () => "∬",
  Integral: () => "∫",
  Intersection: () => "⋂",
  InvisibleComma: () => "⁣",
  InvisibleTimes: () => "⁢",
  Iogon: () => "Į",
  Iopf: () => Iopf,
  Iota: () => "Ι",
  Iscr: () => "ℐ",
  Itilde: () => "Ĩ",
  Iukcy: () => "І",
  Iuml: () => "Ï",
  Jcirc: () => "Ĵ",
  Jcy: () => "Й",
  Jfr: () => Jfr,
  Jopf: () => Jopf,
  Jscr: () => Jscr,
  Jsercy: () => "Ј",
  Jukcy: () => "Є",
  KHcy: () => "Х",
  KJcy: () => "Ќ",
  Kappa: () => "Κ",
  Kcedil: () => "Ķ",
  Kcy: () => "К",
  Kfr: () => Kfr,
  Kopf: () => Kopf,
  Kscr: () => Kscr,
  LJcy: () => "Љ",
  LT: () => "<",
  Lacute: () => "Ĺ",
  Lambda: () => "Λ",
  Lang: () => "⟪",
  Laplacetrf: () => "ℒ",
  Larr: () => "↞",
  Lcaron: () => "Ľ",
  Lcedil: () => "Ļ",
  Lcy: () => "Л",
  LeftAngleBracket: () => "⟨",
  LeftArrow: () => "←",
  LeftArrowBar: () => "⇤",
  LeftArrowRightArrow: () => "⇆",
  LeftCeiling: () => "⌈",
  LeftDoubleBracket: () => "⟦",
  LeftDownTeeVector: () => "⥡",
  LeftDownVector: () => "⇃",
  LeftDownVectorBar: () => "⥙",
  LeftFloor: () => "⌊",
  LeftRightArrow: () => "↔",
  LeftRightVector: () => "⥎",
  LeftTee: () => "⊣",
  LeftTeeArrow: () => "↤",
  LeftTeeVector: () => "⥚",
  LeftTriangle: () => "⊲",
  LeftTriangleBar: () => "⧏",
  LeftTriangleEqual: () => "⊴",
  LeftUpDownVector: () => "⥑",
  LeftUpTeeVector: () => "⥠",
  LeftUpVector: () => "↿",
  LeftUpVectorBar: () => "⥘",
  LeftVector: () => "↼",
  LeftVectorBar: () => "⥒",
  Leftarrow: () => "⇐",
  Leftrightarrow: () => "⇔",
  LessEqualGreater: () => "⋚",
  LessFullEqual: () => "≦",
  LessGreater: () => "≶",
  LessLess: () => "⪡",
  LessSlantEqual: () => "⩽",
  LessTilde: () => "≲",
  Lfr: () => Lfr,
  Ll: () => "⋘",
  Lleftarrow: () => "⇚",
  Lmidot: () => "Ŀ",
  LongLeftArrow: () => "⟵",
  LongLeftRightArrow: () => "⟷",
  LongRightArrow: () => "⟶",
  Longleftarrow: () => "⟸",
  Longleftrightarrow: () => "⟺",
  Longrightarrow: () => "⟹",
  Lopf: () => Lopf,
  LowerLeftArrow: () => "↙",
  LowerRightArrow: () => "↘",
  Lscr: () => "ℒ",
  Lsh: () => "↰",
  Lstrok: () => "Ł",
  Lt: () => "≪",
  Map: () => "⤅",
  Mcy: () => "М",
  MediumSpace: () => " ",
  Mellintrf: () => "ℳ",
  Mfr: () => Mfr,
  MinusPlus: () => "∓",
  Mopf: () => Mopf,
  Mscr: () => "ℳ",
  Mu: () => "Μ",
  NJcy: () => "Њ",
  Nacute: () => "Ń",
  Ncaron: () => "Ň",
  Ncedil: () => "Ņ",
  Ncy: () => "Н",
  NegativeMediumSpace: () => "​",
  NegativeThickSpace: () => "​",
  NegativeThinSpace: () => "​",
  NegativeVeryThinSpace: () => "​",
  NestedGreaterGreater: () => "≫",
  NestedLessLess: () => "≪",
  NewLine: () => "\n",
  Nfr: () => Nfr,
  NoBreak: () => "⁠",
  NonBreakingSpace: () => " ",
  Nopf: () => "ℕ",
  Not: () => "⫬",
  NotCongruent: () => "≢",
  NotCupCap: () => "≭",
  NotDoubleVerticalBar: () => "∦",
  NotElement: () => "∉",
  NotEqual: () => "≠",
  NotEqualTilde: () => NotEqualTilde,
  NotExists: () => "∄",
  NotGreater: () => "≯",
  NotGreaterEqual: () => "≱",
  NotGreaterFullEqual: () => NotGreaterFullEqual,
  NotGreaterGreater: () => NotGreaterGreater,
  NotGreaterLess: () => "≹",
  NotGreaterSlantEqual: () => NotGreaterSlantEqual,
  NotGreaterTilde: () => "≵",
  NotHumpDownHump: () => NotHumpDownHump,
  NotHumpEqual: () => NotHumpEqual,
  NotLeftTriangle: () => "⋪",
  NotLeftTriangleBar: () => NotLeftTriangleBar,
  NotLeftTriangleEqual: () => "⋬",
  NotLess: () => "≮",
  NotLessEqual: () => "≰",
  NotLessGreater: () => "≸",
  NotLessLess: () => NotLessLess,
  NotLessSlantEqual: () => NotLessSlantEqual,
  NotLessTilde: () => "≴",
  NotNestedGreaterGreater: () => NotNestedGreaterGreater,
  NotNestedLessLess: () => NotNestedLessLess,
  NotPrecedes: () => "⊀",
  NotPrecedesEqual: () => NotPrecedesEqual,
  NotPrecedesSlantEqual: () => "⋠",
  NotReverseElement: () => "∌",
  NotRightTriangle: () => "⋫",
  NotRightTriangleBar: () => NotRightTriangleBar,
  NotRightTriangleEqual: () => "⋭",
  NotSquareSubset: () => NotSquareSubset,
  NotSquareSubsetEqual: () => "⋢",
  NotSquareSuperset: () => NotSquareSuperset,
  NotSquareSupersetEqual: () => "⋣",
  NotSubset: () => NotSubset,
  NotSubsetEqual: () => "⊈",
  NotSucceeds: () => "⊁",
  NotSucceedsEqual: () => NotSucceedsEqual,
  NotSucceedsSlantEqual: () => "⋡",
  NotSucceedsTilde: () => NotSucceedsTilde,
  NotSuperset: () => NotSuperset,
  NotSupersetEqual: () => "⊉",
  NotTilde: () => "≁",
  NotTildeEqual: () => "≄",
  NotTildeFullEqual: () => "≇",
  NotTildeTilde: () => "≉",
  NotVerticalBar: () => "∤",
  Nscr: () => Nscr,
  Ntilde: () => "Ñ",
  Nu: () => "Ν",
  OElig: () => "Œ",
  Oacute: () => "Ó",
  Ocirc: () => "Ô",
  Ocy: () => "О",
  Odblac: () => "Ő",
  Ofr: () => Ofr,
  Ograve: () => "Ò",
  Omacr: () => "Ō",
  Omega: () => "Ω",
  Omicron: () => "Ο",
  Oopf: () => Oopf,
  OpenCurlyDoubleQuote: () => "“",
  OpenCurlyQuote: () => "‘",
  Or: () => "⩔",
  Oscr: () => Oscr,
  Oslash: () => "Ø",
  Otilde: () => "Õ",
  Otimes: () => "⨷",
  Ouml: () => "Ö",
  OverBar: () => "‾",
  OverBrace: () => "⏞",
  OverBracket: () => "⎴",
  OverParenthesis: () => "⏜",
  PartialD: () => "∂",
  Pcy: () => "П",
  Pfr: () => Pfr,
  Phi: () => "Φ",
  Pi: () => "Π",
  PlusMinus: () => "±",
  Poincareplane: () => "ℌ",
  Popf: () => "ℙ",
  Pr: () => "⪻",
  Precedes: () => "≺",
  PrecedesEqual: () => "⪯",
  PrecedesSlantEqual: () => "≼",
  PrecedesTilde: () => "≾",
  Prime: () => "″",
  Product: () => "∏",
  Proportion: () => "∷",
  Proportional: () => "∝",
  Pscr: () => Pscr,
  Psi: () => "Ψ",
  QUOT: () => '"',
  Qfr: () => Qfr,
  Qopf: () => "ℚ",
  Qscr: () => Qscr,
  RBarr: () => "⤐",
  REG: () => "®",
  Racute: () => "Ŕ",
  Rang: () => "⟫",
  Rarr: () => "↠",
  Rarrtl: () => "⤖",
  Rcaron: () => "Ř",
  Rcedil: () => "Ŗ",
  Rcy: () => "Р",
  Re: () => "ℜ",
  ReverseElement: () => "∋",
  ReverseEquilibrium: () => "⇋",
  ReverseUpEquilibrium: () => "⥯",
  Rfr: () => "ℜ",
  Rho: () => "Ρ",
  RightAngleBracket: () => "⟩",
  RightArrow: () => "→",
  RightArrowBar: () => "⇥",
  RightArrowLeftArrow: () => "⇄",
  RightCeiling: () => "⌉",
  RightDoubleBracket: () => "⟧",
  RightDownTeeVector: () => "⥝",
  RightDownVector: () => "⇂",
  RightDownVectorBar: () => "⥕",
  RightFloor: () => "⌋",
  RightTee: () => "⊢",
  RightTeeArrow: () => "↦",
  RightTeeVector: () => "⥛",
  RightTriangle: () => "⊳",
  RightTriangleBar: () => "⧐",
  RightTriangleEqual: () => "⊵",
  RightUpDownVector: () => "⥏",
  RightUpTeeVector: () => "⥜",
  RightUpVector: () => "↾",
  RightUpVectorBar: () => "⥔",
  RightVector: () => "⇀",
  RightVectorBar: () => "⥓",
  Rightarrow: () => "⇒",
  Ropf: () => "ℝ",
  RoundImplies: () => "⥰",
  Rrightarrow: () => "⇛",
  Rscr: () => "ℛ",
  Rsh: () => "↱",
  RuleDelayed: () => "⧴",
  SHCHcy: () => "Щ",
  SHcy: () => "Ш",
  SOFTcy: () => "Ь",
  Sacute: () => "Ś",
  Sc: () => "⪼",
  Scaron: () => "Š",
  Scedil: () => "Ş",
  Scirc: () => "Ŝ",
  Scy: () => "С",
  Sfr: () => Sfr,
  ShortDownArrow: () => "↓",
  ShortLeftArrow: () => "←",
  ShortRightArrow: () => "→",
  ShortUpArrow: () => "↑",
  Sigma: () => "Σ",
  SmallCircle: () => "∘",
  Sopf: () => Sopf,
  Sqrt: () => "√",
  Square: () => "□",
  SquareIntersection: () => "⊓",
  SquareSubset: () => "⊏",
  SquareSubsetEqual: () => "⊑",
  SquareSuperset: () => "⊐",
  SquareSupersetEqual: () => "⊒",
  SquareUnion: () => "⊔",
  Sscr: () => Sscr,
  Star: () => "⋆",
  Sub: () => "⋐",
  Subset: () => "⋐",
  SubsetEqual: () => "⊆",
  Succeeds: () => "≻",
  SucceedsEqual: () => "⪰",
  SucceedsSlantEqual: () => "≽",
  SucceedsTilde: () => "≿",
  SuchThat: () => "∋",
  Sum: () => "∑",
  Sup: () => "⋑",
  Superset: () => "⊃",
  SupersetEqual: () => "⊇",
  Supset: () => "⋑",
  THORN: () => "Þ",
  TRADE: () => "™",
  TSHcy: () => "Ћ",
  TScy: () => "Ц",
  Tab: () => "	",
  Tau: () => "Τ",
  Tcaron: () => "Ť",
  Tcedil: () => "Ţ",
  Tcy: () => "Т",
  Tfr: () => Tfr,
  Therefore: () => "∴",
  Theta: () => "Θ",
  ThickSpace: () => ThickSpace,
  ThinSpace: () => " ",
  Tilde: () => "∼",
  TildeEqual: () => "≃",
  TildeFullEqual: () => "≅",
  TildeTilde: () => "≈",
  Topf: () => Topf,
  TripleDot: () => "⃛",
  Tscr: () => Tscr,
  Tstrok: () => "Ŧ",
  Uacute: () => "Ú",
  Uarr: () => "↟",
  Uarrocir: () => "⥉",
  Ubrcy: () => "Ў",
  Ubreve: () => "Ŭ",
  Ucirc: () => "Û",
  Ucy: () => "У",
  Udblac: () => "Ű",
  Ufr: () => Ufr,
  Ugrave: () => "Ù",
  Umacr: () => "Ū",
  UnderBar: () => "_",
  UnderBrace: () => "⏟",
  UnderBracket: () => "⎵",
  UnderParenthesis: () => "⏝",
  Union: () => "⋃",
  UnionPlus: () => "⊎",
  Uogon: () => "Ų",
  Uopf: () => Uopf,
  UpArrow: () => "↑",
  UpArrowBar: () => "⤒",
  UpArrowDownArrow: () => "⇅",
  UpDownArrow: () => "↕",
  UpEquilibrium: () => "⥮",
  UpTee: () => "⊥",
  UpTeeArrow: () => "↥",
  Uparrow: () => "⇑",
  Updownarrow: () => "⇕",
  UpperLeftArrow: () => "↖",
  UpperRightArrow: () => "↗",
  Upsi: () => "ϒ",
  Upsilon: () => "Υ",
  Uring: () => "Ů",
  Uscr: () => Uscr,
  Utilde: () => "Ũ",
  Uuml: () => "Ü",
  VDash: () => "⊫",
  Vbar: () => "⫫",
  Vcy: () => "В",
  Vdash: () => "⊩",
  Vdashl: () => "⫦",
  Vee: () => "⋁",
  Verbar: () => "‖",
  Vert: () => "‖",
  VerticalBar: () => "∣",
  VerticalLine: () => "|",
  VerticalSeparator: () => "❘",
  VerticalTilde: () => "≀",
  VeryThinSpace: () => " ",
  Vfr: () => Vfr,
  Vopf: () => Vopf,
  Vscr: () => Vscr,
  Vvdash: () => "⊪",
  Wcirc: () => "Ŵ",
  Wedge: () => "⋀",
  Wfr: () => Wfr,
  Wopf: () => Wopf,
  Wscr: () => Wscr,
  Xfr: () => Xfr,
  Xi: () => "Ξ",
  Xopf: () => Xopf,
  Xscr: () => Xscr,
  YAcy: () => "Я",
  YIcy: () => "Ї",
  YUcy: () => "Ю",
  Yacute: () => "Ý",
  Ycirc: () => "Ŷ",
  Ycy: () => "Ы",
  Yfr: () => Yfr,
  Yopf: () => Yopf,
  Yscr: () => Yscr,
  Yuml: () => "Ÿ",
  ZHcy: () => "Ж",
  Zacute: () => "Ź",
  Zcaron: () => "Ž",
  Zcy: () => "З",
  Zdot: () => "Ż",
  ZeroWidthSpace: () => "​",
  Zeta: () => "Ζ",
  Zfr: () => "ℨ",
  Zopf: () => "ℤ",
  Zscr: () => Zscr,
  aacute: () => "á",
  abreve: () => "ă",
  ac: () => "∾",
  acE: () => acE,
  acd: () => "∿",
  acirc: () => "â",
  acute: () => "´",
  acy: () => "а",
  aelig: () => "æ",
  af: () => "⁡",
  afr: () => afr,
  agrave: () => "à",
  alefsym: () => "ℵ",
  aleph: () => "ℵ",
  alpha: () => "α",
  amacr: () => "ā",
  amalg: () => "⨿",
  amp: () => "&",
  and: () => "∧",
  andand: () => "⩕",
  andd: () => "⩜",
  andslope: () => "⩘",
  andv: () => "⩚",
  ang: () => "∠",
  ange: () => "⦤",
  angle: () => "∠",
  angmsd: () => "∡",
  angmsdaa: () => "⦨",
  angmsdab: () => "⦩",
  angmsdac: () => "⦪",
  angmsdad: () => "⦫",
  angmsdae: () => "⦬",
  angmsdaf: () => "⦭",
  angmsdag: () => "⦮",
  angmsdah: () => "⦯",
  angrt: () => "∟",
  angrtvb: () => "⊾",
  angrtvbd: () => "⦝",
  angsph: () => "∢",
  angst: () => "Å",
  angzarr: () => "⍼",
  aogon: () => "ą",
  aopf: () => aopf,
  ap: () => "≈",
  apE: () => "⩰",
  apacir: () => "⩯",
  ape: () => "≊",
  apid: () => "≋",
  apos: () => "'",
  approx: () => "≈",
  approxeq: () => "≊",
  aring: () => "å",
  ascr: () => ascr,
  ast: () => "*",
  asymp: () => "≈",
  asympeq: () => "≍",
  atilde: () => "ã",
  auml: () => "ä",
  awconint: () => "∳",
  awint: () => "⨑",
  bNot: () => "⫭",
  backcong: () => "≌",
  backepsilon: () => "϶",
  backprime: () => "‵",
  backsim: () => "∽",
  backsimeq: () => "⋍",
  barvee: () => "⊽",
  barwed: () => "⌅",
  barwedge: () => "⌅",
  bbrk: () => "⎵",
  bbrktbrk: () => "⎶",
  bcong: () => "≌",
  bcy: () => "б",
  bdquo: () => "„",
  becaus: () => "∵",
  because: () => "∵",
  bemptyv: () => "⦰",
  bepsi: () => "϶",
  bernou: () => "ℬ",
  beta: () => "β",
  beth: () => "ℶ",
  between: () => "≬",
  bfr: () => bfr,
  bigcap: () => "⋂",
  bigcirc: () => "◯",
  bigcup: () => "⋃",
  bigodot: () => "⨀",
  bigoplus: () => "⨁",
  bigotimes: () => "⨂",
  bigsqcup: () => "⨆",
  bigstar: () => "★",
  bigtriangledown: () => "▽",
  bigtriangleup: () => "△",
  biguplus: () => "⨄",
  bigvee: () => "⋁",
  bigwedge: () => "⋀",
  bkarow: () => "⤍",
  blacklozenge: () => "⧫",
  blacksquare: () => "▪",
  blacktriangle: () => "▴",
  blacktriangledown: () => "▾",
  blacktriangleleft: () => "◂",
  blacktriangleright: () => "▸",
  blank: () => "␣",
  blk12: () => "▒",
  blk14: () => "░",
  blk34: () => "▓",
  block: () => "█",
  bne: () => bne,
  bnequiv: () => bnequiv,
  bnot: () => "⌐",
  bopf: () => bopf,
  bot: () => "⊥",
  bottom: () => "⊥",
  bowtie: () => "⋈",
  boxDL: () => "╗",
  boxDR: () => "╔",
  boxDl: () => "╖",
  boxDr: () => "╓",
  boxH: () => "═",
  boxHD: () => "╦",
  boxHU: () => "╩",
  boxHd: () => "╤",
  boxHu: () => "╧",
  boxUL: () => "╝",
  boxUR: () => "╚",
  boxUl: () => "╜",
  boxUr: () => "╙",
  boxV: () => "║",
  boxVH: () => "╬",
  boxVL: () => "╣",
  boxVR: () => "╠",
  boxVh: () => "╫",
  boxVl: () => "╢",
  boxVr: () => "╟",
  boxbox: () => "⧉",
  boxdL: () => "╕",
  boxdR: () => "╒",
  boxdl: () => "┐",
  boxdr: () => "┌",
  boxh: () => "─",
  boxhD: () => "╥",
  boxhU: () => "╨",
  boxhd: () => "┬",
  boxhu: () => "┴",
  boxminus: () => "⊟",
  boxplus: () => "⊞",
  boxtimes: () => "⊠",
  boxuL: () => "╛",
  boxuR: () => "╘",
  boxul: () => "┘",
  boxur: () => "└",
  boxv: () => "│",
  boxvH: () => "╪",
  boxvL: () => "╡",
  boxvR: () => "╞",
  boxvh: () => "┼",
  boxvl: () => "┤",
  boxvr: () => "├",
  bprime: () => "‵",
  breve: () => "˘",
  brvbar: () => "¦",
  bscr: () => bscr,
  bsemi: () => "⁏",
  bsim: () => "∽",
  bsime: () => "⋍",
  bsol: () => "\\",
  bsolb: () => "⧅",
  bsolhsub: () => "⟈",
  bull: () => "•",
  bullet: () => "•",
  bump: () => "≎",
  bumpE: () => "⪮",
  bumpe: () => "≏",
  bumpeq: () => "≏",
  cacute: () => "ć",
  cap: () => "∩",
  capand: () => "⩄",
  capbrcup: () => "⩉",
  capcap: () => "⩋",
  capcup: () => "⩇",
  capdot: () => "⩀",
  caps: () => caps,
  caret: () => "⁁",
  caron: () => "ˇ",
  ccaps: () => "⩍",
  ccaron: () => "č",
  ccedil: () => "ç",
  ccirc: () => "ĉ",
  ccups: () => "⩌",
  ccupssm: () => "⩐",
  cdot: () => "ċ",
  cedil: () => "¸",
  cemptyv: () => "⦲",
  cent: () => "¢",
  centerdot: () => "·",
  cfr: () => cfr,
  chcy: () => "ч",
  check: () => "✓",
  checkmark: () => "✓",
  chi: () => "χ",
  cir: () => "○",
  cirE: () => "⧃",
  circ: () => "ˆ",
  circeq: () => "≗",
  circlearrowleft: () => "↺",
  circlearrowright: () => "↻",
  circledR: () => "®",
  circledS: () => "Ⓢ",
  circledast: () => "⊛",
  circledcirc: () => "⊚",
  circleddash: () => "⊝",
  cire: () => "≗",
  cirfnint: () => "⨐",
  cirmid: () => "⫯",
  cirscir: () => "⧂",
  clubs: () => "♣",
  clubsuit: () => "♣",
  colon: () => ":",
  colone: () => "≔",
  coloneq: () => "≔",
  comma: () => ",",
  commat: () => "@",
  comp: () => "∁",
  compfn: () => "∘",
  complement: () => "∁",
  complexes: () => "ℂ",
  cong: () => "≅",
  congdot: () => "⩭",
  conint: () => "∮",
  copf: () => copf,
  coprod: () => "∐",
  copy: () => "©",
  copysr: () => "℗",
  crarr: () => "↵",
  cross: () => "✗",
  cscr: () => cscr,
  csub: () => "⫏",
  csube: () => "⫑",
  csup: () => "⫐",
  csupe: () => "⫒",
  ctdot: () => "⋯",
  cudarrl: () => "⤸",
  cudarrr: () => "⤵",
  cuepr: () => "⋞",
  cuesc: () => "⋟",
  cularr: () => "↶",
  cularrp: () => "⤽",
  cup: () => "∪",
  cupbrcap: () => "⩈",
  cupcap: () => "⩆",
  cupcup: () => "⩊",
  cupdot: () => "⊍",
  cupor: () => "⩅",
  cups: () => cups,
  curarr: () => "↷",
  curarrm: () => "⤼",
  curlyeqprec: () => "⋞",
  curlyeqsucc: () => "⋟",
  curlyvee: () => "⋎",
  curlywedge: () => "⋏",
  curren: () => "¤",
  curvearrowleft: () => "↶",
  curvearrowright: () => "↷",
  cuvee: () => "⋎",
  cuwed: () => "⋏",
  cwconint: () => "∲",
  cwint: () => "∱",
  cylcty: () => "⌭",
  dArr: () => "⇓",
  dHar: () => "⥥",
  dagger: () => "†",
  daleth: () => "ℸ",
  darr: () => "↓",
  dash: () => "‐",
  dashv: () => "⊣",
  dbkarow: () => "⤏",
  dblac: () => "˝",
  dcaron: () => "ď",
  dcy: () => "д",
  dd: () => "ⅆ",
  ddagger: () => "‡",
  ddarr: () => "⇊",
  ddotseq: () => "⩷",
  default: () => entities_default,
  deg: () => "°",
  delta: () => "δ",
  demptyv: () => "⦱",
  dfisht: () => "⥿",
  dfr: () => dfr,
  dharl: () => "⇃",
  dharr: () => "⇂",
  diam: () => "⋄",
  diamond: () => "⋄",
  diamondsuit: () => "♦",
  diams: () => "♦",
  die: () => "¨",
  digamma: () => "ϝ",
  disin: () => "⋲",
  div: () => "÷",
  divide: () => "÷",
  divideontimes: () => "⋇",
  divonx: () => "⋇",
  djcy: () => "ђ",
  dlcorn: () => "⌞",
  dlcrop: () => "⌍",
  dollar: () => "$",
  dopf: () => dopf,
  dot: () => "˙",
  doteq: () => "≐",
  doteqdot: () => "≑",
  dotminus: () => "∸",
  dotplus: () => "∔",
  dotsquare: () => "⊡",
  doublebarwedge: () => "⌆",
  downarrow: () => "↓",
  downdownarrows: () => "⇊",
  downharpoonleft: () => "⇃",
  downharpoonright: () => "⇂",
  drbkarow: () => "⤐",
  drcorn: () => "⌟",
  drcrop: () => "⌌",
  dscr: () => dscr,
  dscy: () => "ѕ",
  dsol: () => "⧶",
  dstrok: () => "đ",
  dtdot: () => "⋱",
  dtri: () => "▿",
  dtrif: () => "▾",
  duarr: () => "⇵",
  duhar: () => "⥯",
  dwangle: () => "⦦",
  dzcy: () => "џ",
  dzigrarr: () => "⟿",
  eDDot: () => "⩷",
  eDot: () => "≑",
  eacute: () => "é",
  easter: () => "⩮",
  ecaron: () => "ě",
  ecir: () => "≖",
  ecirc: () => "ê",
  ecolon: () => "≕",
  ecy: () => "э",
  edot: () => "ė",
  ee: () => "ⅇ",
  efDot: () => "≒",
  efr: () => efr,
  eg: () => "⪚",
  egrave: () => "è",
  egs: () => "⪖",
  egsdot: () => "⪘",
  el: () => "⪙",
  elinters: () => "⏧",
  ell: () => "ℓ",
  els: () => "⪕",
  elsdot: () => "⪗",
  emacr: () => "ē",
  empty: () => "∅",
  emptyset: () => "∅",
  emptyv: () => "∅",
  emsp: () => " ",
  emsp13: () => " ",
  emsp14: () => " ",
  eng: () => "ŋ",
  ensp: () => " ",
  eogon: () => "ę",
  eopf: () => eopf,
  epar: () => "⋕",
  eparsl: () => "⧣",
  eplus: () => "⩱",
  epsi: () => "ε",
  epsilon: () => "ε",
  epsiv: () => "ϵ",
  eqcirc: () => "≖",
  eqcolon: () => "≕",
  eqsim: () => "≂",
  eqslantgtr: () => "⪖",
  eqslantless: () => "⪕",
  equals: () => "=",
  equest: () => "≟",
  equiv: () => "≡",
  equivDD: () => "⩸",
  eqvparsl: () => "⧥",
  erDot: () => "≓",
  erarr: () => "⥱",
  escr: () => "ℯ",
  esdot: () => "≐",
  esim: () => "≂",
  eta: () => "η",
  eth: () => "ð",
  euml: () => "ë",
  euro: () => "€",
  excl: () => "!",
  exist: () => "∃",
  expectation: () => "ℰ",
  exponentiale: () => "ⅇ",
  fallingdotseq: () => "≒",
  fcy: () => "ф",
  female: () => "♀",
  ffilig: () => "ﬃ",
  fflig: () => "ﬀ",
  ffllig: () => "ﬄ",
  ffr: () => ffr,
  filig: () => "ﬁ",
  fjlig: () => "fj",
  flat: () => "♭",
  fllig: () => "ﬂ",
  fltns: () => "▱",
  fnof: () => "ƒ",
  fopf: () => fopf,
  forall: () => "∀",
  fork: () => "⋔",
  forkv: () => "⫙",
  fpartint: () => "⨍",
  frac12: () => "½",
  frac13: () => "⅓",
  frac14: () => "¼",
  frac15: () => "⅕",
  frac16: () => "⅙",
  frac18: () => "⅛",
  frac23: () => "⅔",
  frac25: () => "⅖",
  frac34: () => "¾",
  frac35: () => "⅗",
  frac38: () => "⅜",
  frac45: () => "⅘",
  frac56: () => "⅚",
  frac58: () => "⅝",
  frac78: () => "⅞",
  frasl: () => "⁄",
  frown: () => "⌢",
  fscr: () => fscr,
  gE: () => "≧",
  gEl: () => "⪌",
  gacute: () => "ǵ",
  gamma: () => "γ",
  gammad: () => "ϝ",
  gap: () => "⪆",
  gbreve: () => "ğ",
  gcirc: () => "ĝ",
  gcy: () => "г",
  gdot: () => "ġ",
  ge: () => "≥",
  gel: () => "⋛",
  geq: () => "≥",
  geqq: () => "≧",
  geqslant: () => "⩾",
  ges: () => "⩾",
  gescc: () => "⪩",
  gesdot: () => "⪀",
  gesdoto: () => "⪂",
  gesdotol: () => "⪄",
  gesl: () => gesl,
  gesles: () => "⪔",
  gfr: () => gfr,
  gg: () => "≫",
  ggg: () => "⋙",
  gimel: () => "ℷ",
  gjcy: () => "ѓ",
  gl: () => "≷",
  glE: () => "⪒",
  gla: () => "⪥",
  glj: () => "⪤",
  gnE: () => "≩",
  gnap: () => "⪊",
  gnapprox: () => "⪊",
  gne: () => "⪈",
  gneq: () => "⪈",
  gneqq: () => "≩",
  gnsim: () => "⋧",
  gopf: () => gopf,
  grave: () => "`",
  gscr: () => "ℊ",
  gsim: () => "≳",
  gsime: () => "⪎",
  gsiml: () => "⪐",
  gt: () => ">",
  gtcc: () => "⪧",
  gtcir: () => "⩺",
  gtdot: () => "⋗",
  gtlPar: () => "⦕",
  gtquest: () => "⩼",
  gtrapprox: () => "⪆",
  gtrarr: () => "⥸",
  gtrdot: () => "⋗",
  gtreqless: () => "⋛",
  gtreqqless: () => "⪌",
  gtrless: () => "≷",
  gtrsim: () => "≳",
  gvertneqq: () => gvertneqq,
  gvnE: () => gvnE,
  hArr: () => "⇔",
  hairsp: () => " ",
  half: () => "½",
  hamilt: () => "ℋ",
  hardcy: () => "ъ",
  harr: () => "↔",
  harrcir: () => "⥈",
  harrw: () => "↭",
  hbar: () => "ℏ",
  hcirc: () => "ĥ",
  hearts: () => "♥",
  heartsuit: () => "♥",
  hellip: () => "…",
  hercon: () => "⊹",
  hfr: () => hfr,
  hksearow: () => "⤥",
  hkswarow: () => "⤦",
  hoarr: () => "⇿",
  homtht: () => "∻",
  hookleftarrow: () => "↩",
  hookrightarrow: () => "↪",
  hopf: () => hopf,
  horbar: () => "―",
  hscr: () => hscr,
  hslash: () => "ℏ",
  hstrok: () => "ħ",
  hybull: () => "⁃",
  hyphen: () => "‐",
  iacute: () => "í",
  ic: () => "⁣",
  icirc: () => "î",
  icy: () => "и",
  iecy: () => "е",
  iexcl: () => "¡",
  iff: () => "⇔",
  ifr: () => ifr,
  igrave: () => "ì",
  ii: () => "ⅈ",
  iiiint: () => "⨌",
  iiint: () => "∭",
  iinfin: () => "⧜",
  iiota: () => "℩",
  ijlig: () => "ĳ",
  imacr: () => "ī",
  image: () => "ℑ",
  imagline: () => "ℐ",
  imagpart: () => "ℑ",
  imath: () => "ı",
  imof: () => "⊷",
  imped: () => "Ƶ",
  incare: () => "℅",
  infin: () => "∞",
  infintie: () => "⧝",
  inodot: () => "ı",
  int: () => "∫",
  intcal: () => "⊺",
  integers: () => "ℤ",
  intercal: () => "⊺",
  intlarhk: () => "⨗",
  intprod: () => "⨼",
  iocy: () => "ё",
  iogon: () => "į",
  iopf: () => iopf,
  iota: () => "ι",
  iprod: () => "⨼",
  iquest: () => "¿",
  iscr: () => iscr,
  isin: () => "∈",
  isinE: () => "⋹",
  isindot: () => "⋵",
  isins: () => "⋴",
  isinsv: () => "⋳",
  isinv: () => "∈",
  it: () => "⁢",
  itilde: () => "ĩ",
  iukcy: () => "і",
  iuml: () => "ï",
  jcirc: () => "ĵ",
  jcy: () => "й",
  jfr: () => jfr,
  jmath: () => "ȷ",
  jopf: () => jopf,
  jscr: () => jscr,
  jsercy: () => "ј",
  jukcy: () => "є",
  kappa: () => "κ",
  kappav: () => "ϰ",
  kcedil: () => "ķ",
  kcy: () => "к",
  kfr: () => kfr,
  kgreen: () => "ĸ",
  khcy: () => "х",
  kjcy: () => "ќ",
  kopf: () => kopf,
  kscr: () => kscr,
  lAarr: () => "⇚",
  lArr: () => "⇐",
  lAtail: () => "⤛",
  lBarr: () => "⤎",
  lE: () => "≦",
  lEg: () => "⪋",
  lHar: () => "⥢",
  lacute: () => "ĺ",
  laemptyv: () => "⦴",
  lagran: () => "ℒ",
  lambda: () => "λ",
  lang: () => "⟨",
  langd: () => "⦑",
  langle: () => "⟨",
  lap: () => "⪅",
  laquo: () => "«",
  larr: () => "←",
  larrb: () => "⇤",
  larrbfs: () => "⤟",
  larrfs: () => "⤝",
  larrhk: () => "↩",
  larrlp: () => "↫",
  larrpl: () => "⤹",
  larrsim: () => "⥳",
  larrtl: () => "↢",
  lat: () => "⪫",
  latail: () => "⤙",
  late: () => "⪭",
  lates: () => lates,
  lbarr: () => "⤌",
  lbbrk: () => "❲",
  lbrace: () => "{",
  lbrack: () => "[",
  lbrke: () => "⦋",
  lbrksld: () => "⦏",
  lbrkslu: () => "⦍",
  lcaron: () => "ľ",
  lcedil: () => "ļ",
  lceil: () => "⌈",
  lcub: () => "{",
  lcy: () => "л",
  ldca: () => "⤶",
  ldquo: () => "“",
  ldquor: () => "„",
  ldrdhar: () => "⥧",
  ldrushar: () => "⥋",
  ldsh: () => "↲",
  le: () => "≤",
  leftarrow: () => "←",
  leftarrowtail: () => "↢",
  leftharpoondown: () => "↽",
  leftharpoonup: () => "↼",
  leftleftarrows: () => "⇇",
  leftrightarrow: () => "↔",
  leftrightarrows: () => "⇆",
  leftrightharpoons: () => "⇋",
  leftrightsquigarrow: () => "↭",
  leftthreetimes: () => "⋋",
  leg: () => "⋚",
  leq: () => "≤",
  leqq: () => "≦",
  leqslant: () => "⩽",
  les: () => "⩽",
  lescc: () => "⪨",
  lesdot: () => "⩿",
  lesdoto: () => "⪁",
  lesdotor: () => "⪃",
  lesg: () => lesg,
  lesges: () => "⪓",
  lessapprox: () => "⪅",
  lessdot: () => "⋖",
  lesseqgtr: () => "⋚",
  lesseqqgtr: () => "⪋",
  lessgtr: () => "≶",
  lesssim: () => "≲",
  lfisht: () => "⥼",
  lfloor: () => "⌊",
  lfr: () => lfr,
  lg: () => "≶",
  lgE: () => "⪑",
  lhard: () => "↽",
  lharu: () => "↼",
  lharul: () => "⥪",
  lhblk: () => "▄",
  ljcy: () => "љ",
  ll: () => "≪",
  llarr: () => "⇇",
  llcorner: () => "⌞",
  llhard: () => "⥫",
  lltri: () => "◺",
  lmidot: () => "ŀ",
  lmoust: () => "⎰",
  lmoustache: () => "⎰",
  lnE: () => "≨",
  lnap: () => "⪉",
  lnapprox: () => "⪉",
  lne: () => "⪇",
  lneq: () => "⪇",
  lneqq: () => "≨",
  lnsim: () => "⋦",
  loang: () => "⟬",
  loarr: () => "⇽",
  lobrk: () => "⟦",
  longleftarrow: () => "⟵",
  longleftrightarrow: () => "⟷",
  longmapsto: () => "⟼",
  longrightarrow: () => "⟶",
  looparrowleft: () => "↫",
  looparrowright: () => "↬",
  lopar: () => "⦅",
  lopf: () => lopf,
  loplus: () => "⨭",
  lotimes: () => "⨴",
  lowast: () => "∗",
  lowbar: () => "_",
  loz: () => "◊",
  lozenge: () => "◊",
  lozf: () => "⧫",
  lpar: () => "(",
  lparlt: () => "⦓",
  lrarr: () => "⇆",
  lrcorner: () => "⌟",
  lrhar: () => "⇋",
  lrhard: () => "⥭",
  lrm: () => "‎",
  lrtri: () => "⊿",
  lsaquo: () => "‹",
  lscr: () => lscr,
  lsh: () => "↰",
  lsim: () => "≲",
  lsime: () => "⪍",
  lsimg: () => "⪏",
  lsqb: () => "[",
  lsquo: () => "‘",
  lsquor: () => "‚",
  lstrok: () => "ł",
  lt: () => "<",
  ltcc: () => "⪦",
  ltcir: () => "⩹",
  ltdot: () => "⋖",
  lthree: () => "⋋",
  ltimes: () => "⋉",
  ltlarr: () => "⥶",
  ltquest: () => "⩻",
  ltrPar: () => "⦖",
  ltri: () => "◃",
  ltrie: () => "⊴",
  ltrif: () => "◂",
  lurdshar: () => "⥊",
  luruhar: () => "⥦",
  lvertneqq: () => lvertneqq,
  lvnE: () => lvnE,
  mDDot: () => "∺",
  macr: () => "¯",
  male: () => "♂",
  malt: () => "✠",
  maltese: () => "✠",
  map: () => "↦",
  mapsto: () => "↦",
  mapstodown: () => "↧",
  mapstoleft: () => "↤",
  mapstoup: () => "↥",
  marker: () => "▮",
  mcomma: () => "⨩",
  mcy: () => "м",
  mdash: () => "—",
  measuredangle: () => "∡",
  mfr: () => mfr,
  mho: () => "℧",
  micro: () => "µ",
  mid: () => "∣",
  midast: () => "*",
  midcir: () => "⫰",
  middot: () => "·",
  minus: () => "−",
  minusb: () => "⊟",
  minusd: () => "∸",
  minusdu: () => "⨪",
  mlcp: () => "⫛",
  mldr: () => "…",
  mnplus: () => "∓",
  models: () => "⊧",
  mopf: () => mopf,
  mp: () => "∓",
  mscr: () => mscr,
  mstpos: () => "∾",
  mu: () => "μ",
  multimap: () => "⊸",
  mumap: () => "⊸",
  nGg: () => nGg,
  nGt: () => nGt,
  nGtv: () => nGtv,
  nLeftarrow: () => "⇍",
  nLeftrightarrow: () => "⇎",
  nLl: () => nLl,
  nLt: () => nLt,
  nLtv: () => nLtv,
  nRightarrow: () => "⇏",
  nVDash: () => "⊯",
  nVdash: () => "⊮",
  nabla: () => "∇",
  nacute: () => "ń",
  nang: () => nang,
  nap: () => "≉",
  napE: () => napE,
  napid: () => napid,
  napos: () => "ŉ",
  napprox: () => "≉",
  natur: () => "♮",
  natural: () => "♮",
  naturals: () => "ℕ",
  nbsp: () => " ",
  nbump: () => nbump,
  nbumpe: () => nbumpe,
  ncap: () => "⩃",
  ncaron: () => "ň",
  ncedil: () => "ņ",
  ncong: () => "≇",
  ncongdot: () => ncongdot,
  ncup: () => "⩂",
  ncy: () => "н",
  ndash: () => "–",
  ne: () => "≠",
  neArr: () => "⇗",
  nearhk: () => "⤤",
  nearr: () => "↗",
  nearrow: () => "↗",
  nedot: () => nedot,
  nequiv: () => "≢",
  nesear: () => "⤨",
  nesim: () => nesim,
  nexist: () => "∄",
  nexists: () => "∄",
  nfr: () => nfr,
  ngE: () => ngE,
  nge: () => "≱",
  ngeq: () => "≱",
  ngeqq: () => ngeqq,
  ngeqslant: () => ngeqslant,
  nges: () => nges,
  ngsim: () => "≵",
  ngt: () => "≯",
  ngtr: () => "≯",
  nhArr: () => "⇎",
  nharr: () => "↮",
  nhpar: () => "⫲",
  ni: () => "∋",
  nis: () => "⋼",
  nisd: () => "⋺",
  niv: () => "∋",
  njcy: () => "њ",
  nlArr: () => "⇍",
  nlE: () => nlE,
  nlarr: () => "↚",
  nldr: () => "‥",
  nle: () => "≰",
  nleftarrow: () => "↚",
  nleftrightarrow: () => "↮",
  nleq: () => "≰",
  nleqq: () => nleqq,
  nleqslant: () => nleqslant,
  nles: () => nles,
  nless: () => "≮",
  nlsim: () => "≴",
  nlt: () => "≮",
  nltri: () => "⋪",
  nltrie: () => "⋬",
  nmid: () => "∤",
  nopf: () => nopf,
  not: () => "¬",
  notin: () => "∉",
  notinE: () => notinE,
  notindot: () => notindot,
  notinva: () => "∉",
  notinvb: () => "⋷",
  notinvc: () => "⋶",
  notni: () => "∌",
  notniva: () => "∌",
  notnivb: () => "⋾",
  notnivc: () => "⋽",
  npar: () => "∦",
  nparallel: () => "∦",
  nparsl: () => nparsl,
  npart: () => npart,
  npolint: () => "⨔",
  npr: () => "⊀",
  nprcue: () => "⋠",
  npre: () => npre,
  nprec: () => "⊀",
  npreceq: () => npreceq,
  nrArr: () => "⇏",
  nrarr: () => "↛",
  nrarrc: () => nrarrc,
  nrarrw: () => nrarrw,
  nrightarrow: () => "↛",
  nrtri: () => "⋫",
  nrtrie: () => "⋭",
  nsc: () => "⊁",
  nsccue: () => "⋡",
  nsce: () => nsce,
  nscr: () => nscr,
  nshortmid: () => "∤",
  nshortparallel: () => "∦",
  nsim: () => "≁",
  nsime: () => "≄",
  nsimeq: () => "≄",
  nsmid: () => "∤",
  nspar: () => "∦",
  nsqsube: () => "⋢",
  nsqsupe: () => "⋣",
  nsub: () => "⊄",
  nsubE: () => nsubE,
  nsube: () => "⊈",
  nsubset: () => nsubset,
  nsubseteq: () => "⊈",
  nsubseteqq: () => nsubseteqq,
  nsucc: () => "⊁",
  nsucceq: () => nsucceq,
  nsup: () => "⊅",
  nsupE: () => nsupE,
  nsupe: () => "⊉",
  nsupset: () => nsupset,
  nsupseteq: () => "⊉",
  nsupseteqq: () => nsupseteqq,
  ntgl: () => "≹",
  ntilde: () => "ñ",
  ntlg: () => "≸",
  ntriangleleft: () => "⋪",
  ntrianglelefteq: () => "⋬",
  ntriangleright: () => "⋫",
  ntrianglerighteq: () => "⋭",
  nu: () => "ν",
  num: () => "#",
  numero: () => "№",
  numsp: () => " ",
  nvDash: () => "⊭",
  nvHarr: () => "⤄",
  nvap: () => nvap,
  nvdash: () => "⊬",
  nvge: () => nvge,
  nvgt: () => nvgt,
  nvinfin: () => "⧞",
  nvlArr: () => "⤂",
  nvle: () => nvle,
  nvlt: () => nvlt,
  nvltrie: () => nvltrie,
  nvrArr: () => "⤃",
  nvrtrie: () => nvrtrie,
  nvsim: () => nvsim,
  nwArr: () => "⇖",
  nwarhk: () => "⤣",
  nwarr: () => "↖",
  nwarrow: () => "↖",
  nwnear: () => "⤧",
  oS: () => "Ⓢ",
  oacute: () => "ó",
  oast: () => "⊛",
  ocir: () => "⊚",
  ocirc: () => "ô",
  ocy: () => "о",
  odash: () => "⊝",
  odblac: () => "ő",
  odiv: () => "⨸",
  odot: () => "⊙",
  odsold: () => "⦼",
  oelig: () => "œ",
  ofcir: () => "⦿",
  ofr: () => ofr,
  ogon: () => "˛",
  ograve: () => "ò",
  ogt: () => "⧁",
  ohbar: () => "⦵",
  ohm: () => "Ω",
  oint: () => "∮",
  olarr: () => "↺",
  olcir: () => "⦾",
  olcross: () => "⦻",
  oline: () => "‾",
  olt: () => "⧀",
  omacr: () => "ō",
  omega: () => "ω",
  omicron: () => "ο",
  omid: () => "⦶",
  ominus: () => "⊖",
  oopf: () => oopf,
  opar: () => "⦷",
  operp: () => "⦹",
  oplus: () => "⊕",
  or: () => "∨",
  orarr: () => "↻",
  ord: () => "⩝",
  order: () => "ℴ",
  orderof: () => "ℴ",
  ordf: () => "ª",
  ordm: () => "º",
  origof: () => "⊶",
  oror: () => "⩖",
  orslope: () => "⩗",
  orv: () => "⩛",
  oscr: () => "ℴ",
  oslash: () => "ø",
  osol: () => "⊘",
  otilde: () => "õ",
  otimes: () => "⊗",
  otimesas: () => "⨶",
  ouml: () => "ö",
  ovbar: () => "⌽",
  par: () => "∥",
  para: () => "¶",
  parallel: () => "∥",
  parsim: () => "⫳",
  parsl: () => "⫽",
  part: () => "∂",
  pcy: () => "п",
  percnt: () => "%",
  period: () => ".",
  permil: () => "‰",
  perp: () => "⊥",
  pertenk: () => "‱",
  pfr: () => pfr,
  phi: () => "φ",
  phiv: () => "ϕ",
  phmmat: () => "ℳ",
  phone: () => "☎",
  pi: () => "π",
  pitchfork: () => "⋔",
  piv: () => "ϖ",
  planck: () => "ℏ",
  planckh: () => "ℎ",
  plankv: () => "ℏ",
  plus: () => "+",
  plusacir: () => "⨣",
  plusb: () => "⊞",
  pluscir: () => "⨢",
  plusdo: () => "∔",
  plusdu: () => "⨥",
  pluse: () => "⩲",
  plusmn: () => "±",
  plussim: () => "⨦",
  plustwo: () => "⨧",
  pm: () => "±",
  pointint: () => "⨕",
  popf: () => popf,
  pound: () => "£",
  pr: () => "≺",
  prE: () => "⪳",
  prap: () => "⪷",
  prcue: () => "≼",
  pre: () => "⪯",
  prec: () => "≺",
  precapprox: () => "⪷",
  preccurlyeq: () => "≼",
  preceq: () => "⪯",
  precnapprox: () => "⪹",
  precneqq: () => "⪵",
  precnsim: () => "⋨",
  precsim: () => "≾",
  prime: () => "′",
  primes: () => "ℙ",
  prnE: () => "⪵",
  prnap: () => "⪹",
  prnsim: () => "⋨",
  prod: () => "∏",
  profalar: () => "⌮",
  profline: () => "⌒",
  profsurf: () => "⌓",
  prop: () => "∝",
  propto: () => "∝",
  prsim: () => "≾",
  prurel: () => "⊰",
  pscr: () => pscr,
  psi: () => "ψ",
  puncsp: () => " ",
  qfr: () => qfr,
  qint: () => "⨌",
  qopf: () => qopf,
  qprime: () => "⁗",
  qscr: () => qscr,
  quaternions: () => "ℍ",
  quatint: () => "⨖",
  quest: () => "?",
  questeq: () => "≟",
  quot: () => '"',
  rAarr: () => "⇛",
  rArr: () => "⇒",
  rAtail: () => "⤜",
  rBarr: () => "⤏",
  rHar: () => "⥤",
  race: () => race,
  racute: () => "ŕ",
  radic: () => "√",
  raemptyv: () => "⦳",
  rang: () => "⟩",
  rangd: () => "⦒",
  range: () => "⦥",
  rangle: () => "⟩",
  raquo: () => "»",
  rarr: () => "→",
  rarrap: () => "⥵",
  rarrb: () => "⇥",
  rarrbfs: () => "⤠",
  rarrc: () => "⤳",
  rarrfs: () => "⤞",
  rarrhk: () => "↪",
  rarrlp: () => "↬",
  rarrpl: () => "⥅",
  rarrsim: () => "⥴",
  rarrtl: () => "↣",
  rarrw: () => "↝",
  ratail: () => "⤚",
  ratio: () => "∶",
  rationals: () => "ℚ",
  rbarr: () => "⤍",
  rbbrk: () => "❳",
  rbrace: () => "}",
  rbrack: () => "]",
  rbrke: () => "⦌",
  rbrksld: () => "⦎",
  rbrkslu: () => "⦐",
  rcaron: () => "ř",
  rcedil: () => "ŗ",
  rceil: () => "⌉",
  rcub: () => "}",
  rcy: () => "р",
  rdca: () => "⤷",
  rdldhar: () => "⥩",
  rdquo: () => "”",
  rdquor: () => "”",
  rdsh: () => "↳",
  real: () => "ℜ",
  realine: () => "ℛ",
  realpart: () => "ℜ",
  reals: () => "ℝ",
  rect: () => "▭",
  reg: () => "®",
  rfisht: () => "⥽",
  rfloor: () => "⌋",
  rfr: () => rfr,
  rhard: () => "⇁",
  rharu: () => "⇀",
  rharul: () => "⥬",
  rho: () => "ρ",
  rhov: () => "ϱ",
  rightarrow: () => "→",
  rightarrowtail: () => "↣",
  rightharpoondown: () => "⇁",
  rightharpoonup: () => "⇀",
  rightleftarrows: () => "⇄",
  rightleftharpoons: () => "⇌",
  rightrightarrows: () => "⇉",
  rightsquigarrow: () => "↝",
  rightthreetimes: () => "⋌",
  ring: () => "˚",
  risingdotseq: () => "≓",
  rlarr: () => "⇄",
  rlhar: () => "⇌",
  rlm: () => "‏",
  rmoust: () => "⎱",
  rmoustache: () => "⎱",
  rnmid: () => "⫮",
  roang: () => "⟭",
  roarr: () => "⇾",
  robrk: () => "⟧",
  ropar: () => "⦆",
  ropf: () => ropf,
  roplus: () => "⨮",
  rotimes: () => "⨵",
  rpar: () => ")",
  rpargt: () => "⦔",
  rppolint: () => "⨒",
  rrarr: () => "⇉",
  rsaquo: () => "›",
  rscr: () => rscr,
  rsh: () => "↱",
  rsqb: () => "]",
  rsquo: () => "’",
  rsquor: () => "’",
  rthree: () => "⋌",
  rtimes: () => "⋊",
  rtri: () => "▹",
  rtrie: () => "⊵",
  rtrif: () => "▸",
  rtriltri: () => "⧎",
  ruluhar: () => "⥨",
  rx: () => "℞",
  sacute: () => "ś",
  sbquo: () => "‚",
  sc: () => "≻",
  scE: () => "⪴",
  scap: () => "⪸",
  scaron: () => "š",
  sccue: () => "≽",
  sce: () => "⪰",
  scedil: () => "ş",
  scirc: () => "ŝ",
  scnE: () => "⪶",
  scnap: () => "⪺",
  scnsim: () => "⋩",
  scpolint: () => "⨓",
  scsim: () => "≿",
  scy: () => "с",
  sdot: () => "⋅",
  sdotb: () => "⊡",
  sdote: () => "⩦",
  seArr: () => "⇘",
  searhk: () => "⤥",
  searr: () => "↘",
  searrow: () => "↘",
  sect: () => "§",
  semi: () => ";",
  seswar: () => "⤩",
  setminus: () => "∖",
  setmn: () => "∖",
  sext: () => "✶",
  sfr: () => sfr,
  sfrown: () => "⌢",
  sharp: () => "♯",
  shchcy: () => "щ",
  shcy: () => "ш",
  shortmid: () => "∣",
  shortparallel: () => "∥",
  shy: () => "­",
  sigma: () => "σ",
  sigmaf: () => "ς",
  sigmav: () => "ς",
  sim: () => "∼",
  simdot: () => "⩪",
  sime: () => "≃",
  simeq: () => "≃",
  simg: () => "⪞",
  simgE: () => "⪠",
  siml: () => "⪝",
  simlE: () => "⪟",
  simne: () => "≆",
  simplus: () => "⨤",
  simrarr: () => "⥲",
  slarr: () => "←",
  smallsetminus: () => "∖",
  smashp: () => "⨳",
  smeparsl: () => "⧤",
  smid: () => "∣",
  smile: () => "⌣",
  smt: () => "⪪",
  smte: () => "⪬",
  smtes: () => smtes,
  softcy: () => "ь",
  sol: () => "/",
  solb: () => "⧄",
  solbar: () => "⌿",
  sopf: () => sopf,
  spades: () => "♠",
  spadesuit: () => "♠",
  spar: () => "∥",
  sqcap: () => "⊓",
  sqcaps: () => sqcaps,
  sqcup: () => "⊔",
  sqcups: () => sqcups,
  sqsub: () => "⊏",
  sqsube: () => "⊑",
  sqsubset: () => "⊏",
  sqsubseteq: () => "⊑",
  sqsup: () => "⊐",
  sqsupe: () => "⊒",
  sqsupset: () => "⊐",
  sqsupseteq: () => "⊒",
  squ: () => "□",
  square: () => "□",
  squarf: () => "▪",
  squf: () => "▪",
  srarr: () => "→",
  sscr: () => sscr,
  ssetmn: () => "∖",
  ssmile: () => "⌣",
  sstarf: () => "⋆",
  star: () => "☆",
  starf: () => "★",
  straightepsilon: () => "ϵ",
  straightphi: () => "ϕ",
  strns: () => "¯",
  sub: () => "⊂",
  subE: () => "⫅",
  subdot: () => "⪽",
  sube: () => "⊆",
  subedot: () => "⫃",
  submult: () => "⫁",
  subnE: () => "⫋",
  subne: () => "⊊",
  subplus: () => "⪿",
  subrarr: () => "⥹",
  subset: () => "⊂",
  subseteq: () => "⊆",
  subseteqq: () => "⫅",
  subsetneq: () => "⊊",
  subsetneqq: () => "⫋",
  subsim: () => "⫇",
  subsub: () => "⫕",
  subsup: () => "⫓",
  succ: () => "≻",
  succapprox: () => "⪸",
  succcurlyeq: () => "≽",
  succeq: () => "⪰",
  succnapprox: () => "⪺",
  succneqq: () => "⪶",
  succnsim: () => "⋩",
  succsim: () => "≿",
  sum: () => "∑",
  sung: () => "♪",
  sup: () => "⊃",
  sup1: () => "¹",
  sup2: () => "²",
  sup3: () => "³",
  supE: () => "⫆",
  supdot: () => "⪾",
  supdsub: () => "⫘",
  supe: () => "⊇",
  supedot: () => "⫄",
  suphsol: () => "⟉",
  suphsub: () => "⫗",
  suplarr: () => "⥻",
  supmult: () => "⫂",
  supnE: () => "⫌",
  supne: () => "⊋",
  supplus: () => "⫀",
  supset: () => "⊃",
  supseteq: () => "⊇",
  supseteqq: () => "⫆",
  supsetneq: () => "⊋",
  supsetneqq: () => "⫌",
  supsim: () => "⫈",
  supsub: () => "⫔",
  supsup: () => "⫖",
  swArr: () => "⇙",
  swarhk: () => "⤦",
  swarr: () => "↙",
  swarrow: () => "↙",
  swnwar: () => "⤪",
  szlig: () => "ß",
  target: () => "⌖",
  tau: () => "τ",
  tbrk: () => "⎴",
  tcaron: () => "ť",
  tcedil: () => "ţ",
  tcy: () => "т",
  tdot: () => "⃛",
  telrec: () => "⌕",
  tfr: () => tfr,
  there4: () => "∴",
  therefore: () => "∴",
  theta: () => "θ",
  thetasym: () => "ϑ",
  thetav: () => "ϑ",
  thickapprox: () => "≈",
  thicksim: () => "∼",
  thinsp: () => " ",
  thkap: () => "≈",
  thksim: () => "∼",
  thorn: () => "þ",
  tilde: () => "˜",
  times: () => "×",
  timesb: () => "⊠",
  timesbar: () => "⨱",
  timesd: () => "⨰",
  tint: () => "∭",
  toea: () => "⤨",
  top: () => "⊤",
  topbot: () => "⌶",
  topcir: () => "⫱",
  topf: () => topf,
  topfork: () => "⫚",
  tosa: () => "⤩",
  tprime: () => "‴",
  trade: () => "™",
  triangle: () => "▵",
  triangledown: () => "▿",
  triangleleft: () => "◃",
  trianglelefteq: () => "⊴",
  triangleq: () => "≜",
  triangleright: () => "▹",
  trianglerighteq: () => "⊵",
  tridot: () => "◬",
  trie: () => "≜",
  triminus: () => "⨺",
  triplus: () => "⨹",
  trisb: () => "⧍",
  tritime: () => "⨻",
  trpezium: () => "⏢",
  tscr: () => tscr,
  tscy: () => "ц",
  tshcy: () => "ћ",
  tstrok: () => "ŧ",
  twixt: () => "≬",
  twoheadleftarrow: () => "↞",
  twoheadrightarrow: () => "↠",
  uArr: () => "⇑",
  uHar: () => "⥣",
  uacute: () => "ú",
  uarr: () => "↑",
  ubrcy: () => "ў",
  ubreve: () => "ŭ",
  ucirc: () => "û",
  ucy: () => "у",
  udarr: () => "⇅",
  udblac: () => "ű",
  udhar: () => "⥮",
  ufisht: () => "⥾",
  ufr: () => ufr,
  ugrave: () => "ù",
  uharl: () => "↿",
  uharr: () => "↾",
  uhblk: () => "▀",
  ulcorn: () => "⌜",
  ulcorner: () => "⌜",
  ulcrop: () => "⌏",
  ultri: () => "◸",
  umacr: () => "ū",
  uml: () => "¨",
  uogon: () => "ų",
  uopf: () => uopf,
  uparrow: () => "↑",
  updownarrow: () => "↕",
  upharpoonleft: () => "↿",
  upharpoonright: () => "↾",
  uplus: () => "⊎",
  upsi: () => "υ",
  upsih: () => "ϒ",
  upsilon: () => "υ",
  upuparrows: () => "⇈",
  urcorn: () => "⌝",
  urcorner: () => "⌝",
  urcrop: () => "⌎",
  uring: () => "ů",
  urtri: () => "◹",
  uscr: () => uscr,
  utdot: () => "⋰",
  utilde: () => "ũ",
  utri: () => "▵",
  utrif: () => "▴",
  uuarr: () => "⇈",
  uuml: () => "ü",
  uwangle: () => "⦧",
  vArr: () => "⇕",
  vBar: () => "⫨",
  vBarv: () => "⫩",
  vDash: () => "⊨",
  vangrt: () => "⦜",
  varepsilon: () => "ϵ",
  varkappa: () => "ϰ",
  varnothing: () => "∅",
  varphi: () => "ϕ",
  varpi: () => "ϖ",
  varpropto: () => "∝",
  varr: () => "↕",
  varrho: () => "ϱ",
  varsigma: () => "ς",
  varsubsetneq: () => varsubsetneq,
  varsubsetneqq: () => varsubsetneqq,
  varsupsetneq: () => varsupsetneq,
  varsupsetneqq: () => varsupsetneqq,
  vartheta: () => "ϑ",
  vartriangleleft: () => "⊲",
  vartriangleright: () => "⊳",
  vcy: () => "в",
  vdash: () => "⊢",
  vee: () => "∨",
  veebar: () => "⊻",
  veeeq: () => "≚",
  vellip: () => "⋮",
  verbar: () => "|",
  vert: () => "|",
  vfr: () => vfr,
  vltri: () => "⊲",
  vnsub: () => vnsub,
  vnsup: () => vnsup,
  vopf: () => vopf,
  vprop: () => "∝",
  vrtri: () => "⊳",
  vscr: () => vscr,
  vsubnE: () => vsubnE,
  vsubne: () => vsubne,
  vsupnE: () => vsupnE,
  vsupne: () => vsupne,
  vzigzag: () => "⦚",
  wcirc: () => "ŵ",
  wedbar: () => "⩟",
  wedge: () => "∧",
  wedgeq: () => "≙",
  weierp: () => "℘",
  wfr: () => wfr,
  wopf: () => wopf,
  wp: () => "℘",
  wr: () => "≀",
  wreath: () => "≀",
  wscr: () => wscr,
  xcap: () => "⋂",
  xcirc: () => "◯",
  xcup: () => "⋃",
  xdtri: () => "▽",
  xfr: () => xfr,
  xhArr: () => "⟺",
  xharr: () => "⟷",
  xi: () => "ξ",
  xlArr: () => "⟸",
  xlarr: () => "⟵",
  xmap: () => "⟼",
  xnis: () => "⋻",
  xodot: () => "⨀",
  xopf: () => xopf,
  xoplus: () => "⨁",
  xotime: () => "⨂",
  xrArr: () => "⟹",
  xrarr: () => "⟶",
  xscr: () => xscr,
  xsqcup: () => "⨆",
  xuplus: () => "⨄",
  xutri: () => "△",
  xvee: () => "⋁",
  xwedge: () => "⋀",
  yacute: () => "ý",
  yacy: () => "я",
  ycirc: () => "ŷ",
  ycy: () => "ы",
  yen: () => "¥",
  yfr: () => yfr,
  yicy: () => "ї",
  yopf: () => yopf,
  yscr: () => yscr,
  yucy: () => "ю",
  yuml: () => "ÿ",
  zacute: () => "ź",
  zcaron: () => "ž",
  zcy: () => "з",
  zdot: () => "ż",
  zeetrf: () => "ℨ",
  zeta: () => "ζ",
  zfr: () => zfr,
  zhcy: () => "ж",
  zigrarr: () => "⇝",
  zopf: () => zopf,
  zscr: () => zscr,
  zwj: () => "‍",
  zwnj: () => "‌"
});
var acE;
var Afr;
var afr;
var Aopf;
var aopf;
var Ascr;
var ascr;
var Bfr;
var bfr;
var bne;
var bnequiv;
var Bopf;
var bopf;
var bscr;
var caps;
var cfr;
var copf;
var Cscr;
var cscr;
var cups;
var Dfr;
var dfr;
var Dopf;
var dopf;
var Dscr;
var dscr;
var Efr;
var efr;
var Eopf;
var eopf;
var Ffr;
var ffr;
var Fopf;
var fopf;
var fscr;
var gesl;
var Gfr;
var gfr;
var Gopf;
var gopf;
var Gscr;
var gvertneqq;
var gvnE;
var hfr;
var hopf;
var hscr;
var ifr;
var Iopf;
var iopf;
var iscr;
var Jfr;
var jfr;
var Jopf;
var jopf;
var Jscr;
var jscr;
var Kfr;
var kfr;
var Kopf;
var kopf;
var Kscr;
var kscr;
var lates;
var lesg;
var Lfr;
var lfr;
var Lopf;
var lopf;
var lscr;
var lvertneqq;
var lvnE;
var Mfr;
var mfr;
var Mopf;
var mopf;
var mscr;
var nang;
var napE;
var napid;
var nbump;
var nbumpe;
var ncongdot;
var nedot;
var nesim;
var Nfr;
var nfr;
var ngE;
var ngeqq;
var ngeqslant;
var nges;
var nGg;
var nGt;
var nGtv;
var nlE;
var nleqq;
var nleqslant;
var nles;
var nLl;
var nLt;
var nLtv;
var nopf;
var NotEqualTilde;
var NotGreaterFullEqual;
var NotGreaterGreater;
var NotGreaterSlantEqual;
var NotHumpDownHump;
var NotHumpEqual;
var notindot;
var notinE;
var NotLeftTriangleBar;
var NotLessLess;
var NotLessSlantEqual;
var NotNestedGreaterGreater;
var NotNestedLessLess;
var NotPrecedesEqual;
var NotRightTriangleBar;
var NotSquareSubset;
var NotSquareSuperset;
var NotSubset;
var NotSucceedsEqual;
var NotSucceedsTilde;
var NotSuperset;
var nparsl;
var npart;
var npreceq;
var npre;
var nrarrc;
var nrarrw;
var nsce;
var Nscr;
var nscr;
var nsubE;
var nsubset;
var nsubseteqq;
var nsucceq;
var nsupE;
var nsupset;
var nsupseteqq;
var nvap;
var nvge;
var nvgt;
var nvle;
var nvlt;
var nvltrie;
var nvrtrie;
var nvsim;
var Ofr;
var ofr;
var Oopf;
var oopf;
var Oscr;
var Pfr;
var pfr;
var popf;
var Pscr;
var pscr;
var Qfr;
var qfr;
var qopf;
var Qscr;
var qscr;
var race;
var rfr;
var ropf;
var rscr;
var Sfr;
var sfr;
var smtes;
var Sopf;
var sopf;
var sqcaps;
var sqcups;
var Sscr;
var sscr;
var Tfr;
var tfr;
var ThickSpace;
var Topf;
var topf;
var Tscr;
var tscr;
var Ufr;
var ufr;
var Uopf;
var uopf;
var Uscr;
var uscr;
var varsubsetneq;
var varsubsetneqq;
var varsupsetneq;
var varsupsetneqq;
var Vfr;
var vfr;
var vnsub;
var vnsup;
var Vopf;
var vopf;
var Vscr;
var vscr;
var vsubnE;
var vsubne;
var vsupnE;
var vsupne;
var Wfr;
var wfr;
var Wopf;
var wopf;
var Wscr;
var wscr;
var Xfr;
var xfr;
var Xopf;
var xopf;
var Xscr;
var xscr;
var Yfr;
var yfr;
var Yopf;
var yopf;
var Yscr;
var yscr;
var zfr;
var zopf;
var Zscr;
var zscr;
var entities_default;
var init_entities = __esmMin((() => {
  acE = "∾̳", Afr = "𝔄", afr = "𝔞", Aopf = "𝔸", aopf = "𝕒", Ascr = "𝒜", ascr = "𝒶", Bfr = "𝔅", bfr = "𝔟", bne = "=⃥", bnequiv = "≡⃥", Bopf = "𝔹", bopf = "𝕓", bscr = "𝒷", caps = "∩︀", cfr = "𝔠", copf = "𝕔", Cscr = "𝒞", cscr = "𝒸", cups = "∪︀", Dfr = "𝔇", dfr = "𝔡", Dopf = "𝔻", dopf = "𝕕", Dscr = "𝒟", dscr = "𝒹", Efr = "𝔈", efr = "𝔢", Eopf = "𝔼", eopf = "𝕖", Ffr = "𝔉", ffr = "𝔣", Fopf = "𝔽", fopf = "𝕗", fscr = "𝒻", gesl = "⋛︀", Gfr = "𝔊", gfr = "𝔤", Gopf = "𝔾", gopf = "𝕘", Gscr = "𝒢", gvertneqq = "≩︀", gvnE = "≩︀", hfr = "𝔥", hopf = "𝕙", hscr = "𝒽", ifr = "𝔦", Iopf = "𝕀", iopf = "𝕚", iscr = "𝒾", Jfr = "𝔍", jfr = "𝔧", Jopf = "𝕁", jopf = "𝕛", Jscr = "𝒥", jscr = "𝒿", Kfr = "𝔎", kfr = "𝔨", Kopf = "𝕂", kopf = "𝕜", Kscr = "𝒦", kscr = "𝓀", lates = "⪭︀", lesg = "⋚︀", Lfr = "𝔏", lfr = "𝔩", Lopf = "𝕃", lopf = "𝕝", lscr = "𝓁", lvertneqq = "≨︀", lvnE = "≨︀", Mfr = "𝔐", mfr = "𝔪", Mopf = "𝕄", mopf = "𝕞", mscr = "𝓂", nang = "∠⃒", napE = "⩰̸", napid = "≋̸", nbump = "≎̸", nbumpe = "≏̸", ncongdot = "⩭̸", nedot = "≐̸", nesim = "≂̸", Nfr = "𝔑", nfr = "𝔫", ngE = "≧̸", ngeqq = "≧̸", ngeqslant = "⩾̸", nges = "⩾̸", nGg = "⋙̸", nGt = "≫⃒", nGtv = "≫̸", nlE = "≦̸", nleqq = "≦̸", nleqslant = "⩽̸", nles = "⩽̸", nLl = "⋘̸", nLt = "≪⃒", nLtv = "≪̸", nopf = "𝕟", NotEqualTilde = "≂̸", NotGreaterFullEqual = "≧̸", NotGreaterGreater = "≫̸", NotGreaterSlantEqual = "⩾̸", NotHumpDownHump = "≎̸", NotHumpEqual = "≏̸", notindot = "⋵̸", notinE = "⋹̸", NotLeftTriangleBar = "⧏̸", NotLessLess = "≪̸", NotLessSlantEqual = "⩽̸", NotNestedGreaterGreater = "⪢̸", NotNestedLessLess = "⪡̸", NotPrecedesEqual = "⪯̸", NotRightTriangleBar = "⧐̸", NotSquareSubset = "⊏̸", NotSquareSuperset = "⊐̸", NotSubset = "⊂⃒", NotSucceedsEqual = "⪰̸", NotSucceedsTilde = "≿̸", NotSuperset = "⊃⃒", nparsl = "⫽⃥", npart = "∂̸", npreceq = "⪯̸", npre = "⪯̸", nrarrc = "⤳̸", nrarrw = "↝̸", nsce = "⪰̸", Nscr = "𝒩", nscr = "𝓃", nsubE = "⫅̸", nsubset = "⊂⃒", nsubseteqq = "⫅̸", nsucceq = "⪰̸", nsupE = "⫆̸", nsupset = "⊃⃒", nsupseteqq = "⫆̸", nvap = "≍⃒", nvge = "≥⃒", nvgt = ">⃒", nvle = "≤⃒", nvlt = "<⃒", nvltrie = "⊴⃒", nvrtrie = "⊵⃒", nvsim = "∼⃒", Ofr = "𝔒", ofr = "𝔬", Oopf = "𝕆", oopf = "𝕠", Oscr = "𝒪", Pfr = "𝔓", pfr = "𝔭", popf = "𝕡", Pscr = "𝒫", pscr = "𝓅", Qfr = "𝔔", qfr = "𝔮", qopf = "𝕢", Qscr = "𝒬", qscr = "𝓆", race = "∽̱", rfr = "𝔯", ropf = "𝕣", rscr = "𝓇", Sfr = "𝔖", sfr = "𝔰", smtes = "⪬︀", Sopf = "𝕊", sopf = "𝕤", sqcaps = "⊓︀", sqcups = "⊔︀", Sscr = "𝒮", sscr = "𝓈", Tfr = "𝔗", tfr = "𝔱", ThickSpace = "  ", Topf = "𝕋", topf = "𝕥", Tscr = "𝒯", tscr = "𝓉", Ufr = "𝔘", ufr = "𝔲", Uopf = "𝕌", uopf = "𝕦", Uscr = "𝒰", uscr = "𝓊", varsubsetneq = "⊊︀", varsubsetneqq = "⫋︀", varsupsetneq = "⊋︀", varsupsetneqq = "⫌︀", Vfr = "𝔙", vfr = "𝔳", vnsub = "⊂⃒", vnsup = "⊃⃒", Vopf = "𝕍", vopf = "𝕧", Vscr = "𝒱", vscr = "𝓋", vsubnE = "⫋︀", vsubne = "⊊︀", vsupnE = "⫌︀", vsupne = "⊋︀", Wfr = "𝔚", wfr = "𝔴", Wopf = "𝕎", wopf = "𝕨", Wscr = "𝒲", wscr = "𝓌", Xfr = "𝔛", xfr = "𝔵", Xopf = "𝕏", xopf = "𝕩", Xscr = "𝒳", xscr = "𝓍", Yfr = "𝔜", yfr = "𝔶", Yopf = "𝕐", yopf = "𝕪", Yscr = "𝒴", yscr = "𝓎", zfr = "𝔷", zopf = "𝕫", Zscr = "𝒵", zscr = "𝓏", entities_default = {
    Aacute: "Á",
    aacute: "á",
    Abreve: "Ă",
    abreve: "ă",
    ac: "∾",
    acd: "∿",
    acE,
    Acirc: "Â",
    acirc: "â",
    acute: "´",
    Acy: "А",
    acy: "а",
    AElig: "Æ",
    aelig: "æ",
    af: "⁡",
    Afr,
    afr,
    Agrave: "À",
    agrave: "à",
    alefsym: "ℵ",
    aleph: "ℵ",
    Alpha: "Α",
    alpha: "α",
    Amacr: "Ā",
    amacr: "ā",
    amalg: "⨿",
    amp: "&",
    AMP: "&",
    andand: "⩕",
    And: "⩓",
    and: "∧",
    andd: "⩜",
    andslope: "⩘",
    andv: "⩚",
    ang: "∠",
    ange: "⦤",
    angle: "∠",
    angmsdaa: "⦨",
    angmsdab: "⦩",
    angmsdac: "⦪",
    angmsdad: "⦫",
    angmsdae: "⦬",
    angmsdaf: "⦭",
    angmsdag: "⦮",
    angmsdah: "⦯",
    angmsd: "∡",
    angrt: "∟",
    angrtvb: "⊾",
    angrtvbd: "⦝",
    angsph: "∢",
    angst: "Å",
    angzarr: "⍼",
    Aogon: "Ą",
    aogon: "ą",
    Aopf,
    aopf,
    apacir: "⩯",
    ap: "≈",
    apE: "⩰",
    ape: "≊",
    apid: "≋",
    apos: "'",
    ApplyFunction: "⁡",
    approx: "≈",
    approxeq: "≊",
    Aring: "Å",
    aring: "å",
    Ascr,
    ascr,
    Assign: "≔",
    ast: "*",
    asymp: "≈",
    asympeq: "≍",
    Atilde: "Ã",
    atilde: "ã",
    Auml: "Ä",
    auml: "ä",
    awconint: "∳",
    awint: "⨑",
    backcong: "≌",
    backepsilon: "϶",
    backprime: "‵",
    backsim: "∽",
    backsimeq: "⋍",
    Backslash: "∖",
    Barv: "⫧",
    barvee: "⊽",
    barwed: "⌅",
    Barwed: "⌆",
    barwedge: "⌅",
    bbrk: "⎵",
    bbrktbrk: "⎶",
    bcong: "≌",
    Bcy: "Б",
    bcy: "б",
    bdquo: "„",
    becaus: "∵",
    because: "∵",
    Because: "∵",
    bemptyv: "⦰",
    bepsi: "϶",
    bernou: "ℬ",
    Bernoullis: "ℬ",
    Beta: "Β",
    beta: "β",
    beth: "ℶ",
    between: "≬",
    Bfr,
    bfr,
    bigcap: "⋂",
    bigcirc: "◯",
    bigcup: "⋃",
    bigodot: "⨀",
    bigoplus: "⨁",
    bigotimes: "⨂",
    bigsqcup: "⨆",
    bigstar: "★",
    bigtriangledown: "▽",
    bigtriangleup: "△",
    biguplus: "⨄",
    bigvee: "⋁",
    bigwedge: "⋀",
    bkarow: "⤍",
    blacklozenge: "⧫",
    blacksquare: "▪",
    blacktriangle: "▴",
    blacktriangledown: "▾",
    blacktriangleleft: "◂",
    blacktriangleright: "▸",
    blank: "␣",
    blk12: "▒",
    blk14: "░",
    blk34: "▓",
    block: "█",
    bne,
    bnequiv,
    bNot: "⫭",
    bnot: "⌐",
    Bopf,
    bopf,
    bot: "⊥",
    bottom: "⊥",
    bowtie: "⋈",
    boxbox: "⧉",
    boxdl: "┐",
    boxdL: "╕",
    boxDl: "╖",
    boxDL: "╗",
    boxdr: "┌",
    boxdR: "╒",
    boxDr: "╓",
    boxDR: "╔",
    boxh: "─",
    boxH: "═",
    boxhd: "┬",
    boxHd: "╤",
    boxhD: "╥",
    boxHD: "╦",
    boxhu: "┴",
    boxHu: "╧",
    boxhU: "╨",
    boxHU: "╩",
    boxminus: "⊟",
    boxplus: "⊞",
    boxtimes: "⊠",
    boxul: "┘",
    boxuL: "╛",
    boxUl: "╜",
    boxUL: "╝",
    boxur: "└",
    boxuR: "╘",
    boxUr: "╙",
    boxUR: "╚",
    boxv: "│",
    boxV: "║",
    boxvh: "┼",
    boxvH: "╪",
    boxVh: "╫",
    boxVH: "╬",
    boxvl: "┤",
    boxvL: "╡",
    boxVl: "╢",
    boxVL: "╣",
    boxvr: "├",
    boxvR: "╞",
    boxVr: "╟",
    boxVR: "╠",
    bprime: "‵",
    breve: "˘",
    Breve: "˘",
    brvbar: "¦",
    bscr,
    Bscr: "ℬ",
    bsemi: "⁏",
    bsim: "∽",
    bsime: "⋍",
    bsolb: "⧅",
    bsol: "\\",
    bsolhsub: "⟈",
    bull: "•",
    bullet: "•",
    bump: "≎",
    bumpE: "⪮",
    bumpe: "≏",
    Bumpeq: "≎",
    bumpeq: "≏",
    Cacute: "Ć",
    cacute: "ć",
    capand: "⩄",
    capbrcup: "⩉",
    capcap: "⩋",
    cap: "∩",
    Cap: "⋒",
    capcup: "⩇",
    capdot: "⩀",
    CapitalDifferentialD: "ⅅ",
    caps,
    caret: "⁁",
    caron: "ˇ",
    Cayleys: "ℭ",
    ccaps: "⩍",
    Ccaron: "Č",
    ccaron: "č",
    Ccedil: "Ç",
    ccedil: "ç",
    Ccirc: "Ĉ",
    ccirc: "ĉ",
    Cconint: "∰",
    ccups: "⩌",
    ccupssm: "⩐",
    Cdot: "Ċ",
    cdot: "ċ",
    cedil: "¸",
    Cedilla: "¸",
    cemptyv: "⦲",
    cent: "¢",
    centerdot: "·",
    CenterDot: "·",
    cfr,
    Cfr: "ℭ",
    CHcy: "Ч",
    chcy: "ч",
    check: "✓",
    checkmark: "✓",
    Chi: "Χ",
    chi: "χ",
    circ: "ˆ",
    circeq: "≗",
    circlearrowleft: "↺",
    circlearrowright: "↻",
    circledast: "⊛",
    circledcirc: "⊚",
    circleddash: "⊝",
    CircleDot: "⊙",
    circledR: "®",
    circledS: "Ⓢ",
    CircleMinus: "⊖",
    CirclePlus: "⊕",
    CircleTimes: "⊗",
    cir: "○",
    cirE: "⧃",
    cire: "≗",
    cirfnint: "⨐",
    cirmid: "⫯",
    cirscir: "⧂",
    ClockwiseContourIntegral: "∲",
    CloseCurlyDoubleQuote: "”",
    CloseCurlyQuote: "’",
    clubs: "♣",
    clubsuit: "♣",
    colon: ":",
    Colon: "∷",
    Colone: "⩴",
    colone: "≔",
    coloneq: "≔",
    comma: ",",
    commat: "@",
    comp: "∁",
    compfn: "∘",
    complement: "∁",
    complexes: "ℂ",
    cong: "≅",
    congdot: "⩭",
    Congruent: "≡",
    conint: "∮",
    Conint: "∯",
    ContourIntegral: "∮",
    copf,
    Copf: "ℂ",
    coprod: "∐",
    Coproduct: "∐",
    copy: "©",
    COPY: "©",
    copysr: "℗",
    CounterClockwiseContourIntegral: "∳",
    crarr: "↵",
    cross: "✗",
    Cross: "⨯",
    Cscr,
    cscr,
    csub: "⫏",
    csube: "⫑",
    csup: "⫐",
    csupe: "⫒",
    ctdot: "⋯",
    cudarrl: "⤸",
    cudarrr: "⤵",
    cuepr: "⋞",
    cuesc: "⋟",
    cularr: "↶",
    cularrp: "⤽",
    cupbrcap: "⩈",
    cupcap: "⩆",
    CupCap: "≍",
    cup: "∪",
    Cup: "⋓",
    cupcup: "⩊",
    cupdot: "⊍",
    cupor: "⩅",
    cups,
    curarr: "↷",
    curarrm: "⤼",
    curlyeqprec: "⋞",
    curlyeqsucc: "⋟",
    curlyvee: "⋎",
    curlywedge: "⋏",
    curren: "¤",
    curvearrowleft: "↶",
    curvearrowright: "↷",
    cuvee: "⋎",
    cuwed: "⋏",
    cwconint: "∲",
    cwint: "∱",
    cylcty: "⌭",
    dagger: "†",
    Dagger: "‡",
    daleth: "ℸ",
    darr: "↓",
    Darr: "↡",
    dArr: "⇓",
    dash: "‐",
    Dashv: "⫤",
    dashv: "⊣",
    dbkarow: "⤏",
    dblac: "˝",
    Dcaron: "Ď",
    dcaron: "ď",
    Dcy: "Д",
    dcy: "д",
    ddagger: "‡",
    ddarr: "⇊",
    DD: "ⅅ",
    dd: "ⅆ",
    DDotrahd: "⤑",
    ddotseq: "⩷",
    deg: "°",
    Del: "∇",
    Delta: "Δ",
    delta: "δ",
    demptyv: "⦱",
    dfisht: "⥿",
    Dfr,
    dfr,
    dHar: "⥥",
    dharl: "⇃",
    dharr: "⇂",
    DiacriticalAcute: "´",
    DiacriticalDot: "˙",
    DiacriticalDoubleAcute: "˝",
    DiacriticalGrave: "`",
    DiacriticalTilde: "˜",
    diam: "⋄",
    diamond: "⋄",
    Diamond: "⋄",
    diamondsuit: "♦",
    diams: "♦",
    die: "¨",
    DifferentialD: "ⅆ",
    digamma: "ϝ",
    disin: "⋲",
    div: "÷",
    divide: "÷",
    divideontimes: "⋇",
    divonx: "⋇",
    DJcy: "Ђ",
    djcy: "ђ",
    dlcorn: "⌞",
    dlcrop: "⌍",
    dollar: "$",
    Dopf,
    dopf,
    Dot: "¨",
    dot: "˙",
    DotDot: "⃜",
    doteq: "≐",
    doteqdot: "≑",
    DotEqual: "≐",
    dotminus: "∸",
    dotplus: "∔",
    dotsquare: "⊡",
    doublebarwedge: "⌆",
    DoubleContourIntegral: "∯",
    DoubleDot: "¨",
    DoubleDownArrow: "⇓",
    DoubleLeftArrow: "⇐",
    DoubleLeftRightArrow: "⇔",
    DoubleLeftTee: "⫤",
    DoubleLongLeftArrow: "⟸",
    DoubleLongLeftRightArrow: "⟺",
    DoubleLongRightArrow: "⟹",
    DoubleRightArrow: "⇒",
    DoubleRightTee: "⊨",
    DoubleUpArrow: "⇑",
    DoubleUpDownArrow: "⇕",
    DoubleVerticalBar: "∥",
    DownArrowBar: "⤓",
    downarrow: "↓",
    DownArrow: "↓",
    Downarrow: "⇓",
    DownArrowUpArrow: "⇵",
    DownBreve: "̑",
    downdownarrows: "⇊",
    downharpoonleft: "⇃",
    downharpoonright: "⇂",
    DownLeftRightVector: "⥐",
    DownLeftTeeVector: "⥞",
    DownLeftVectorBar: "⥖",
    DownLeftVector: "↽",
    DownRightTeeVector: "⥟",
    DownRightVectorBar: "⥗",
    DownRightVector: "⇁",
    DownTeeArrow: "↧",
    DownTee: "⊤",
    drbkarow: "⤐",
    drcorn: "⌟",
    drcrop: "⌌",
    Dscr,
    dscr,
    DScy: "Ѕ",
    dscy: "ѕ",
    dsol: "⧶",
    Dstrok: "Đ",
    dstrok: "đ",
    dtdot: "⋱",
    dtri: "▿",
    dtrif: "▾",
    duarr: "⇵",
    duhar: "⥯",
    dwangle: "⦦",
    DZcy: "Џ",
    dzcy: "џ",
    dzigrarr: "⟿",
    Eacute: "É",
    eacute: "é",
    easter: "⩮",
    Ecaron: "Ě",
    ecaron: "ě",
    Ecirc: "Ê",
    ecirc: "ê",
    ecir: "≖",
    ecolon: "≕",
    Ecy: "Э",
    ecy: "э",
    eDDot: "⩷",
    Edot: "Ė",
    edot: "ė",
    eDot: "≑",
    ee: "ⅇ",
    efDot: "≒",
    Efr,
    efr,
    eg: "⪚",
    Egrave: "È",
    egrave: "è",
    egs: "⪖",
    egsdot: "⪘",
    el: "⪙",
    Element: "∈",
    elinters: "⏧",
    ell: "ℓ",
    els: "⪕",
    elsdot: "⪗",
    Emacr: "Ē",
    emacr: "ē",
    empty: "∅",
    emptyset: "∅",
    EmptySmallSquare: "◻",
    emptyv: "∅",
    EmptyVerySmallSquare: "▫",
    emsp13: " ",
    emsp14: " ",
    emsp: " ",
    ENG: "Ŋ",
    eng: "ŋ",
    ensp: " ",
    Eogon: "Ę",
    eogon: "ę",
    Eopf,
    eopf,
    epar: "⋕",
    eparsl: "⧣",
    eplus: "⩱",
    epsi: "ε",
    Epsilon: "Ε",
    epsilon: "ε",
    epsiv: "ϵ",
    eqcirc: "≖",
    eqcolon: "≕",
    eqsim: "≂",
    eqslantgtr: "⪖",
    eqslantless: "⪕",
    Equal: "⩵",
    equals: "=",
    EqualTilde: "≂",
    equest: "≟",
    Equilibrium: "⇌",
    equiv: "≡",
    equivDD: "⩸",
    eqvparsl: "⧥",
    erarr: "⥱",
    erDot: "≓",
    escr: "ℯ",
    Escr: "ℰ",
    esdot: "≐",
    Esim: "⩳",
    esim: "≂",
    Eta: "Η",
    eta: "η",
    ETH: "Ð",
    eth: "ð",
    Euml: "Ë",
    euml: "ë",
    euro: "€",
    excl: "!",
    exist: "∃",
    Exists: "∃",
    expectation: "ℰ",
    exponentiale: "ⅇ",
    ExponentialE: "ⅇ",
    fallingdotseq: "≒",
    Fcy: "Ф",
    fcy: "ф",
    female: "♀",
    ffilig: "ﬃ",
    fflig: "ﬀ",
    ffllig: "ﬄ",
    Ffr,
    ffr,
    filig: "ﬁ",
    FilledSmallSquare: "◼",
    FilledVerySmallSquare: "▪",
    fjlig: "fj",
    flat: "♭",
    fllig: "ﬂ",
    fltns: "▱",
    fnof: "ƒ",
    Fopf,
    fopf,
    forall: "∀",
    ForAll: "∀",
    fork: "⋔",
    forkv: "⫙",
    Fouriertrf: "ℱ",
    fpartint: "⨍",
    frac12: "½",
    frac13: "⅓",
    frac14: "¼",
    frac15: "⅕",
    frac16: "⅙",
    frac18: "⅛",
    frac23: "⅔",
    frac25: "⅖",
    frac34: "¾",
    frac35: "⅗",
    frac38: "⅜",
    frac45: "⅘",
    frac56: "⅚",
    frac58: "⅝",
    frac78: "⅞",
    frasl: "⁄",
    frown: "⌢",
    fscr,
    Fscr: "ℱ",
    gacute: "ǵ",
    Gamma: "Γ",
    gamma: "γ",
    Gammad: "Ϝ",
    gammad: "ϝ",
    gap: "⪆",
    Gbreve: "Ğ",
    gbreve: "ğ",
    Gcedil: "Ģ",
    Gcirc: "Ĝ",
    gcirc: "ĝ",
    Gcy: "Г",
    gcy: "г",
    Gdot: "Ġ",
    gdot: "ġ",
    ge: "≥",
    gE: "≧",
    gEl: "⪌",
    gel: "⋛",
    geq: "≥",
    geqq: "≧",
    geqslant: "⩾",
    gescc: "⪩",
    ges: "⩾",
    gesdot: "⪀",
    gesdoto: "⪂",
    gesdotol: "⪄",
    gesl,
    gesles: "⪔",
    Gfr,
    gfr,
    gg: "≫",
    Gg: "⋙",
    ggg: "⋙",
    gimel: "ℷ",
    GJcy: "Ѓ",
    gjcy: "ѓ",
    gla: "⪥",
    gl: "≷",
    glE: "⪒",
    glj: "⪤",
    gnap: "⪊",
    gnapprox: "⪊",
    gne: "⪈",
    gnE: "≩",
    gneq: "⪈",
    gneqq: "≩",
    gnsim: "⋧",
    Gopf,
    gopf,
    grave: "`",
    GreaterEqual: "≥",
    GreaterEqualLess: "⋛",
    GreaterFullEqual: "≧",
    GreaterGreater: "⪢",
    GreaterLess: "≷",
    GreaterSlantEqual: "⩾",
    GreaterTilde: "≳",
    Gscr,
    gscr: "ℊ",
    gsim: "≳",
    gsime: "⪎",
    gsiml: "⪐",
    gtcc: "⪧",
    gtcir: "⩺",
    gt: ">",
    GT: ">",
    Gt: "≫",
    gtdot: "⋗",
    gtlPar: "⦕",
    gtquest: "⩼",
    gtrapprox: "⪆",
    gtrarr: "⥸",
    gtrdot: "⋗",
    gtreqless: "⋛",
    gtreqqless: "⪌",
    gtrless: "≷",
    gtrsim: "≳",
    gvertneqq,
    gvnE,
    Hacek: "ˇ",
    hairsp: " ",
    half: "½",
    hamilt: "ℋ",
    HARDcy: "Ъ",
    hardcy: "ъ",
    harrcir: "⥈",
    harr: "↔",
    hArr: "⇔",
    harrw: "↭",
    Hat: "^",
    hbar: "ℏ",
    Hcirc: "Ĥ",
    hcirc: "ĥ",
    hearts: "♥",
    heartsuit: "♥",
    hellip: "…",
    hercon: "⊹",
    hfr,
    Hfr: "ℌ",
    HilbertSpace: "ℋ",
    hksearow: "⤥",
    hkswarow: "⤦",
    hoarr: "⇿",
    homtht: "∻",
    hookleftarrow: "↩",
    hookrightarrow: "↪",
    hopf,
    Hopf: "ℍ",
    horbar: "―",
    HorizontalLine: "─",
    hscr,
    Hscr: "ℋ",
    hslash: "ℏ",
    Hstrok: "Ħ",
    hstrok: "ħ",
    HumpDownHump: "≎",
    HumpEqual: "≏",
    hybull: "⁃",
    hyphen: "‐",
    Iacute: "Í",
    iacute: "í",
    ic: "⁣",
    Icirc: "Î",
    icirc: "î",
    Icy: "И",
    icy: "и",
    Idot: "İ",
    IEcy: "Е",
    iecy: "е",
    iexcl: "¡",
    iff: "⇔",
    ifr,
    Ifr: "ℑ",
    Igrave: "Ì",
    igrave: "ì",
    ii: "ⅈ",
    iiiint: "⨌",
    iiint: "∭",
    iinfin: "⧜",
    iiota: "℩",
    IJlig: "Ĳ",
    ijlig: "ĳ",
    Imacr: "Ī",
    imacr: "ī",
    image: "ℑ",
    ImaginaryI: "ⅈ",
    imagline: "ℐ",
    imagpart: "ℑ",
    imath: "ı",
    Im: "ℑ",
    imof: "⊷",
    imped: "Ƶ",
    Implies: "⇒",
    incare: "℅",
    in: "∈",
    infin: "∞",
    infintie: "⧝",
    inodot: "ı",
    intcal: "⊺",
    int: "∫",
    Int: "∬",
    integers: "ℤ",
    Integral: "∫",
    intercal: "⊺",
    Intersection: "⋂",
    intlarhk: "⨗",
    intprod: "⨼",
    InvisibleComma: "⁣",
    InvisibleTimes: "⁢",
    IOcy: "Ё",
    iocy: "ё",
    Iogon: "Į",
    iogon: "į",
    Iopf,
    iopf,
    Iota: "Ι",
    iota: "ι",
    iprod: "⨼",
    iquest: "¿",
    iscr,
    Iscr: "ℐ",
    isin: "∈",
    isindot: "⋵",
    isinE: "⋹",
    isins: "⋴",
    isinsv: "⋳",
    isinv: "∈",
    it: "⁢",
    Itilde: "Ĩ",
    itilde: "ĩ",
    Iukcy: "І",
    iukcy: "і",
    Iuml: "Ï",
    iuml: "ï",
    Jcirc: "Ĵ",
    jcirc: "ĵ",
    Jcy: "Й",
    jcy: "й",
    Jfr,
    jfr,
    jmath: "ȷ",
    Jopf,
    jopf,
    Jscr,
    jscr,
    Jsercy: "Ј",
    jsercy: "ј",
    Jukcy: "Є",
    jukcy: "є",
    Kappa: "Κ",
    kappa: "κ",
    kappav: "ϰ",
    Kcedil: "Ķ",
    kcedil: "ķ",
    Kcy: "К",
    kcy: "к",
    Kfr,
    kfr,
    kgreen: "ĸ",
    KHcy: "Х",
    khcy: "х",
    KJcy: "Ќ",
    kjcy: "ќ",
    Kopf,
    kopf,
    Kscr,
    kscr,
    lAarr: "⇚",
    Lacute: "Ĺ",
    lacute: "ĺ",
    laemptyv: "⦴",
    lagran: "ℒ",
    Lambda: "Λ",
    lambda: "λ",
    lang: "⟨",
    Lang: "⟪",
    langd: "⦑",
    langle: "⟨",
    lap: "⪅",
    Laplacetrf: "ℒ",
    laquo: "«",
    larrb: "⇤",
    larrbfs: "⤟",
    larr: "←",
    Larr: "↞",
    lArr: "⇐",
    larrfs: "⤝",
    larrhk: "↩",
    larrlp: "↫",
    larrpl: "⤹",
    larrsim: "⥳",
    larrtl: "↢",
    latail: "⤙",
    lAtail: "⤛",
    lat: "⪫",
    late: "⪭",
    lates,
    lbarr: "⤌",
    lBarr: "⤎",
    lbbrk: "❲",
    lbrace: "{",
    lbrack: "[",
    lbrke: "⦋",
    lbrksld: "⦏",
    lbrkslu: "⦍",
    Lcaron: "Ľ",
    lcaron: "ľ",
    Lcedil: "Ļ",
    lcedil: "ļ",
    lceil: "⌈",
    lcub: "{",
    Lcy: "Л",
    lcy: "л",
    ldca: "⤶",
    ldquo: "“",
    ldquor: "„",
    ldrdhar: "⥧",
    ldrushar: "⥋",
    ldsh: "↲",
    le: "≤",
    lE: "≦",
    LeftAngleBracket: "⟨",
    LeftArrowBar: "⇤",
    leftarrow: "←",
    LeftArrow: "←",
    Leftarrow: "⇐",
    LeftArrowRightArrow: "⇆",
    leftarrowtail: "↢",
    LeftCeiling: "⌈",
    LeftDoubleBracket: "⟦",
    LeftDownTeeVector: "⥡",
    LeftDownVectorBar: "⥙",
    LeftDownVector: "⇃",
    LeftFloor: "⌊",
    leftharpoondown: "↽",
    leftharpoonup: "↼",
    leftleftarrows: "⇇",
    leftrightarrow: "↔",
    LeftRightArrow: "↔",
    Leftrightarrow: "⇔",
    leftrightarrows: "⇆",
    leftrightharpoons: "⇋",
    leftrightsquigarrow: "↭",
    LeftRightVector: "⥎",
    LeftTeeArrow: "↤",
    LeftTee: "⊣",
    LeftTeeVector: "⥚",
    leftthreetimes: "⋋",
    LeftTriangleBar: "⧏",
    LeftTriangle: "⊲",
    LeftTriangleEqual: "⊴",
    LeftUpDownVector: "⥑",
    LeftUpTeeVector: "⥠",
    LeftUpVectorBar: "⥘",
    LeftUpVector: "↿",
    LeftVectorBar: "⥒",
    LeftVector: "↼",
    lEg: "⪋",
    leg: "⋚",
    leq: "≤",
    leqq: "≦",
    leqslant: "⩽",
    lescc: "⪨",
    les: "⩽",
    lesdot: "⩿",
    lesdoto: "⪁",
    lesdotor: "⪃",
    lesg,
    lesges: "⪓",
    lessapprox: "⪅",
    lessdot: "⋖",
    lesseqgtr: "⋚",
    lesseqqgtr: "⪋",
    LessEqualGreater: "⋚",
    LessFullEqual: "≦",
    LessGreater: "≶",
    lessgtr: "≶",
    LessLess: "⪡",
    lesssim: "≲",
    LessSlantEqual: "⩽",
    LessTilde: "≲",
    lfisht: "⥼",
    lfloor: "⌊",
    Lfr,
    lfr,
    lg: "≶",
    lgE: "⪑",
    lHar: "⥢",
    lhard: "↽",
    lharu: "↼",
    lharul: "⥪",
    lhblk: "▄",
    LJcy: "Љ",
    ljcy: "љ",
    llarr: "⇇",
    ll: "≪",
    Ll: "⋘",
    llcorner: "⌞",
    Lleftarrow: "⇚",
    llhard: "⥫",
    lltri: "◺",
    Lmidot: "Ŀ",
    lmidot: "ŀ",
    lmoustache: "⎰",
    lmoust: "⎰",
    lnap: "⪉",
    lnapprox: "⪉",
    lne: "⪇",
    lnE: "≨",
    lneq: "⪇",
    lneqq: "≨",
    lnsim: "⋦",
    loang: "⟬",
    loarr: "⇽",
    lobrk: "⟦",
    longleftarrow: "⟵",
    LongLeftArrow: "⟵",
    Longleftarrow: "⟸",
    longleftrightarrow: "⟷",
    LongLeftRightArrow: "⟷",
    Longleftrightarrow: "⟺",
    longmapsto: "⟼",
    longrightarrow: "⟶",
    LongRightArrow: "⟶",
    Longrightarrow: "⟹",
    looparrowleft: "↫",
    looparrowright: "↬",
    lopar: "⦅",
    Lopf,
    lopf,
    loplus: "⨭",
    lotimes: "⨴",
    lowast: "∗",
    lowbar: "_",
    LowerLeftArrow: "↙",
    LowerRightArrow: "↘",
    loz: "◊",
    lozenge: "◊",
    lozf: "⧫",
    lpar: "(",
    lparlt: "⦓",
    lrarr: "⇆",
    lrcorner: "⌟",
    lrhar: "⇋",
    lrhard: "⥭",
    lrm: "‎",
    lrtri: "⊿",
    lsaquo: "‹",
    lscr,
    Lscr: "ℒ",
    lsh: "↰",
    Lsh: "↰",
    lsim: "≲",
    lsime: "⪍",
    lsimg: "⪏",
    lsqb: "[",
    lsquo: "‘",
    lsquor: "‚",
    Lstrok: "Ł",
    lstrok: "ł",
    ltcc: "⪦",
    ltcir: "⩹",
    lt: "<",
    LT: "<",
    Lt: "≪",
    ltdot: "⋖",
    lthree: "⋋",
    ltimes: "⋉",
    ltlarr: "⥶",
    ltquest: "⩻",
    ltri: "◃",
    ltrie: "⊴",
    ltrif: "◂",
    ltrPar: "⦖",
    lurdshar: "⥊",
    luruhar: "⥦",
    lvertneqq,
    lvnE,
    macr: "¯",
    male: "♂",
    malt: "✠",
    maltese: "✠",
    Map: "⤅",
    map: "↦",
    mapsto: "↦",
    mapstodown: "↧",
    mapstoleft: "↤",
    mapstoup: "↥",
    marker: "▮",
    mcomma: "⨩",
    Mcy: "М",
    mcy: "м",
    mdash: "—",
    mDDot: "∺",
    measuredangle: "∡",
    MediumSpace: " ",
    Mellintrf: "ℳ",
    Mfr,
    mfr,
    mho: "℧",
    micro: "µ",
    midast: "*",
    midcir: "⫰",
    mid: "∣",
    middot: "·",
    minusb: "⊟",
    minus: "−",
    minusd: "∸",
    minusdu: "⨪",
    MinusPlus: "∓",
    mlcp: "⫛",
    mldr: "…",
    mnplus: "∓",
    models: "⊧",
    Mopf,
    mopf,
    mp: "∓",
    mscr,
    Mscr: "ℳ",
    mstpos: "∾",
    Mu: "Μ",
    mu: "μ",
    multimap: "⊸",
    mumap: "⊸",
    nabla: "∇",
    Nacute: "Ń",
    nacute: "ń",
    nang,
    nap: "≉",
    napE,
    napid,
    napos: "ŉ",
    napprox: "≉",
    natural: "♮",
    naturals: "ℕ",
    natur: "♮",
    nbsp: " ",
    nbump,
    nbumpe,
    ncap: "⩃",
    Ncaron: "Ň",
    ncaron: "ň",
    Ncedil: "Ņ",
    ncedil: "ņ",
    ncong: "≇",
    ncongdot,
    ncup: "⩂",
    Ncy: "Н",
    ncy: "н",
    ndash: "–",
    nearhk: "⤤",
    nearr: "↗",
    neArr: "⇗",
    nearrow: "↗",
    ne: "≠",
    nedot,
    NegativeMediumSpace: "​",
    NegativeThickSpace: "​",
    NegativeThinSpace: "​",
    NegativeVeryThinSpace: "​",
    nequiv: "≢",
    nesear: "⤨",
    nesim,
    NestedGreaterGreater: "≫",
    NestedLessLess: "≪",
    NewLine: "\n",
    nexist: "∄",
    nexists: "∄",
    Nfr,
    nfr,
    ngE,
    nge: "≱",
    ngeq: "≱",
    ngeqq,
    ngeqslant,
    nges,
    nGg,
    ngsim: "≵",
    nGt,
    ngt: "≯",
    ngtr: "≯",
    nGtv,
    nharr: "↮",
    nhArr: "⇎",
    nhpar: "⫲",
    ni: "∋",
    nis: "⋼",
    nisd: "⋺",
    niv: "∋",
    NJcy: "Њ",
    njcy: "њ",
    nlarr: "↚",
    nlArr: "⇍",
    nldr: "‥",
    nlE,
    nle: "≰",
    nleftarrow: "↚",
    nLeftarrow: "⇍",
    nleftrightarrow: "↮",
    nLeftrightarrow: "⇎",
    nleq: "≰",
    nleqq,
    nleqslant,
    nles,
    nless: "≮",
    nLl,
    nlsim: "≴",
    nLt,
    nlt: "≮",
    nltri: "⋪",
    nltrie: "⋬",
    nLtv,
    nmid: "∤",
    NoBreak: "⁠",
    NonBreakingSpace: " ",
    nopf,
    Nopf: "ℕ",
    Not: "⫬",
    not: "¬",
    NotCongruent: "≢",
    NotCupCap: "≭",
    NotDoubleVerticalBar: "∦",
    NotElement: "∉",
    NotEqual: "≠",
    NotEqualTilde,
    NotExists: "∄",
    NotGreater: "≯",
    NotGreaterEqual: "≱",
    NotGreaterFullEqual,
    NotGreaterGreater,
    NotGreaterLess: "≹",
    NotGreaterSlantEqual,
    NotGreaterTilde: "≵",
    NotHumpDownHump,
    NotHumpEqual,
    notin: "∉",
    notindot,
    notinE,
    notinva: "∉",
    notinvb: "⋷",
    notinvc: "⋶",
    NotLeftTriangleBar,
    NotLeftTriangle: "⋪",
    NotLeftTriangleEqual: "⋬",
    NotLess: "≮",
    NotLessEqual: "≰",
    NotLessGreater: "≸",
    NotLessLess,
    NotLessSlantEqual,
    NotLessTilde: "≴",
    NotNestedGreaterGreater,
    NotNestedLessLess,
    notni: "∌",
    notniva: "∌",
    notnivb: "⋾",
    notnivc: "⋽",
    NotPrecedes: "⊀",
    NotPrecedesEqual,
    NotPrecedesSlantEqual: "⋠",
    NotReverseElement: "∌",
    NotRightTriangleBar,
    NotRightTriangle: "⋫",
    NotRightTriangleEqual: "⋭",
    NotSquareSubset,
    NotSquareSubsetEqual: "⋢",
    NotSquareSuperset,
    NotSquareSupersetEqual: "⋣",
    NotSubset,
    NotSubsetEqual: "⊈",
    NotSucceeds: "⊁",
    NotSucceedsEqual,
    NotSucceedsSlantEqual: "⋡",
    NotSucceedsTilde,
    NotSuperset,
    NotSupersetEqual: "⊉",
    NotTilde: "≁",
    NotTildeEqual: "≄",
    NotTildeFullEqual: "≇",
    NotTildeTilde: "≉",
    NotVerticalBar: "∤",
    nparallel: "∦",
    npar: "∦",
    nparsl,
    npart,
    npolint: "⨔",
    npr: "⊀",
    nprcue: "⋠",
    nprec: "⊀",
    npreceq,
    npre,
    nrarrc,
    nrarr: "↛",
    nrArr: "⇏",
    nrarrw,
    nrightarrow: "↛",
    nRightarrow: "⇏",
    nrtri: "⋫",
    nrtrie: "⋭",
    nsc: "⊁",
    nsccue: "⋡",
    nsce,
    Nscr,
    nscr,
    nshortmid: "∤",
    nshortparallel: "∦",
    nsim: "≁",
    nsime: "≄",
    nsimeq: "≄",
    nsmid: "∤",
    nspar: "∦",
    nsqsube: "⋢",
    nsqsupe: "⋣",
    nsub: "⊄",
    nsubE,
    nsube: "⊈",
    nsubset,
    nsubseteq: "⊈",
    nsubseteqq,
    nsucc: "⊁",
    nsucceq,
    nsup: "⊅",
    nsupE,
    nsupe: "⊉",
    nsupset,
    nsupseteq: "⊉",
    nsupseteqq,
    ntgl: "≹",
    Ntilde: "Ñ",
    ntilde: "ñ",
    ntlg: "≸",
    ntriangleleft: "⋪",
    ntrianglelefteq: "⋬",
    ntriangleright: "⋫",
    ntrianglerighteq: "⋭",
    Nu: "Ν",
    nu: "ν",
    num: "#",
    numero: "№",
    numsp: " ",
    nvap,
    nvdash: "⊬",
    nvDash: "⊭",
    nVdash: "⊮",
    nVDash: "⊯",
    nvge,
    nvgt,
    nvHarr: "⤄",
    nvinfin: "⧞",
    nvlArr: "⤂",
    nvle,
    nvlt,
    nvltrie,
    nvrArr: "⤃",
    nvrtrie,
    nvsim,
    nwarhk: "⤣",
    nwarr: "↖",
    nwArr: "⇖",
    nwarrow: "↖",
    nwnear: "⤧",
    Oacute: "Ó",
    oacute: "ó",
    oast: "⊛",
    Ocirc: "Ô",
    ocirc: "ô",
    ocir: "⊚",
    Ocy: "О",
    ocy: "о",
    odash: "⊝",
    Odblac: "Ő",
    odblac: "ő",
    odiv: "⨸",
    odot: "⊙",
    odsold: "⦼",
    OElig: "Œ",
    oelig: "œ",
    ofcir: "⦿",
    Ofr,
    ofr,
    ogon: "˛",
    Ograve: "Ò",
    ograve: "ò",
    ogt: "⧁",
    ohbar: "⦵",
    ohm: "Ω",
    oint: "∮",
    olarr: "↺",
    olcir: "⦾",
    olcross: "⦻",
    oline: "‾",
    olt: "⧀",
    Omacr: "Ō",
    omacr: "ō",
    Omega: "Ω",
    omega: "ω",
    Omicron: "Ο",
    omicron: "ο",
    omid: "⦶",
    ominus: "⊖",
    Oopf,
    oopf,
    opar: "⦷",
    OpenCurlyDoubleQuote: "“",
    OpenCurlyQuote: "‘",
    operp: "⦹",
    oplus: "⊕",
    orarr: "↻",
    Or: "⩔",
    or: "∨",
    ord: "⩝",
    order: "ℴ",
    orderof: "ℴ",
    ordf: "ª",
    ordm: "º",
    origof: "⊶",
    oror: "⩖",
    orslope: "⩗",
    orv: "⩛",
    oS: "Ⓢ",
    Oscr,
    oscr: "ℴ",
    Oslash: "Ø",
    oslash: "ø",
    osol: "⊘",
    Otilde: "Õ",
    otilde: "õ",
    otimesas: "⨶",
    Otimes: "⨷",
    otimes: "⊗",
    Ouml: "Ö",
    ouml: "ö",
    ovbar: "⌽",
    OverBar: "‾",
    OverBrace: "⏞",
    OverBracket: "⎴",
    OverParenthesis: "⏜",
    para: "¶",
    parallel: "∥",
    par: "∥",
    parsim: "⫳",
    parsl: "⫽",
    part: "∂",
    PartialD: "∂",
    Pcy: "П",
    pcy: "п",
    percnt: "%",
    period: ".",
    permil: "‰",
    perp: "⊥",
    pertenk: "‱",
    Pfr,
    pfr,
    Phi: "Φ",
    phi: "φ",
    phiv: "ϕ",
    phmmat: "ℳ",
    phone: "☎",
    Pi: "Π",
    pi: "π",
    pitchfork: "⋔",
    piv: "ϖ",
    planck: "ℏ",
    planckh: "ℎ",
    plankv: "ℏ",
    plusacir: "⨣",
    plusb: "⊞",
    pluscir: "⨢",
    plus: "+",
    plusdo: "∔",
    plusdu: "⨥",
    pluse: "⩲",
    PlusMinus: "±",
    plusmn: "±",
    plussim: "⨦",
    plustwo: "⨧",
    pm: "±",
    Poincareplane: "ℌ",
    pointint: "⨕",
    popf,
    Popf: "ℙ",
    pound: "£",
    prap: "⪷",
    Pr: "⪻",
    pr: "≺",
    prcue: "≼",
    precapprox: "⪷",
    prec: "≺",
    preccurlyeq: "≼",
    Precedes: "≺",
    PrecedesEqual: "⪯",
    PrecedesSlantEqual: "≼",
    PrecedesTilde: "≾",
    preceq: "⪯",
    precnapprox: "⪹",
    precneqq: "⪵",
    precnsim: "⋨",
    pre: "⪯",
    prE: "⪳",
    precsim: "≾",
    prime: "′",
    Prime: "″",
    primes: "ℙ",
    prnap: "⪹",
    prnE: "⪵",
    prnsim: "⋨",
    prod: "∏",
    Product: "∏",
    profalar: "⌮",
    profline: "⌒",
    profsurf: "⌓",
    prop: "∝",
    Proportional: "∝",
    Proportion: "∷",
    propto: "∝",
    prsim: "≾",
    prurel: "⊰",
    Pscr,
    pscr,
    Psi: "Ψ",
    psi: "ψ",
    puncsp: " ",
    Qfr,
    qfr,
    qint: "⨌",
    qopf,
    Qopf: "ℚ",
    qprime: "⁗",
    Qscr,
    qscr,
    quaternions: "ℍ",
    quatint: "⨖",
    quest: "?",
    questeq: "≟",
    quot: '"',
    QUOT: '"',
    rAarr: "⇛",
    race,
    Racute: "Ŕ",
    racute: "ŕ",
    radic: "√",
    raemptyv: "⦳",
    rang: "⟩",
    Rang: "⟫",
    rangd: "⦒",
    range: "⦥",
    rangle: "⟩",
    raquo: "»",
    rarrap: "⥵",
    rarrb: "⇥",
    rarrbfs: "⤠",
    rarrc: "⤳",
    rarr: "→",
    Rarr: "↠",
    rArr: "⇒",
    rarrfs: "⤞",
    rarrhk: "↪",
    rarrlp: "↬",
    rarrpl: "⥅",
    rarrsim: "⥴",
    Rarrtl: "⤖",
    rarrtl: "↣",
    rarrw: "↝",
    ratail: "⤚",
    rAtail: "⤜",
    ratio: "∶",
    rationals: "ℚ",
    rbarr: "⤍",
    rBarr: "⤏",
    RBarr: "⤐",
    rbbrk: "❳",
    rbrace: "}",
    rbrack: "]",
    rbrke: "⦌",
    rbrksld: "⦎",
    rbrkslu: "⦐",
    Rcaron: "Ř",
    rcaron: "ř",
    Rcedil: "Ŗ",
    rcedil: "ŗ",
    rceil: "⌉",
    rcub: "}",
    Rcy: "Р",
    rcy: "р",
    rdca: "⤷",
    rdldhar: "⥩",
    rdquo: "”",
    rdquor: "”",
    rdsh: "↳",
    real: "ℜ",
    realine: "ℛ",
    realpart: "ℜ",
    reals: "ℝ",
    Re: "ℜ",
    rect: "▭",
    reg: "®",
    REG: "®",
    ReverseElement: "∋",
    ReverseEquilibrium: "⇋",
    ReverseUpEquilibrium: "⥯",
    rfisht: "⥽",
    rfloor: "⌋",
    rfr,
    Rfr: "ℜ",
    rHar: "⥤",
    rhard: "⇁",
    rharu: "⇀",
    rharul: "⥬",
    Rho: "Ρ",
    rho: "ρ",
    rhov: "ϱ",
    RightAngleBracket: "⟩",
    RightArrowBar: "⇥",
    rightarrow: "→",
    RightArrow: "→",
    Rightarrow: "⇒",
    RightArrowLeftArrow: "⇄",
    rightarrowtail: "↣",
    RightCeiling: "⌉",
    RightDoubleBracket: "⟧",
    RightDownTeeVector: "⥝",
    RightDownVectorBar: "⥕",
    RightDownVector: "⇂",
    RightFloor: "⌋",
    rightharpoondown: "⇁",
    rightharpoonup: "⇀",
    rightleftarrows: "⇄",
    rightleftharpoons: "⇌",
    rightrightarrows: "⇉",
    rightsquigarrow: "↝",
    RightTeeArrow: "↦",
    RightTee: "⊢",
    RightTeeVector: "⥛",
    rightthreetimes: "⋌",
    RightTriangleBar: "⧐",
    RightTriangle: "⊳",
    RightTriangleEqual: "⊵",
    RightUpDownVector: "⥏",
    RightUpTeeVector: "⥜",
    RightUpVectorBar: "⥔",
    RightUpVector: "↾",
    RightVectorBar: "⥓",
    RightVector: "⇀",
    ring: "˚",
    risingdotseq: "≓",
    rlarr: "⇄",
    rlhar: "⇌",
    rlm: "‏",
    rmoustache: "⎱",
    rmoust: "⎱",
    rnmid: "⫮",
    roang: "⟭",
    roarr: "⇾",
    robrk: "⟧",
    ropar: "⦆",
    ropf,
    Ropf: "ℝ",
    roplus: "⨮",
    rotimes: "⨵",
    RoundImplies: "⥰",
    rpar: ")",
    rpargt: "⦔",
    rppolint: "⨒",
    rrarr: "⇉",
    Rrightarrow: "⇛",
    rsaquo: "›",
    rscr,
    Rscr: "ℛ",
    rsh: "↱",
    Rsh: "↱",
    rsqb: "]",
    rsquo: "’",
    rsquor: "’",
    rthree: "⋌",
    rtimes: "⋊",
    rtri: "▹",
    rtrie: "⊵",
    rtrif: "▸",
    rtriltri: "⧎",
    RuleDelayed: "⧴",
    ruluhar: "⥨",
    rx: "℞",
    Sacute: "Ś",
    sacute: "ś",
    sbquo: "‚",
    scap: "⪸",
    Scaron: "Š",
    scaron: "š",
    Sc: "⪼",
    sc: "≻",
    sccue: "≽",
    sce: "⪰",
    scE: "⪴",
    Scedil: "Ş",
    scedil: "ş",
    Scirc: "Ŝ",
    scirc: "ŝ",
    scnap: "⪺",
    scnE: "⪶",
    scnsim: "⋩",
    scpolint: "⨓",
    scsim: "≿",
    Scy: "С",
    scy: "с",
    sdotb: "⊡",
    sdot: "⋅",
    sdote: "⩦",
    searhk: "⤥",
    searr: "↘",
    seArr: "⇘",
    searrow: "↘",
    sect: "§",
    semi: ";",
    seswar: "⤩",
    setminus: "∖",
    setmn: "∖",
    sext: "✶",
    Sfr,
    sfr,
    sfrown: "⌢",
    sharp: "♯",
    SHCHcy: "Щ",
    shchcy: "щ",
    SHcy: "Ш",
    shcy: "ш",
    ShortDownArrow: "↓",
    ShortLeftArrow: "←",
    shortmid: "∣",
    shortparallel: "∥",
    ShortRightArrow: "→",
    ShortUpArrow: "↑",
    shy: "­",
    Sigma: "Σ",
    sigma: "σ",
    sigmaf: "ς",
    sigmav: "ς",
    sim: "∼",
    simdot: "⩪",
    sime: "≃",
    simeq: "≃",
    simg: "⪞",
    simgE: "⪠",
    siml: "⪝",
    simlE: "⪟",
    simne: "≆",
    simplus: "⨤",
    simrarr: "⥲",
    slarr: "←",
    SmallCircle: "∘",
    smallsetminus: "∖",
    smashp: "⨳",
    smeparsl: "⧤",
    smid: "∣",
    smile: "⌣",
    smt: "⪪",
    smte: "⪬",
    smtes,
    SOFTcy: "Ь",
    softcy: "ь",
    solbar: "⌿",
    solb: "⧄",
    sol: "/",
    Sopf,
    sopf,
    spades: "♠",
    spadesuit: "♠",
    spar: "∥",
    sqcap: "⊓",
    sqcaps,
    sqcup: "⊔",
    sqcups,
    Sqrt: "√",
    sqsub: "⊏",
    sqsube: "⊑",
    sqsubset: "⊏",
    sqsubseteq: "⊑",
    sqsup: "⊐",
    sqsupe: "⊒",
    sqsupset: "⊐",
    sqsupseteq: "⊒",
    square: "□",
    Square: "□",
    SquareIntersection: "⊓",
    SquareSubset: "⊏",
    SquareSubsetEqual: "⊑",
    SquareSuperset: "⊐",
    SquareSupersetEqual: "⊒",
    SquareUnion: "⊔",
    squarf: "▪",
    squ: "□",
    squf: "▪",
    srarr: "→",
    Sscr,
    sscr,
    ssetmn: "∖",
    ssmile: "⌣",
    sstarf: "⋆",
    Star: "⋆",
    star: "☆",
    starf: "★",
    straightepsilon: "ϵ",
    straightphi: "ϕ",
    strns: "¯",
    sub: "⊂",
    Sub: "⋐",
    subdot: "⪽",
    subE: "⫅",
    sube: "⊆",
    subedot: "⫃",
    submult: "⫁",
    subnE: "⫋",
    subne: "⊊",
    subplus: "⪿",
    subrarr: "⥹",
    subset: "⊂",
    Subset: "⋐",
    subseteq: "⊆",
    subseteqq: "⫅",
    SubsetEqual: "⊆",
    subsetneq: "⊊",
    subsetneqq: "⫋",
    subsim: "⫇",
    subsub: "⫕",
    subsup: "⫓",
    succapprox: "⪸",
    succ: "≻",
    succcurlyeq: "≽",
    Succeeds: "≻",
    SucceedsEqual: "⪰",
    SucceedsSlantEqual: "≽",
    SucceedsTilde: "≿",
    succeq: "⪰",
    succnapprox: "⪺",
    succneqq: "⪶",
    succnsim: "⋩",
    succsim: "≿",
    SuchThat: "∋",
    sum: "∑",
    Sum: "∑",
    sung: "♪",
    sup1: "¹",
    sup2: "²",
    sup3: "³",
    sup: "⊃",
    Sup: "⋑",
    supdot: "⪾",
    supdsub: "⫘",
    supE: "⫆",
    supe: "⊇",
    supedot: "⫄",
    Superset: "⊃",
    SupersetEqual: "⊇",
    suphsol: "⟉",
    suphsub: "⫗",
    suplarr: "⥻",
    supmult: "⫂",
    supnE: "⫌",
    supne: "⊋",
    supplus: "⫀",
    supset: "⊃",
    Supset: "⋑",
    supseteq: "⊇",
    supseteqq: "⫆",
    supsetneq: "⊋",
    supsetneqq: "⫌",
    supsim: "⫈",
    supsub: "⫔",
    supsup: "⫖",
    swarhk: "⤦",
    swarr: "↙",
    swArr: "⇙",
    swarrow: "↙",
    swnwar: "⤪",
    szlig: "ß",
    Tab: "	",
    target: "⌖",
    Tau: "Τ",
    tau: "τ",
    tbrk: "⎴",
    Tcaron: "Ť",
    tcaron: "ť",
    Tcedil: "Ţ",
    tcedil: "ţ",
    Tcy: "Т",
    tcy: "т",
    tdot: "⃛",
    telrec: "⌕",
    Tfr,
    tfr,
    there4: "∴",
    therefore: "∴",
    Therefore: "∴",
    Theta: "Θ",
    theta: "θ",
    thetasym: "ϑ",
    thetav: "ϑ",
    thickapprox: "≈",
    thicksim: "∼",
    ThickSpace,
    ThinSpace: " ",
    thinsp: " ",
    thkap: "≈",
    thksim: "∼",
    THORN: "Þ",
    thorn: "þ",
    tilde: "˜",
    Tilde: "∼",
    TildeEqual: "≃",
    TildeFullEqual: "≅",
    TildeTilde: "≈",
    timesbar: "⨱",
    timesb: "⊠",
    times: "×",
    timesd: "⨰",
    tint: "∭",
    toea: "⤨",
    topbot: "⌶",
    topcir: "⫱",
    top: "⊤",
    Topf,
    topf,
    topfork: "⫚",
    tosa: "⤩",
    tprime: "‴",
    trade: "™",
    TRADE: "™",
    triangle: "▵",
    triangledown: "▿",
    triangleleft: "◃",
    trianglelefteq: "⊴",
    triangleq: "≜",
    triangleright: "▹",
    trianglerighteq: "⊵",
    tridot: "◬",
    trie: "≜",
    triminus: "⨺",
    TripleDot: "⃛",
    triplus: "⨹",
    trisb: "⧍",
    tritime: "⨻",
    trpezium: "⏢",
    Tscr,
    tscr,
    TScy: "Ц",
    tscy: "ц",
    TSHcy: "Ћ",
    tshcy: "ћ",
    Tstrok: "Ŧ",
    tstrok: "ŧ",
    twixt: "≬",
    twoheadleftarrow: "↞",
    twoheadrightarrow: "↠",
    Uacute: "Ú",
    uacute: "ú",
    uarr: "↑",
    Uarr: "↟",
    uArr: "⇑",
    Uarrocir: "⥉",
    Ubrcy: "Ў",
    ubrcy: "ў",
    Ubreve: "Ŭ",
    ubreve: "ŭ",
    Ucirc: "Û",
    ucirc: "û",
    Ucy: "У",
    ucy: "у",
    udarr: "⇅",
    Udblac: "Ű",
    udblac: "ű",
    udhar: "⥮",
    ufisht: "⥾",
    Ufr,
    ufr,
    Ugrave: "Ù",
    ugrave: "ù",
    uHar: "⥣",
    uharl: "↿",
    uharr: "↾",
    uhblk: "▀",
    ulcorn: "⌜",
    ulcorner: "⌜",
    ulcrop: "⌏",
    ultri: "◸",
    Umacr: "Ū",
    umacr: "ū",
    uml: "¨",
    UnderBar: "_",
    UnderBrace: "⏟",
    UnderBracket: "⎵",
    UnderParenthesis: "⏝",
    Union: "⋃",
    UnionPlus: "⊎",
    Uogon: "Ų",
    uogon: "ų",
    Uopf,
    uopf,
    UpArrowBar: "⤒",
    uparrow: "↑",
    UpArrow: "↑",
    Uparrow: "⇑",
    UpArrowDownArrow: "⇅",
    updownarrow: "↕",
    UpDownArrow: "↕",
    Updownarrow: "⇕",
    UpEquilibrium: "⥮",
    upharpoonleft: "↿",
    upharpoonright: "↾",
    uplus: "⊎",
    UpperLeftArrow: "↖",
    UpperRightArrow: "↗",
    upsi: "υ",
    Upsi: "ϒ",
    upsih: "ϒ",
    Upsilon: "Υ",
    upsilon: "υ",
    UpTeeArrow: "↥",
    UpTee: "⊥",
    upuparrows: "⇈",
    urcorn: "⌝",
    urcorner: "⌝",
    urcrop: "⌎",
    Uring: "Ů",
    uring: "ů",
    urtri: "◹",
    Uscr,
    uscr,
    utdot: "⋰",
    Utilde: "Ũ",
    utilde: "ũ",
    utri: "▵",
    utrif: "▴",
    uuarr: "⇈",
    Uuml: "Ü",
    uuml: "ü",
    uwangle: "⦧",
    vangrt: "⦜",
    varepsilon: "ϵ",
    varkappa: "ϰ",
    varnothing: "∅",
    varphi: "ϕ",
    varpi: "ϖ",
    varpropto: "∝",
    varr: "↕",
    vArr: "⇕",
    varrho: "ϱ",
    varsigma: "ς",
    varsubsetneq,
    varsubsetneqq,
    varsupsetneq,
    varsupsetneqq,
    vartheta: "ϑ",
    vartriangleleft: "⊲",
    vartriangleright: "⊳",
    vBar: "⫨",
    Vbar: "⫫",
    vBarv: "⫩",
    Vcy: "В",
    vcy: "в",
    vdash: "⊢",
    vDash: "⊨",
    Vdash: "⊩",
    VDash: "⊫",
    Vdashl: "⫦",
    veebar: "⊻",
    vee: "∨",
    Vee: "⋁",
    veeeq: "≚",
    vellip: "⋮",
    verbar: "|",
    Verbar: "‖",
    vert: "|",
    Vert: "‖",
    VerticalBar: "∣",
    VerticalLine: "|",
    VerticalSeparator: "❘",
    VerticalTilde: "≀",
    VeryThinSpace: " ",
    Vfr,
    vfr,
    vltri: "⊲",
    vnsub,
    vnsup,
    Vopf,
    vopf,
    vprop: "∝",
    vrtri: "⊳",
    Vscr,
    vscr,
    vsubnE,
    vsubne,
    vsupnE,
    vsupne,
    Vvdash: "⊪",
    vzigzag: "⦚",
    Wcirc: "Ŵ",
    wcirc: "ŵ",
    wedbar: "⩟",
    wedge: "∧",
    Wedge: "⋀",
    wedgeq: "≙",
    weierp: "℘",
    Wfr,
    wfr,
    Wopf,
    wopf,
    wp: "℘",
    wr: "≀",
    wreath: "≀",
    Wscr,
    wscr,
    xcap: "⋂",
    xcirc: "◯",
    xcup: "⋃",
    xdtri: "▽",
    Xfr,
    xfr,
    xharr: "⟷",
    xhArr: "⟺",
    Xi: "Ξ",
    xi: "ξ",
    xlarr: "⟵",
    xlArr: "⟸",
    xmap: "⟼",
    xnis: "⋻",
    xodot: "⨀",
    Xopf,
    xopf,
    xoplus: "⨁",
    xotime: "⨂",
    xrarr: "⟶",
    xrArr: "⟹",
    Xscr,
    xscr,
    xsqcup: "⨆",
    xuplus: "⨄",
    xutri: "△",
    xvee: "⋁",
    xwedge: "⋀",
    Yacute: "Ý",
    yacute: "ý",
    YAcy: "Я",
    yacy: "я",
    Ycirc: "Ŷ",
    ycirc: "ŷ",
    Ycy: "Ы",
    ycy: "ы",
    yen: "¥",
    Yfr,
    yfr,
    YIcy: "Ї",
    yicy: "ї",
    Yopf,
    yopf,
    Yscr,
    yscr,
    YUcy: "Ю",
    yucy: "ю",
    yuml: "ÿ",
    Yuml: "Ÿ",
    Zacute: "Ź",
    zacute: "ź",
    Zcaron: "Ž",
    zcaron: "ž",
    Zcy: "З",
    zcy: "з",
    Zdot: "Ż",
    zdot: "ż",
    zeetrf: "ℨ",
    ZeroWidthSpace: "​",
    Zeta: "Ζ",
    zeta: "ζ",
    zfr,
    Zfr: "ℨ",
    ZHcy: "Ж",
    zhcy: "ж",
    zigrarr: "⇝",
    zopf,
    Zopf: "ℤ",
    Zscr,
    zscr,
    zwj: "‍",
    zwnj: "‌"
  };
}));
var require_entities = __commonJSMin(((e, t) => {
  t.exports = (init_entities(), __toCommonJS(entities_exports).default);
}));
var require_regex$4 = __commonJSMin(((e, t) => {
  t.exports = /[!-#%-\*,-\/:;\?@\[-\]_\{\}\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4E\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDF55-\uDF59]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDF3C-\uDF3E]|\uD806[\uDC3B\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8]|\uD809[\uDC70-\uDC74]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDE97-\uDE9A]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]/;
}));
var require_encode = __commonJSMin(((e, t) => {
  var n = {};
  function r(e2) {
    var t2, r2, i2 = n[e2];
    if (i2) return i2;
    for (i2 = n[e2] = [], t2 = 0; t2 < 128; t2++) r2 = String.fromCharCode(t2), /^[0-9a-z]$/i.test(r2) ? i2.push(r2) : i2.push("%" + ("0" + t2.toString(16).toUpperCase()).slice(-2));
    for (t2 = 0; t2 < e2.length; t2++) i2[e2.charCodeAt(t2)] = e2[t2];
    return i2;
  }
  function i(e2, t2, n2) {
    var o, s, l, d, f, p2 = "";
    for (typeof t2 != "string" && (n2 = t2, t2 = i.defaultChars), n2 === void 0 && (n2 = true), f = r(t2), o = 0, s = e2.length; o < s; o++) {
      if (l = e2.charCodeAt(o), n2 && l === 37 && o + 2 < s && /^[0-9a-f]{2}$/i.test(e2.slice(o + 1, o + 3))) {
        p2 += e2.slice(o, o + 3), o += 2;
        continue;
      }
      if (l < 128) {
        p2 += f[l];
        continue;
      }
      if (l >= 55296 && l <= 57343) {
        if (l >= 55296 && l <= 56319 && o + 1 < s && (d = e2.charCodeAt(o + 1), d >= 56320 && d <= 57343)) {
          p2 += encodeURIComponent(e2[o] + e2[o + 1]), o++;
          continue;
        }
        p2 += "%EF%BF%BD";
        continue;
      }
      p2 += encodeURIComponent(e2[o]);
    }
    return p2;
  }
  i.defaultChars = ";/?:@&=+$,-_.!~*'()#", i.componentChars = "-_.!~*'()", t.exports = i;
}));
var require_decode = __commonJSMin(((e, t) => {
  var n = {};
  function r(e2) {
    var t2, r2, i2 = n[e2];
    if (i2) return i2;
    for (i2 = n[e2] = [], t2 = 0; t2 < 128; t2++) r2 = String.fromCharCode(t2), i2.push(r2);
    for (t2 = 0; t2 < e2.length; t2++) r2 = e2.charCodeAt(t2), i2[r2] = "%" + ("0" + r2.toString(16).toUpperCase()).slice(-2);
    return i2;
  }
  function i(e2, t2) {
    var n2;
    return typeof t2 != "string" && (t2 = i.defaultChars), n2 = r(t2), e2.replace(/(%[a-f0-9]{2})+/gi, function(e3) {
      var t3, r2, i2, o, s, l, d, f = "";
      for (t3 = 0, r2 = e3.length; t3 < r2; t3 += 3) {
        if (i2 = parseInt(e3.slice(t3 + 1, t3 + 3), 16), i2 < 128) {
          f += n2[i2];
          continue;
        }
        if ((i2 & 224) == 192 && t3 + 3 < r2 && (o = parseInt(e3.slice(t3 + 4, t3 + 6), 16), (o & 192) == 128)) {
          d = i2 << 6 & 1984 | o & 63, d < 128 ? f += "��" : f += String.fromCharCode(d), t3 += 3;
          continue;
        }
        if ((i2 & 240) == 224 && t3 + 6 < r2 && (o = parseInt(e3.slice(t3 + 4, t3 + 6), 16), s = parseInt(e3.slice(t3 + 7, t3 + 9), 16), (o & 192) == 128 && (s & 192) == 128)) {
          d = i2 << 12 & 61440 | o << 6 & 4032 | s & 63, d < 2048 || d >= 55296 && d <= 57343 ? f += "���" : f += String.fromCharCode(d), t3 += 6;
          continue;
        }
        if ((i2 & 248) == 240 && t3 + 9 < r2 && (o = parseInt(e3.slice(t3 + 4, t3 + 6), 16), s = parseInt(e3.slice(t3 + 7, t3 + 9), 16), l = parseInt(e3.slice(t3 + 10, t3 + 12), 16), (o & 192) == 128 && (s & 192) == 128 && (l & 192) == 128)) {
          d = i2 << 18 & 1835008 | o << 12 & 258048 | s << 6 & 4032 | l & 63, d < 65536 || d > 1114111 ? f += "����" : (d -= 65536, f += String.fromCharCode(55296 + (d >> 10), 56320 + (d & 1023))), t3 += 9;
          continue;
        }
        f += "�";
      }
      return f;
    });
  }
  i.defaultChars = ";/?:@&=+$,#", i.componentChars = "", t.exports = i;
}));
var require_format = __commonJSMin(((e, t) => {
  t.exports = function(e2) {
    var t2 = "";
    return t2 += e2.protocol || "", t2 += e2.slashes ? "//" : "", t2 += e2.auth ? e2.auth + "@" : "", e2.hostname && e2.hostname.indexOf(":") !== -1 ? t2 += "[" + e2.hostname + "]" : t2 += e2.hostname || "", t2 += e2.port ? ":" + e2.port : "", t2 += e2.pathname || "", t2 += e2.search || "", t2 += e2.hash || "", t2;
  };
}));
var require_parse = __commonJSMin(((e, t) => {
  function n() {
    this.protocol = null, this.slashes = null, this.auth = null, this.port = null, this.hostname = null, this.hash = null, this.search = null, this.pathname = null;
  }
  var r = /^([a-z0-9.+-]+:)/i, i = /:[0-9]*$/, o = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/, s = [
    "%",
    "/",
    "?",
    ";",
    "#",
    "'",
    "{",
    "}",
    "|",
    "\\",
    "^",
    "`",
    "<",
    ">",
    '"',
    "`",
    " ",
    "\r",
    "\n",
    "	"
  ], l = [
    "/",
    "?",
    "#"
  ], d = 255, f = /^[+a-z0-9A-Z_-]{0,63}$/, p2 = /^([+a-z0-9A-Z_-]{0,63})(.*)$/, _ = {
    javascript: true,
    "javascript:": true
  }, y = {
    http: true,
    https: true,
    ftp: true,
    gopher: true,
    file: true,
    "http:": true,
    "https:": true,
    "ftp:": true,
    "gopher:": true,
    "file:": true
  };
  function x(e2, t2) {
    if (e2 && e2 instanceof n) return e2;
    var r2 = new n();
    return r2.parse(e2, t2), r2;
  }
  n.prototype.parse = function(e2, t2) {
    var n2, i2, x2, w, k, $ = e2;
    if ($ = $.trim(), !t2 && e2.split("#").length === 1) {
      var A7 = o.exec($);
      if (A7) return this.pathname = A7[1], A7[2] && (this.search = A7[2]), this;
    }
    var j7 = r.exec($);
    if (j7 && (j7 = j7[0], x2 = j7.toLowerCase(), this.protocol = j7, $ = $.substr(j7.length)), (t2 || j7 || $.match(/^\/\/[^@\/]+@[^@\/]+/)) && (k = $.substr(0, 2) === "//", k && !(j7 && _[j7]) && ($ = $.substr(2), this.slashes = true)), !_[j7] && (k || j7 && !y[j7])) {
      var M7 = -1;
      for (n2 = 0; n2 < l.length; n2++) w = $.indexOf(l[n2]), w !== -1 && (M7 === -1 || w < M7) && (M7 = w);
      var N7, P7 = M7 === -1 ? $.lastIndexOf("@") : $.lastIndexOf("@", M7);
      for (P7 !== -1 && (N7 = $.slice(0, P7), $ = $.slice(P7 + 1), this.auth = N7), M7 = -1, n2 = 0; n2 < s.length; n2++) w = $.indexOf(s[n2]), w !== -1 && (M7 === -1 || w < M7) && (M7 = w);
      M7 === -1 && (M7 = $.length), $[M7 - 1] === ":" && M7--;
      var F7 = $.slice(0, M7);
      $ = $.slice(M7), this.parseHost(F7), this.hostname = this.hostname || "";
      var I7 = this.hostname[0] === "[" && this.hostname[this.hostname.length - 1] === "]";
      if (!I7) {
        var L7 = this.hostname.split(/\./);
        for (n2 = 0, i2 = L7.length; n2 < i2; n2++) {
          var R7 = L7[n2];
          if (R7 && !R7.match(f)) {
            for (var z7 = "", B7 = 0, V7 = R7.length; B7 < V7; B7++) R7.charCodeAt(B7) > 127 ? z7 += "x" : z7 += R7[B7];
            if (!z7.match(f)) {
              var H7 = L7.slice(0, n2), U7 = L7.slice(n2 + 1), W7 = R7.match(p2);
              W7 && (H7.push(W7[1]), U7.unshift(W7[2])), U7.length && ($ = U7.join(".") + $), this.hostname = H7.join(".");
              break;
            }
          }
        }
      }
      this.hostname.length > d && (this.hostname = ""), I7 && (this.hostname = this.hostname.substr(1, this.hostname.length - 2));
    }
    var G7 = $.indexOf("#");
    G7 !== -1 && (this.hash = $.substr(G7), $ = $.slice(0, G7));
    var K7 = $.indexOf("?");
    return K7 !== -1 && (this.search = $.substr(K7), $ = $.slice(0, K7)), $ && (this.pathname = $), y[x2] && this.hostname && !this.pathname && (this.pathname = ""), this;
  }, n.prototype.parseHost = function(e2) {
    var t2 = i.exec(e2);
    t2 && (t2 = t2[0], t2 !== ":" && (this.port = t2.substr(1)), e2 = e2.substr(0, e2.length - t2.length)), e2 && (this.hostname = e2);
  }, t.exports = x;
}));
var require_mdurl = __commonJSMin(((e, t) => {
  t.exports.encode = require_encode(), t.exports.decode = require_decode(), t.exports.format = require_format(), t.exports.parse = require_parse();
}));
var require_regex$3 = __commonJSMin(((e, t) => {
  t.exports = /[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/;
}));
var require_regex$2 = __commonJSMin(((e, t) => {
  t.exports = /[\0-\x1F\x7F-\x9F]/;
}));
var require_regex$1 = __commonJSMin(((e, t) => {
  t.exports = /[\xAD\u0600-\u0605\u061C\u06DD\u070F\u08E2\u180E\u200B-\u200F\u202A-\u202E\u2060-\u2064\u2066-\u206F\uFEFF\uFFF9-\uFFFB]|\uD804[\uDCBD\uDCCD]|\uD82F[\uDCA0-\uDCA3]|\uD834[\uDD73-\uDD7A]|\uDB40[\uDC01\uDC20-\uDC7F]/;
}));
var require_regex = __commonJSMin(((e, t) => {
  t.exports = /[ \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/;
}));
var require_uc = __commonJSMin(((e) => {
  e.Any = require_regex$3(), e.Cc = require_regex$2(), e.Cf = require_regex$1(), e.P = require_regex$4(), e.Z = require_regex();
}));
var require_utils = __commonJSMin(((e) => {
  function t(e2) {
    return Object.prototype.toString.call(e2);
  }
  function n(e2) {
    return t(e2) === "[object String]";
  }
  var r = Object.prototype.hasOwnProperty;
  function i(e2, t2) {
    return r.call(e2, t2);
  }
  function o(e2) {
    return Array.prototype.slice.call(arguments, 1).forEach(function(t2) {
      if (t2) {
        if (typeof t2 != "object") throw TypeError(t2 + "must be object");
        Object.keys(t2).forEach(function(n2) {
          e2[n2] = t2[n2];
        });
      }
    }), e2;
  }
  function s(e2, t2, n2) {
    return [].concat(e2.slice(0, t2), n2, e2.slice(t2 + 1));
  }
  function l(e2) {
    return !(e2 >= 55296 && e2 <= 57343 || e2 >= 64976 && e2 <= 65007 || (e2 & 65535) == 65535 || (e2 & 65535) == 65534 || e2 >= 0 && e2 <= 8 || e2 === 11 || e2 >= 14 && e2 <= 31 || e2 >= 127 && e2 <= 159 || e2 > 1114111);
  }
  function d(e2) {
    if (e2 > 65535) {
      e2 -= 65536;
      var t2 = 55296 + (e2 >> 10), n2 = 56320 + (e2 & 1023);
      return String.fromCharCode(t2, n2);
    }
    return String.fromCharCode(e2);
  }
  var f = /\\([!"#$%&'()*+,\-.\/:;<=>?@[\\\]^_`{|}~])/g, p2 = RegExp(f.source + "|&([a-z#][a-z0-9]{1,31});", "gi"), _ = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i, y = require_entities();
  function x(e2, t2) {
    var n2;
    return i(y, t2) ? y[t2] : t2.charCodeAt(0) === 35 && _.test(t2) && (n2 = t2[1].toLowerCase() === "x" ? parseInt(t2.slice(2), 16) : parseInt(t2.slice(1), 10), l(n2)) ? d(n2) : e2;
  }
  function w(e2) {
    return e2.indexOf("\\") < 0 ? e2 : e2.replace(f, "$1");
  }
  function k(e2) {
    return e2.indexOf("\\") < 0 && e2.indexOf("&") < 0 ? e2 : e2.replace(p2, function(e3, t2, n2) {
      return t2 || x(e3, n2);
    });
  }
  var $ = /[&<>"]/, A7 = /[&<>"]/g, j7 = {
    "&": "&amp;",
    "<": "&lt;",
    ">": "&gt;",
    '"': "&quot;"
  };
  function M7(e2) {
    return j7[e2];
  }
  function N7(e2) {
    return $.test(e2) ? e2.replace(A7, M7) : e2;
  }
  var P7 = /[.?*+^$[\]\\(){}|-]/g;
  function F7(e2) {
    return e2.replace(P7, "\\$&");
  }
  function I7(e2) {
    switch (e2) {
      case 9:
      case 32:
        return true;
    }
    return false;
  }
  function L7(e2) {
    if (e2 >= 8192 && e2 <= 8202) return true;
    switch (e2) {
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 32:
      case 160:
      case 5760:
      case 8239:
      case 8287:
      case 12288:
        return true;
    }
    return false;
  }
  var R7 = require_regex$4();
  function z7(e2) {
    return R7.test(e2);
  }
  function B7(e2) {
    switch (e2) {
      case 33:
      case 34:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:
      case 41:
      case 42:
      case 43:
      case 44:
      case 45:
      case 46:
      case 47:
      case 58:
      case 59:
      case 60:
      case 61:
      case 62:
      case 63:
      case 64:
      case 91:
      case 92:
      case 93:
      case 94:
      case 95:
      case 96:
      case 123:
      case 124:
      case 125:
      case 126:
        return true;
      default:
        return false;
    }
  }
  function V7(e2) {
    return e2 = e2.trim().replace(/\s+/g, " "), e2.toLowerCase().toUpperCase();
  }
  e.lib = {}, e.lib.mdurl = require_mdurl(), e.lib.ucmicro = require_uc(), e.assign = o, e.isString = n, e.has = i, e.unescapeMd = w, e.unescapeAll = k, e.isValidEntityCode = l, e.fromCodePoint = d, e.escapeHtml = N7, e.arrayReplaceAt = s, e.isSpace = I7, e.isWhiteSpace = L7, e.isMdAsciiPunct = B7, e.isPunctChar = z7, e.escapeRE = F7, e.normalizeReference = V7;
}));
var require_parse_link_label = __commonJSMin(((e, t) => {
  t.exports = function(e2, t2, n) {
    var r, i, o, s, l = -1, d = e2.posMax, f = e2.pos;
    for (e2.pos = t2 + 1, r = 1; e2.pos < d; ) {
      if (o = e2.src.charCodeAt(e2.pos), o === 93 && (r--, r === 0)) {
        i = true;
        break;
      }
      if (s = e2.pos, e2.md.inline.skipToken(e2), o === 91) {
        if (s === e2.pos - 1) r++;
        else if (n) return e2.pos = f, -1;
      }
    }
    return i && (l = e2.pos), e2.pos = f, l;
  };
}));
var require_parse_link_destination = __commonJSMin(((e, t) => {
  var n = require_utils().unescapeAll;
  t.exports = function(e2, t2, r) {
    var i, o, s = t2, l = {
      ok: false,
      pos: 0,
      lines: 0,
      str: ""
    };
    if (e2.charCodeAt(s) === 60) {
      for (s++; s < r; ) {
        if (i = e2.charCodeAt(s), i === 10 || i === 60) return l;
        if (i === 62) return l.pos = s + 1, l.str = n(e2.slice(t2 + 1, s)), l.ok = true, l;
        if (i === 92 && s + 1 < r) {
          s += 2;
          continue;
        }
        s++;
      }
      return l;
    }
    for (o = 0; s < r && (i = e2.charCodeAt(s), !(i === 32 || i < 32 || i === 127)); ) {
      if (i === 92 && s + 1 < r) {
        if (e2.charCodeAt(s + 1) === 32) break;
        s += 2;
        continue;
      }
      if (i === 40 && (o++, o > 32)) return l;
      if (i === 41) {
        if (o === 0) break;
        o--;
      }
      s++;
    }
    return t2 === s || o !== 0 ? l : (l.str = n(e2.slice(t2, s)), l.pos = s, l.ok = true, l);
  };
}));
var require_parse_link_title = __commonJSMin(((e, t) => {
  var n = require_utils().unescapeAll;
  t.exports = function(e2, t2, r) {
    var i, o, s = 0, l = t2, d = {
      ok: false,
      pos: 0,
      lines: 0,
      str: ""
    };
    if (l >= r || (o = e2.charCodeAt(l), o !== 34 && o !== 39 && o !== 40)) return d;
    for (l++, o === 40 && (o = 41); l < r; ) {
      if (i = e2.charCodeAt(l), i === o) return d.pos = l + 1, d.lines = s, d.str = n(e2.slice(t2 + 1, l)), d.ok = true, d;
      if (i === 40 && o === 41) return d;
      i === 10 ? s++ : i === 92 && l + 1 < r && (l++, e2.charCodeAt(l) === 10 && s++), l++;
    }
    return d;
  };
}));
var require_helpers = __commonJSMin(((e) => {
  e.parseLinkLabel = require_parse_link_label(), e.parseLinkDestination = require_parse_link_destination(), e.parseLinkTitle = require_parse_link_title();
}));
var require_renderer = __commonJSMin(((e, t) => {
  var n = require_utils().assign, r = require_utils().unescapeAll, i = require_utils().escapeHtml, o = {};
  o.code_inline = function(e2, t2, n2, r2, o3) {
    var s2 = e2[t2];
    return "<code" + o3.renderAttrs(s2) + ">" + i(s2.content) + "</code>";
  }, o.code_block = function(e2, t2, n2, r2, o3) {
    var s2 = e2[t2];
    return "<pre" + o3.renderAttrs(s2) + "><code>" + i(e2[t2].content) + "</code></pre>\n";
  }, o.fence = function(e2, t2, n2, o3, s2) {
    var l = e2[t2], d = l.info ? r(l.info).trim() : "", f = "", p2 = "", _, y, x, w, k;
    return d && (x = d.split(/(\s+)/g), f = x[0], p2 = x.slice(2).join("")), _ = n2.highlight && n2.highlight(l.content, f, p2) || i(l.content), _.indexOf("<pre") === 0 ? _ + "\n" : d ? (y = l.attrIndex("class"), w = l.attrs ? l.attrs.slice() : [], y < 0 ? w.push(["class", n2.langPrefix + f]) : (w[y] = w[y].slice(), w[y][1] += " " + n2.langPrefix + f), k = { attrs: w }, "<pre><code" + s2.renderAttrs(k) + ">" + _ + "</code></pre>\n") : "<pre><code" + s2.renderAttrs(l) + ">" + _ + "</code></pre>\n";
  }, o.image = function(e2, t2, n2, r2, i2) {
    var o3 = e2[t2];
    return o3.attrs[o3.attrIndex("alt")][1] = i2.renderInlineAsText(o3.children, n2, r2), i2.renderToken(e2, t2, n2);
  }, o.hardbreak = function(e2, t2, n2) {
    return n2.xhtmlOut ? "<br />\n" : "<br>\n";
  }, o.softbreak = function(e2, t2, n2) {
    return n2.breaks ? n2.xhtmlOut ? "<br />\n" : "<br>\n" : "\n";
  }, o.text = function(e2, t2) {
    return i(e2[t2].content);
  }, o.html_block = function(e2, t2) {
    return e2[t2].content;
  }, o.html_inline = function(e2, t2) {
    return e2[t2].content;
  };
  function s() {
    this.rules = n({}, o);
  }
  s.prototype.renderAttrs = function(e2) {
    var t2, n2, r2;
    if (!e2.attrs) return "";
    for (r2 = "", t2 = 0, n2 = e2.attrs.length; t2 < n2; t2++) r2 += " " + i(e2.attrs[t2][0]) + '="' + i(e2.attrs[t2][1]) + '"';
    return r2;
  }, s.prototype.renderToken = function(e2, t2, n2) {
    var r2, i2 = "", o3 = false, s2 = e2[t2];
    return s2.hidden ? "" : (s2.block && s2.nesting !== -1 && t2 && e2[t2 - 1].hidden && (i2 += "\n"), i2 += (s2.nesting === -1 ? "</" : "<") + s2.tag, i2 += this.renderAttrs(s2), s2.nesting === 0 && n2.xhtmlOut && (i2 += " /"), s2.block && (o3 = true, s2.nesting === 1 && t2 + 1 < e2.length && (r2 = e2[t2 + 1], (r2.type === "inline" || r2.hidden || r2.nesting === -1 && r2.tag === s2.tag) && (o3 = false))), i2 += o3 ? ">\n" : ">", i2);
  }, s.prototype.renderInline = function(e2, t2, n2) {
    for (var r2, i2 = "", o3 = this.rules, s2 = 0, l = e2.length; s2 < l; s2++) r2 = e2[s2].type, o3[r2] === void 0 ? i2 += this.renderToken(e2, s2, t2) : i2 += o3[r2](e2, s2, t2, n2, this);
    return i2;
  }, s.prototype.renderInlineAsText = function(e2, t2, n2) {
    for (var r2 = "", i2 = 0, o3 = e2.length; i2 < o3; i2++) e2[i2].type === "text" ? r2 += e2[i2].content : e2[i2].type === "image" ? r2 += this.renderInlineAsText(e2[i2].children, t2, n2) : e2[i2].type === "softbreak" && (r2 += "\n");
    return r2;
  }, s.prototype.render = function(e2, t2, n2) {
    var r2, i2, o3, s2 = "", l = this.rules;
    for (r2 = 0, i2 = e2.length; r2 < i2; r2++) o3 = e2[r2].type, o3 === "inline" ? s2 += this.renderInline(e2[r2].children, t2, n2) : l[o3] === void 0 ? s2 += this.renderToken(e2, r2, t2, n2) : s2 += l[o3](e2, r2, t2, n2, this);
    return s2;
  }, t.exports = s;
}));
var require_ruler = __commonJSMin(((e, t) => {
  function n() {
    this.__rules__ = [], this.__cache__ = null;
  }
  n.prototype.__find__ = function(e2) {
    for (var t2 = 0; t2 < this.__rules__.length; t2++) if (this.__rules__[t2].name === e2) return t2;
    return -1;
  }, n.prototype.__compile__ = function() {
    var e2 = this, t2 = [""];
    e2.__rules__.forEach(function(e3) {
      e3.enabled && e3.alt.forEach(function(e4) {
        t2.indexOf(e4) < 0 && t2.push(e4);
      });
    }), e2.__cache__ = {}, t2.forEach(function(t3) {
      e2.__cache__[t3] = [], e2.__rules__.forEach(function(n2) {
        n2.enabled && (t3 && n2.alt.indexOf(t3) < 0 || e2.__cache__[t3].push(n2.fn));
      });
    });
  }, n.prototype.at = function(e2, t2, n2) {
    var r = this.__find__(e2), i = n2 || {};
    if (r === -1) throw Error("Parser rule not found: " + e2);
    this.__rules__[r].fn = t2, this.__rules__[r].alt = i.alt || [], this.__cache__ = null;
  }, n.prototype.before = function(e2, t2, n2, r) {
    var i = this.__find__(e2), o = r || {};
    if (i === -1) throw Error("Parser rule not found: " + e2);
    this.__rules__.splice(i, 0, {
      name: t2,
      enabled: true,
      fn: n2,
      alt: o.alt || []
    }), this.__cache__ = null;
  }, n.prototype.after = function(e2, t2, n2, r) {
    var i = this.__find__(e2), o = r || {};
    if (i === -1) throw Error("Parser rule not found: " + e2);
    this.__rules__.splice(i + 1, 0, {
      name: t2,
      enabled: true,
      fn: n2,
      alt: o.alt || []
    }), this.__cache__ = null;
  }, n.prototype.push = function(e2, t2, n2) {
    var r = n2 || {};
    this.__rules__.push({
      name: e2,
      enabled: true,
      fn: t2,
      alt: r.alt || []
    }), this.__cache__ = null;
  }, n.prototype.enable = function(e2, t2) {
    Array.isArray(e2) || (e2 = [e2]);
    var n2 = [];
    return e2.forEach(function(e3) {
      var r = this.__find__(e3);
      if (r < 0) {
        if (t2) return;
        throw Error("Rules manager: invalid rule name " + e3);
      }
      this.__rules__[r].enabled = true, n2.push(e3);
    }, this), this.__cache__ = null, n2;
  }, n.prototype.enableOnly = function(e2, t2) {
    Array.isArray(e2) || (e2 = [e2]), this.__rules__.forEach(function(e3) {
      e3.enabled = false;
    }), this.enable(e2, t2);
  }, n.prototype.disable = function(e2, t2) {
    Array.isArray(e2) || (e2 = [e2]);
    var n2 = [];
    return e2.forEach(function(e3) {
      var r = this.__find__(e3);
      if (r < 0) {
        if (t2) return;
        throw Error("Rules manager: invalid rule name " + e3);
      }
      this.__rules__[r].enabled = false, n2.push(e3);
    }, this), this.__cache__ = null, n2;
  }, n.prototype.getRules = function(e2) {
    return this.__cache__ === null && this.__compile__(), this.__cache__[e2] || [];
  }, t.exports = n;
}));
var require_normalize = __commonJSMin(((e, t) => {
  var n = /\r\n?|\n/g, r = /\0/g;
  t.exports = function(e2) {
    var t2 = e2.src.replace(n, "\n");
    t2 = t2.replace(r, "�"), e2.src = t2;
  };
}));
var require_block = __commonJSMin(((e, t) => {
  t.exports = function(e2) {
    var t2;
    e2.inlineMode ? (t2 = new e2.Token("inline", "", 0), t2.content = e2.src, t2.map = [0, 1], t2.children = [], e2.tokens.push(t2)) : e2.md.block.parse(e2.src, e2.md, e2.env, e2.tokens);
  };
}));
var require_inline = __commonJSMin(((e, t) => {
  t.exports = function(e2) {
    var t2 = e2.tokens, n, r, i;
    for (r = 0, i = t2.length; r < i; r++) n = t2[r], n.type === "inline" && e2.md.inline.parse(n.content, e2.md, e2.env, n.children);
  };
}));
var require_linkify$1 = __commonJSMin(((e, t) => {
  var n = require_utils().arrayReplaceAt;
  function r(e2) {
    return /^<a[>\s]/i.test(e2);
  }
  function i(e2) {
    return /^<\/a\s*>/i.test(e2);
  }
  t.exports = function(e2) {
    var t2, o, s, l, d, f, p2, _, y, x, w, k, $, A7, j7, M7, N7 = e2.tokens, P7;
    if (e2.md.options.linkify) {
      for (o = 0, s = N7.length; o < s; o++) if (!(N7[o].type !== "inline" || !e2.md.linkify.pretest(N7[o].content))) for (l = N7[o].children, $ = 0, t2 = l.length - 1; t2 >= 0; t2--) {
        if (f = l[t2], f.type === "link_close") {
          for (t2--; l[t2].level !== f.level && l[t2].type !== "link_open"; ) t2--;
          continue;
        }
        if (f.type === "html_inline" && (r(f.content) && $ > 0 && $--, i(f.content) && $++), !($ > 0) && f.type === "text" && e2.md.linkify.test(f.content)) {
          for (y = f.content, P7 = e2.md.linkify.match(y), p2 = [], k = f.level, w = 0, P7.length > 0 && P7[0].index === 0 && t2 > 0 && l[t2 - 1].type === "text_special" && (P7 = P7.slice(1)), _ = 0; _ < P7.length; _++) A7 = P7[_].url, j7 = e2.md.normalizeLink(A7), e2.md.validateLink(j7) && (M7 = P7[_].text, M7 = P7[_].schema ? P7[_].schema === "mailto:" && !/^mailto:/i.test(M7) ? e2.md.normalizeLinkText("mailto:" + M7).replace(/^mailto:/, "") : e2.md.normalizeLinkText(M7) : e2.md.normalizeLinkText("http://" + M7).replace(/^http:\/\//, ""), x = P7[_].index, x > w && (d = new e2.Token("text", "", 0), d.content = y.slice(w, x), d.level = k, p2.push(d)), d = new e2.Token("link_open", "a", 1), d.attrs = [["href", j7]], d.level = k++, d.markup = "linkify", d.info = "auto", p2.push(d), d = new e2.Token("text", "", 0), d.content = M7, d.level = k, p2.push(d), d = new e2.Token("link_close", "a", -1), d.level = --k, d.markup = "linkify", d.info = "auto", p2.push(d), w = P7[_].lastIndex);
          w < y.length && (d = new e2.Token("text", "", 0), d.content = y.slice(w), d.level = k, p2.push(d)), N7[o].children = l = n(l, t2, p2);
        }
      }
    }
  };
}));
var require_replacements = __commonJSMin(((e, t) => {
  var n = /\+-|\.\.|\?\?\?\?|!!!!|,,|--/, r = /\((c|tm|r)\)/i, i = /\((c|tm|r)\)/gi, o = {
    c: "©",
    r: "®",
    tm: "™"
  };
  function s(e2, t2) {
    return o[t2.toLowerCase()];
  }
  function l(e2) {
    var t2, n2, r2 = 0;
    for (t2 = e2.length - 1; t2 >= 0; t2--) n2 = e2[t2], n2.type === "text" && !r2 && (n2.content = n2.content.replace(i, s)), n2.type === "link_open" && n2.info === "auto" && r2--, n2.type === "link_close" && n2.info === "auto" && r2++;
  }
  function d(e2) {
    var t2, r2, i2 = 0;
    for (t2 = e2.length - 1; t2 >= 0; t2--) r2 = e2[t2], r2.type === "text" && !i2 && n.test(r2.content) && (r2.content = r2.content.replace(/\+-/g, "±").replace(/\.{2,}/g, "…").replace(/([?!])…/g, "$1..").replace(/([?!]){4,}/g, "$1$1$1").replace(/,{2,}/g, ",").replace(/(^|[^-])---(?=[^-]|$)/gm, "$1—").replace(/(^|\s)--(?=\s|$)/gm, "$1–").replace(/(^|[^-\s])--(?=[^-\s]|$)/gm, "$1–")), r2.type === "link_open" && r2.info === "auto" && i2--, r2.type === "link_close" && r2.info === "auto" && i2++;
  }
  t.exports = function(e2) {
    var t2;
    if (e2.md.options.typographer) for (t2 = e2.tokens.length - 1; t2 >= 0; t2--) e2.tokens[t2].type === "inline" && (r.test(e2.tokens[t2].content) && l(e2.tokens[t2].children), n.test(e2.tokens[t2].content) && d(e2.tokens[t2].children));
  };
}));
var require_smartquotes = __commonJSMin(((e, t) => {
  var n = require_utils().isWhiteSpace, r = require_utils().isPunctChar, i = require_utils().isMdAsciiPunct, o = /['"]/, s = /['"]/g, l = "’";
  function d(e2, t2, n2) {
    return e2.slice(0, t2) + n2 + e2.slice(t2 + 1);
  }
  function f(e2, t2) {
    var o3, f2, p2, _, y, x, w, k, $, A7, j7, M7, N7, P7, F7, I7, L7, R7, z7 = [], B7, V7;
    for (o3 = 0; o3 < e2.length; o3++) {
      for (f2 = e2[o3], w = e2[o3].level, L7 = z7.length - 1; L7 >= 0 && !(z7[L7].level <= w); L7--) ;
      if (z7.length = L7 + 1, f2.type === "text") {
        p2 = f2.content, y = 0, x = p2.length;
        OUTER: for (; y < x && (s.lastIndex = y, _ = s.exec(p2), _); ) {
          if (F7 = I7 = true, y = _.index + 1, R7 = _[0] === "'", $ = 32, _.index - 1 >= 0) $ = p2.charCodeAt(_.index - 1);
          else for (L7 = o3 - 1; L7 >= 0 && !(e2[L7].type === "softbreak" || e2[L7].type === "hardbreak"); L7--) if (e2[L7].content) {
            $ = e2[L7].content.charCodeAt(e2[L7].content.length - 1);
            break;
          }
          if (A7 = 32, y < x) A7 = p2.charCodeAt(y);
          else for (L7 = o3 + 1; L7 < e2.length && !(e2[L7].type === "softbreak" || e2[L7].type === "hardbreak"); L7++) if (e2[L7].content) {
            A7 = e2[L7].content.charCodeAt(0);
            break;
          }
          if (j7 = i($) || r(String.fromCharCode($)), M7 = i(A7) || r(String.fromCharCode(A7)), N7 = n($), P7 = n(A7), P7 ? F7 = false : M7 && (N7 || j7 || (F7 = false)), N7 ? I7 = false : j7 && (P7 || M7 || (I7 = false)), A7 === 34 && _[0] === '"' && $ >= 48 && $ <= 57 && (I7 = F7 = false), F7 && I7 && (F7 = j7, I7 = M7), !F7 && !I7) {
            R7 && (f2.content = d(f2.content, _.index, l));
            continue;
          }
          if (I7) {
            for (L7 = z7.length - 1; L7 >= 0 && (k = z7[L7], !(z7[L7].level < w)); L7--) if (k.single === R7 && z7[L7].level === w) {
              k = z7[L7], R7 ? (B7 = t2.md.options.quotes[2], V7 = t2.md.options.quotes[3]) : (B7 = t2.md.options.quotes[0], V7 = t2.md.options.quotes[1]), f2.content = d(f2.content, _.index, V7), e2[k.token].content = d(e2[k.token].content, k.pos, B7), y += V7.length - 1, k.token === o3 && (y += B7.length - 1), p2 = f2.content, x = p2.length, z7.length = L7;
              continue OUTER;
            }
          }
          F7 ? z7.push({
            token: o3,
            pos: _.index,
            single: R7,
            level: w
          }) : I7 && R7 && (f2.content = d(f2.content, _.index, l));
        }
      }
    }
  }
  t.exports = function(e2) {
    var t2;
    if (e2.md.options.typographer) for (t2 = e2.tokens.length - 1; t2 >= 0; t2--) e2.tokens[t2].type !== "inline" || !o.test(e2.tokens[t2].content) || f(e2.tokens[t2].children, e2);
  };
}));
var require_text_join = __commonJSMin(((e, t) => {
  t.exports = function(e2) {
    var t2, n, r, i, o, s, l = e2.tokens;
    for (t2 = 0, n = l.length; t2 < n; t2++) if (l[t2].type === "inline") {
      for (r = l[t2].children, o = r.length, i = 0; i < o; i++) r[i].type === "text_special" && (r[i].type = "text");
      for (i = s = 0; i < o; i++) r[i].type === "text" && i + 1 < o && r[i + 1].type === "text" ? r[i + 1].content = r[i].content + r[i + 1].content : (i !== s && (r[s] = r[i]), s++);
      i !== s && (r.length = s);
    }
  };
}));
var require_token = __commonJSMin(((e, t) => {
  function n(e2, t2, n2) {
    this.type = e2, this.tag = t2, this.attrs = null, this.map = null, this.nesting = n2, this.level = 0, this.children = null, this.content = "", this.markup = "", this.info = "", this.meta = null, this.block = false, this.hidden = false;
  }
  n.prototype.attrIndex = function(e2) {
    var t2, n2, r;
    if (!this.attrs) return -1;
    for (t2 = this.attrs, n2 = 0, r = t2.length; n2 < r; n2++) if (t2[n2][0] === e2) return n2;
    return -1;
  }, n.prototype.attrPush = function(e2) {
    this.attrs ? this.attrs.push(e2) : this.attrs = [e2];
  }, n.prototype.attrSet = function(e2, t2) {
    var n2 = this.attrIndex(e2), r = [e2, t2];
    n2 < 0 ? this.attrPush(r) : this.attrs[n2] = r;
  }, n.prototype.attrGet = function(e2) {
    var t2 = this.attrIndex(e2), n2 = null;
    return t2 >= 0 && (n2 = this.attrs[t2][1]), n2;
  }, n.prototype.attrJoin = function(e2, t2) {
    var n2 = this.attrIndex(e2);
    n2 < 0 ? this.attrPush([e2, t2]) : this.attrs[n2][1] = this.attrs[n2][1] + " " + t2;
  }, t.exports = n;
}));
var require_state_core = __commonJSMin(((e, t) => {
  var n = require_token();
  function r(e2, t2, n2) {
    this.src = e2, this.env = n2, this.tokens = [], this.inlineMode = false, this.md = t2;
  }
  r.prototype.Token = n, t.exports = r;
}));
var require_parser_core = __commonJSMin(((e, t) => {
  var n = require_ruler(), r = [
    ["normalize", require_normalize()],
    ["block", require_block()],
    ["inline", require_inline()],
    ["linkify", require_linkify$1()],
    ["replacements", require_replacements()],
    ["smartquotes", require_smartquotes()],
    ["text_join", require_text_join()]
  ];
  function i() {
    this.ruler = new n();
    for (var e2 = 0; e2 < r.length; e2++) this.ruler.push(r[e2][0], r[e2][1]);
  }
  i.prototype.process = function(e2) {
    var t2, n2, r2 = this.ruler.getRules("");
    for (t2 = 0, n2 = r2.length; t2 < n2; t2++) r2[t2](e2);
  }, i.prototype.State = require_state_core(), t.exports = i;
}));
var require_table = __commonJSMin(((e, t) => {
  var n = require_utils().isSpace;
  function r(e2, t2) {
    var n2 = e2.bMarks[t2] + e2.tShift[t2], r2 = e2.eMarks[t2];
    return e2.src.slice(n2, r2);
  }
  function i(e2) {
    var t2 = [], n2 = 0, r2 = e2.length, i2, o = false, s = 0, l = "";
    for (i2 = e2.charCodeAt(n2); n2 < r2; ) i2 === 124 && (o ? (l += e2.substring(s, n2 - 1), s = n2) : (t2.push(l + e2.substring(s, n2)), l = "", s = n2 + 1)), o = i2 === 92, n2++, i2 = e2.charCodeAt(n2);
    return t2.push(l + e2.substring(s)), t2;
  }
  t.exports = function(e2, t2, o, s) {
    var l, d, f, p2, _, y, x, w, k, $, A7, j7, M7, N7, P7, F7, I7, L7;
    if (t2 + 2 > o || (y = t2 + 1, e2.sCount[y] < e2.blkIndent) || e2.sCount[y] - e2.blkIndent >= 4 || (f = e2.bMarks[y] + e2.tShift[y], f >= e2.eMarks[y]) || (I7 = e2.src.charCodeAt(f++), I7 !== 124 && I7 !== 45 && I7 !== 58) || f >= e2.eMarks[y] || (L7 = e2.src.charCodeAt(f++), L7 !== 124 && L7 !== 45 && L7 !== 58 && !n(L7)) || I7 === 45 && n(L7)) return false;
    for (; f < e2.eMarks[y]; ) {
      if (l = e2.src.charCodeAt(f), l !== 124 && l !== 45 && l !== 58 && !n(l)) return false;
      f++;
    }
    for (d = r(e2, t2 + 1), x = d.split("|"), $ = [], p2 = 0; p2 < x.length; p2++) {
      if (A7 = x[p2].trim(), !A7) {
        if (p2 === 0 || p2 === x.length - 1) continue;
        return false;
      }
      if (!/^:?-+:?$/.test(A7)) return false;
      A7.charCodeAt(A7.length - 1) === 58 ? $.push(A7.charCodeAt(0) === 58 ? "center" : "right") : A7.charCodeAt(0) === 58 ? $.push("left") : $.push("");
    }
    if (d = r(e2, t2).trim(), d.indexOf("|") === -1 || e2.sCount[t2] - e2.blkIndent >= 4 || (x = i(d), x.length && x[0] === "" && x.shift(), x.length && x[x.length - 1] === "" && x.pop(), w = x.length, w === 0 || w !== $.length)) return false;
    if (s) return true;
    for (N7 = e2.parentType, e2.parentType = "table", F7 = e2.md.block.ruler.getRules("blockquote"), k = e2.push("table_open", "table", 1), k.map = j7 = [t2, 0], k = e2.push("thead_open", "thead", 1), k.map = [t2, t2 + 1], k = e2.push("tr_open", "tr", 1), k.map = [t2, t2 + 1], p2 = 0; p2 < x.length; p2++) k = e2.push("th_open", "th", 1), $[p2] && (k.attrs = [["style", "text-align:" + $[p2]]]), k = e2.push("inline", "", 0), k.content = x[p2].trim(), k.children = [], k = e2.push("th_close", "th", -1);
    for (k = e2.push("tr_close", "tr", -1), k = e2.push("thead_close", "thead", -1), y = t2 + 2; y < o && !(e2.sCount[y] < e2.blkIndent); y++) {
      for (P7 = false, p2 = 0, _ = F7.length; p2 < _; p2++) if (F7[p2](e2, y, o, true)) {
        P7 = true;
        break;
      }
      if (P7 || (d = r(e2, y).trim(), !d) || e2.sCount[y] - e2.blkIndent >= 4) break;
      for (x = i(d), x.length && x[0] === "" && x.shift(), x.length && x[x.length - 1] === "" && x.pop(), y === t2 + 2 && (k = e2.push("tbody_open", "tbody", 1), k.map = M7 = [t2 + 2, 0]), k = e2.push("tr_open", "tr", 1), k.map = [y, y + 1], p2 = 0; p2 < w; p2++) k = e2.push("td_open", "td", 1), $[p2] && (k.attrs = [["style", "text-align:" + $[p2]]]), k = e2.push("inline", "", 0), k.content = x[p2] ? x[p2].trim() : "", k.children = [], k = e2.push("td_close", "td", -1);
      k = e2.push("tr_close", "tr", -1);
    }
    return M7 && (k = e2.push("tbody_close", "tbody", -1), M7[1] = y), k = e2.push("table_close", "table", -1), j7[1] = y, e2.parentType = N7, e2.line = y, true;
  };
}));
var require_code = __commonJSMin(((e, t) => {
  t.exports = function(e2, t2, n) {
    var r, i, o;
    if (e2.sCount[t2] - e2.blkIndent < 4) return false;
    for (i = r = t2 + 1; r < n; ) {
      if (e2.isEmpty(r)) {
        r++;
        continue;
      }
      if (e2.sCount[r] - e2.blkIndent >= 4) {
        r++, i = r;
        continue;
      }
      break;
    }
    return e2.line = i, o = e2.push("code_block", "code", 0), o.content = e2.getLines(t2, i, 4 + e2.blkIndent, false) + "\n", o.map = [t2, e2.line], true;
  };
}));
var require_fence = __commonJSMin(((e, t) => {
  t.exports = function(e2, t2, n, r) {
    var i, o, s, l, d, f, p2, _ = false, y = e2.bMarks[t2] + e2.tShift[t2], x = e2.eMarks[t2];
    if (e2.sCount[t2] - e2.blkIndent >= 4 || y + 3 > x || (i = e2.src.charCodeAt(y), i !== 126 && i !== 96) || (d = y, y = e2.skipChars(y, i), o = y - d, o < 3) || (p2 = e2.src.slice(d, y), s = e2.src.slice(y, x), i === 96 && s.indexOf(String.fromCharCode(i)) >= 0)) return false;
    if (r) return true;
    for (l = t2; l++, !(l >= n || (y = d = e2.bMarks[l] + e2.tShift[l], x = e2.eMarks[l], y < x && e2.sCount[l] < e2.blkIndent)); ) if (e2.src.charCodeAt(y) === i && !(e2.sCount[l] - e2.blkIndent >= 4) && (y = e2.skipChars(y, i), !(y - d < o) && (y = e2.skipSpaces(y), !(y < x)))) {
      _ = true;
      break;
    }
    return o = e2.sCount[t2], e2.line = l + (_ ? 1 : 0), f = e2.push("fence", "code", 0), f.info = s, f.content = e2.getLines(t2 + 1, l, o, true), f.markup = p2, f.map = [t2, e2.line], true;
  };
}));
var require_blockquote = __commonJSMin(((e, t) => {
  var n = require_utils().isSpace;
  t.exports = function(e2, t2, r, i) {
    var o, s, l, d, f, p2, _, y, x, w, k, $, A7, j7, M7, N7, P7, F7, I7, L7, R7 = e2.lineMax, z7 = e2.bMarks[t2] + e2.tShift[t2], B7 = e2.eMarks[t2];
    if (e2.sCount[t2] - e2.blkIndent >= 4 || e2.src.charCodeAt(z7) !== 62) return false;
    if (i) return true;
    for (w = [], k = [], j7 = [], M7 = [], F7 = e2.md.block.ruler.getRules("blockquote"), A7 = e2.parentType, e2.parentType = "blockquote", y = t2; y < r && (L7 = e2.sCount[y] < e2.blkIndent, z7 = e2.bMarks[y] + e2.tShift[y], B7 = e2.eMarks[y], !(z7 >= B7)); y++) {
      if (e2.src.charCodeAt(z7++) === 62 && !L7) {
        for (d = e2.sCount[y] + 1, e2.src.charCodeAt(z7) === 32 ? (z7++, d++, o = false, N7 = true) : e2.src.charCodeAt(z7) === 9 ? (N7 = true, (e2.bsCount[y] + d) % 4 == 3 ? (z7++, d++, o = false) : o = true) : N7 = false, x = d, w.push(e2.bMarks[y]), e2.bMarks[y] = z7; z7 < B7 && (s = e2.src.charCodeAt(z7), n(s)); ) s === 9 ? x += 4 - (x + e2.bsCount[y] + (o ? 1 : 0)) % 4 : x++, z7++;
        p2 = z7 >= B7, k.push(e2.bsCount[y]), e2.bsCount[y] = e2.sCount[y] + 1 + (N7 ? 1 : 0), j7.push(e2.sCount[y]), e2.sCount[y] = x - d, M7.push(e2.tShift[y]), e2.tShift[y] = z7 - e2.bMarks[y];
        continue;
      }
      if (p2) break;
      for (P7 = false, l = 0, f = F7.length; l < f; l++) if (F7[l](e2, y, r, true)) {
        P7 = true;
        break;
      }
      if (P7) {
        e2.lineMax = y, e2.blkIndent !== 0 && (w.push(e2.bMarks[y]), k.push(e2.bsCount[y]), M7.push(e2.tShift[y]), j7.push(e2.sCount[y]), e2.sCount[y] -= e2.blkIndent);
        break;
      }
      w.push(e2.bMarks[y]), k.push(e2.bsCount[y]), M7.push(e2.tShift[y]), j7.push(e2.sCount[y]), e2.sCount[y] = -1;
    }
    for ($ = e2.blkIndent, e2.blkIndent = 0, I7 = e2.push("blockquote_open", "blockquote", 1), I7.markup = ">", I7.map = _ = [t2, 0], e2.md.block.tokenize(e2, t2, y), I7 = e2.push("blockquote_close", "blockquote", -1), I7.markup = ">", e2.lineMax = R7, e2.parentType = A7, _[1] = e2.line, l = 0; l < M7.length; l++) e2.bMarks[l + t2] = w[l], e2.tShift[l + t2] = M7[l], e2.sCount[l + t2] = j7[l], e2.bsCount[l + t2] = k[l];
    return e2.blkIndent = $, true;
  };
}));
var require_hr = __commonJSMin(((e, t) => {
  var n = require_utils().isSpace;
  t.exports = function(e2, t2, r, i) {
    var o, s, l, d, f = e2.bMarks[t2] + e2.tShift[t2], p2 = e2.eMarks[t2];
    if (e2.sCount[t2] - e2.blkIndent >= 4 || (o = e2.src.charCodeAt(f++), o !== 42 && o !== 45 && o !== 95)) return false;
    for (s = 1; f < p2; ) {
      if (l = e2.src.charCodeAt(f++), l !== o && !n(l)) return false;
      l === o && s++;
    }
    return s < 3 ? false : i ? true : (e2.line = t2 + 1, d = e2.push("hr", "hr", 0), d.map = [t2, e2.line], d.markup = Array(s + 1).join(String.fromCharCode(o)), true);
  };
}));
var require_list = __commonJSMin(((e, t) => {
  var n = require_utils().isSpace;
  function r(e2, t2) {
    var r2, i2 = e2.bMarks[t2] + e2.tShift[t2], o3 = e2.eMarks[t2], s;
    return r2 = e2.src.charCodeAt(i2++), r2 !== 42 && r2 !== 45 && r2 !== 43 || i2 < o3 && (s = e2.src.charCodeAt(i2), !n(s)) ? -1 : i2;
  }
  function i(e2, t2) {
    var r2, i2 = e2.bMarks[t2] + e2.tShift[t2], o3 = i2, s = e2.eMarks[t2];
    if (o3 + 1 >= s || (r2 = e2.src.charCodeAt(o3++), r2 < 48 || r2 > 57)) return -1;
    for (; ; ) {
      if (o3 >= s) return -1;
      if (r2 = e2.src.charCodeAt(o3++), r2 >= 48 && r2 <= 57) {
        if (o3 - i2 >= 10) return -1;
        continue;
      }
      if (r2 === 41 || r2 === 46) break;
      return -1;
    }
    return o3 < s && (r2 = e2.src.charCodeAt(o3), !n(r2)) ? -1 : o3;
  }
  function o(e2, t2) {
    var n2, r2, i2 = e2.level + 2;
    for (n2 = t2 + 2, r2 = e2.tokens.length - 2; n2 < r2; n2++) e2.tokens[n2].level === i2 && e2.tokens[n2].type === "paragraph_open" && (e2.tokens[n2 + 2].hidden = true, e2.tokens[n2].hidden = true, n2 += 2);
  }
  t.exports = function(e2, t2, n2, s) {
    var l, d, f, p2, _, y, x, w, k, $, A7, j7, M7, N7, P7, F7, I7, L7, R7, z7, B7, V7, H7, U7, W7, G7, K7, q7 = t2, J7 = false, Y7 = true;
    if (e2.sCount[q7] - e2.blkIndent >= 4 || e2.listIndent >= 0 && e2.sCount[q7] - e2.listIndent >= 4 && e2.sCount[q7] < e2.blkIndent) return false;
    if (s && e2.parentType === "paragraph" && e2.sCount[q7] >= e2.blkIndent && (J7 = true), (V7 = i(e2, q7)) >= 0) {
      if (x = true, U7 = e2.bMarks[q7] + e2.tShift[q7], M7 = Number(e2.src.slice(U7, V7 - 1)), J7 && M7 !== 1) return false;
    } else if ((V7 = r(e2, q7)) >= 0) x = false;
    else return false;
    if (J7 && e2.skipSpaces(V7) >= e2.eMarks[q7]) return false;
    if (s) return true;
    for (j7 = e2.src.charCodeAt(V7 - 1), A7 = e2.tokens.length, x ? (K7 = e2.push("ordered_list_open", "ol", 1), M7 !== 1 && (K7.attrs = [["start", M7]])) : K7 = e2.push("bullet_list_open", "ul", 1), K7.map = $ = [q7, 0], K7.markup = String.fromCharCode(j7), H7 = false, G7 = e2.md.block.ruler.getRules("list"), I7 = e2.parentType, e2.parentType = "list"; q7 < n2; ) {
      for (B7 = V7, N7 = e2.eMarks[q7], y = P7 = e2.sCount[q7] + V7 - (e2.bMarks[q7] + e2.tShift[q7]); B7 < N7; ) {
        if (l = e2.src.charCodeAt(B7), l === 9) P7 += 4 - (P7 + e2.bsCount[q7]) % 4;
        else if (l === 32) P7++;
        else break;
        B7++;
      }
      if (d = B7, _ = d >= N7 ? 1 : P7 - y, _ > 4 && (_ = 1), p2 = y + _, K7 = e2.push("list_item_open", "li", 1), K7.markup = String.fromCharCode(j7), K7.map = w = [q7, 0], x && (K7.info = e2.src.slice(U7, V7 - 1)), z7 = e2.tight, R7 = e2.tShift[q7], L7 = e2.sCount[q7], F7 = e2.listIndent, e2.listIndent = e2.blkIndent, e2.blkIndent = p2, e2.tight = true, e2.tShift[q7] = d - e2.bMarks[q7], e2.sCount[q7] = P7, d >= N7 && e2.isEmpty(q7 + 1) ? e2.line = Math.min(e2.line + 2, n2) : e2.md.block.tokenize(e2, q7, n2, true), (!e2.tight || H7) && (Y7 = false), H7 = e2.line - q7 > 1 && e2.isEmpty(e2.line - 1), e2.blkIndent = e2.listIndent, e2.listIndent = F7, e2.tShift[q7] = R7, e2.sCount[q7] = L7, e2.tight = z7, K7 = e2.push("list_item_close", "li", -1), K7.markup = String.fromCharCode(j7), q7 = e2.line, w[1] = q7, q7 >= n2 || e2.sCount[q7] < e2.blkIndent || e2.sCount[q7] - e2.blkIndent >= 4) break;
      for (W7 = false, f = 0, k = G7.length; f < k; f++) if (G7[f](e2, q7, n2, true)) {
        W7 = true;
        break;
      }
      if (W7) break;
      if (x) {
        if (V7 = i(e2, q7), V7 < 0) break;
        U7 = e2.bMarks[q7] + e2.tShift[q7];
      } else if (V7 = r(e2, q7), V7 < 0) break;
      if (j7 !== e2.src.charCodeAt(V7 - 1)) break;
    }
    return K7 = x ? e2.push("ordered_list_close", "ol", -1) : e2.push("bullet_list_close", "ul", -1), K7.markup = String.fromCharCode(j7), $[1] = q7, e2.line = q7, e2.parentType = I7, Y7 && o(e2, A7), true;
  };
}));
var require_reference = __commonJSMin(((e, t) => {
  var n = require_utils().normalizeReference, r = require_utils().isSpace;
  t.exports = function(e2, t2, i, o) {
    var s, l, d, f, p2, _, y, x, w, k, $, A7, j7, M7, N7, P7, F7 = 0, I7 = e2.bMarks[t2] + e2.tShift[t2], L7 = e2.eMarks[t2], R7 = t2 + 1;
    if (e2.sCount[t2] - e2.blkIndent >= 4 || e2.src.charCodeAt(I7) !== 91) return false;
    for (; ++I7 < L7; ) if (e2.src.charCodeAt(I7) === 93 && e2.src.charCodeAt(I7 - 1) !== 92) {
      if (I7 + 1 === L7 || e2.src.charCodeAt(I7 + 1) !== 58) return false;
      break;
    }
    for (f = e2.lineMax, N7 = e2.md.block.ruler.getRules("reference"), k = e2.parentType, e2.parentType = "reference"; R7 < f && !e2.isEmpty(R7); R7++) if (!(e2.sCount[R7] - e2.blkIndent > 3) && !(e2.sCount[R7] < 0)) {
      for (M7 = false, _ = 0, y = N7.length; _ < y; _++) if (N7[_](e2, R7, f, true)) {
        M7 = true;
        break;
      }
      if (M7) break;
    }
    for (j7 = e2.getLines(t2, R7, e2.blkIndent, false).trim(), L7 = j7.length, I7 = 1; I7 < L7; I7++) {
      if (s = j7.charCodeAt(I7), s === 91) return false;
      if (s === 93) {
        w = I7;
        break;
      } else s === 10 ? F7++ : s === 92 && (I7++, I7 < L7 && j7.charCodeAt(I7) === 10 && F7++);
    }
    if (w < 0 || j7.charCodeAt(w + 1) !== 58) return false;
    for (I7 = w + 2; I7 < L7; I7++) if (s = j7.charCodeAt(I7), s === 10) F7++;
    else if (!r(s)) break;
    if ($ = e2.md.helpers.parseLinkDestination(j7, I7, L7), !$.ok || (p2 = e2.md.normalizeLink($.str), !e2.md.validateLink(p2))) return false;
    for (I7 = $.pos, F7 += $.lines, l = I7, d = F7, A7 = I7; I7 < L7; I7++) if (s = j7.charCodeAt(I7), s === 10) F7++;
    else if (!r(s)) break;
    for ($ = e2.md.helpers.parseLinkTitle(j7, I7, L7), I7 < L7 && A7 !== I7 && $.ok ? (P7 = $.str, I7 = $.pos, F7 += $.lines) : (P7 = "", I7 = l, F7 = d); I7 < L7 && (s = j7.charCodeAt(I7), r(s)); ) I7++;
    if (I7 < L7 && j7.charCodeAt(I7) !== 10 && P7) for (P7 = "", I7 = l, F7 = d; I7 < L7 && (s = j7.charCodeAt(I7), r(s)); ) I7++;
    return I7 < L7 && j7.charCodeAt(I7) !== 10 || (x = n(j7.slice(1, w)), !x) ? false : o ? true : (e2.env.references === void 0 && (e2.env.references = {}), e2.env.references[x] === void 0 && (e2.env.references[x] = {
      title: P7,
      href: p2
    }), e2.parentType = k, e2.line = t2 + F7 + 1, true);
  };
}));
var require_html_blocks = __commonJSMin(((e, t) => {
  t.exports = "address.article.aside.base.basefont.blockquote.body.caption.center.col.colgroup.dd.details.dialog.dir.div.dl.dt.fieldset.figcaption.figure.footer.form.frame.frameset.h1.h2.h3.h4.h5.h6.head.header.hr.html.iframe.legend.li.link.main.menu.menuitem.nav.noframes.ol.optgroup.option.p.param.section.source.summary.table.tbody.td.tfoot.th.thead.title.tr.track.ul".split(".");
}));
var require_html_re = __commonJSMin(((e, t) => {
  var n = `<[A-Za-z][A-Za-z0-9\\-]*(?:\\s+[a-zA-Z_:][a-zA-Z0-9:._-]*(?:\\s*=\\s*(?:[^"'=<>\`\\x00-\\x20]+|'[^']*'|"[^"]*"))?)*\\s*\\/?>`, r = "<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>", i = RegExp("^(?:" + n + "|" + r + "|<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->|<[?][\\s\\S]*?[?]>|<![A-Z]+\\s+[^>]*>|<!\\[CDATA\\[[\\s\\S]*?\\]\\]>)"), o = RegExp("^(?:" + n + "|" + r + ")");
  t.exports.HTML_TAG_RE = i, t.exports.HTML_OPEN_CLOSE_TAG_RE = o;
}));
var require_html_block = __commonJSMin(((e, t) => {
  var n = require_html_blocks(), r = require_html_re().HTML_OPEN_CLOSE_TAG_RE, i = [
    [
      /^<(script|pre|style|textarea)(?=(\s|>|$))/i,
      /<\/(script|pre|style|textarea)>/i,
      true
    ],
    [
      /^<!--/,
      /-->/,
      true
    ],
    [
      /^<\?/,
      /\?>/,
      true
    ],
    [
      /^<![A-Z]/,
      />/,
      true
    ],
    [
      /^<!\[CDATA\[/,
      /\]\]>/,
      true
    ],
    [
      RegExp("^</?(" + n.join("|") + ")(?=(\\s|/?>|$))", "i"),
      /^$/,
      true
    ],
    [
      RegExp(r.source + "\\s*$"),
      /^$/,
      false
    ]
  ];
  t.exports = function(e2, t2, n2, r2) {
    var o, s, l, d, f = e2.bMarks[t2] + e2.tShift[t2], p2 = e2.eMarks[t2];
    if (e2.sCount[t2] - e2.blkIndent >= 4 || !e2.md.options.html || e2.src.charCodeAt(f) !== 60) return false;
    for (d = e2.src.slice(f, p2), o = 0; o < i.length && !i[o][0].test(d); o++) ;
    if (o === i.length) return false;
    if (r2) return i[o][2];
    if (s = t2 + 1, !i[o][1].test(d)) {
      for (; s < n2 && !(e2.sCount[s] < e2.blkIndent); s++) if (f = e2.bMarks[s] + e2.tShift[s], p2 = e2.eMarks[s], d = e2.src.slice(f, p2), i[o][1].test(d)) {
        d.length !== 0 && s++;
        break;
      }
    }
    return e2.line = s, l = e2.push("html_block", "", 0), l.map = [t2, s], l.content = e2.getLines(t2, s, e2.blkIndent, true), true;
  };
}));
var require_heading = __commonJSMin(((e, t) => {
  var n = require_utils().isSpace;
  t.exports = function(e2, t2, r, i) {
    var o, s, l, d, f = e2.bMarks[t2] + e2.tShift[t2], p2 = e2.eMarks[t2];
    if (e2.sCount[t2] - e2.blkIndent >= 4 || (o = e2.src.charCodeAt(f), o !== 35 || f >= p2)) return false;
    for (s = 1, o = e2.src.charCodeAt(++f); o === 35 && f < p2 && s <= 6; ) s++, o = e2.src.charCodeAt(++f);
    return s > 6 || f < p2 && !n(o) ? false : i ? true : (p2 = e2.skipSpacesBack(p2, f), l = e2.skipCharsBack(p2, 35, f), l > f && n(e2.src.charCodeAt(l - 1)) && (p2 = l), e2.line = t2 + 1, d = e2.push("heading_open", "h" + String(s), 1), d.markup = "########".slice(0, s), d.map = [t2, e2.line], d = e2.push("inline", "", 0), d.content = e2.src.slice(f, p2).trim(), d.map = [t2, e2.line], d.children = [], d = e2.push("heading_close", "h" + String(s), -1), d.markup = "########".slice(0, s), true);
  };
}));
var require_lheading = __commonJSMin(((e, t) => {
  t.exports = function(e2, t2, n) {
    var r, i, o, s, l, d, f, p2, _, y = t2 + 1, x, w = e2.md.block.ruler.getRules("paragraph");
    if (e2.sCount[t2] - e2.blkIndent >= 4) return false;
    for (x = e2.parentType, e2.parentType = "paragraph"; y < n && !e2.isEmpty(y); y++) if (!(e2.sCount[y] - e2.blkIndent > 3)) {
      if (e2.sCount[y] >= e2.blkIndent && (d = e2.bMarks[y] + e2.tShift[y], f = e2.eMarks[y], d < f && (_ = e2.src.charCodeAt(d), (_ === 45 || _ === 61) && (d = e2.skipChars(d, _), d = e2.skipSpaces(d), d >= f)))) {
        p2 = _ === 61 ? 1 : 2;
        break;
      }
      if (!(e2.sCount[y] < 0)) {
        for (i = false, o = 0, s = w.length; o < s; o++) if (w[o](e2, y, n, true)) {
          i = true;
          break;
        }
        if (i) break;
      }
    }
    return p2 ? (r = e2.getLines(t2, y, e2.blkIndent, false).trim(), e2.line = y + 1, l = e2.push("heading_open", "h" + String(p2), 1), l.markup = String.fromCharCode(_), l.map = [t2, e2.line], l = e2.push("inline", "", 0), l.content = r, l.map = [t2, e2.line - 1], l.children = [], l = e2.push("heading_close", "h" + String(p2), -1), l.markup = String.fromCharCode(_), e2.parentType = x, true) : false;
  };
}));
var require_paragraph = __commonJSMin(((e, t) => {
  t.exports = function(e2, t2, n) {
    var r, i, o, s, l, d, f = t2 + 1, p2 = e2.md.block.ruler.getRules("paragraph");
    for (d = e2.parentType, e2.parentType = "paragraph"; f < n && !e2.isEmpty(f); f++) if (!(e2.sCount[f] - e2.blkIndent > 3) && !(e2.sCount[f] < 0)) {
      for (i = false, o = 0, s = p2.length; o < s; o++) if (p2[o](e2, f, n, true)) {
        i = true;
        break;
      }
      if (i) break;
    }
    return r = e2.getLines(t2, f, e2.blkIndent, false).trim(), e2.line = f, l = e2.push("paragraph_open", "p", 1), l.map = [t2, e2.line], l = e2.push("inline", "", 0), l.content = r, l.map = [t2, e2.line], l.children = [], l = e2.push("paragraph_close", "p", -1), e2.parentType = d, true;
  };
}));
var require_state_block = __commonJSMin(((e, t) => {
  var n = require_token(), r = require_utils().isSpace;
  function i(e2, t2, n2, i2) {
    var o, s, l, d, f, p2, _, y;
    for (this.src = e2, this.md = t2, this.env = n2, this.tokens = i2, this.bMarks = [], this.eMarks = [], this.tShift = [], this.sCount = [], this.bsCount = [], this.blkIndent = 0, this.line = 0, this.lineMax = 0, this.tight = false, this.ddIndent = -1, this.listIndent = -1, this.parentType = "root", this.level = 0, this.result = "", s = this.src, y = false, l = d = p2 = _ = 0, f = s.length; d < f; d++) {
      if (o = s.charCodeAt(d), !y) if (r(o)) {
        p2++, o === 9 ? _ += 4 - _ % 4 : _++;
        continue;
      } else y = true;
      (o === 10 || d === f - 1) && (o !== 10 && d++, this.bMarks.push(l), this.eMarks.push(d), this.tShift.push(p2), this.sCount.push(_), this.bsCount.push(0), y = false, p2 = 0, _ = 0, l = d + 1);
    }
    this.bMarks.push(s.length), this.eMarks.push(s.length), this.tShift.push(0), this.sCount.push(0), this.bsCount.push(0), this.lineMax = this.bMarks.length - 1;
  }
  i.prototype.push = function(e2, t2, r2) {
    var i2 = new n(e2, t2, r2);
    return i2.block = true, r2 < 0 && this.level--, i2.level = this.level, r2 > 0 && this.level++, this.tokens.push(i2), i2;
  }, i.prototype.isEmpty = function(e2) {
    return this.bMarks[e2] + this.tShift[e2] >= this.eMarks[e2];
  }, i.prototype.skipEmptyLines = function(e2) {
    for (var t2 = this.lineMax; e2 < t2 && !(this.bMarks[e2] + this.tShift[e2] < this.eMarks[e2]); e2++) ;
    return e2;
  }, i.prototype.skipSpaces = function(e2) {
    for (var t2, n2 = this.src.length; e2 < n2 && (t2 = this.src.charCodeAt(e2), r(t2)); e2++) ;
    return e2;
  }, i.prototype.skipSpacesBack = function(e2, t2) {
    if (e2 <= t2) return e2;
    for (; e2 > t2; ) if (!r(this.src.charCodeAt(--e2))) return e2 + 1;
    return e2;
  }, i.prototype.skipChars = function(e2, t2) {
    for (var n2 = this.src.length; e2 < n2 && this.src.charCodeAt(e2) === t2; e2++) ;
    return e2;
  }, i.prototype.skipCharsBack = function(e2, t2, n2) {
    if (e2 <= n2) return e2;
    for (; e2 > n2; ) if (t2 !== this.src.charCodeAt(--e2)) return e2 + 1;
    return e2;
  }, i.prototype.getLines = function(e2, t2, n2, i2) {
    var o, s, l, d, f, p2, _, y = e2;
    if (e2 >= t2) return "";
    for (p2 = Array(t2 - e2), o = 0; y < t2; y++, o++) {
      for (s = 0, _ = d = this.bMarks[y], f = y + 1 < t2 || i2 ? this.eMarks[y] + 1 : this.eMarks[y]; d < f && s < n2; ) {
        if (l = this.src.charCodeAt(d), r(l)) l === 9 ? s += 4 - (s + this.bsCount[y]) % 4 : s++;
        else if (d - _ < this.tShift[y]) s++;
        else break;
        d++;
      }
      s > n2 ? p2[o] = Array(s - n2 + 1).join(" ") + this.src.slice(d, f) : p2[o] = this.src.slice(d, f);
    }
    return p2.join("");
  }, i.prototype.Token = n, t.exports = i;
}));
var require_parser_block = __commonJSMin(((e, t) => {
  var n = require_ruler(), r = [
    [
      "table",
      require_table(),
      ["paragraph", "reference"]
    ],
    ["code", require_code()],
    [
      "fence",
      require_fence(),
      [
        "paragraph",
        "reference",
        "blockquote",
        "list"
      ]
    ],
    [
      "blockquote",
      require_blockquote(),
      [
        "paragraph",
        "reference",
        "blockquote",
        "list"
      ]
    ],
    [
      "hr",
      require_hr(),
      [
        "paragraph",
        "reference",
        "blockquote",
        "list"
      ]
    ],
    [
      "list",
      require_list(),
      [
        "paragraph",
        "reference",
        "blockquote"
      ]
    ],
    ["reference", require_reference()],
    [
      "html_block",
      require_html_block(),
      [
        "paragraph",
        "reference",
        "blockquote"
      ]
    ],
    [
      "heading",
      require_heading(),
      [
        "paragraph",
        "reference",
        "blockquote"
      ]
    ],
    ["lheading", require_lheading()],
    ["paragraph", require_paragraph()]
  ];
  function i() {
    this.ruler = new n();
    for (var e2 = 0; e2 < r.length; e2++) this.ruler.push(r[e2][0], r[e2][1], { alt: (r[e2][2] || []).slice() });
  }
  i.prototype.tokenize = function(e2, t2, n2) {
    for (var r2, i2, o, s = this.ruler.getRules(""), l = s.length, d = t2, f = false, p2 = e2.md.options.maxNesting; d < n2 && (e2.line = d = e2.skipEmptyLines(d), !(d >= n2 || e2.sCount[d] < e2.blkIndent)); ) {
      if (e2.level >= p2) {
        e2.line = n2;
        break;
      }
      for (o = e2.line, i2 = 0; i2 < l; i2++) if (r2 = s[i2](e2, d, n2, false), r2) {
        if (o >= e2.line) throw Error("block rule didn't increment state.line");
        break;
      }
      if (!r2) throw Error("none of the block rules matched");
      e2.tight = !f, e2.isEmpty(e2.line - 1) && (f = true), d = e2.line, d < n2 && e2.isEmpty(d) && (f = true, d++, e2.line = d);
    }
  }, i.prototype.parse = function(e2, t2, n2, r2) {
    var i2;
    e2 && (i2 = new this.State(e2, t2, n2, r2), this.tokenize(i2, i2.line, i2.lineMax));
  }, i.prototype.State = require_state_block(), t.exports = i;
}));
var require_text = __commonJSMin(((e, t) => {
  function n(e2) {
    switch (e2) {
      case 10:
      case 33:
      case 35:
      case 36:
      case 37:
      case 38:
      case 42:
      case 43:
      case 45:
      case 58:
      case 60:
      case 61:
      case 62:
      case 64:
      case 91:
      case 92:
      case 93:
      case 94:
      case 95:
      case 96:
      case 123:
      case 125:
      case 126:
        return true;
      default:
        return false;
    }
  }
  t.exports = function(e2, t2) {
    for (var r = e2.pos; r < e2.posMax && !n(e2.src.charCodeAt(r)); ) r++;
    return r === e2.pos ? false : (t2 || (e2.pending += e2.src.slice(e2.pos, r)), e2.pos = r, true);
  };
}));
var require_linkify = __commonJSMin(((e, t) => {
  var n = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;
  t.exports = function(e2, t2) {
    var r, i, o, s, l, d, f, p2;
    return !e2.md.options.linkify || e2.linkLevel > 0 || (r = e2.pos, i = e2.posMax, r + 3 > i) || e2.src.charCodeAt(r) !== 58 || e2.src.charCodeAt(r + 1) !== 47 || e2.src.charCodeAt(r + 2) !== 47 || (o = e2.pending.match(n), !o) || (s = o[1], l = e2.md.linkify.matchAtStart(e2.src.slice(r - s.length)), !l) || (d = l.url, d.length <= s.length) || (d = d.replace(/\*+$/, ""), f = e2.md.normalizeLink(d), !e2.md.validateLink(f)) ? false : (t2 || (e2.pending = e2.pending.slice(0, -s.length), p2 = e2.push("link_open", "a", 1), p2.attrs = [["href", f]], p2.markup = "linkify", p2.info = "auto", p2 = e2.push("text", "", 0), p2.content = e2.md.normalizeLinkText(d), p2 = e2.push("link_close", "a", -1), p2.markup = "linkify", p2.info = "auto"), e2.pos += d.length - s.length, true);
  };
}));
var require_newline = __commonJSMin(((e, t) => {
  var n = require_utils().isSpace;
  t.exports = function(e2, t2) {
    var r, i, o, s = e2.pos;
    if (e2.src.charCodeAt(s) !== 10) return false;
    if (r = e2.pending.length - 1, i = e2.posMax, !t2) if (r >= 0 && e2.pending.charCodeAt(r) === 32) if (r >= 1 && e2.pending.charCodeAt(r - 1) === 32) {
      for (o = r - 1; o >= 1 && e2.pending.charCodeAt(o - 1) === 32; ) o--;
      e2.pending = e2.pending.slice(0, o), e2.push("hardbreak", "br", 0);
    } else e2.pending = e2.pending.slice(0, -1), e2.push("softbreak", "br", 0);
    else e2.push("softbreak", "br", 0);
    for (s++; s < i && n(e2.src.charCodeAt(s)); ) s++;
    return e2.pos = s, true;
  };
}));
var require_escape = __commonJSMin(((e, t) => {
  for (var n = require_utils().isSpace, r = [], i = 0; i < 256; i++) r.push(0);
  "\\!\"#$%&'()*+,./:;<=>?@[]^_`{|}~-".split("").forEach(function(e2) {
    r[e2.charCodeAt(0)] = 1;
  }), t.exports = function(e2, t2) {
    var i2, o, s, l, d, f = e2.pos, p2 = e2.posMax;
    if (e2.src.charCodeAt(f) !== 92 || (f++, f >= p2)) return false;
    if (i2 = e2.src.charCodeAt(f), i2 === 10) {
      for (t2 || e2.push("hardbreak", "br", 0), f++; f < p2 && (i2 = e2.src.charCodeAt(f), n(i2)); ) f++;
      return e2.pos = f, true;
    }
    return l = e2.src[f], i2 >= 55296 && i2 <= 56319 && f + 1 < p2 && (o = e2.src.charCodeAt(f + 1), o >= 56320 && o <= 57343 && (l += e2.src[f + 1], f++)), s = "\\" + l, t2 || (d = e2.push("text_special", "", 0), i2 < 256 && r[i2] !== 0 ? d.content = l : d.content = s, d.markup = s, d.info = "escape"), e2.pos = f + 1, true;
  };
}));
var require_backticks = __commonJSMin(((e, t) => {
  t.exports = function(e2, t2) {
    var n, r, i, o, s, l, d, f, p2 = e2.pos;
    if (e2.src.charCodeAt(p2) !== 96) return false;
    for (n = p2, p2++, r = e2.posMax; p2 < r && e2.src.charCodeAt(p2) === 96; ) p2++;
    if (i = e2.src.slice(n, p2), d = i.length, e2.backticksScanned && (e2.backticks[d] || 0) <= n) return t2 || (e2.pending += i), e2.pos += d, true;
    for (l = p2; (s = e2.src.indexOf("`", l)) !== -1; ) {
      for (l = s + 1; l < r && e2.src.charCodeAt(l) === 96; ) l++;
      if (f = l - s, f === d) return t2 || (o = e2.push("code_inline", "code", 0), o.markup = i, o.content = e2.src.slice(p2, s).replace(/\n/g, " ").replace(/^ (.+) $/, "$1")), e2.pos = l, true;
      e2.backticks[f] = s;
    }
    return e2.backticksScanned = true, t2 || (e2.pending += i), e2.pos += d, true;
  };
}));
var require_strikethrough = __commonJSMin(((e, t) => {
  t.exports.tokenize = function(e2, t2) {
    var n2, r, i, o, s, l = e2.pos, d = e2.src.charCodeAt(l);
    if (t2 || d !== 126 || (r = e2.scanDelims(e2.pos, true), o = r.length, s = String.fromCharCode(d), o < 2)) return false;
    for (o % 2 && (i = e2.push("text", "", 0), i.content = s, o--), n2 = 0; n2 < o; n2 += 2) i = e2.push("text", "", 0), i.content = s + s, e2.delimiters.push({
      marker: d,
      length: 0,
      token: e2.tokens.length - 1,
      end: -1,
      open: r.can_open,
      close: r.can_close
    });
    return e2.pos += r.length, true;
  };
  function n(e2, t2) {
    var n2, r, i, o, s, l = [], d = t2.length;
    for (n2 = 0; n2 < d; n2++) i = t2[n2], i.marker === 126 && i.end !== -1 && (o = t2[i.end], s = e2.tokens[i.token], s.type = "s_open", s.tag = "s", s.nesting = 1, s.markup = "~~", s.content = "", s = e2.tokens[o.token], s.type = "s_close", s.tag = "s", s.nesting = -1, s.markup = "~~", s.content = "", e2.tokens[o.token - 1].type === "text" && e2.tokens[o.token - 1].content === "~" && l.push(o.token - 1));
    for (; l.length; ) {
      for (n2 = l.pop(), r = n2 + 1; r < e2.tokens.length && e2.tokens[r].type === "s_close"; ) r++;
      r--, n2 !== r && (s = e2.tokens[r], e2.tokens[r] = e2.tokens[n2], e2.tokens[n2] = s);
    }
  }
  t.exports.postProcess = function(e2) {
    var t2, r = e2.tokens_meta, i = e2.tokens_meta.length;
    for (n(e2, e2.delimiters), t2 = 0; t2 < i; t2++) r[t2] && r[t2].delimiters && n(e2, r[t2].delimiters);
  };
}));
var require_emphasis = __commonJSMin(((e, t) => {
  t.exports.tokenize = function(e2, t2) {
    var n2, r, i, o = e2.pos, s = e2.src.charCodeAt(o);
    if (t2 || s !== 95 && s !== 42) return false;
    for (r = e2.scanDelims(e2.pos, s === 42), n2 = 0; n2 < r.length; n2++) i = e2.push("text", "", 0), i.content = String.fromCharCode(s), e2.delimiters.push({
      marker: s,
      length: r.length,
      token: e2.tokens.length - 1,
      end: -1,
      open: r.can_open,
      close: r.can_close
    });
    return e2.pos += r.length, true;
  };
  function n(e2, t2) {
    var n2, r, i, o, s, l;
    for (n2 = t2.length - 1; n2 >= 0; n2--) r = t2[n2], !(r.marker !== 95 && r.marker !== 42) && r.end !== -1 && (i = t2[r.end], l = n2 > 0 && t2[n2 - 1].end === r.end + 1 && t2[n2 - 1].marker === r.marker && t2[n2 - 1].token === r.token - 1 && t2[r.end + 1].token === i.token + 1, s = String.fromCharCode(r.marker), o = e2.tokens[r.token], o.type = l ? "strong_open" : "em_open", o.tag = l ? "strong" : "em", o.nesting = 1, o.markup = l ? s + s : s, o.content = "", o = e2.tokens[i.token], o.type = l ? "strong_close" : "em_close", o.tag = l ? "strong" : "em", o.nesting = -1, o.markup = l ? s + s : s, o.content = "", l && (e2.tokens[t2[n2 - 1].token].content = "", e2.tokens[t2[r.end + 1].token].content = "", n2--));
  }
  t.exports.postProcess = function(e2) {
    var t2, r = e2.tokens_meta, i = e2.tokens_meta.length;
    for (n(e2, e2.delimiters), t2 = 0; t2 < i; t2++) r[t2] && r[t2].delimiters && n(e2, r[t2].delimiters);
  };
}));
var require_link = __commonJSMin(((e, t) => {
  var n = require_utils().normalizeReference, r = require_utils().isSpace;
  t.exports = function(e2, t2) {
    var i, o, s, l, d, f, p2, _, y, x = "", w = "", k = e2.pos, $ = e2.posMax, A7 = e2.pos, j7 = true;
    if (e2.src.charCodeAt(e2.pos) !== 91 || (d = e2.pos + 1, l = e2.md.helpers.parseLinkLabel(e2, e2.pos, true), l < 0)) return false;
    if (f = l + 1, f < $ && e2.src.charCodeAt(f) === 40) {
      for (j7 = false, f++; f < $ && (o = e2.src.charCodeAt(f), !(!r(o) && o !== 10)); f++) ;
      if (f >= $) return false;
      if (A7 = f, p2 = e2.md.helpers.parseLinkDestination(e2.src, f, e2.posMax), p2.ok) {
        for (x = e2.md.normalizeLink(p2.str), e2.md.validateLink(x) ? f = p2.pos : x = "", A7 = f; f < $ && (o = e2.src.charCodeAt(f), !(!r(o) && o !== 10)); f++) ;
        if (p2 = e2.md.helpers.parseLinkTitle(e2.src, f, e2.posMax), f < $ && A7 !== f && p2.ok) for (w = p2.str, f = p2.pos; f < $ && (o = e2.src.charCodeAt(f), !(!r(o) && o !== 10)); f++) ;
      }
      (f >= $ || e2.src.charCodeAt(f) !== 41) && (j7 = true), f++;
    }
    if (j7) {
      if (e2.env.references === void 0) return false;
      if (f < $ && e2.src.charCodeAt(f) === 91 ? (A7 = f + 1, f = e2.md.helpers.parseLinkLabel(e2, f), f >= 0 ? s = e2.src.slice(A7, f++) : f = l + 1) : f = l + 1, s ||= e2.src.slice(d, l), _ = e2.env.references[n(s)], !_) return e2.pos = k, false;
      x = _.href, w = _.title;
    }
    return t2 || (e2.pos = d, e2.posMax = l, y = e2.push("link_open", "a", 1), y.attrs = i = [["href", x]], w && i.push(["title", w]), e2.linkLevel++, e2.md.inline.tokenize(e2), e2.linkLevel--, y = e2.push("link_close", "a", -1)), e2.pos = f, e2.posMax = $, true;
  };
}));
var require_image = __commonJSMin(((e, t) => {
  var n = require_utils().normalizeReference, r = require_utils().isSpace;
  t.exports = function(e2, t2) {
    var i, o, s, l, d, f, p2, _, y, x, w, k, $, A7 = "", j7 = e2.pos, M7 = e2.posMax;
    if (e2.src.charCodeAt(e2.pos) !== 33 || e2.src.charCodeAt(e2.pos + 1) !== 91 || (f = e2.pos + 2, d = e2.md.helpers.parseLinkLabel(e2, e2.pos + 1, false), d < 0)) return false;
    if (p2 = d + 1, p2 < M7 && e2.src.charCodeAt(p2) === 40) {
      for (p2++; p2 < M7 && (o = e2.src.charCodeAt(p2), !(!r(o) && o !== 10)); p2++) ;
      if (p2 >= M7) return false;
      for ($ = p2, y = e2.md.helpers.parseLinkDestination(e2.src, p2, e2.posMax), y.ok && (A7 = e2.md.normalizeLink(y.str), e2.md.validateLink(A7) ? p2 = y.pos : A7 = ""), $ = p2; p2 < M7 && (o = e2.src.charCodeAt(p2), !(!r(o) && o !== 10)); p2++) ;
      if (y = e2.md.helpers.parseLinkTitle(e2.src, p2, e2.posMax), p2 < M7 && $ !== p2 && y.ok) for (x = y.str, p2 = y.pos; p2 < M7 && (o = e2.src.charCodeAt(p2), !(!r(o) && o !== 10)); p2++) ;
      else x = "";
      if (p2 >= M7 || e2.src.charCodeAt(p2) !== 41) return e2.pos = j7, false;
      p2++;
    } else {
      if (e2.env.references === void 0) return false;
      if (p2 < M7 && e2.src.charCodeAt(p2) === 91 ? ($ = p2 + 1, p2 = e2.md.helpers.parseLinkLabel(e2, p2), p2 >= 0 ? l = e2.src.slice($, p2++) : p2 = d + 1) : p2 = d + 1, l ||= e2.src.slice(f, d), _ = e2.env.references[n(l)], !_) return e2.pos = j7, false;
      A7 = _.href, x = _.title;
    }
    return t2 || (s = e2.src.slice(f, d), e2.md.inline.parse(s, e2.md, e2.env, k = []), w = e2.push("image", "img", 0), w.attrs = i = [["src", A7], ["alt", ""]], w.children = k, w.content = s, x && i.push(["title", x])), e2.pos = p2, e2.posMax = M7, true;
  };
}));
var require_autolink = __commonJSMin(((e, t) => {
  var n = /^([a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/, r = /^([a-zA-Z][a-zA-Z0-9+.\-]{1,31}):([^<>\x00-\x20]*)$/;
  t.exports = function(e2, t2) {
    var i, o, s, l, d, f, p2 = e2.pos;
    if (e2.src.charCodeAt(p2) !== 60) return false;
    for (d = e2.pos, f = e2.posMax; ; ) {
      if (++p2 >= f || (l = e2.src.charCodeAt(p2), l === 60)) return false;
      if (l === 62) break;
    }
    return i = e2.src.slice(d + 1, p2), r.test(i) ? (o = e2.md.normalizeLink(i), e2.md.validateLink(o) ? (t2 || (s = e2.push("link_open", "a", 1), s.attrs = [["href", o]], s.markup = "autolink", s.info = "auto", s = e2.push("text", "", 0), s.content = e2.md.normalizeLinkText(i), s = e2.push("link_close", "a", -1), s.markup = "autolink", s.info = "auto"), e2.pos += i.length + 2, true) : false) : n.test(i) ? (o = e2.md.normalizeLink("mailto:" + i), e2.md.validateLink(o) ? (t2 || (s = e2.push("link_open", "a", 1), s.attrs = [["href", o]], s.markup = "autolink", s.info = "auto", s = e2.push("text", "", 0), s.content = e2.md.normalizeLinkText(i), s = e2.push("link_close", "a", -1), s.markup = "autolink", s.info = "auto"), e2.pos += i.length + 2, true) : false) : false;
  };
}));
var require_html_inline = __commonJSMin(((e, t) => {
  var n = require_html_re().HTML_TAG_RE;
  function r(e2) {
    return /^<a[>\s]/i.test(e2);
  }
  function i(e2) {
    return /^<\/a\s*>/i.test(e2);
  }
  function o(e2) {
    var t2 = e2 | 32;
    return t2 >= 97 && t2 <= 122;
  }
  t.exports = function(e2, t2) {
    var s, l, d, f, p2 = e2.pos;
    return !e2.md.options.html || (d = e2.posMax, e2.src.charCodeAt(p2) !== 60 || p2 + 2 >= d) || (s = e2.src.charCodeAt(p2 + 1), s !== 33 && s !== 63 && s !== 47 && !o(s)) || (l = e2.src.slice(p2).match(n), !l) ? false : (t2 || (f = e2.push("html_inline", "", 0), f.content = l[0], r(f.content) && e2.linkLevel++, i(f.content) && e2.linkLevel--), e2.pos += l[0].length, true);
  };
}));
var require_entity = __commonJSMin(((e, t) => {
  var n = require_entities(), r = require_utils().has, i = require_utils().isValidEntityCode, o = require_utils().fromCodePoint, s = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i, l = /^&([a-z][a-z0-9]{1,31});/i;
  t.exports = function(e2, t2) {
    var d, f, p2, _, y = e2.pos, x = e2.posMax;
    if (e2.src.charCodeAt(y) !== 38 || y + 1 >= x) return false;
    if (d = e2.src.charCodeAt(y + 1), d === 35) {
      if (p2 = e2.src.slice(y).match(s), p2) return t2 || (f = p2[1][0].toLowerCase() === "x" ? parseInt(p2[1].slice(1), 16) : parseInt(p2[1], 10), _ = e2.push("text_special", "", 0), _.content = i(f) ? o(f) : o(65533), _.markup = p2[0], _.info = "entity"), e2.pos += p2[0].length, true;
    } else if (p2 = e2.src.slice(y).match(l), p2 && r(n, p2[1])) return t2 || (_ = e2.push("text_special", "", 0), _.content = n[p2[1]], _.markup = p2[0], _.info = "entity"), e2.pos += p2[0].length, true;
    return false;
  };
}));
var require_balance_pairs = __commonJSMin(((e, t) => {
  function n(e2) {
    var t2, n2, r, i, o, s, l, d, f = {}, p2 = e2.length;
    if (p2) {
      var _ = 0, y = -2, x = [];
      for (t2 = 0; t2 < p2; t2++) if (r = e2[t2], x.push(0), (e2[_].marker !== r.marker || y !== r.token - 1) && (_ = t2), y = r.token, r.length = r.length || 0, r.close) {
        for (f.hasOwnProperty(r.marker) || (f[r.marker] = [
          -1,
          -1,
          -1,
          -1,
          -1,
          -1
        ]), o = f[r.marker][(r.open ? 3 : 0) + r.length % 3], n2 = _ - x[_] - 1, s = n2; n2 > o; n2 -= x[n2] + 1) if (i = e2[n2], i.marker === r.marker && i.open && i.end < 0 && (l = false, (i.close || r.open) && (i.length + r.length) % 3 == 0 && (i.length % 3 != 0 || r.length % 3 != 0) && (l = true), !l)) {
          d = n2 > 0 && !e2[n2 - 1].open ? x[n2 - 1] + 1 : 0, x[t2] = t2 - n2 + d, x[n2] = d, r.open = false, i.end = t2, i.close = false, s = -1, y = -2;
          break;
        }
        s !== -1 && (f[r.marker][(r.open ? 3 : 0) + (r.length || 0) % 3] = s);
      }
    }
  }
  t.exports = function(e2) {
    var t2, r = e2.tokens_meta, i = e2.tokens_meta.length;
    for (n(e2.delimiters), t2 = 0; t2 < i; t2++) r[t2] && r[t2].delimiters && n(r[t2].delimiters);
  };
}));
var require_fragments_join = __commonJSMin(((e, t) => {
  t.exports = function(e2) {
    var t2, n, r = 0, i = e2.tokens, o = e2.tokens.length;
    for (t2 = n = 0; t2 < o; t2++) i[t2].nesting < 0 && r--, i[t2].level = r, i[t2].nesting > 0 && r++, i[t2].type === "text" && t2 + 1 < o && i[t2 + 1].type === "text" ? i[t2 + 1].content = i[t2].content + i[t2 + 1].content : (t2 !== n && (i[n] = i[t2]), n++);
    t2 !== n && (i.length = n);
  };
}));
var require_state_inline = __commonJSMin(((e, t) => {
  var n = require_token(), r = require_utils().isWhiteSpace, i = require_utils().isPunctChar, o = require_utils().isMdAsciiPunct;
  function s(e2, t2, n2, r2) {
    this.src = e2, this.env = n2, this.md = t2, this.tokens = r2, this.tokens_meta = Array(r2.length), this.pos = 0, this.posMax = this.src.length, this.level = 0, this.pending = "", this.pendingLevel = 0, this.cache = {}, this.delimiters = [], this._prev_delimiters = [], this.backticks = {}, this.backticksScanned = false, this.linkLevel = 0;
  }
  s.prototype.pushPending = function() {
    var e2 = new n("text", "", 0);
    return e2.content = this.pending, e2.level = this.pendingLevel, this.tokens.push(e2), this.pending = "", e2;
  }, s.prototype.push = function(e2, t2, r2) {
    this.pending && this.pushPending();
    var i2 = new n(e2, t2, r2), o3 = null;
    return r2 < 0 && (this.level--, this.delimiters = this._prev_delimiters.pop()), i2.level = this.level, r2 > 0 && (this.level++, this._prev_delimiters.push(this.delimiters), this.delimiters = [], o3 = { delimiters: this.delimiters }), this.pendingLevel = this.level, this.tokens.push(i2), this.tokens_meta.push(o3), i2;
  }, s.prototype.scanDelims = function(e2, t2) {
    var n2 = e2, s2, l, d, f, p2, _, y, x, w, k = true, $ = true, A7 = this.posMax, j7 = this.src.charCodeAt(e2);
    for (s2 = e2 > 0 ? this.src.charCodeAt(e2 - 1) : 32; n2 < A7 && this.src.charCodeAt(n2) === j7; ) n2++;
    return d = n2 - e2, l = n2 < A7 ? this.src.charCodeAt(n2) : 32, y = o(s2) || i(String.fromCharCode(s2)), w = o(l) || i(String.fromCharCode(l)), _ = r(s2), x = r(l), x ? k = false : w && (_ || y || (k = false)), _ ? $ = false : y && (x || w || ($ = false)), t2 ? (f = k, p2 = $) : (f = k && (!$ || y), p2 = $ && (!k || w)), {
      can_open: f,
      can_close: p2,
      length: d
    };
  }, s.prototype.Token = n, t.exports = s;
}));
var require_parser_inline = __commonJSMin(((e, t) => {
  var n = require_ruler(), r = [
    ["text", require_text()],
    ["linkify", require_linkify()],
    ["newline", require_newline()],
    ["escape", require_escape()],
    ["backticks", require_backticks()],
    ["strikethrough", require_strikethrough().tokenize],
    ["emphasis", require_emphasis().tokenize],
    ["link", require_link()],
    ["image", require_image()],
    ["autolink", require_autolink()],
    ["html_inline", require_html_inline()],
    ["entity", require_entity()]
  ], i = [
    ["balance_pairs", require_balance_pairs()],
    ["strikethrough", require_strikethrough().postProcess],
    ["emphasis", require_emphasis().postProcess],
    ["fragments_join", require_fragments_join()]
  ];
  function o() {
    var e2;
    for (this.ruler = new n(), e2 = 0; e2 < r.length; e2++) this.ruler.push(r[e2][0], r[e2][1]);
    for (this.ruler2 = new n(), e2 = 0; e2 < i.length; e2++) this.ruler2.push(i[e2][0], i[e2][1]);
  }
  o.prototype.skipToken = function(e2) {
    var t2, n2, r2 = e2.pos, i2 = this.ruler.getRules(""), o3 = i2.length, s = e2.md.options.maxNesting, l = e2.cache;
    if (l[r2] !== void 0) {
      e2.pos = l[r2];
      return;
    }
    if (e2.level < s) {
      for (n2 = 0; n2 < o3; n2++) if (e2.level++, t2 = i2[n2](e2, true), e2.level--, t2) {
        if (r2 >= e2.pos) throw Error("inline rule didn't increment state.pos");
        break;
      }
    } else e2.pos = e2.posMax;
    t2 || e2.pos++, l[r2] = e2.pos;
  }, o.prototype.tokenize = function(e2) {
    for (var t2, n2, r2, i2 = this.ruler.getRules(""), o3 = i2.length, s = e2.posMax, l = e2.md.options.maxNesting; e2.pos < s; ) {
      if (r2 = e2.pos, e2.level < l) {
        for (n2 = 0; n2 < o3; n2++) if (t2 = i2[n2](e2, false), t2) {
          if (r2 >= e2.pos) throw Error("inline rule didn't increment state.pos");
          break;
        }
      }
      if (t2) {
        if (e2.pos >= s) break;
        continue;
      }
      e2.pending += e2.src[e2.pos++];
    }
    e2.pending && e2.pushPending();
  }, o.prototype.parse = function(e2, t2, n2, r2) {
    var i2, o3, s, l = new this.State(e2, t2, n2, r2);
    for (this.tokenize(l), o3 = this.ruler2.getRules(""), s = o3.length, i2 = 0; i2 < s; i2++) o3[i2](l);
  }, o.prototype.State = require_state_inline(), t.exports = o;
}));
var require_re = __commonJSMin(((e, t) => {
  t.exports = function(e2) {
    var t2 = {};
    e2 ||= {}, t2.src_Any = require_regex$3().source, t2.src_Cc = require_regex$2().source, t2.src_Z = require_regex().source, t2.src_P = require_regex$4().source, t2.src_ZPCc = [
      t2.src_Z,
      t2.src_P,
      t2.src_Cc
    ].join("|"), t2.src_ZCc = [t2.src_Z, t2.src_Cc].join("|");
    var n = "[><｜]";
    return t2.src_pseudo_letter = "(?:(?!" + n + "|" + t2.src_ZPCc + ")" + t2.src_Any + ")", t2.src_ip4 = "(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)", t2.src_auth = "(?:(?:(?!" + t2.src_ZCc + "|[@/\\[\\]()]).)+@)?", t2.src_port = "(?::(?:6(?:[0-4]\\d{3}|5(?:[0-4]\\d{2}|5(?:[0-2]\\d|3[0-5])))|[1-5]?\\d{1,4}))?", t2.src_host_terminator = "(?=$|" + n + "|" + t2.src_ZPCc + ")(?!" + (e2["---"] ? "-(?!--)|" : "-|") + "_|:\\d|\\.-|\\.(?!$|" + t2.src_ZPCc + "))", t2.src_path = "(?:[/?#](?:(?!" + t2.src_ZCc + "|" + n + `|[()[\\]{}.,"'?!\\-;]).|\\[(?:(?!` + t2.src_ZCc + "|\\]).)*\\]|\\((?:(?!" + t2.src_ZCc + "|[)]).)*\\)|\\{(?:(?!" + t2.src_ZCc + '|[}]).)*\\}|\\"(?:(?!' + t2.src_ZCc + `|["]).)+\\"|\\'(?:(?!` + t2.src_ZCc + "|[']).)+\\'|\\'(?=" + t2.src_pseudo_letter + "|[-])|\\.{2,}[a-zA-Z0-9%/&]|\\.(?!" + t2.src_ZCc + "|[.]|$)|" + (e2["---"] ? "\\-(?!--(?:[^-]|$))(?:-*)|" : "\\-+|") + ",(?!" + t2.src_ZCc + "|$)|;(?!" + t2.src_ZCc + "|$)|\\!+(?!" + t2.src_ZCc + "|[!]|$)|\\?(?!" + t2.src_ZCc + "|[?]|$))+|\\/)?", t2.src_email_name = '[\\-;:&=\\+\\$,\\.a-zA-Z0-9_][\\-;:&=\\+\\$,\\"\\.a-zA-Z0-9_]*', t2.src_xn = "xn--[a-z0-9\\-]{1,59}", t2.src_domain_root = "(?:" + t2.src_xn + "|" + t2.src_pseudo_letter + "{1,63})", t2.src_domain = "(?:" + t2.src_xn + "|(?:" + t2.src_pseudo_letter + ")|(?:" + t2.src_pseudo_letter + "(?:-|" + t2.src_pseudo_letter + "){0,61}" + t2.src_pseudo_letter + "))", t2.src_host = "(?:(?:(?:(?:" + t2.src_domain + ")\\.)*" + t2.src_domain + "))", t2.tpl_host_fuzzy = "(?:" + t2.src_ip4 + "|(?:(?:(?:" + t2.src_domain + ")\\.)+(?:%TLDS%)))", t2.tpl_host_no_ip_fuzzy = "(?:(?:(?:" + t2.src_domain + ")\\.)+(?:%TLDS%))", t2.src_host_strict = t2.src_host + t2.src_host_terminator, t2.tpl_host_fuzzy_strict = t2.tpl_host_fuzzy + t2.src_host_terminator, t2.src_host_port_strict = t2.src_host + t2.src_port + t2.src_host_terminator, t2.tpl_host_port_fuzzy_strict = t2.tpl_host_fuzzy + t2.src_port + t2.src_host_terminator, t2.tpl_host_port_no_ip_fuzzy_strict = t2.tpl_host_no_ip_fuzzy + t2.src_port + t2.src_host_terminator, t2.tpl_host_fuzzy_test = "localhost|www\\.|\\.\\d{1,3}\\.|(?:\\.(?:%TLDS%)(?:" + t2.src_ZPCc + "|>|$))", t2.tpl_email_fuzzy = "(^|" + n + '|"|\\(|' + t2.src_ZCc + ")(" + t2.src_email_name + "@" + t2.tpl_host_fuzzy_strict + ")", t2.tpl_link_fuzzy = "(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|" + t2.src_ZPCc + "))((?![$+<=>^`|｜])" + t2.tpl_host_port_fuzzy_strict + t2.src_path + ")", t2.tpl_link_no_ip_fuzzy = "(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|" + t2.src_ZPCc + "))((?![$+<=>^`|｜])" + t2.tpl_host_port_no_ip_fuzzy_strict + t2.src_path + ")", t2;
  };
}));
var require_linkify_it = __commonJSMin(((e, t) => {
  function n(e2) {
    return Array.prototype.slice.call(arguments, 1).forEach(function(t2) {
      t2 && Object.keys(t2).forEach(function(n2) {
        e2[n2] = t2[n2];
      });
    }), e2;
  }
  function r(e2) {
    return Object.prototype.toString.call(e2);
  }
  function i(e2) {
    return r(e2) === "[object String]";
  }
  function o(e2) {
    return r(e2) === "[object Object]";
  }
  function s(e2) {
    return r(e2) === "[object RegExp]";
  }
  function l(e2) {
    return r(e2) === "[object Function]";
  }
  function d(e2) {
    return e2.replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&");
  }
  var f = {
    fuzzyLink: true,
    fuzzyEmail: true,
    fuzzyIP: false
  };
  function p2(e2) {
    return Object.keys(e2 || {}).reduce(function(e3, t2) {
      return e3 || f.hasOwnProperty(t2);
    }, false);
  }
  var _ = {
    "http:": { validate: function(e2, t2, n2) {
      var r2 = e2.slice(t2);
      return n2.re.http || (n2.re.http = RegExp("^\\/\\/" + n2.re.src_auth + n2.re.src_host_port_strict + n2.re.src_path, "i")), n2.re.http.test(r2) ? r2.match(n2.re.http)[0].length : 0;
    } },
    "https:": "http:",
    "ftp:": "http:",
    "//": { validate: function(e2, t2, n2) {
      var r2 = e2.slice(t2);
      return n2.re.no_http || (n2.re.no_http = RegExp("^" + n2.re.src_auth + "(?:localhost|(?:(?:" + n2.re.src_domain + ")\\.)+" + n2.re.src_domain_root + ")" + n2.re.src_port + n2.re.src_host_terminator + n2.re.src_path, "i")), n2.re.no_http.test(r2) ? t2 >= 3 && e2[t2 - 3] === ":" || t2 >= 3 && e2[t2 - 3] === "/" ? 0 : r2.match(n2.re.no_http)[0].length : 0;
    } },
    "mailto:": { validate: function(e2, t2, n2) {
      var r2 = e2.slice(t2);
      return n2.re.mailto || (n2.re.mailto = RegExp("^" + n2.re.src_email_name + "@" + n2.re.src_host_strict, "i")), n2.re.mailto.test(r2) ? r2.match(n2.re.mailto)[0].length : 0;
    } }
  }, y = "a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]", x = "biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф".split("|");
  function w(e2) {
    e2.__index__ = -1, e2.__text_cache__ = "";
  }
  function k(e2) {
    return function(t2, n2) {
      var r2 = t2.slice(n2);
      return e2.test(r2) ? r2.match(e2)[0].length : 0;
    };
  }
  function $() {
    return function(e2, t2) {
      t2.normalize(e2);
    };
  }
  function A7(e2) {
    var t2 = e2.re = require_re()(e2.__opts__), n2 = e2.__tlds__.slice();
    e2.onCompile(), e2.__tlds_replaced__ || n2.push(y), n2.push(t2.src_xn), t2.src_tlds = n2.join("|");
    function r2(e3) {
      return e3.replace("%TLDS%", t2.src_tlds);
    }
    t2.email_fuzzy = RegExp(r2(t2.tpl_email_fuzzy), "i"), t2.link_fuzzy = RegExp(r2(t2.tpl_link_fuzzy), "i"), t2.link_no_ip_fuzzy = RegExp(r2(t2.tpl_link_no_ip_fuzzy), "i"), t2.host_fuzzy_test = RegExp(r2(t2.tpl_host_fuzzy_test), "i");
    var f2 = [];
    e2.__compiled__ = {};
    function p3(e3, t3) {
      throw Error('(LinkifyIt) Invalid schema "' + e3 + '": ' + t3);
    }
    Object.keys(e2.__schemas__).forEach(function(t3) {
      var n3 = e2.__schemas__[t3];
      if (n3 !== null) {
        var r3 = {
          validate: null,
          link: null
        };
        if (e2.__compiled__[t3] = r3, o(n3)) {
          s(n3.validate) ? r3.validate = k(n3.validate) : l(n3.validate) ? r3.validate = n3.validate : p3(t3, n3), l(n3.normalize) ? r3.normalize = n3.normalize : n3.normalize ? p3(t3, n3) : r3.normalize = $();
          return;
        }
        if (i(n3)) {
          f2.push(t3);
          return;
        }
        p3(t3, n3);
      }
    }), f2.forEach(function(t3) {
      e2.__compiled__[e2.__schemas__[t3]] && (e2.__compiled__[t3].validate = e2.__compiled__[e2.__schemas__[t3]].validate, e2.__compiled__[t3].normalize = e2.__compiled__[e2.__schemas__[t3]].normalize);
    }), e2.__compiled__[""] = {
      validate: null,
      normalize: $()
    };
    var _2 = Object.keys(e2.__compiled__).filter(function(t3) {
      return t3.length > 0 && e2.__compiled__[t3];
    }).map(d).join("|");
    e2.re.schema_test = RegExp("(^|(?!_)(?:[><｜]|" + t2.src_ZPCc + "))(" + _2 + ")", "i"), e2.re.schema_search = RegExp("(^|(?!_)(?:[><｜]|" + t2.src_ZPCc + "))(" + _2 + ")", "ig"), e2.re.schema_at_start = RegExp("^" + e2.re.schema_search.source, "i"), e2.re.pretest = RegExp("(" + e2.re.schema_test.source + ")|(" + e2.re.host_fuzzy_test.source + ")|@", "i"), w(e2);
  }
  function j7(e2, t2) {
    var n2 = e2.__index__, r2 = e2.__last_index__, i2 = e2.__text_cache__.slice(n2, r2);
    this.schema = e2.__schema__.toLowerCase(), this.index = n2 + t2, this.lastIndex = r2 + t2, this.raw = i2, this.text = i2, this.url = i2;
  }
  function M7(e2, t2) {
    var n2 = new j7(e2, t2);
    return e2.__compiled__[n2.schema].normalize(n2, e2), n2;
  }
  function N7(e2, t2) {
    if (!(this instanceof N7)) return new N7(e2, t2);
    t2 || p2(e2) && (t2 = e2, e2 = {}), this.__opts__ = n({}, f, t2), this.__index__ = -1, this.__last_index__ = -1, this.__schema__ = "", this.__text_cache__ = "", this.__schemas__ = n({}, _, e2), this.__compiled__ = {}, this.__tlds__ = x, this.__tlds_replaced__ = false, this.re = {}, A7(this);
  }
  N7.prototype.add = function(e2, t2) {
    return this.__schemas__[e2] = t2, A7(this), this;
  }, N7.prototype.set = function(e2) {
    return this.__opts__ = n(this.__opts__, e2), this;
  }, N7.prototype.test = function(e2) {
    if (this.__text_cache__ = e2, this.__index__ = -1, !e2.length) return false;
    var t2, n2, r2, i2, o3, s2, l2, d2, f2;
    if (this.re.schema_test.test(e2)) {
      for (l2 = this.re.schema_search, l2.lastIndex = 0; (t2 = l2.exec(e2)) !== null; ) if (i2 = this.testSchemaAt(e2, t2[2], l2.lastIndex), i2) {
        this.__schema__ = t2[2], this.__index__ = t2.index + t2[1].length, this.__last_index__ = t2.index + t2[0].length + i2;
        break;
      }
    }
    return this.__opts__.fuzzyLink && this.__compiled__["http:"] && (d2 = e2.search(this.re.host_fuzzy_test), d2 >= 0 && (this.__index__ < 0 || d2 < this.__index__) && (n2 = e2.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null && (o3 = n2.index + n2[1].length, (this.__index__ < 0 || o3 < this.__index__) && (this.__schema__ = "", this.__index__ = o3, this.__last_index__ = n2.index + n2[0].length))), this.__opts__.fuzzyEmail && this.__compiled__["mailto:"] && (f2 = e2.indexOf("@"), f2 >= 0 && (r2 = e2.match(this.re.email_fuzzy)) !== null && (o3 = r2.index + r2[1].length, s2 = r2.index + r2[0].length, (this.__index__ < 0 || o3 < this.__index__ || o3 === this.__index__ && s2 > this.__last_index__) && (this.__schema__ = "mailto:", this.__index__ = o3, this.__last_index__ = s2))), this.__index__ >= 0;
  }, N7.prototype.pretest = function(e2) {
    return this.re.pretest.test(e2);
  }, N7.prototype.testSchemaAt = function(e2, t2, n2) {
    return this.__compiled__[t2.toLowerCase()] ? this.__compiled__[t2.toLowerCase()].validate(e2, n2, this) : 0;
  }, N7.prototype.match = function(e2) {
    var t2 = 0, n2 = [];
    this.__index__ >= 0 && this.__text_cache__ === e2 && (n2.push(M7(this, t2)), t2 = this.__last_index__);
    for (var r2 = t2 ? e2.slice(t2) : e2; this.test(r2); ) n2.push(M7(this, t2)), r2 = r2.slice(this.__last_index__), t2 += this.__last_index__;
    return n2.length ? n2 : null;
  }, N7.prototype.matchAtStart = function(e2) {
    if (this.__text_cache__ = e2, this.__index__ = -1, !e2.length) return null;
    var t2 = this.re.schema_at_start.exec(e2);
    if (!t2) return null;
    var n2 = this.testSchemaAt(e2, t2[2], t2[0].length);
    return n2 ? (this.__schema__ = t2[2], this.__index__ = t2.index + t2[1].length, this.__last_index__ = t2.index + t2[0].length + n2, M7(this, 0)) : null;
  }, N7.prototype.tlds = function(e2, t2) {
    return e2 = Array.isArray(e2) ? e2 : [e2], t2 ? (this.__tlds__ = this.__tlds__.concat(e2).sort().filter(function(e3, t3, n2) {
      return e3 !== n2[t3 - 1];
    }).reverse(), A7(this), this) : (this.__tlds__ = e2.slice(), this.__tlds_replaced__ = true, A7(this), this);
  }, N7.prototype.normalize = function(e2) {
    e2.schema || (e2.url = "http://" + e2.url), e2.schema === "mailto:" && !/^mailto:/i.test(e2.url) && (e2.url = "mailto:" + e2.url);
  }, N7.prototype.onCompile = function() {
  }, t.exports = N7;
}));
var require_punycode = __commonJSMin(((e, t) => {
  (function(n) {
    var r = typeof e == "object" && e && !e.nodeType && e, i = typeof t == "object" && t && !t.nodeType && t, o = typeof global == "object" && global;
    (o.global === o || o.window === o || o.self === o) && (n = o);
    var s, l = 2147483647, d = 36, f = 1, p2 = 26, _ = 38, y = 700, x = 72, w = 128, k = "-", $ = /^xn--/, A7 = /[^\x20-\x7E]/, j7 = /[\x2E\u3002\uFF0E\uFF61]/g, M7 = {
      overflow: "Overflow: input needs wider integers to process",
      "not-basic": "Illegal input >= 0x80 (not a basic code point)",
      "invalid-input": "Invalid input"
    }, N7 = d - f, P7 = Math.floor, F7 = String.fromCharCode, I7;
    function L7(e2) {
      throw RangeError(M7[e2]);
    }
    function R7(e2, t2) {
      for (var n2 = e2.length, r2 = []; n2--; ) r2[n2] = t2(e2[n2]);
      return r2;
    }
    function z7(e2, t2) {
      var n2 = e2.split("@"), r2 = "";
      n2.length > 1 && (r2 = n2[0] + "@", e2 = n2[1]), e2 = e2.replace(j7, ".");
      var i2 = R7(e2.split("."), t2).join(".");
      return r2 + i2;
    }
    function B7(e2) {
      for (var t2 = [], n2 = 0, r2 = e2.length, i2, o3; n2 < r2; ) i2 = e2.charCodeAt(n2++), i2 >= 55296 && i2 <= 56319 && n2 < r2 ? (o3 = e2.charCodeAt(n2++), (o3 & 64512) == 56320 ? t2.push(((i2 & 1023) << 10) + (o3 & 1023) + 65536) : (t2.push(i2), n2--)) : t2.push(i2);
      return t2;
    }
    function V7(e2) {
      return R7(e2, function(e3) {
        var t2 = "";
        return e3 > 65535 && (e3 -= 65536, t2 += F7(e3 >>> 10 & 1023 | 55296), e3 = 56320 | e3 & 1023), t2 += F7(e3), t2;
      }).join("");
    }
    function H7(e2) {
      return e2 - 48 < 10 ? e2 - 22 : e2 - 65 < 26 ? e2 - 65 : e2 - 97 < 26 ? e2 - 97 : d;
    }
    function U7(e2, t2) {
      return e2 + 22 + 75 * (e2 < 26) - ((t2 != 0) << 5);
    }
    function W7(e2, t2, n2) {
      var r2 = 0;
      for (e2 = n2 ? P7(e2 / y) : e2 >> 1, e2 += P7(e2 / t2); e2 > N7 * p2 >> 1; r2 += d) e2 = P7(e2 / N7);
      return P7(r2 + (N7 + 1) * e2 / (e2 + _));
    }
    function G7(e2) {
      var t2 = [], n2 = e2.length, r2, i2 = 0, o3 = w, s2 = x, _2 = e2.lastIndexOf(k), y2, $2, A72, j72, M72, N72, F72, I72;
      for (_2 < 0 && (_2 = 0), y2 = 0; y2 < _2; ++y2) e2.charCodeAt(y2) >= 128 && L7("not-basic"), t2.push(e2.charCodeAt(y2));
      for ($2 = _2 > 0 ? _2 + 1 : 0; $2 < n2; ) {
        for (A72 = i2, j72 = 1, M72 = d; $2 >= n2 && L7("invalid-input"), N72 = H7(e2.charCodeAt($2++)), (N72 >= d || N72 > P7((l - i2) / j72)) && L7("overflow"), i2 += N72 * j72, F72 = M72 <= s2 ? f : M72 >= s2 + p2 ? p2 : M72 - s2, !(N72 < F72); M72 += d) I72 = d - F72, j72 > P7(l / I72) && L7("overflow"), j72 *= I72;
        r2 = t2.length + 1, s2 = W7(i2 - A72, r2, A72 == 0), P7(i2 / r2) > l - o3 && L7("overflow"), o3 += P7(i2 / r2), i2 %= r2, t2.splice(i2++, 0, o3);
      }
      return V7(t2);
    }
    function K7(e2) {
      var t2, n2, r2, i2, o3, s2, _2, y2, $2, A72, j72, M72 = [], N72, I72, R72, z72;
      for (e2 = B7(e2), N72 = e2.length, t2 = w, n2 = 0, o3 = x, s2 = 0; s2 < N72; ++s2) j72 = e2[s2], j72 < 128 && M72.push(F7(j72));
      for (r2 = i2 = M72.length, i2 && M72.push(k); r2 < N72; ) {
        for (_2 = l, s2 = 0; s2 < N72; ++s2) j72 = e2[s2], j72 >= t2 && j72 < _2 && (_2 = j72);
        for (I72 = r2 + 1, _2 - t2 > P7((l - n2) / I72) && L7("overflow"), n2 += (_2 - t2) * I72, t2 = _2, s2 = 0; s2 < N72; ++s2) if (j72 = e2[s2], j72 < t2 && ++n2 > l && L7("overflow"), j72 == t2) {
          for (y2 = n2, $2 = d; A72 = $2 <= o3 ? f : $2 >= o3 + p2 ? p2 : $2 - o3, !(y2 < A72); $2 += d) z72 = y2 - A72, R72 = d - A72, M72.push(F7(U7(A72 + z72 % R72, 0))), y2 = P7(z72 / R72);
          M72.push(F7(U7(y2, 0))), o3 = W7(n2, I72, r2 == i2), n2 = 0, ++r2;
        }
        ++n2, ++t2;
      }
      return M72.join("");
    }
    function q7(e2) {
      return z7(e2, function(e3) {
        return $.test(e3) ? G7(e3.slice(4).toLowerCase()) : e3;
      });
    }
    function J7(e2) {
      return z7(e2, function(e3) {
        return A7.test(e3) ? "xn--" + K7(e3) : e3;
      });
    }
    if (s = {
      version: "1.4.1",
      ucs2: {
        decode: B7,
        encode: V7
      },
      decode: G7,
      encode: K7,
      toASCII: J7,
      toUnicode: q7
    }, typeof define == "function" && typeof define.amd == "object" && define.amd) define("punycode", function() {
      return s;
    });
    else if (r && i) if (t.exports == r) i.exports = s;
    else for (I7 in s) s.hasOwnProperty(I7) && (r[I7] = s[I7]);
    else n.punycode = s;
  })(e);
}));
var require_default$2 = __commonJSMin(((e, t) => {
  t.exports = {
    options: {
      html: false,
      xhtmlOut: false,
      breaks: false,
      langPrefix: "language-",
      linkify: false,
      typographer: false,
      quotes: "“”‘’",
      highlight: null,
      maxNesting: 100
    },
    components: {
      core: {},
      block: {},
      inline: {}
    }
  };
}));
var require_zero = __commonJSMin(((e, t) => {
  t.exports = {
    options: {
      html: false,
      xhtmlOut: false,
      breaks: false,
      langPrefix: "language-",
      linkify: false,
      typographer: false,
      quotes: "“”‘’",
      highlight: null,
      maxNesting: 20
    },
    components: {
      core: { rules: [
        "normalize",
        "block",
        "inline",
        "text_join"
      ] },
      block: { rules: ["paragraph"] },
      inline: {
        rules: ["text"],
        rules2: ["balance_pairs", "fragments_join"]
      }
    }
  };
}));
var require_commonmark = __commonJSMin(((e, t) => {
  t.exports = {
    options: {
      html: true,
      xhtmlOut: true,
      breaks: false,
      langPrefix: "language-",
      linkify: false,
      typographer: false,
      quotes: "“”‘’",
      highlight: null,
      maxNesting: 20
    },
    components: {
      core: { rules: [
        "normalize",
        "block",
        "inline",
        "text_join"
      ] },
      block: { rules: [
        "blockquote",
        "code",
        "fence",
        "heading",
        "hr",
        "html_block",
        "lheading",
        "list",
        "reference",
        "paragraph"
      ] },
      inline: {
        rules: [
          "autolink",
          "backticks",
          "emphasis",
          "entity",
          "escape",
          "html_inline",
          "image",
          "link",
          "newline",
          "text"
        ],
        rules2: [
          "balance_pairs",
          "emphasis",
          "fragments_join"
        ]
      }
    }
  };
}));
var require_lib$2 = __commonJSMin(((e, t) => {
  var n = require_utils(), r = require_helpers(), i = require_renderer(), o = require_parser_core(), s = require_parser_block(), l = require_parser_inline(), d = require_linkify_it(), f = require_mdurl(), p2 = require_punycode(), _ = {
    default: require_default$2(),
    zero: require_zero(),
    commonmark: require_commonmark()
  }, y = /^(vbscript|javascript|file|data):/, x = /^data:image\/(gif|png|jpeg|webp);/;
  function w(e2) {
    var t2 = e2.trim().toLowerCase();
    return y.test(t2) ? !!x.test(t2) : true;
  }
  var k = [
    "http:",
    "https:",
    "mailto:"
  ];
  function $(e2) {
    var t2 = f.parse(e2, true);
    if (t2.hostname && (!t2.protocol || k.indexOf(t2.protocol) >= 0)) try {
      t2.hostname = p2.toASCII(t2.hostname);
    } catch {
    }
    return f.encode(f.format(t2));
  }
  function A7(e2) {
    var t2 = f.parse(e2, true);
    if (t2.hostname && (!t2.protocol || k.indexOf(t2.protocol) >= 0)) try {
      t2.hostname = p2.toUnicode(t2.hostname);
    } catch {
    }
    return f.decode(f.format(t2), f.decode.defaultChars + "%");
  }
  function j7(e2, t2) {
    if (!(this instanceof j7)) return new j7(e2, t2);
    t2 || n.isString(e2) || (t2 = e2 || {}, e2 = "default"), this.inline = new l(), this.block = new s(), this.core = new o(), this.renderer = new i(), this.linkify = new d(), this.validateLink = w, this.normalizeLink = $, this.normalizeLinkText = A7, this.utils = n, this.helpers = n.assign({}, r), this.options = {}, this.configure(e2), t2 && this.set(t2);
  }
  j7.prototype.set = function(e2) {
    return n.assign(this.options, e2), this;
  }, j7.prototype.configure = function(e2) {
    var t2 = this, r2;
    if (n.isString(e2) && (r2 = e2, e2 = _[r2], !e2)) throw Error('Wrong `markdown-it` preset "' + r2 + '", check name');
    if (!e2) throw Error("Wrong `markdown-it` preset, can't be empty");
    return e2.options && t2.set(e2.options), e2.components && Object.keys(e2.components).forEach(function(n2) {
      e2.components[n2].rules && t2[n2].ruler.enableOnly(e2.components[n2].rules), e2.components[n2].rules2 && t2[n2].ruler2.enableOnly(e2.components[n2].rules2);
    }), this;
  }, j7.prototype.enable = function(e2, t2) {
    var n2 = [];
    Array.isArray(e2) || (e2 = [e2]), [
      "core",
      "block",
      "inline"
    ].forEach(function(t3) {
      n2 = n2.concat(this[t3].ruler.enable(e2, true));
    }, this), n2 = n2.concat(this.inline.ruler2.enable(e2, true));
    var r2 = e2.filter(function(e3) {
      return n2.indexOf(e3) < 0;
    });
    if (r2.length && !t2) throw Error("MarkdownIt. Failed to enable unknown rule(s): " + r2);
    return this;
  }, j7.prototype.disable = function(e2, t2) {
    var n2 = [];
    Array.isArray(e2) || (e2 = [e2]), [
      "core",
      "block",
      "inline"
    ].forEach(function(t3) {
      n2 = n2.concat(this[t3].ruler.disable(e2, true));
    }, this), n2 = n2.concat(this.inline.ruler2.disable(e2, true));
    var r2 = e2.filter(function(e3) {
      return n2.indexOf(e3) < 0;
    });
    if (r2.length && !t2) throw Error("MarkdownIt. Failed to disable unknown rule(s): " + r2);
    return this;
  }, j7.prototype.use = function(e2) {
    var t2 = [this].concat(Array.prototype.slice.call(arguments, 1));
    return e2.apply(e2, t2), this;
  }, j7.prototype.parse = function(e2, t2) {
    if (typeof e2 != "string") throw Error("Input data should be a String");
    var n2 = new this.core.State(e2, this, t2);
    return this.core.process(n2), n2.tokens;
  }, j7.prototype.render = function(e2, t2) {
    return t2 ||= {}, this.renderer.render(this.parse(e2, t2), this.options, t2);
  }, j7.prototype.parseInline = function(e2, t2) {
    var n2 = new this.core.State(e2, this, t2);
    return n2.inlineMode = true, this.core.process(n2), n2.tokens;
  }, j7.prototype.renderInline = function(e2, t2) {
    return t2 ||= {}, this.renderer.render(this.parseInline(e2, t2), this.options, t2);
  }, t.exports = j7;
}));
var require_markdown_it = __commonJSMin(((e, t) => {
  t.exports = require_lib$2();
}));
var require_markdown_it_link_attributes = __commonJSMin(((e, t) => {
  function n(e2, t2) {
    var n2, r2, i2 = e2.attrs[e2.attrIndex("href")][1];
    for (n2 = 0; n2 < t2.length; ++n2) {
      if (r2 = t2[n2], typeof r2.matcher == "function") {
        if (r2.matcher(i2, r2)) return r2;
        continue;
      }
      return r2;
    }
  }
  function r(e2, t2, n2) {
    Object.keys(n2).forEach(function(r2) {
      var i2, o = n2[r2];
      r2 === "className" && (r2 = "class"), i2 = t2[e2].attrIndex(r2), i2 < 0 ? t2[e2].attrPush([r2, o]) : t2[e2].attrs[i2][1] = o;
    });
  }
  function i(e2, t2) {
    t2 = t2 ? Array.isArray(t2) ? t2 : [t2] : [], Object.freeze(t2);
    var i2 = e2.renderer.rules.link_open || this.defaultRender;
    e2.renderer.rules.link_open = function(e3, o, s, l, d) {
      var f = n(e3[o], t2), p2 = f && f.attrs;
      return p2 && r(o, e3, p2), i2(e3, o, s, l, d);
    };
  }
  i.defaultRender = function(e2, t2, n2, r2, i2) {
    return i2.renderToken(e2, t2, n2);
  }, t.exports = i;
}));
require_markdown_it(), require_markdown_it_link_attributes(), __commonJSMin(((e, t) => {
  function n(e2) {
    "@babel/helpers - typeof";
    return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    }, n(e2);
  }
  function r(e2, t2) {
    var n2 = typeof Symbol < "u" && e2[Symbol.iterator] || e2["@@iterator"];
    if (!n2) {
      if (Array.isArray(e2) || (n2 = f(e2)) || t2 && e2 && typeof e2.length == "number") {
        n2 && (e2 = n2);
        var r2 = 0, i2 = function() {
        };
        return {
          s: i2,
          n: function() {
            return r2 >= e2.length ? { done: true } : {
              done: false,
              value: e2[r2++]
            };
          },
          e: function(e3) {
            throw e3;
          },
          f: i2
        };
      }
      throw TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var o3 = true, s2 = false, l2;
    return {
      s: function() {
        n2 = n2.call(e2);
      },
      n: function() {
        var e3 = n2.next();
        return o3 = e3.done, e3;
      },
      e: function(e3) {
        s2 = true, l2 = e3;
      },
      f: function() {
        try {
          !o3 && n2.return != null && n2.return();
        } finally {
          if (s2) throw l2;
        }
      }
    };
  }
  function i(e2, t2, n2) {
    return t2 = o(t2), t2 in e2 ? Object.defineProperty(e2, t2, {
      value: n2,
      enumerable: true,
      configurable: true,
      writable: true
    }) : e2[t2] = n2, e2;
  }
  function o(e2) {
    var t2 = s(e2, "string");
    return n(t2) === "symbol" ? t2 : String(t2);
  }
  function s(e2, t2) {
    if (n(e2) !== "object" || e2 === null) return e2;
    var r2 = e2[Symbol.toPrimitive];
    if (r2 !== void 0) {
      var i2 = r2.call(e2, t2 || "default");
      if (n(i2) !== "object") return i2;
      throw TypeError("@@toPrimitive must return a primitive value.");
    }
    return (t2 === "string" ? String : Number)(e2);
  }
  function l(e2, t2) {
    return y(e2) || _(e2, t2) || f(e2, t2) || d();
  }
  function d() {
    throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  function f(e2, t2) {
    if (e2) {
      if (typeof e2 == "string") return p2(e2, t2);
      var n2 = Object.prototype.toString.call(e2).slice(8, -1);
      if (n2 === "Object" && e2.constructor && (n2 = e2.constructor.name), n2 === "Map" || n2 === "Set") return Array.from(e2);
      if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2)) return p2(e2, t2);
    }
  }
  function p2(e2, t2) {
    (t2 == null || t2 > e2.length) && (t2 = e2.length);
    for (var n2 = 0, r2 = Array(t2); n2 < t2; n2++) r2[n2] = e2[n2];
    return r2;
  }
  function _(e2, t2) {
    var n2 = e2 == null ? null : typeof Symbol < "u" && e2[Symbol.iterator] || e2["@@iterator"];
    if (n2 != null) {
      var r2, i2, o3, s2, l2 = [], d2 = true, f2 = false;
      try {
        if (o3 = (n2 = n2.call(e2)).next, t2 === 0) {
          if (Object(n2) !== n2) return;
          d2 = false;
        } else for (; !(d2 = (r2 = o3.call(n2)).done) && (l2.push(r2.value), l2.length !== t2); d2 = true) ;
      } catch (e3) {
        f2 = true, i2 = e3;
      } finally {
        try {
          if (!d2 && n2.return != null && (s2 = n2.return(), Object(s2) !== s2)) return;
        } finally {
          if (f2) throw i2;
        }
      }
      return l2;
    }
  }
  function y(e2) {
    if (Array.isArray(e2)) return e2;
  }
  t.exports = function(e2) {
    if (!e2 || typeof e2 != "string" || e2.match(/^\s+$/)) return [];
    var t2 = e2.split("\n");
    if (t2.length === 0) return [];
    var n2 = [], o3 = null, s2 = null, d2 = 0, f2 = 0, p3 = null, _2 = function(e3) {
      var t3;
      (t3 = s2) == null || t3.changes.push({
        type: "normal",
        normal: true,
        ln1: d2++,
        ln2: f2++,
        content: e3
      }), p3.oldLines--, p3.newLines--;
    }, y2 = function(e3) {
      var t3 = l(k(e3) ?? [], 2);
      o3 = {
        chunks: [],
        deletions: 0,
        additions: 0,
        from: t3[0],
        to: t3[1]
      }, n2.push(o3);
    }, x2 = function() {
      (!o3 || o3.chunks.length) && y2();
    }, w2 = function(e3, t3) {
      x2(), o3.new = true, o3.newMode = t3[1], o3.from = "/dev/null";
    }, $2 = function(e3, t3) {
      x2(), o3.deleted = true, o3.oldMode = t3[1], o3.to = "/dev/null";
    }, j72 = function(e3, t3) {
      x2(), o3.oldMode = t3[1];
    }, M72 = function(e3, t3) {
      x2(), o3.newMode = t3[1];
    }, N72 = function(e3, t3) {
      x2(), o3.index = e3.split(" ").slice(1), t3[1] && (o3.oldMode = o3.newMode = t3[1].trim());
    }, P72 = function(e3) {
      x2(), o3.from = A7(e3);
    }, F72 = function(e3) {
      x2(), o3.to = A7(e3);
    }, I7 = function(e3) {
      return +(e3 || 1);
    }, L7 = function(e3, t3) {
      o3 || y2(e3);
      var n3 = l(t3.slice(1), 4), r2 = n3[0], i2 = n3[1], _3 = n3[2], x3 = n3[3];
      d2 = +r2, f2 = +_3, s2 = {
        content: e3,
        changes: [],
        oldStart: +r2,
        oldLines: I7(i2),
        newStart: +_3,
        newLines: I7(x3)
      }, p3 = {
        oldLines: I7(i2),
        newLines: I7(x3)
      }, o3.chunks.push(s2);
    }, R7 = function(e3) {
      s2 && (s2.changes.push({
        type: "del",
        del: true,
        ln: d2++,
        content: e3
      }), o3.deletions++, p3.oldLines--);
    }, z7 = function(e3) {
      s2 && (s2.changes.push({
        type: "add",
        add: true,
        ln: f2++,
        content: e3
      }), o3.additions++, p3.newLines--);
    }, B7 = function(e3) {
      var t3;
      if (s2) {
        var n3 = l(s2.changes.slice(-1), 1)[0];
        s2.changes.push((t3 = { type: n3.type }, i(t3, n3.type, true), i(t3, "ln1", n3.ln1), i(t3, "ln2", n3.ln2), i(t3, "ln", n3.ln), i(t3, "content", e3), t3));
      }
    }, V7 = [
      [/^diff\s/, y2],
      [/^new file mode (\d+)$/, w2],
      [/^deleted file mode (\d+)$/, $2],
      [/^old mode (\d+)$/, j72],
      [/^new mode (\d+)$/, M72],
      [/^index\s[\da-zA-Z]+\.\.[\da-zA-Z]+(\s(\d+))?$/, N72],
      [/^---\s/, P72],
      [/^\+\+\+\s/, F72],
      [/^@@\s+-(\d+),?(\d+)?\s+\+(\d+),?(\d+)?\s@@/, L7],
      [/^\\ No newline at end of file$/, B7]
    ], H7 = [
      [/^\\ No newline at end of file$/, B7],
      [/^-/, R7],
      [/^\+/, z7],
      [/^\s+/, _2]
    ], U7 = function(e3) {
      for (var t3 = 0, n3 = H7; t3 < n3.length; t3++) {
        var r2 = l(n3[t3], 2), i2 = r2[0], o4 = r2[1], s3 = e3.match(i2);
        if (s3) {
          o4(e3, s3);
          break;
        }
      }
      p3.oldLines === 0 && p3.newLines === 0 && (p3 = null);
    }, W7 = function(e3) {
      for (var t3 = 0, n3 = V7; t3 < n3.length; t3++) {
        var r2 = l(n3[t3], 2), i2 = r2[0], o4 = r2[1], s3 = e3.match(i2);
        if (s3) {
          o4(e3, s3);
          break;
        }
      }
    }, G7 = function(e3) {
      p3 ? U7(e3) : W7(e3);
    }, K7 = r(t2), q7;
    try {
      for (K7.s(); !(q7 = K7.n()).done; ) {
        var J7 = q7.value;
        G7(J7);
      }
    } catch (e3) {
      K7.e(e3);
    } finally {
      K7.f();
    }
    return n2;
  };
  var x = /(a|i|w|c|o|1|2)\/.*(?=["']? ["']?(b|i|w|c|o|1|2)\/)|(b|i|w|c|o|1|2)\/.*$/g, w = /^(a|b|i|w|c|o|1|2)\//, k = function(e2) {
    return e2?.match(x)?.map(function(e3) {
      return e3.replace(w, "").replace(/("|')$/, "");
    });
  }, $ = /^\\?['"]|\\?['"]$/g, A7 = function(e2) {
    var t2 = j7(e2, "-+").trim();
    return t2 = N7(t2), t2.replace($, "").replace(w, "");
  }, j7 = function(e2, t2) {
    if (e2 = F7(e2), !t2 && String.prototype.trimLeft) return e2.trimLeft();
    var n2 = P7(t2);
    return e2.replace(RegExp(`^${n2}+`), "");
  }, M7 = /\t.*|\d{4}-\d\d-\d\d\s\d\d:\d\d:\d\d(.\d+)?\s(\+|-)\d\d\d\d/, N7 = function(e2) {
    var t2 = M7.exec(e2);
    return t2 && (e2 = e2.substring(0, t2.index).trim()), e2;
  }, P7 = function(e2) {
    return e2 == null ? "\\s" : e2 instanceof RegExp ? e2.source : `[${F7(e2).replace(/([.*+?^=!:${}()|[\]/\\])/g, "\\$1")}]`;
  }, F7 = function(e2) {
    return (e2 ?? "") + "";
  };
}))();
var noop = () => {
};
var isArray$4 = Array.isArray;
function isSameRouteRecord(e, t) {
  return (e.aliasOf || e) === (t.aliasOf || t);
}
function isSameRouteLocationParams(e, t) {
  if (Object.keys(e).length !== Object.keys(t).length) return false;
  for (let n in e) if (!isSameRouteLocationParamsValue(e[n], t[n])) return false;
  return true;
}
function isSameRouteLocationParamsValue(e, t) {
  return isArray$4(e) ? isEquivalentArray(e, t) : isArray$4(t) ? isEquivalentArray(t, e) : e === t;
}
function isEquivalentArray(e, t) {
  return isArray$4(t) ? e.length === t.length && e.every((e2, n) => e2 === t[n]) : e.length === 1 && e[0] === t;
}
var NavigationType;
(function(e) {
  e.pop = "pop", e.push = "push";
})(NavigationType ||= {});
var NavigationDirection;
(function(e) {
  e.back = "back", e.forward = "forward", e.unknown = "";
})(NavigationDirection ||= {});
var NavigationFailureType;
(function(e) {
  e[e.aborted = 4] = "aborted", e[e.cancelled = 8] = "cancelled", e[e.duplicated = 16] = "duplicated";
})(NavigationFailureType ||= {});
var routerKey = Symbol("");
var routeLocationKey = Symbol("");
function useLink(e) {
  let t = inject(routerKey), n = inject(routeLocationKey), r = computed2(() => {
    let n2 = unref(e.to);
    return t.resolve(n2);
  }), i = computed2(() => {
    let { matched: e2 } = r.value, { length: t2 } = e2, i2 = e2[t2 - 1], o3 = n.matched;
    if (!i2 || !o3.length) return -1;
    let s2 = o3.findIndex(isSameRouteRecord.bind(null, i2));
    if (s2 > -1) return s2;
    let l = getOriginalPath(e2[t2 - 2]);
    return t2 > 1 && getOriginalPath(i2) === l && o3[o3.length - 1].path !== l ? o3.findIndex(isSameRouteRecord.bind(null, e2[t2 - 2])) : s2;
  }), o = computed2(() => i.value > -1 && includesParams(n.params, r.value.params)), s = computed2(() => i.value > -1 && i.value === n.matched.length - 1 && isSameRouteLocationParams(n.params, r.value.params));
  function d(n2 = {}) {
    if (guardEvent(n2)) {
      let n3 = t[unref(e.replace) ? "replace" : "push"](unref(e.to)).catch(noop);
      return e.viewTransition && typeof document < "u" && "startViewTransition" in document && document.startViewTransition(() => n3), n3;
    }
    return Promise.resolve();
  }
  return {
    route: r,
    href: computed2(() => r.value.href),
    isActive: o,
    isExactActive: s,
    navigate: d
  };
}
function preferSingleVNode(e) {
  return e.length === 1 ? e[0] : e;
}
var RouterLink = defineComponent({
  name: "RouterLink",
  compatConfig: { MODE: 3 },
  props: {
    to: {
      type: [String, Object],
      required: true
    },
    replace: Boolean,
    activeClass: String,
    exactActiveClass: String,
    custom: Boolean,
    ariaCurrentValue: {
      type: String,
      default: "page"
    }
  },
  useLink,
  setup(e, { slots: t }) {
    let n = reactive(useLink(e)), { options: r } = inject(routerKey), i = computed2(() => ({
      [getLinkClass(e.activeClass, r.linkActiveClass, "router-link-active")]: n.isActive,
      [getLinkClass(e.exactActiveClass, r.linkExactActiveClass, "router-link-exact-active")]: n.isExactActive
    }));
    return () => {
      let r2 = t.default && preferSingleVNode(t.default(n));
      return e.custom ? r2 : h("a", {
        "aria-current": n.isExactActive ? e.ariaCurrentValue : null,
        href: n.href,
        onClick: n.navigate,
        class: i.value
      }, r2);
    };
  }
});
function guardEvent(e) {
  if (!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && !e.defaultPrevented && !(e.button !== void 0 && e.button !== 0)) {
    if (e.currentTarget && e.currentTarget.getAttribute) {
      let t = e.currentTarget.getAttribute("target");
      if (/\b_blank\b/i.test(t)) return;
    }
    return e.preventDefault && e.preventDefault(), true;
  }
}
function includesParams(e, t) {
  for (let n in t) {
    let r = t[n], i = e[n];
    if (typeof r == "string") {
      if (r !== i) return false;
    } else if (!isArray$4(i) || i.length !== r.length || r.some((e2, t2) => e2 !== i[t2])) return false;
  }
  return true;
}
function getOriginalPath(e) {
  return e ? e.aliasOf ? e.aliasOf.path : e.path : "";
}
var getLinkClass = (e, t, n) => e ?? t ?? n;
Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, uid2("color-picker"), { ...paginationProps }, { ...ElSelect.props }, String, String, Boolean, Boolean, Boolean, Boolean, Number, Function, Boolean, String, String, Boolean, Boolean, String;
var full_exports = __export2({
  a: () => a,
  ab: () => ab,
  abacus: () => abacus,
  abc: () => abc,
  abcd: () => abcd,
  accept: () => accept,
  accordion: () => accordion,
  adhesive_bandage: () => adhesive_bandage,
  adult: () => adult,
  aerial_tramway: () => aerial_tramway,
  afghanistan: () => afghanistan,
  airplane: () => airplane,
  aland_islands: () => aland_islands,
  alarm_clock: () => "⏰",
  albania: () => albania,
  alembic: () => alembic,
  algeria: () => algeria,
  alien: () => alien,
  ambulance: () => ambulance,
  american_samoa: () => american_samoa,
  amphora: () => amphora,
  anatomical_heart: () => anatomical_heart,
  anchor: () => "⚓",
  andorra: () => andorra,
  angel: () => angel,
  anger: () => anger,
  angola: () => angola,
  angry: () => angry,
  anguilla: () => anguilla,
  anguished: () => anguished,
  ant: () => ant,
  antarctica: () => antarctica,
  antigua_barbuda: () => antigua_barbuda,
  apple: () => apple,
  aquarius: () => "♒",
  argentina: () => argentina,
  aries: () => "♈",
  armenia: () => armenia,
  arrow_backward: () => arrow_backward,
  arrow_double_down: () => "⏬",
  arrow_double_up: () => "⏫",
  arrow_down: () => arrow_down,
  arrow_down_small: () => arrow_down_small,
  arrow_forward: () => arrow_forward,
  arrow_heading_down: () => arrow_heading_down,
  arrow_heading_up: () => arrow_heading_up,
  arrow_left: () => arrow_left,
  arrow_lower_left: () => arrow_lower_left,
  arrow_lower_right: () => arrow_lower_right,
  arrow_right: () => arrow_right,
  arrow_right_hook: () => arrow_right_hook,
  arrow_up: () => arrow_up,
  arrow_up_down: () => arrow_up_down,
  arrow_up_small: () => arrow_up_small,
  arrow_upper_left: () => arrow_upper_left,
  arrow_upper_right: () => arrow_upper_right,
  arrows_clockwise: () => arrows_clockwise,
  arrows_counterclockwise: () => arrows_counterclockwise,
  art: () => art,
  articulated_lorry: () => articulated_lorry,
  artificial_satellite: () => artificial_satellite,
  artist: () => artist,
  aruba: () => aruba,
  ascension_island: () => ascension_island,
  asterisk: () => asterisk,
  astonished: () => astonished,
  astronaut: () => astronaut,
  athletic_shoe: () => athletic_shoe,
  atm: () => atm,
  atom_symbol: () => atom_symbol,
  australia: () => australia,
  austria: () => austria,
  auto_rickshaw: () => auto_rickshaw,
  avocado: () => avocado,
  axe: () => axe,
  azerbaijan: () => azerbaijan,
  b: () => b,
  baby: () => baby,
  baby_bottle: () => baby_bottle,
  baby_chick: () => baby_chick,
  baby_symbol: () => baby_symbol,
  back: () => back,
  bacon: () => bacon,
  badger: () => badger,
  badminton: () => badminton,
  bagel: () => bagel,
  baggage_claim: () => baggage_claim,
  baguette_bread: () => baguette_bread,
  bahamas: () => bahamas,
  bahrain: () => bahrain,
  balance_scale: () => balance_scale,
  bald_man: () => bald_man,
  bald_woman: () => bald_woman,
  ballet_shoes: () => ballet_shoes,
  balloon: () => balloon,
  ballot_box: () => ballot_box,
  ballot_box_with_check: () => ballot_box_with_check,
  bamboo: () => bamboo,
  banana: () => banana,
  bangbang: () => bangbang,
  bangladesh: () => bangladesh,
  banjo: () => banjo,
  bank: () => bank,
  bar_chart: () => bar_chart,
  barbados: () => barbados,
  barber: () => barber,
  baseball: () => "⚾",
  basket: () => basket,
  basketball: () => basketball,
  basketball_man: () => basketball_man,
  basketball_woman: () => basketball_woman,
  bat: () => bat,
  bath: () => bath,
  bathtub: () => bathtub,
  battery: () => battery,
  beach_umbrella: () => beach_umbrella,
  bear: () => bear,
  bearded_person: () => bearded_person,
  beaver: () => beaver,
  bed: () => bed,
  bee: () => bee,
  beer: () => beer,
  beers: () => beers,
  beetle: () => beetle,
  beginner: () => beginner,
  belarus: () => belarus,
  belgium: () => belgium,
  belize: () => belize,
  bell: () => bell,
  bell_pepper: () => bell_pepper,
  bellhop_bell: () => bellhop_bell,
  benin: () => benin,
  bento: () => bento,
  bermuda: () => bermuda,
  beverage_box: () => beverage_box,
  bhutan: () => bhutan,
  bicyclist: () => bicyclist,
  bike: () => bike,
  biking_man: () => biking_man,
  biking_woman: () => biking_woman,
  bikini: () => bikini,
  billed_cap: () => billed_cap,
  biohazard: () => biohazard,
  bird: () => bird,
  birthday: () => birthday,
  bison: () => bison,
  black_cat: () => black_cat,
  black_circle: () => "⚫",
  black_flag: () => black_flag,
  black_heart: () => black_heart,
  black_joker: () => black_joker,
  black_large_square: () => "⬛",
  black_medium_small_square: () => "◾",
  black_medium_square: () => black_medium_square,
  black_nib: () => black_nib,
  black_small_square: () => black_small_square,
  black_square_button: () => black_square_button,
  blond_haired_man: () => blond_haired_man,
  blond_haired_person: () => blond_haired_person,
  blond_haired_woman: () => blond_haired_woman,
  blonde_woman: () => blonde_woman,
  blossom: () => blossom,
  blowfish: () => blowfish,
  blue_book: () => blue_book,
  blue_car: () => blue_car,
  blue_heart: () => blue_heart,
  blue_square: () => blue_square,
  blueberries: () => blueberries,
  blush: () => blush,
  boar: () => boar,
  boat: () => "⛵",
  bolivia: () => bolivia,
  bomb: () => bomb,
  bone: () => bone,
  book: () => book,
  bookmark: () => bookmark,
  bookmark_tabs: () => bookmark_tabs,
  books: () => books,
  boom: () => boom,
  boomerang: () => boomerang,
  boot: () => boot,
  bosnia_herzegovina: () => bosnia_herzegovina,
  botswana: () => botswana,
  bouncing_ball_man: () => bouncing_ball_man,
  bouncing_ball_person: () => bouncing_ball_person,
  bouncing_ball_woman: () => bouncing_ball_woman,
  bouquet: () => bouquet,
  bouvet_island: () => bouvet_island,
  bow: () => bow,
  bow_and_arrow: () => bow_and_arrow,
  bowing_man: () => bowing_man,
  bowing_woman: () => bowing_woman,
  bowl_with_spoon: () => bowl_with_spoon,
  bowling: () => bowling,
  boxing_glove: () => boxing_glove,
  boy: () => boy,
  brain: () => brain,
  brazil: () => brazil,
  bread: () => bread,
  breast_feeding: () => breast_feeding,
  bricks: () => bricks,
  bride_with_veil: () => bride_with_veil,
  bridge_at_night: () => bridge_at_night,
  briefcase: () => briefcase,
  british_indian_ocean_territory: () => british_indian_ocean_territory,
  british_virgin_islands: () => british_virgin_islands,
  broccoli: () => broccoli,
  broken_heart: () => broken_heart,
  broom: () => broom,
  brown_circle: () => brown_circle,
  brown_heart: () => brown_heart,
  brown_square: () => brown_square,
  brunei: () => brunei,
  bubble_tea: () => bubble_tea,
  bucket: () => bucket,
  bug: () => bug,
  building_construction: () => building_construction,
  bulb: () => bulb,
  bulgaria: () => bulgaria,
  bullettrain_front: () => bullettrain_front,
  bullettrain_side: () => bullettrain_side,
  burkina_faso: () => burkina_faso,
  burrito: () => burrito,
  burundi: () => burundi,
  bus: () => bus,
  business_suit_levitating: () => business_suit_levitating,
  busstop: () => busstop,
  bust_in_silhouette: () => bust_in_silhouette,
  busts_in_silhouette: () => busts_in_silhouette,
  butter: () => butter,
  butterfly: () => butterfly,
  cactus: () => cactus,
  cake: () => cake,
  calendar: () => calendar,
  call_me_hand: () => call_me_hand,
  calling: () => calling,
  cambodia: () => cambodia,
  camel: () => camel,
  camera: () => camera,
  camera_flash: () => camera_flash,
  cameroon: () => cameroon,
  camping: () => camping,
  canada: () => canada,
  canary_islands: () => canary_islands,
  cancer: () => "♋",
  candle: () => candle,
  candy: () => candy,
  canned_food: () => canned_food,
  canoe: () => canoe,
  cape_verde: () => cape_verde,
  capital_abcd: () => capital_abcd,
  capricorn: () => "♑",
  car: () => car,
  card_file_box: () => card_file_box,
  card_index: () => card_index,
  card_index_dividers: () => card_index_dividers,
  caribbean_netherlands: () => caribbean_netherlands,
  carousel_horse: () => carousel_horse,
  carpentry_saw: () => carpentry_saw,
  carrot: () => carrot,
  cartwheeling: () => cartwheeling,
  cat: () => cat,
  cat2: () => cat2,
  cayman_islands: () => cayman_islands,
  cd: () => cd,
  central_african_republic: () => central_african_republic,
  ceuta_melilla: () => ceuta_melilla,
  chad: () => chad,
  chains: () => chains,
  chair: () => chair,
  champagne: () => champagne,
  chart: () => chart,
  chart_with_downwards_trend: () => chart_with_downwards_trend,
  chart_with_upwards_trend: () => chart_with_upwards_trend,
  checkered_flag: () => checkered_flag,
  cheese: () => cheese,
  cherries: () => cherries,
  cherry_blossom: () => cherry_blossom,
  chess_pawn: () => chess_pawn,
  chestnut: () => chestnut,
  chicken: () => chicken,
  child: () => child,
  children_crossing: () => children_crossing,
  chile: () => chile,
  chipmunk: () => chipmunk,
  chocolate_bar: () => chocolate_bar,
  chopsticks: () => chopsticks,
  christmas_island: () => christmas_island,
  christmas_tree: () => christmas_tree,
  church: () => "⛪",
  cinema: () => cinema,
  circus_tent: () => circus_tent,
  city_sunrise: () => city_sunrise,
  city_sunset: () => city_sunset,
  cityscape: () => cityscape,
  cl: () => cl,
  clamp: () => clamp,
  clap: () => clap,
  clapper: () => clapper,
  classical_building: () => classical_building,
  climbing: () => climbing,
  climbing_man: () => climbing_man,
  climbing_woman: () => climbing_woman,
  clinking_glasses: () => clinking_glasses,
  clipboard: () => clipboard,
  clipperton_island: () => clipperton_island,
  clock1: () => clock1,
  clock10: () => clock10,
  clock1030: () => clock1030,
  clock11: () => clock11,
  clock1130: () => clock1130,
  clock12: () => clock12,
  clock1230: () => clock1230,
  clock130: () => clock130,
  clock2: () => clock2,
  clock230: () => clock230,
  clock3: () => clock3,
  clock330: () => clock330,
  clock4: () => clock4,
  clock430: () => clock430,
  clock5: () => clock5,
  clock530: () => clock530,
  clock6: () => clock6,
  clock630: () => clock630,
  clock7: () => clock7,
  clock730: () => clock730,
  clock8: () => clock8,
  clock830: () => clock830,
  clock9: () => clock9,
  clock930: () => clock930,
  closed_book: () => closed_book,
  closed_lock_with_key: () => closed_lock_with_key,
  closed_umbrella: () => closed_umbrella,
  cloud: () => cloud,
  cloud_with_lightning: () => cloud_with_lightning,
  cloud_with_lightning_and_rain: () => cloud_with_lightning_and_rain,
  cloud_with_rain: () => cloud_with_rain,
  cloud_with_snow: () => cloud_with_snow,
  clown_face: () => clown_face,
  clubs: () => clubs,
  cn: () => cn,
  coat: () => coat,
  cockroach: () => cockroach,
  cocktail: () => cocktail,
  coconut: () => coconut,
  cocos_islands: () => cocos_islands,
  coffee: () => "☕",
  coffin: () => coffin,
  coin: () => coin,
  cold_face: () => cold_face,
  cold_sweat: () => cold_sweat,
  collision: () => collision,
  colombia: () => colombia,
  comet: () => comet,
  comoros: () => comoros,
  compass: () => compass,
  computer: () => computer,
  computer_mouse: () => computer_mouse,
  confetti_ball: () => confetti_ball,
  confounded: () => confounded,
  confused: () => confused,
  congo_brazzaville: () => congo_brazzaville,
  congo_kinshasa: () => congo_kinshasa,
  congratulations: () => congratulations,
  construction: () => construction,
  construction_worker: () => construction_worker,
  construction_worker_man: () => construction_worker_man,
  construction_worker_woman: () => construction_worker_woman,
  control_knobs: () => control_knobs,
  convenience_store: () => convenience_store,
  cook: () => cook,
  cook_islands: () => cook_islands,
  cookie: () => cookie,
  cool: () => cool,
  cop: () => cop,
  copyright: () => copyright,
  corn: () => corn,
  costa_rica: () => costa_rica,
  cote_divoire: () => cote_divoire,
  couch_and_lamp: () => couch_and_lamp,
  couple: () => couple,
  couple_with_heart: () => couple_with_heart,
  couple_with_heart_man_man: () => couple_with_heart_man_man,
  couple_with_heart_woman_man: () => couple_with_heart_woman_man,
  couple_with_heart_woman_woman: () => couple_with_heart_woman_woman,
  couplekiss: () => couplekiss,
  couplekiss_man_man: () => couplekiss_man_man,
  couplekiss_man_woman: () => couplekiss_man_woman,
  couplekiss_woman_woman: () => couplekiss_woman_woman,
  cow: () => cow,
  cow2: () => cow2,
  cowboy_hat_face: () => cowboy_hat_face,
  crab: () => crab,
  crayon: () => crayon,
  credit_card: () => credit_card,
  crescent_moon: () => crescent_moon,
  cricket: () => cricket,
  cricket_game: () => cricket_game,
  croatia: () => croatia,
  crocodile: () => crocodile,
  croissant: () => croissant,
  crossed_fingers: () => crossed_fingers,
  crossed_flags: () => crossed_flags,
  crossed_swords: () => crossed_swords,
  crown: () => crown,
  cry: () => cry,
  crying_cat_face: () => crying_cat_face,
  crystal_ball: () => crystal_ball,
  cuba: () => cuba,
  cucumber: () => cucumber,
  cup_with_straw: () => cup_with_straw,
  cupcake: () => cupcake,
  cupid: () => cupid,
  curacao: () => curacao,
  curling_stone: () => curling_stone,
  curly_haired_man: () => curly_haired_man,
  curly_haired_woman: () => curly_haired_woman,
  curly_loop: () => "➰",
  currency_exchange: () => currency_exchange,
  curry: () => curry,
  cursing_face: () => cursing_face,
  custard: () => custard,
  customs: () => customs,
  cut_of_meat: () => cut_of_meat,
  cyclone: () => cyclone,
  cyprus: () => cyprus,
  czech_republic: () => czech_republic,
  dagger: () => dagger,
  dancer: () => dancer,
  dancers: () => dancers,
  dancing_men: () => dancing_men,
  dancing_women: () => dancing_women,
  dango: () => dango,
  dark_sunglasses: () => dark_sunglasses,
  dart: () => dart,
  dash: () => dash,
  date: () => date,
  de: () => de,
  deaf_man: () => deaf_man,
  deaf_person: () => deaf_person,
  deaf_woman: () => deaf_woman,
  deciduous_tree: () => deciduous_tree,
  deer: () => deer,
  default: () => full_default,
  denmark: () => denmark,
  department_store: () => department_store,
  derelict_house: () => derelict_house,
  desert: () => desert,
  desert_island: () => desert_island,
  desktop_computer: () => desktop_computer,
  detective: () => detective,
  diamond_shape_with_a_dot_inside: () => diamond_shape_with_a_dot_inside,
  diamonds: () => diamonds,
  diego_garcia: () => diego_garcia,
  disappointed: () => disappointed,
  disappointed_relieved: () => disappointed_relieved,
  disguised_face: () => disguised_face,
  diving_mask: () => diving_mask,
  diya_lamp: () => diya_lamp,
  dizzy: () => dizzy,
  dizzy_face: () => dizzy_face,
  djibouti: () => djibouti,
  dna: () => dna,
  do_not_litter: () => do_not_litter,
  dodo: () => dodo,
  dog: () => dog,
  dog2: () => dog2,
  dollar: () => dollar,
  dolls: () => dolls,
  dolphin: () => dolphin,
  dominica: () => dominica,
  dominican_republic: () => dominican_republic,
  door: () => door,
  doughnut: () => doughnut,
  dove: () => dove,
  dragon: () => dragon,
  dragon_face: () => dragon_face,
  dress: () => dress,
  dromedary_camel: () => dromedary_camel,
  drooling_face: () => drooling_face,
  drop_of_blood: () => drop_of_blood,
  droplet: () => droplet,
  drum: () => drum,
  duck: () => duck,
  dumpling: () => dumpling,
  dvd: () => dvd,
  eagle: () => eagle,
  ear: () => ear,
  ear_of_rice: () => ear_of_rice,
  ear_with_hearing_aid: () => ear_with_hearing_aid,
  earth_africa: () => earth_africa,
  earth_americas: () => earth_americas,
  earth_asia: () => earth_asia,
  ecuador: () => ecuador,
  egg: () => egg,
  eggplant: () => eggplant,
  egypt: () => egypt,
  eight: () => eight,
  eight_pointed_black_star: () => eight_pointed_black_star,
  eight_spoked_asterisk: () => eight_spoked_asterisk,
  eject_button: () => eject_button,
  el_salvador: () => el_salvador,
  electric_plug: () => electric_plug,
  elephant: () => elephant,
  elevator: () => elevator,
  elf: () => elf,
  elf_man: () => elf_man,
  elf_woman: () => elf_woman,
  email: () => email,
  end: () => end,
  england: () => england,
  envelope: () => envelope,
  envelope_with_arrow: () => envelope_with_arrow,
  equatorial_guinea: () => equatorial_guinea,
  eritrea: () => eritrea,
  es: () => es,
  estonia: () => estonia,
  ethiopia: () => ethiopia,
  eu: () => eu,
  euro: () => euro,
  european_castle: () => european_castle,
  european_post_office: () => european_post_office,
  european_union: () => european_union,
  evergreen_tree: () => evergreen_tree,
  exclamation: () => "❗",
  exploding_head: () => exploding_head,
  expressionless: () => expressionless,
  eye: () => eye,
  eye_speech_bubble: () => eye_speech_bubble,
  eyeglasses: () => eyeglasses,
  eyes: () => eyes,
  face_with_head_bandage: () => face_with_head_bandage,
  face_with_thermometer: () => face_with_thermometer,
  facepalm: () => facepalm,
  facepunch: () => facepunch,
  factory: () => factory,
  factory_worker: () => factory_worker,
  fairy: () => fairy,
  fairy_man: () => fairy_man,
  fairy_woman: () => fairy_woman,
  falafel: () => falafel,
  falkland_islands: () => falkland_islands,
  fallen_leaf: () => fallen_leaf,
  family: () => family,
  family_man_boy: () => family_man_boy,
  family_man_boy_boy: () => family_man_boy_boy,
  family_man_girl: () => family_man_girl,
  family_man_girl_boy: () => family_man_girl_boy,
  family_man_girl_girl: () => family_man_girl_girl,
  family_man_man_boy: () => family_man_man_boy,
  family_man_man_boy_boy: () => family_man_man_boy_boy,
  family_man_man_girl: () => family_man_man_girl,
  family_man_man_girl_boy: () => family_man_man_girl_boy,
  family_man_man_girl_girl: () => family_man_man_girl_girl,
  family_man_woman_boy: () => family_man_woman_boy,
  family_man_woman_boy_boy: () => family_man_woman_boy_boy,
  family_man_woman_girl: () => family_man_woman_girl,
  family_man_woman_girl_boy: () => family_man_woman_girl_boy,
  family_man_woman_girl_girl: () => family_man_woman_girl_girl,
  family_woman_boy: () => family_woman_boy,
  family_woman_boy_boy: () => family_woman_boy_boy,
  family_woman_girl: () => family_woman_girl,
  family_woman_girl_boy: () => family_woman_girl_boy,
  family_woman_girl_girl: () => family_woman_girl_girl,
  family_woman_woman_boy: () => family_woman_woman_boy,
  family_woman_woman_boy_boy: () => family_woman_woman_boy_boy,
  family_woman_woman_girl: () => family_woman_woman_girl,
  family_woman_woman_girl_boy: () => family_woman_woman_girl_boy,
  family_woman_woman_girl_girl: () => family_woman_woman_girl_girl,
  farmer: () => farmer,
  faroe_islands: () => faroe_islands,
  fast_forward: () => "⏩",
  fax: () => fax,
  fearful: () => fearful,
  feather: () => feather,
  feet: () => feet,
  female_detective: () => female_detective,
  female_sign: () => female_sign,
  ferris_wheel: () => ferris_wheel,
  ferry: () => ferry,
  field_hockey: () => field_hockey,
  fiji: () => fiji,
  file_cabinet: () => file_cabinet,
  file_folder: () => file_folder,
  film_projector: () => film_projector,
  film_strip: () => film_strip,
  finland: () => finland,
  fire: () => fire,
  fire_engine: () => fire_engine,
  fire_extinguisher: () => fire_extinguisher,
  firecracker: () => firecracker,
  firefighter: () => firefighter,
  fireworks: () => fireworks,
  first_quarter_moon: () => first_quarter_moon,
  first_quarter_moon_with_face: () => first_quarter_moon_with_face,
  fish: () => fish,
  fish_cake: () => fish_cake,
  fishing_pole_and_fish: () => fishing_pole_and_fish,
  fist: () => "✊",
  fist_left: () => fist_left,
  fist_oncoming: () => fist_oncoming,
  fist_raised: () => "✊",
  fist_right: () => fist_right,
  five: () => five,
  flags: () => flags,
  flamingo: () => flamingo,
  flashlight: () => flashlight,
  flat_shoe: () => flat_shoe,
  flatbread: () => flatbread,
  fleur_de_lis: () => fleur_de_lis,
  flight_arrival: () => flight_arrival,
  flight_departure: () => flight_departure,
  flipper: () => flipper,
  floppy_disk: () => floppy_disk,
  flower_playing_cards: () => flower_playing_cards,
  flushed: () => flushed,
  fly: () => fly,
  flying_disc: () => flying_disc,
  flying_saucer: () => flying_saucer,
  fog: () => fog,
  foggy: () => foggy,
  fondue: () => fondue,
  foot: () => foot,
  football: () => football,
  footprints: () => footprints,
  fork_and_knife: () => fork_and_knife,
  fortune_cookie: () => fortune_cookie,
  fountain: () => "⛲",
  fountain_pen: () => fountain_pen,
  four: () => four,
  four_leaf_clover: () => four_leaf_clover,
  fox_face: () => fox_face,
  fr: () => fr,
  framed_picture: () => framed_picture,
  free: () => free,
  french_guiana: () => french_guiana,
  french_polynesia: () => french_polynesia,
  french_southern_territories: () => french_southern_territories,
  fried_egg: () => fried_egg,
  fried_shrimp: () => fried_shrimp,
  fries: () => fries,
  frog: () => frog,
  frowning: () => frowning,
  frowning_face: () => frowning_face,
  frowning_man: () => frowning_man,
  frowning_person: () => frowning_person,
  frowning_woman: () => frowning_woman,
  fu: () => fu,
  fuelpump: () => "⛽",
  full_moon: () => full_moon,
  full_moon_with_face: () => full_moon_with_face,
  funeral_urn: () => funeral_urn,
  gabon: () => gabon,
  gambia: () => gambia,
  game_die: () => game_die,
  garlic: () => garlic,
  gb: () => gb,
  gear: () => gear,
  gem: () => gem,
  gemini: () => "♊",
  genie: () => genie,
  genie_man: () => genie_man,
  genie_woman: () => genie_woman,
  georgia: () => georgia,
  ghana: () => ghana,
  ghost: () => ghost,
  gibraltar: () => gibraltar,
  gift: () => gift,
  gift_heart: () => gift_heart,
  giraffe: () => giraffe,
  girl: () => girl,
  globe_with_meridians: () => globe_with_meridians,
  gloves: () => gloves,
  goal_net: () => goal_net,
  goat: () => goat,
  goggles: () => goggles,
  golf: () => "⛳",
  golfing: () => golfing,
  golfing_man: () => golfing_man,
  golfing_woman: () => golfing_woman,
  gorilla: () => gorilla,
  grapes: () => grapes,
  greece: () => greece,
  green_apple: () => green_apple,
  green_book: () => green_book,
  green_circle: () => green_circle,
  green_heart: () => green_heart,
  green_salad: () => green_salad,
  green_square: () => green_square,
  greenland: () => greenland,
  grenada: () => grenada,
  grey_exclamation: () => "❕",
  grey_question: () => "❔",
  grimacing: () => grimacing,
  grin: () => grin,
  grinning: () => grinning,
  guadeloupe: () => guadeloupe,
  guam: () => guam,
  guard: () => guard,
  guardsman: () => guardsman,
  guardswoman: () => guardswoman,
  guatemala: () => guatemala,
  guernsey: () => guernsey,
  guide_dog: () => guide_dog,
  guinea: () => guinea,
  guinea_bissau: () => guinea_bissau,
  guitar: () => guitar,
  gun: () => gun,
  guyana: () => guyana,
  haircut: () => haircut,
  haircut_man: () => haircut_man,
  haircut_woman: () => haircut_woman,
  haiti: () => haiti,
  hamburger: () => hamburger,
  hammer: () => hammer,
  hammer_and_pick: () => hammer_and_pick,
  hammer_and_wrench: () => hammer_and_wrench,
  hamster: () => hamster,
  hand: () => "✋",
  hand_over_mouth: () => hand_over_mouth,
  handbag: () => handbag,
  handball_person: () => handball_person,
  handshake: () => handshake,
  hankey: () => hankey,
  hash: () => hash,
  hatched_chick: () => hatched_chick,
  hatching_chick: () => hatching_chick,
  headphones: () => headphones,
  headstone: () => headstone,
  health_worker: () => health_worker,
  hear_no_evil: () => hear_no_evil,
  heard_mcdonald_islands: () => heard_mcdonald_islands,
  heart: () => heart,
  heart_decoration: () => heart_decoration,
  heart_eyes: () => heart_eyes,
  heart_eyes_cat: () => heart_eyes_cat,
  heartbeat: () => heartbeat,
  heartpulse: () => heartpulse,
  hearts: () => hearts,
  heavy_check_mark: () => heavy_check_mark,
  heavy_division_sign: () => "➗",
  heavy_dollar_sign: () => heavy_dollar_sign,
  heavy_exclamation_mark: () => "❗",
  heavy_heart_exclamation: () => heavy_heart_exclamation,
  heavy_minus_sign: () => "➖",
  heavy_multiplication_x: () => heavy_multiplication_x,
  heavy_plus_sign: () => "➕",
  hedgehog: () => hedgehog,
  helicopter: () => helicopter,
  herb: () => herb,
  hibiscus: () => hibiscus,
  high_brightness: () => high_brightness,
  high_heel: () => high_heel,
  hiking_boot: () => hiking_boot,
  hindu_temple: () => hindu_temple,
  hippopotamus: () => hippopotamus,
  hocho: () => hocho,
  hole: () => hole,
  honduras: () => honduras,
  honey_pot: () => honey_pot,
  honeybee: () => honeybee,
  hong_kong: () => hong_kong,
  hook: () => hook,
  horse: () => horse,
  horse_racing: () => horse_racing,
  hospital: () => hospital,
  hot_face: () => hot_face,
  hot_pepper: () => hot_pepper,
  hotdog: () => hotdog,
  hotel: () => hotel,
  hotsprings: () => hotsprings,
  hourglass: () => "⌛",
  hourglass_flowing_sand: () => "⏳",
  house: () => house,
  house_with_garden: () => house_with_garden,
  houses: () => houses,
  hugs: () => hugs,
  hungary: () => hungary,
  hushed: () => hushed,
  hut: () => hut,
  ice_cream: () => ice_cream,
  ice_cube: () => ice_cube,
  ice_hockey: () => ice_hockey,
  ice_skate: () => ice_skate,
  icecream: () => icecream,
  iceland: () => iceland,
  id: () => id,
  ideograph_advantage: () => ideograph_advantage,
  imp: () => imp,
  inbox_tray: () => inbox_tray,
  incoming_envelope: () => incoming_envelope,
  india: () => india,
  indonesia: () => indonesia,
  infinity: () => infinity,
  information_desk_person: () => information_desk_person,
  information_source: () => information_source,
  innocent: () => innocent,
  interrobang: () => interrobang,
  iphone: () => iphone,
  iran: () => iran,
  iraq: () => iraq,
  ireland: () => ireland,
  isle_of_man: () => isle_of_man,
  israel: () => israel,
  it: () => it,
  izakaya_lantern: () => izakaya_lantern,
  jack_o_lantern: () => jack_o_lantern,
  jamaica: () => jamaica,
  japan: () => japan,
  japanese_castle: () => japanese_castle,
  japanese_goblin: () => japanese_goblin,
  japanese_ogre: () => japanese_ogre,
  jeans: () => jeans,
  jersey: () => jersey,
  jigsaw: () => jigsaw,
  jordan: () => jordan,
  joy: () => joy,
  joy_cat: () => joy_cat,
  joystick: () => joystick,
  jp: () => jp,
  judge: () => judge,
  juggling_person: () => juggling_person,
  kaaba: () => kaaba,
  kangaroo: () => kangaroo,
  kazakhstan: () => kazakhstan,
  kenya: () => kenya,
  key: () => key,
  keyboard: () => keyboard,
  keycap_ten: () => keycap_ten,
  kick_scooter: () => kick_scooter,
  kimono: () => kimono,
  kiribati: () => kiribati,
  kiss: () => kiss,
  kissing: () => kissing,
  kissing_cat: () => kissing_cat,
  kissing_closed_eyes: () => kissing_closed_eyes,
  kissing_heart: () => kissing_heart,
  kissing_smiling_eyes: () => kissing_smiling_eyes,
  kite: () => kite,
  kiwi_fruit: () => kiwi_fruit,
  kneeling_man: () => kneeling_man,
  kneeling_person: () => kneeling_person,
  kneeling_woman: () => kneeling_woman,
  knife: () => knife,
  knot: () => knot,
  koala: () => koala,
  koko: () => koko,
  kosovo: () => kosovo,
  kr: () => kr,
  kuwait: () => kuwait,
  kyrgyzstan: () => kyrgyzstan,
  lab_coat: () => lab_coat,
  label: () => label$1,
  lacrosse: () => lacrosse,
  ladder: () => ladder,
  lady_beetle: () => lady_beetle,
  lantern: () => lantern,
  laos: () => laos,
  large_blue_circle: () => large_blue_circle,
  large_blue_diamond: () => large_blue_diamond,
  large_orange_diamond: () => large_orange_diamond,
  last_quarter_moon: () => last_quarter_moon,
  last_quarter_moon_with_face: () => last_quarter_moon_with_face,
  latin_cross: () => latin_cross,
  latvia: () => latvia,
  laughing: () => laughing,
  leafy_green: () => leafy_green,
  leaves: () => leaves,
  lebanon: () => lebanon,
  ledger: () => ledger,
  left_luggage: () => left_luggage,
  left_right_arrow: () => left_right_arrow,
  left_speech_bubble: () => left_speech_bubble,
  leftwards_arrow_with_hook: () => leftwards_arrow_with_hook,
  leg: () => leg,
  lemon: () => lemon,
  leo: () => "♌",
  leopard: () => leopard,
  lesotho: () => lesotho,
  level_slider: () => level_slider,
  liberia: () => liberia,
  libra: () => "♎",
  libya: () => libya,
  liechtenstein: () => liechtenstein,
  light_rail: () => light_rail,
  link: () => link,
  lion: () => lion,
  lips: () => lips,
  lipstick: () => lipstick,
  lithuania: () => lithuania,
  lizard: () => lizard,
  llama: () => llama,
  lobster: () => lobster,
  lock: () => lock,
  lock_with_ink_pen: () => lock_with_ink_pen,
  lollipop: () => lollipop,
  long_drum: () => long_drum,
  loop: () => "➿",
  lotion_bottle: () => lotion_bottle,
  lotus_position: () => lotus_position,
  lotus_position_man: () => lotus_position_man,
  lotus_position_woman: () => lotus_position_woman,
  loud_sound: () => loud_sound,
  loudspeaker: () => loudspeaker,
  love_hotel: () => love_hotel,
  love_letter: () => love_letter,
  love_you_gesture: () => love_you_gesture,
  low_brightness: () => low_brightness,
  luggage: () => luggage,
  lungs: () => lungs,
  luxembourg: () => luxembourg,
  lying_face: () => lying_face,
  m: () => m,
  macau: () => macau,
  macedonia: () => macedonia,
  madagascar: () => madagascar,
  mag: () => mag,
  mag_right: () => mag_right,
  mage: () => mage,
  mage_man: () => mage_man,
  mage_woman: () => mage_woman,
  magic_wand: () => magic_wand,
  magnet: () => magnet,
  mahjong: () => mahjong,
  mailbox: () => mailbox,
  mailbox_closed: () => mailbox_closed,
  mailbox_with_mail: () => mailbox_with_mail,
  mailbox_with_no_mail: () => mailbox_with_no_mail,
  malawi: () => malawi,
  malaysia: () => malaysia,
  maldives: () => maldives,
  male_detective: () => male_detective,
  male_sign: () => male_sign,
  mali: () => mali,
  malta: () => malta,
  mammoth: () => mammoth,
  man: () => man,
  man_artist: () => man_artist,
  man_astronaut: () => man_astronaut,
  man_cartwheeling: () => man_cartwheeling,
  man_cook: () => man_cook,
  man_dancing: () => man_dancing,
  man_facepalming: () => man_facepalming,
  man_factory_worker: () => man_factory_worker,
  man_farmer: () => man_farmer,
  man_feeding_baby: () => man_feeding_baby,
  man_firefighter: () => man_firefighter,
  man_health_worker: () => man_health_worker,
  man_in_manual_wheelchair: () => man_in_manual_wheelchair,
  man_in_motorized_wheelchair: () => man_in_motorized_wheelchair,
  man_in_tuxedo: () => man_in_tuxedo,
  man_judge: () => man_judge,
  man_juggling: () => man_juggling,
  man_mechanic: () => man_mechanic,
  man_office_worker: () => man_office_worker,
  man_pilot: () => man_pilot,
  man_playing_handball: () => man_playing_handball,
  man_playing_water_polo: () => man_playing_water_polo,
  man_scientist: () => man_scientist,
  man_shrugging: () => man_shrugging,
  man_singer: () => man_singer,
  man_student: () => man_student,
  man_teacher: () => man_teacher,
  man_technologist: () => man_technologist,
  man_with_gua_pi_mao: () => man_with_gua_pi_mao,
  man_with_probing_cane: () => man_with_probing_cane,
  man_with_turban: () => man_with_turban,
  man_with_veil: () => man_with_veil,
  mandarin: () => mandarin,
  mango: () => mango,
  mans_shoe: () => mans_shoe,
  mantelpiece_clock: () => mantelpiece_clock,
  manual_wheelchair: () => manual_wheelchair,
  maple_leaf: () => maple_leaf,
  marshall_islands: () => marshall_islands,
  martial_arts_uniform: () => martial_arts_uniform,
  martinique: () => martinique,
  mask: () => mask,
  massage: () => massage,
  massage_man: () => massage_man,
  massage_woman: () => massage_woman,
  mate: () => mate,
  mauritania: () => mauritania,
  mauritius: () => mauritius,
  mayotte: () => mayotte,
  meat_on_bone: () => meat_on_bone,
  mechanic: () => mechanic,
  mechanical_arm: () => mechanical_arm,
  mechanical_leg: () => mechanical_leg,
  medal_military: () => medal_military,
  medal_sports: () => medal_sports,
  medical_symbol: () => medical_symbol,
  mega: () => mega,
  melon: () => melon,
  memo: () => memo,
  men_wrestling: () => men_wrestling,
  menorah: () => menorah,
  mens: () => mens,
  mermaid: () => mermaid,
  merman: () => merman,
  merperson: () => merperson,
  metal: () => metal,
  metro: () => metro,
  mexico: () => mexico,
  microbe: () => microbe,
  micronesia: () => micronesia,
  microphone: () => microphone,
  microscope: () => microscope,
  middle_finger: () => middle_finger,
  military_helmet: () => military_helmet,
  milk_glass: () => milk_glass,
  milky_way: () => milky_way,
  minibus: () => minibus,
  minidisc: () => minidisc,
  mirror: () => mirror,
  mobile_phone_off: () => mobile_phone_off,
  moldova: () => moldova,
  monaco: () => monaco,
  money_mouth_face: () => money_mouth_face,
  money_with_wings: () => money_with_wings,
  moneybag: () => moneybag,
  mongolia: () => mongolia,
  monkey: () => monkey,
  monkey_face: () => monkey_face,
  monocle_face: () => monocle_face,
  monorail: () => monorail,
  montenegro: () => montenegro,
  montserrat: () => montserrat,
  moon: () => moon,
  moon_cake: () => moon_cake,
  morocco: () => morocco,
  mortar_board: () => mortar_board,
  mosque: () => mosque,
  mosquito: () => mosquito,
  motor_boat: () => motor_boat,
  motor_scooter: () => motor_scooter,
  motorcycle: () => motorcycle,
  motorized_wheelchair: () => motorized_wheelchair,
  motorway: () => motorway,
  mount_fuji: () => mount_fuji,
  mountain: () => mountain,
  mountain_bicyclist: () => mountain_bicyclist,
  mountain_biking_man: () => mountain_biking_man,
  mountain_biking_woman: () => mountain_biking_woman,
  mountain_cableway: () => mountain_cableway,
  mountain_railway: () => mountain_railway,
  mountain_snow: () => mountain_snow,
  mouse: () => mouse,
  mouse2: () => mouse2,
  mouse_trap: () => mouse_trap,
  movie_camera: () => movie_camera,
  moyai: () => moyai,
  mozambique: () => mozambique,
  mrs_claus: () => mrs_claus,
  muscle: () => muscle,
  mushroom: () => mushroom,
  musical_keyboard: () => musical_keyboard,
  musical_note: () => musical_note,
  musical_score: () => musical_score,
  mute: () => mute,
  mx_claus: () => mx_claus,
  myanmar: () => myanmar,
  nail_care: () => nail_care,
  name_badge: () => name_badge,
  namibia: () => namibia,
  national_park: () => national_park,
  nauru: () => nauru,
  nauseated_face: () => nauseated_face,
  nazar_amulet: () => nazar_amulet,
  necktie: () => necktie,
  negative_squared_cross_mark: () => "❎",
  nepal: () => nepal,
  nerd_face: () => nerd_face,
  nesting_dolls: () => nesting_dolls,
  netherlands: () => netherlands,
  neutral_face: () => neutral_face,
  new_caledonia: () => new_caledonia,
  new_moon: () => new_moon,
  new_moon_with_face: () => new_moon_with_face,
  new_zealand: () => new_zealand,
  newspaper: () => newspaper,
  newspaper_roll: () => newspaper_roll,
  next_track_button: () => next_track_button,
  ng: () => ng,
  ng_man: () => ng_man,
  ng_woman: () => ng_woman,
  nicaragua: () => nicaragua,
  niger: () => niger,
  nigeria: () => nigeria,
  night_with_stars: () => night_with_stars,
  nine: () => nine,
  ninja: () => ninja,
  niue: () => niue,
  no_bell: () => no_bell,
  no_bicycles: () => no_bicycles,
  no_entry: () => "⛔",
  no_entry_sign: () => no_entry_sign,
  no_good: () => no_good,
  no_good_man: () => no_good_man,
  no_good_woman: () => no_good_woman,
  no_mobile_phones: () => no_mobile_phones,
  no_mouth: () => no_mouth,
  no_pedestrians: () => no_pedestrians,
  no_smoking: () => no_smoking,
  norfolk_island: () => norfolk_island,
  north_korea: () => north_korea,
  northern_mariana_islands: () => northern_mariana_islands,
  norway: () => norway,
  nose: () => nose,
  notebook: () => notebook,
  notebook_with_decorative_cover: () => notebook_with_decorative_cover,
  notes: () => notes,
  nut_and_bolt: () => nut_and_bolt,
  o: () => "⭕",
  o2: () => o2,
  ocean: () => ocean,
  octopus: () => octopus,
  oden: () => oden,
  office: () => office,
  office_worker: () => office_worker,
  oil_drum: () => oil_drum,
  ok: () => ok,
  ok_hand: () => ok_hand,
  ok_man: () => ok_man,
  ok_person: () => ok_person,
  ok_woman: () => ok_woman,
  old_key: () => old_key,
  older_adult: () => older_adult,
  older_man: () => older_man,
  older_woman: () => older_woman,
  olive: () => olive,
  om: () => om,
  oman: () => oman,
  on: () => on,
  oncoming_automobile: () => oncoming_automobile,
  oncoming_bus: () => oncoming_bus,
  oncoming_police_car: () => oncoming_police_car,
  oncoming_taxi: () => oncoming_taxi,
  one: () => one,
  one_piece_swimsuit: () => one_piece_swimsuit,
  onion: () => onion,
  open_book: () => open_book,
  open_file_folder: () => open_file_folder,
  open_hands: () => open_hands,
  open_mouth: () => open_mouth,
  open_umbrella: () => open_umbrella,
  ophiuchus: () => "⛎",
  orange: () => orange,
  orange_book: () => orange_book,
  orange_circle: () => orange_circle,
  orange_heart: () => orange_heart,
  orange_square: () => orange_square,
  orangutan: () => orangutan,
  orthodox_cross: () => orthodox_cross,
  otter: () => otter,
  outbox_tray: () => outbox_tray,
  owl: () => owl,
  ox: () => ox,
  oyster: () => oyster,
  page_facing_up: () => page_facing_up,
  page_with_curl: () => page_with_curl,
  pager: () => pager,
  paintbrush: () => paintbrush,
  pakistan: () => pakistan,
  palau: () => palau,
  palestinian_territories: () => palestinian_territories,
  palm_tree: () => palm_tree,
  palms_up_together: () => palms_up_together,
  panama: () => panama,
  pancakes: () => pancakes,
  panda_face: () => panda_face,
  paperclip: () => paperclip,
  paperclips: () => paperclips,
  papua_new_guinea: () => papua_new_guinea,
  parachute: () => parachute,
  paraguay: () => paraguay,
  parasol_on_ground: () => parasol_on_ground,
  parking: () => parking,
  parrot: () => parrot,
  part_alternation_mark: () => part_alternation_mark,
  partly_sunny: () => "⛅",
  partying_face: () => partying_face,
  passenger_ship: () => passenger_ship,
  passport_control: () => passport_control,
  pause_button: () => pause_button,
  paw_prints: () => paw_prints,
  peace_symbol: () => peace_symbol,
  peach: () => peach,
  peacock: () => peacock,
  peanuts: () => peanuts,
  pear: () => pear,
  pen: () => pen,
  pencil: () => pencil,
  pencil2: () => pencil2,
  penguin: () => penguin,
  pensive: () => pensive,
  people_holding_hands: () => people_holding_hands,
  people_hugging: () => people_hugging,
  performing_arts: () => performing_arts,
  persevere: () => persevere,
  person_bald: () => person_bald,
  person_curly_hair: () => person_curly_hair,
  person_feeding_baby: () => person_feeding_baby,
  person_fencing: () => person_fencing,
  person_in_manual_wheelchair: () => person_in_manual_wheelchair,
  person_in_motorized_wheelchair: () => person_in_motorized_wheelchair,
  person_in_tuxedo: () => person_in_tuxedo,
  person_red_hair: () => person_red_hair,
  person_white_hair: () => person_white_hair,
  person_with_probing_cane: () => person_with_probing_cane,
  person_with_turban: () => person_with_turban,
  person_with_veil: () => person_with_veil,
  peru: () => peru,
  petri_dish: () => petri_dish,
  philippines: () => philippines,
  phone: () => phone,
  pick: () => pick,
  pickup_truck: () => pickup_truck,
  pie: () => pie,
  pig: () => pig,
  pig2: () => pig2,
  pig_nose: () => pig_nose,
  pill: () => pill,
  pilot: () => pilot,
  pinata: () => pinata,
  pinched_fingers: () => pinched_fingers,
  pinching_hand: () => pinching_hand,
  pineapple: () => pineapple,
  ping_pong: () => ping_pong,
  pirate_flag: () => pirate_flag,
  pisces: () => "♓",
  pitcairn_islands: () => pitcairn_islands,
  pizza: () => pizza,
  placard: () => placard,
  place_of_worship: () => place_of_worship,
  plate_with_cutlery: () => plate_with_cutlery,
  play_or_pause_button: () => play_or_pause_button,
  pleading_face: () => pleading_face,
  plunger: () => plunger,
  point_down: () => point_down,
  point_left: () => point_left,
  point_right: () => point_right,
  point_up: () => point_up,
  point_up_2: () => point_up_2,
  poland: () => poland,
  polar_bear: () => polar_bear,
  police_car: () => police_car,
  police_officer: () => police_officer,
  policeman: () => policeman,
  policewoman: () => policewoman,
  poodle: () => poodle,
  poop: () => poop,
  popcorn: () => popcorn,
  portugal: () => portugal,
  post_office: () => post_office,
  postal_horn: () => postal_horn,
  postbox: () => postbox,
  potable_water: () => potable_water,
  potato: () => potato,
  potted_plant: () => potted_plant,
  pouch: () => pouch,
  poultry_leg: () => poultry_leg,
  pound: () => pound,
  pout: () => pout,
  pouting_cat: () => pouting_cat,
  pouting_face: () => pouting_face,
  pouting_man: () => pouting_man,
  pouting_woman: () => pouting_woman,
  pray: () => pray,
  prayer_beads: () => prayer_beads,
  pregnant_woman: () => pregnant_woman,
  pretzel: () => pretzel,
  previous_track_button: () => previous_track_button,
  prince: () => prince,
  princess: () => princess,
  printer: () => printer,
  probing_cane: () => probing_cane,
  puerto_rico: () => puerto_rico,
  punch: () => punch,
  purple_circle: () => purple_circle,
  purple_heart: () => purple_heart,
  purple_square: () => purple_square,
  purse: () => purse,
  pushpin: () => pushpin,
  put_litter_in_its_place: () => put_litter_in_its_place,
  qatar: () => qatar,
  question: () => "❓",
  rabbit: () => rabbit,
  rabbit2: () => rabbit2,
  raccoon: () => raccoon,
  racehorse: () => racehorse,
  racing_car: () => racing_car,
  radio: () => radio,
  radio_button: () => radio_button,
  radioactive: () => radioactive,
  rage: () => rage,
  railway_car: () => railway_car,
  railway_track: () => railway_track,
  rainbow: () => rainbow,
  rainbow_flag: () => rainbow_flag,
  raised_back_of_hand: () => raised_back_of_hand,
  raised_eyebrow: () => raised_eyebrow,
  raised_hand: () => "✋",
  raised_hand_with_fingers_splayed: () => raised_hand_with_fingers_splayed,
  raised_hands: () => raised_hands,
  raising_hand: () => raising_hand,
  raising_hand_man: () => raising_hand_man,
  raising_hand_woman: () => raising_hand_woman,
  ram: () => ram,
  ramen: () => ramen,
  rat: () => rat,
  razor: () => razor,
  receipt: () => receipt,
  record_button: () => record_button,
  recycle: () => recycle,
  red_car: () => red_car,
  red_circle: () => red_circle,
  red_envelope: () => red_envelope,
  red_haired_man: () => red_haired_man,
  red_haired_woman: () => red_haired_woman,
  red_square: () => red_square,
  registered: () => registered,
  relaxed: () => relaxed,
  relieved: () => relieved,
  reminder_ribbon: () => reminder_ribbon,
  repeat: () => repeat,
  repeat_one: () => repeat_one,
  rescue_worker_helmet: () => rescue_worker_helmet,
  restroom: () => restroom,
  reunion: () => reunion,
  revolving_hearts: () => revolving_hearts,
  rewind: () => "⏪",
  rhinoceros: () => rhinoceros,
  ribbon: () => ribbon,
  rice: () => rice,
  rice_ball: () => rice_ball,
  rice_cracker: () => rice_cracker,
  rice_scene: () => rice_scene,
  right_anger_bubble: () => right_anger_bubble,
  ring: () => ring,
  ringed_planet: () => ringed_planet,
  robot: () => robot,
  rock: () => rock,
  rocket: () => rocket,
  rofl: () => rofl,
  roll_eyes: () => roll_eyes,
  roll_of_paper: () => roll_of_paper,
  roller_coaster: () => roller_coaster,
  roller_skate: () => roller_skate,
  romania: () => romania,
  rooster: () => rooster,
  rose: () => rose,
  rosette: () => rosette,
  rotating_light: () => rotating_light,
  round_pushpin: () => round_pushpin,
  rowboat: () => rowboat,
  rowing_man: () => rowing_man,
  rowing_woman: () => rowing_woman,
  ru: () => ru,
  rugby_football: () => rugby_football,
  runner: () => runner,
  running: () => running,
  running_man: () => running_man,
  running_shirt_with_sash: () => running_shirt_with_sash,
  running_woman: () => running_woman,
  rwanda: () => rwanda,
  sa: () => sa,
  safety_pin: () => safety_pin,
  safety_vest: () => safety_vest,
  sagittarius: () => "♐",
  sailboat: () => "⛵",
  sake: () => sake,
  salt: () => salt,
  samoa: () => samoa,
  san_marino: () => san_marino,
  sandal: () => sandal,
  sandwich: () => sandwich,
  santa: () => santa,
  sao_tome_principe: () => sao_tome_principe,
  sari: () => sari,
  sassy_man: () => sassy_man,
  sassy_woman: () => sassy_woman,
  satellite: () => satellite,
  satisfied: () => satisfied,
  saudi_arabia: () => saudi_arabia,
  sauna_man: () => sauna_man,
  sauna_person: () => sauna_person,
  sauna_woman: () => sauna_woman,
  sauropod: () => sauropod,
  saxophone: () => saxophone,
  scarf: () => scarf,
  school: () => school,
  school_satchel: () => school_satchel,
  scientist: () => scientist,
  scissors: () => scissors,
  scorpion: () => scorpion,
  scorpius: () => "♏",
  scotland: () => scotland,
  scream: () => scream,
  scream_cat: () => scream_cat,
  screwdriver: () => screwdriver,
  scroll: () => scroll,
  seal: () => seal,
  seat: () => seat,
  secret: () => secret,
  see_no_evil: () => see_no_evil,
  seedling: () => seedling,
  selfie: () => selfie,
  senegal: () => senegal,
  serbia: () => serbia,
  service_dog: () => service_dog,
  seven: () => seven,
  sewing_needle: () => sewing_needle,
  seychelles: () => seychelles,
  shallow_pan_of_food: () => shallow_pan_of_food,
  shamrock: () => shamrock,
  shark: () => shark,
  shaved_ice: () => shaved_ice,
  sheep: () => sheep,
  shell: () => shell,
  shield: () => shield,
  shinto_shrine: () => shinto_shrine,
  ship: () => ship,
  shirt: () => shirt,
  shit: () => shit,
  shoe: () => shoe,
  shopping: () => shopping,
  shopping_cart: () => shopping_cart,
  shorts: () => shorts,
  shower: () => shower,
  shrimp: () => shrimp,
  shrug: () => shrug,
  shushing_face: () => shushing_face,
  sierra_leone: () => sierra_leone,
  signal_strength: () => signal_strength,
  singapore: () => singapore,
  singer: () => singer,
  sint_maarten: () => sint_maarten,
  six: () => six,
  six_pointed_star: () => six_pointed_star,
  skateboard: () => skateboard,
  ski: () => ski,
  skier: () => skier,
  skull: () => skull,
  skull_and_crossbones: () => skull_and_crossbones,
  skunk: () => skunk,
  sled: () => sled,
  sleeping: () => sleeping,
  sleeping_bed: () => sleeping_bed,
  sleepy: () => sleepy,
  slightly_frowning_face: () => slightly_frowning_face,
  slightly_smiling_face: () => slightly_smiling_face,
  slot_machine: () => slot_machine,
  sloth: () => sloth,
  slovakia: () => slovakia,
  slovenia: () => slovenia,
  small_airplane: () => small_airplane,
  small_blue_diamond: () => small_blue_diamond,
  small_orange_diamond: () => small_orange_diamond,
  small_red_triangle: () => small_red_triangle,
  small_red_triangle_down: () => small_red_triangle_down,
  smile: () => smile,
  smile_cat: () => smile_cat,
  smiley: () => smiley,
  smiley_cat: () => smiley_cat,
  smiling_face_with_tear: () => smiling_face_with_tear,
  smiling_face_with_three_hearts: () => smiling_face_with_three_hearts,
  smiling_imp: () => smiling_imp,
  smirk: () => smirk,
  smirk_cat: () => smirk_cat,
  smoking: () => smoking,
  snail: () => snail,
  snake: () => snake,
  sneezing_face: () => sneezing_face,
  snowboarder: () => snowboarder,
  snowflake: () => snowflake,
  snowman: () => "⛄",
  snowman_with_snow: () => snowman_with_snow,
  soap: () => soap,
  sob: () => sob,
  soccer: () => "⚽",
  socks: () => socks,
  softball: () => softball,
  solomon_islands: () => solomon_islands,
  somalia: () => somalia,
  soon: () => soon,
  sos: () => sos,
  sound: () => sound,
  south_africa: () => south_africa,
  south_georgia_south_sandwich_islands: () => south_georgia_south_sandwich_islands,
  south_sudan: () => south_sudan,
  space_invader: () => space_invader,
  spades: () => spades,
  spaghetti: () => spaghetti,
  sparkle: () => sparkle,
  sparkler: () => sparkler,
  sparkles: () => "✨",
  sparkling_heart: () => sparkling_heart,
  speak_no_evil: () => speak_no_evil,
  speaker: () => speaker,
  speaking_head: () => speaking_head,
  speech_balloon: () => speech_balloon,
  speedboat: () => speedboat,
  spider: () => spider,
  spider_web: () => spider_web,
  spiral_calendar: () => spiral_calendar,
  spiral_notepad: () => spiral_notepad,
  sponge: () => sponge,
  spoon: () => spoon,
  squid: () => squid,
  sri_lanka: () => sri_lanka,
  st_barthelemy: () => st_barthelemy,
  st_helena: () => st_helena,
  st_kitts_nevis: () => st_kitts_nevis,
  st_lucia: () => st_lucia,
  st_martin: () => st_martin,
  st_pierre_miquelon: () => st_pierre_miquelon,
  st_vincent_grenadines: () => st_vincent_grenadines,
  stadium: () => stadium,
  standing_man: () => standing_man,
  standing_person: () => standing_person,
  standing_woman: () => standing_woman,
  star: () => "⭐",
  star2: () => star2,
  star_and_crescent: () => star_and_crescent,
  star_of_david: () => star_of_david,
  star_struck: () => star_struck,
  stars: () => stars,
  station: () => station,
  statue_of_liberty: () => statue_of_liberty,
  steam_locomotive: () => steam_locomotive,
  stethoscope: () => stethoscope,
  stew: () => stew,
  stop_button: () => stop_button,
  stop_sign: () => stop_sign,
  stopwatch: () => stopwatch,
  straight_ruler: () => straight_ruler,
  strawberry: () => strawberry,
  stuck_out_tongue: () => stuck_out_tongue,
  stuck_out_tongue_closed_eyes: () => stuck_out_tongue_closed_eyes,
  stuck_out_tongue_winking_eye: () => stuck_out_tongue_winking_eye,
  student: () => student,
  studio_microphone: () => studio_microphone,
  stuffed_flatbread: () => stuffed_flatbread,
  sudan: () => sudan,
  sun_behind_large_cloud: () => sun_behind_large_cloud,
  sun_behind_rain_cloud: () => sun_behind_rain_cloud,
  sun_behind_small_cloud: () => sun_behind_small_cloud,
  sun_with_face: () => sun_with_face,
  sunflower: () => sunflower,
  sunglasses: () => sunglasses,
  sunny: () => sunny,
  sunrise: () => sunrise,
  sunrise_over_mountains: () => sunrise_over_mountains,
  superhero: () => superhero,
  superhero_man: () => superhero_man,
  superhero_woman: () => superhero_woman,
  supervillain: () => supervillain,
  supervillain_man: () => supervillain_man,
  supervillain_woman: () => supervillain_woman,
  surfer: () => surfer,
  surfing_man: () => surfing_man,
  surfing_woman: () => surfing_woman,
  suriname: () => suriname,
  sushi: () => sushi,
  suspension_railway: () => suspension_railway,
  svalbard_jan_mayen: () => svalbard_jan_mayen,
  swan: () => swan,
  swaziland: () => swaziland,
  sweat: () => sweat,
  sweat_drops: () => sweat_drops,
  sweat_smile: () => sweat_smile,
  sweden: () => sweden,
  sweet_potato: () => sweet_potato,
  swim_brief: () => swim_brief,
  swimmer: () => swimmer,
  swimming_man: () => swimming_man,
  swimming_woman: () => swimming_woman,
  switzerland: () => switzerland,
  symbols: () => symbols,
  synagogue: () => synagogue,
  syria: () => syria,
  syringe: () => syringe,
  taco: () => taco,
  tada: () => tada,
  taiwan: () => taiwan,
  tajikistan: () => tajikistan,
  takeout_box: () => takeout_box,
  tamale: () => tamale,
  tanabata_tree: () => tanabata_tree,
  tangerine: () => tangerine,
  tanzania: () => tanzania,
  taurus: () => "♉",
  taxi: () => taxi,
  tea: () => tea,
  teacher: () => teacher,
  teapot: () => teapot,
  technologist: () => technologist,
  teddy_bear: () => teddy_bear,
  telephone: () => telephone,
  telephone_receiver: () => telephone_receiver,
  telescope: () => telescope,
  tennis: () => tennis,
  tent: () => "⛺",
  test_tube: () => test_tube,
  thailand: () => thailand,
  thermometer: () => thermometer,
  thinking: () => thinking,
  thong_sandal: () => thong_sandal,
  thought_balloon: () => thought_balloon,
  thread: () => thread,
  three: () => three,
  thumbsdown: () => thumbsdown,
  thumbsup: () => thumbsup,
  ticket: () => ticket,
  tickets: () => tickets,
  tiger: () => tiger,
  tiger2: () => tiger2,
  timer_clock: () => timer_clock,
  timor_leste: () => timor_leste,
  tipping_hand_man: () => tipping_hand_man,
  tipping_hand_person: () => tipping_hand_person,
  tipping_hand_woman: () => tipping_hand_woman,
  tired_face: () => tired_face,
  tm: () => tm,
  togo: () => togo,
  toilet: () => toilet,
  tokelau: () => tokelau,
  tokyo_tower: () => tokyo_tower,
  tomato: () => tomato,
  tonga: () => tonga,
  tongue: () => tongue,
  toolbox: () => toolbox,
  tooth: () => tooth,
  toothbrush: () => toothbrush,
  top: () => top$1,
  tophat: () => tophat,
  tornado: () => tornado,
  tr: () => tr,
  trackball: () => trackball,
  tractor: () => tractor,
  traffic_light: () => traffic_light,
  train: () => train,
  train2: () => train2,
  tram: () => tram,
  transgender_flag: () => transgender_flag,
  transgender_symbol: () => transgender_symbol,
  triangular_flag_on_post: () => triangular_flag_on_post,
  triangular_ruler: () => triangular_ruler,
  trident: () => trident,
  trinidad_tobago: () => trinidad_tobago,
  tristan_da_cunha: () => tristan_da_cunha,
  triumph: () => triumph,
  trolleybus: () => trolleybus,
  trophy: () => trophy,
  tropical_drink: () => tropical_drink,
  tropical_fish: () => tropical_fish,
  truck: () => truck,
  trumpet: () => trumpet,
  tshirt: () => tshirt,
  tulip: () => tulip,
  tumbler_glass: () => tumbler_glass,
  tunisia: () => tunisia,
  turkey: () => turkey,
  turkmenistan: () => turkmenistan,
  turks_caicos_islands: () => turks_caicos_islands,
  turtle: () => turtle,
  tuvalu: () => tuvalu,
  tv: () => tv,
  twisted_rightwards_arrows: () => twisted_rightwards_arrows,
  two: () => two,
  two_hearts: () => two_hearts,
  two_men_holding_hands: () => two_men_holding_hands,
  two_women_holding_hands: () => two_women_holding_hands,
  u6e80: () => u6e80,
  uganda: () => uganda,
  uk: () => uk,
  ukraine: () => ukraine,
  umbrella: () => "☔",
  unamused: () => unamused,
  underage: () => underage,
  unicorn: () => unicorn,
  united_arab_emirates: () => united_arab_emirates,
  united_nations: () => united_nations,
  unlock: () => unlock,
  up: () => up,
  upside_down_face: () => upside_down_face,
  uruguay: () => uruguay,
  us: () => us,
  us_outlying_islands: () => us_outlying_islands,
  us_virgin_islands: () => us_virgin_islands,
  uzbekistan: () => uzbekistan,
  v: () => v,
  vampire: () => vampire,
  vampire_man: () => vampire_man,
  vampire_woman: () => vampire_woman,
  vanuatu: () => vanuatu,
  vatican_city: () => vatican_city,
  venezuela: () => venezuela,
  vertical_traffic_light: () => vertical_traffic_light,
  vhs: () => vhs,
  vibration_mode: () => vibration_mode,
  video_camera: () => video_camera,
  video_game: () => video_game,
  vietnam: () => vietnam,
  violin: () => violin,
  virgo: () => "♍",
  volcano: () => volcano,
  volleyball: () => volleyball,
  vomiting_face: () => vomiting_face,
  vs: () => vs,
  vulcan_salute: () => vulcan_salute,
  waffle: () => waffle,
  wales: () => wales,
  walking: () => walking,
  walking_man: () => walking_man,
  walking_woman: () => walking_woman,
  wallis_futuna: () => wallis_futuna,
  waning_crescent_moon: () => waning_crescent_moon,
  waning_gibbous_moon: () => waning_gibbous_moon,
  warning: () => warning,
  wastebasket: () => wastebasket,
  watch: () => "⌚",
  water_buffalo: () => water_buffalo,
  water_polo: () => water_polo,
  watermelon: () => watermelon,
  wave: () => wave,
  wavy_dash: () => wavy_dash,
  waxing_crescent_moon: () => waxing_crescent_moon,
  waxing_gibbous_moon: () => waxing_gibbous_moon,
  wc: () => wc,
  weary: () => weary,
  wedding: () => wedding,
  weight_lifting: () => weight_lifting,
  weight_lifting_man: () => weight_lifting_man,
  weight_lifting_woman: () => weight_lifting_woman,
  western_sahara: () => western_sahara,
  whale: () => whale,
  whale2: () => whale2,
  wheel_of_dharma: () => wheel_of_dharma,
  wheelchair: () => "♿",
  white_check_mark: () => "✅",
  white_circle: () => "⚪",
  white_flag: () => white_flag,
  white_flower: () => white_flower,
  white_haired_man: () => white_haired_man,
  white_haired_woman: () => white_haired_woman,
  white_heart: () => white_heart,
  white_large_square: () => "⬜",
  white_medium_small_square: () => "◽",
  white_medium_square: () => white_medium_square,
  white_small_square: () => white_small_square,
  white_square_button: () => white_square_button,
  wilted_flower: () => wilted_flower,
  wind_chime: () => wind_chime,
  wind_face: () => wind_face,
  window: () => window$1,
  wine_glass: () => wine_glass,
  wink: () => wink,
  wolf: () => wolf,
  woman: () => woman,
  woman_artist: () => woman_artist,
  woman_astronaut: () => woman_astronaut,
  woman_cartwheeling: () => woman_cartwheeling,
  woman_cook: () => woman_cook,
  woman_dancing: () => woman_dancing,
  woman_facepalming: () => woman_facepalming,
  woman_factory_worker: () => woman_factory_worker,
  woman_farmer: () => woman_farmer,
  woman_feeding_baby: () => woman_feeding_baby,
  woman_firefighter: () => woman_firefighter,
  woman_health_worker: () => woman_health_worker,
  woman_in_manual_wheelchair: () => woman_in_manual_wheelchair,
  woman_in_motorized_wheelchair: () => woman_in_motorized_wheelchair,
  woman_in_tuxedo: () => woman_in_tuxedo,
  woman_judge: () => woman_judge,
  woman_juggling: () => woman_juggling,
  woman_mechanic: () => woman_mechanic,
  woman_office_worker: () => woman_office_worker,
  woman_pilot: () => woman_pilot,
  woman_playing_handball: () => woman_playing_handball,
  woman_playing_water_polo: () => woman_playing_water_polo,
  woman_scientist: () => woman_scientist,
  woman_shrugging: () => woman_shrugging,
  woman_singer: () => woman_singer,
  woman_student: () => woman_student,
  woman_teacher: () => woman_teacher,
  woman_technologist: () => woman_technologist,
  woman_with_headscarf: () => woman_with_headscarf,
  woman_with_probing_cane: () => woman_with_probing_cane,
  woman_with_turban: () => woman_with_turban,
  woman_with_veil: () => woman_with_veil,
  womans_clothes: () => womans_clothes,
  womans_hat: () => womans_hat,
  women_wrestling: () => women_wrestling,
  womens: () => womens,
  wood: () => wood,
  woozy_face: () => woozy_face,
  world_map: () => world_map,
  worm: () => worm,
  worried: () => worried,
  wrench: () => wrench,
  wrestling: () => wrestling,
  writing_hand: () => writing_hand,
  x: () => "❌",
  yarn: () => yarn,
  yawning_face: () => yawning_face,
  yellow_circle: () => yellow_circle,
  yellow_heart: () => yellow_heart,
  yellow_square: () => yellow_square,
  yemen: () => yemen,
  yen: () => yen,
  yin_yang: () => yin_yang,
  yo_yo: () => yo_yo,
  yum: () => yum,
  zambia: () => zambia,
  zany_face: () => zany_face,
  zap: () => "⚡",
  zebra: () => zebra,
  zero: () => zero,
  zimbabwe: () => zimbabwe,
  zipper_mouth_face: () => zipper_mouth_face,
  zombie: () => zombie,
  zombie_man: () => zombie_man,
  zombie_woman: () => zombie_woman,
  zzz: () => zzz
});
var grinning;
var smiley;
var smile;
var grin;
var laughing;
var satisfied;
var sweat_smile;
var rofl;
var joy;
var slightly_smiling_face;
var upside_down_face;
var wink;
var blush;
var innocent;
var smiling_face_with_three_hearts;
var heart_eyes;
var star_struck;
var kissing_heart;
var kissing;
var relaxed;
var kissing_closed_eyes;
var kissing_smiling_eyes;
var smiling_face_with_tear;
var yum;
var stuck_out_tongue;
var stuck_out_tongue_winking_eye;
var zany_face;
var stuck_out_tongue_closed_eyes;
var money_mouth_face;
var hugs;
var hand_over_mouth;
var shushing_face;
var thinking;
var zipper_mouth_face;
var raised_eyebrow;
var neutral_face;
var expressionless;
var no_mouth;
var smirk;
var unamused;
var roll_eyes;
var grimacing;
var lying_face;
var relieved;
var pensive;
var sleepy;
var drooling_face;
var sleeping;
var mask;
var face_with_thermometer;
var face_with_head_bandage;
var nauseated_face;
var vomiting_face;
var sneezing_face;
var hot_face;
var cold_face;
var woozy_face;
var dizzy_face;
var exploding_head;
var cowboy_hat_face;
var partying_face;
var disguised_face;
var sunglasses;
var nerd_face;
var monocle_face;
var confused;
var worried;
var slightly_frowning_face;
var frowning_face;
var open_mouth;
var hushed;
var astonished;
var flushed;
var pleading_face;
var frowning;
var anguished;
var fearful;
var cold_sweat;
var disappointed_relieved;
var cry;
var sob;
var scream;
var confounded;
var persevere;
var disappointed;
var sweat;
var weary;
var tired_face;
var yawning_face;
var triumph;
var rage;
var pout;
var angry;
var cursing_face;
var smiling_imp;
var imp;
var skull;
var skull_and_crossbones;
var hankey;
var poop;
var shit;
var clown_face;
var japanese_ogre;
var japanese_goblin;
var ghost;
var alien;
var space_invader;
var robot;
var smiley_cat;
var smile_cat;
var joy_cat;
var heart_eyes_cat;
var smirk_cat;
var kissing_cat;
var scream_cat;
var crying_cat_face;
var pouting_cat;
var see_no_evil;
var hear_no_evil;
var speak_no_evil;
var kiss;
var love_letter;
var cupid;
var gift_heart;
var sparkling_heart;
var heartpulse;
var heartbeat;
var revolving_hearts;
var two_hearts;
var heart_decoration;
var heavy_heart_exclamation;
var broken_heart;
var heart;
var orange_heart;
var yellow_heart;
var green_heart;
var blue_heart;
var purple_heart;
var brown_heart;
var black_heart;
var white_heart;
var anger;
var boom;
var collision;
var dizzy;
var sweat_drops;
var dash;
var hole;
var bomb;
var speech_balloon;
var eye_speech_bubble;
var left_speech_bubble;
var right_anger_bubble;
var thought_balloon;
var zzz;
var wave;
var raised_back_of_hand;
var raised_hand_with_fingers_splayed;
var vulcan_salute;
var ok_hand;
var pinched_fingers;
var pinching_hand;
var v;
var crossed_fingers;
var love_you_gesture;
var metal;
var call_me_hand;
var point_left;
var point_right;
var point_up_2;
var middle_finger;
var fu;
var point_down;
var point_up;
var thumbsup;
var thumbsdown;
var fist_oncoming;
var facepunch;
var punch;
var fist_left;
var fist_right;
var clap;
var raised_hands;
var open_hands;
var palms_up_together;
var handshake;
var pray;
var writing_hand;
var nail_care;
var selfie;
var muscle;
var mechanical_arm;
var mechanical_leg;
var leg;
var foot;
var ear;
var ear_with_hearing_aid;
var nose;
var brain;
var anatomical_heart;
var lungs;
var tooth;
var bone;
var eyes;
var eye;
var tongue;
var lips;
var baby;
var child;
var boy;
var girl;
var adult;
var blond_haired_person;
var man;
var bearded_person;
var red_haired_man;
var curly_haired_man;
var white_haired_man;
var bald_man;
var woman;
var red_haired_woman;
var person_red_hair;
var curly_haired_woman;
var person_curly_hair;
var white_haired_woman;
var person_white_hair;
var bald_woman;
var person_bald;
var blond_haired_woman;
var blonde_woman;
var blond_haired_man;
var older_adult;
var older_man;
var older_woman;
var frowning_person;
var frowning_man;
var frowning_woman;
var pouting_face;
var pouting_man;
var pouting_woman;
var no_good;
var no_good_man;
var ng_man;
var no_good_woman;
var ng_woman;
var ok_person;
var ok_man;
var ok_woman;
var tipping_hand_person;
var information_desk_person;
var tipping_hand_man;
var sassy_man;
var tipping_hand_woman;
var sassy_woman;
var raising_hand;
var raising_hand_man;
var raising_hand_woman;
var deaf_person;
var deaf_man;
var deaf_woman;
var bow;
var bowing_man;
var bowing_woman;
var facepalm;
var man_facepalming;
var woman_facepalming;
var shrug;
var man_shrugging;
var woman_shrugging;
var health_worker;
var man_health_worker;
var woman_health_worker;
var student;
var man_student;
var woman_student;
var teacher;
var man_teacher;
var woman_teacher;
var judge;
var man_judge;
var woman_judge;
var farmer;
var man_farmer;
var woman_farmer;
var cook;
var man_cook;
var woman_cook;
var mechanic;
var man_mechanic;
var woman_mechanic;
var factory_worker;
var man_factory_worker;
var woman_factory_worker;
var office_worker;
var man_office_worker;
var woman_office_worker;
var scientist;
var man_scientist;
var woman_scientist;
var technologist;
var man_technologist;
var woman_technologist;
var singer;
var man_singer;
var woman_singer;
var artist;
var man_artist;
var woman_artist;
var pilot;
var man_pilot;
var woman_pilot;
var astronaut;
var man_astronaut;
var woman_astronaut;
var firefighter;
var man_firefighter;
var woman_firefighter;
var police_officer;
var cop;
var policeman;
var policewoman;
var detective;
var male_detective;
var female_detective;
var guard;
var guardsman;
var guardswoman;
var ninja;
var construction_worker;
var construction_worker_man;
var construction_worker_woman;
var prince;
var princess;
var person_with_turban;
var man_with_turban;
var woman_with_turban;
var man_with_gua_pi_mao;
var woman_with_headscarf;
var person_in_tuxedo;
var man_in_tuxedo;
var woman_in_tuxedo;
var person_with_veil;
var man_with_veil;
var woman_with_veil;
var bride_with_veil;
var pregnant_woman;
var breast_feeding;
var woman_feeding_baby;
var man_feeding_baby;
var person_feeding_baby;
var angel;
var santa;
var mrs_claus;
var mx_claus;
var superhero;
var superhero_man;
var superhero_woman;
var supervillain;
var supervillain_man;
var supervillain_woman;
var mage;
var mage_man;
var mage_woman;
var fairy;
var fairy_man;
var fairy_woman;
var vampire;
var vampire_man;
var vampire_woman;
var merperson;
var merman;
var mermaid;
var elf;
var elf_man;
var elf_woman;
var genie;
var genie_man;
var genie_woman;
var zombie;
var zombie_man;
var zombie_woman;
var massage;
var massage_man;
var massage_woman;
var haircut;
var haircut_man;
var haircut_woman;
var walking;
var walking_man;
var walking_woman;
var standing_person;
var standing_man;
var standing_woman;
var kneeling_person;
var kneeling_man;
var kneeling_woman;
var person_with_probing_cane;
var man_with_probing_cane;
var woman_with_probing_cane;
var person_in_motorized_wheelchair;
var man_in_motorized_wheelchair;
var woman_in_motorized_wheelchair;
var person_in_manual_wheelchair;
var man_in_manual_wheelchair;
var woman_in_manual_wheelchair;
var runner;
var running;
var running_man;
var running_woman;
var woman_dancing;
var dancer;
var man_dancing;
var business_suit_levitating;
var dancers;
var dancing_men;
var dancing_women;
var sauna_person;
var sauna_man;
var sauna_woman;
var climbing;
var climbing_man;
var climbing_woman;
var person_fencing;
var horse_racing;
var skier;
var snowboarder;
var golfing;
var golfing_man;
var golfing_woman;
var surfer;
var surfing_man;
var surfing_woman;
var rowboat;
var rowing_man;
var rowing_woman;
var swimmer;
var swimming_man;
var swimming_woman;
var bouncing_ball_person;
var bouncing_ball_man;
var basketball_man;
var bouncing_ball_woman;
var basketball_woman;
var weight_lifting;
var weight_lifting_man;
var weight_lifting_woman;
var bicyclist;
var biking_man;
var biking_woman;
var mountain_bicyclist;
var mountain_biking_man;
var mountain_biking_woman;
var cartwheeling;
var man_cartwheeling;
var woman_cartwheeling;
var wrestling;
var men_wrestling;
var women_wrestling;
var water_polo;
var man_playing_water_polo;
var woman_playing_water_polo;
var handball_person;
var man_playing_handball;
var woman_playing_handball;
var juggling_person;
var man_juggling;
var woman_juggling;
var lotus_position;
var lotus_position_man;
var lotus_position_woman;
var bath;
var sleeping_bed;
var people_holding_hands;
var two_women_holding_hands;
var couple;
var two_men_holding_hands;
var couplekiss;
var couplekiss_man_woman;
var couplekiss_man_man;
var couplekiss_woman_woman;
var couple_with_heart;
var couple_with_heart_woman_man;
var couple_with_heart_man_man;
var couple_with_heart_woman_woman;
var family;
var family_man_woman_boy;
var family_man_woman_girl;
var family_man_woman_girl_boy;
var family_man_woman_boy_boy;
var family_man_woman_girl_girl;
var family_man_man_boy;
var family_man_man_girl;
var family_man_man_girl_boy;
var family_man_man_boy_boy;
var family_man_man_girl_girl;
var family_woman_woman_boy;
var family_woman_woman_girl;
var family_woman_woman_girl_boy;
var family_woman_woman_boy_boy;
var family_woman_woman_girl_girl;
var family_man_boy;
var family_man_boy_boy;
var family_man_girl;
var family_man_girl_boy;
var family_man_girl_girl;
var family_woman_boy;
var family_woman_boy_boy;
var family_woman_girl;
var family_woman_girl_boy;
var family_woman_girl_girl;
var speaking_head;
var bust_in_silhouette;
var busts_in_silhouette;
var people_hugging;
var footprints;
var monkey_face;
var monkey;
var gorilla;
var orangutan;
var dog;
var dog2;
var guide_dog;
var service_dog;
var poodle;
var wolf;
var fox_face;
var raccoon;
var cat;
var cat2;
var black_cat;
var lion;
var tiger;
var tiger2;
var leopard;
var horse;
var racehorse;
var unicorn;
var zebra;
var deer;
var bison;
var cow;
var ox;
var water_buffalo;
var cow2;
var pig;
var pig2;
var boar;
var pig_nose;
var ram;
var sheep;
var goat;
var dromedary_camel;
var camel;
var llama;
var giraffe;
var elephant;
var mammoth;
var rhinoceros;
var hippopotamus;
var mouse;
var mouse2;
var rat;
var hamster;
var rabbit;
var rabbit2;
var chipmunk;
var beaver;
var hedgehog;
var bat;
var bear;
var polar_bear;
var koala;
var panda_face;
var sloth;
var otter;
var skunk;
var kangaroo;
var badger;
var feet;
var paw_prints;
var turkey;
var chicken;
var rooster;
var hatching_chick;
var baby_chick;
var hatched_chick;
var bird;
var penguin;
var dove;
var eagle;
var duck;
var swan;
var owl;
var dodo;
var feather;
var flamingo;
var peacock;
var parrot;
var frog;
var crocodile;
var turtle;
var lizard;
var snake;
var dragon_face;
var dragon;
var sauropod;
var whale;
var whale2;
var dolphin;
var flipper;
var seal;
var fish;
var tropical_fish;
var blowfish;
var shark;
var octopus;
var shell;
var snail;
var butterfly;
var bug;
var ant;
var bee;
var honeybee;
var beetle;
var lady_beetle;
var cricket;
var cockroach;
var spider;
var spider_web;
var scorpion;
var mosquito;
var fly;
var worm;
var microbe;
var bouquet;
var cherry_blossom;
var white_flower;
var rosette;
var rose;
var wilted_flower;
var hibiscus;
var sunflower;
var blossom;
var tulip;
var seedling;
var potted_plant;
var evergreen_tree;
var deciduous_tree;
var palm_tree;
var cactus;
var ear_of_rice;
var herb;
var shamrock;
var four_leaf_clover;
var maple_leaf;
var fallen_leaf;
var leaves;
var grapes;
var melon;
var watermelon;
var tangerine;
var orange;
var mandarin;
var lemon;
var banana;
var pineapple;
var mango;
var apple;
var green_apple;
var pear;
var peach;
var cherries;
var strawberry;
var blueberries;
var kiwi_fruit;
var tomato;
var olive;
var coconut;
var avocado;
var eggplant;
var potato;
var carrot;
var corn;
var hot_pepper;
var bell_pepper;
var cucumber;
var leafy_green;
var broccoli;
var garlic;
var onion;
var mushroom;
var peanuts;
var chestnut;
var bread;
var croissant;
var baguette_bread;
var flatbread;
var pretzel;
var bagel;
var pancakes;
var waffle;
var cheese;
var meat_on_bone;
var poultry_leg;
var cut_of_meat;
var bacon;
var hamburger;
var fries;
var pizza;
var hotdog;
var sandwich;
var taco;
var burrito;
var tamale;
var stuffed_flatbread;
var falafel;
var egg;
var fried_egg;
var shallow_pan_of_food;
var stew;
var fondue;
var bowl_with_spoon;
var green_salad;
var popcorn;
var butter;
var salt;
var canned_food;
var bento;
var rice_cracker;
var rice_ball;
var rice;
var curry;
var ramen;
var spaghetti;
var sweet_potato;
var oden;
var sushi;
var fried_shrimp;
var fish_cake;
var moon_cake;
var dango;
var dumpling;
var fortune_cookie;
var takeout_box;
var crab;
var lobster;
var shrimp;
var squid;
var oyster;
var icecream;
var shaved_ice;
var ice_cream;
var doughnut;
var cookie;
var birthday;
var cake;
var cupcake;
var pie;
var chocolate_bar;
var candy;
var lollipop;
var custard;
var honey_pot;
var baby_bottle;
var milk_glass;
var teapot;
var tea;
var sake;
var champagne;
var wine_glass;
var cocktail;
var tropical_drink;
var beer;
var beers;
var clinking_glasses;
var tumbler_glass;
var cup_with_straw;
var bubble_tea;
var beverage_box;
var mate;
var ice_cube;
var chopsticks;
var plate_with_cutlery;
var fork_and_knife;
var spoon;
var hocho;
var knife;
var amphora;
var earth_africa;
var earth_americas;
var earth_asia;
var globe_with_meridians;
var world_map;
var japan;
var compass;
var mountain_snow;
var mountain;
var volcano;
var mount_fuji;
var camping;
var beach_umbrella;
var desert;
var desert_island;
var national_park;
var stadium;
var classical_building;
var building_construction;
var bricks;
var rock;
var wood;
var hut;
var houses;
var derelict_house;
var house;
var house_with_garden;
var office;
var post_office;
var european_post_office;
var hospital;
var bank;
var hotel;
var love_hotel;
var convenience_store;
var school;
var department_store;
var factory;
var japanese_castle;
var european_castle;
var wedding;
var tokyo_tower;
var statue_of_liberty;
var mosque;
var hindu_temple;
var synagogue;
var shinto_shrine;
var kaaba;
var foggy;
var night_with_stars;
var cityscape;
var sunrise_over_mountains;
var sunrise;
var city_sunset;
var city_sunrise;
var bridge_at_night;
var hotsprings;
var carousel_horse;
var ferris_wheel;
var roller_coaster;
var barber;
var circus_tent;
var steam_locomotive;
var railway_car;
var bullettrain_side;
var bullettrain_front;
var train2;
var metro;
var light_rail;
var station;
var tram;
var monorail;
var mountain_railway;
var train;
var bus;
var oncoming_bus;
var trolleybus;
var minibus;
var ambulance;
var fire_engine;
var police_car;
var oncoming_police_car;
var taxi;
var oncoming_taxi;
var car;
var red_car;
var oncoming_automobile;
var blue_car;
var pickup_truck;
var truck;
var articulated_lorry;
var tractor;
var racing_car;
var motorcycle;
var motor_scooter;
var manual_wheelchair;
var motorized_wheelchair;
var auto_rickshaw;
var bike;
var kick_scooter;
var skateboard;
var roller_skate;
var busstop;
var motorway;
var railway_track;
var oil_drum;
var rotating_light;
var traffic_light;
var vertical_traffic_light;
var stop_sign;
var construction;
var canoe;
var speedboat;
var passenger_ship;
var ferry;
var motor_boat;
var ship;
var airplane;
var small_airplane;
var flight_departure;
var flight_arrival;
var parachute;
var seat;
var helicopter;
var suspension_railway;
var mountain_cableway;
var aerial_tramway;
var artificial_satellite;
var rocket;
var flying_saucer;
var bellhop_bell;
var luggage;
var stopwatch;
var timer_clock;
var mantelpiece_clock;
var clock12;
var clock1230;
var clock1;
var clock130;
var clock2;
var clock230;
var clock3;
var clock330;
var clock4;
var clock430;
var clock5;
var clock530;
var clock6;
var clock630;
var clock7;
var clock730;
var clock8;
var clock830;
var clock9;
var clock930;
var clock10;
var clock1030;
var clock11;
var clock1130;
var new_moon;
var waxing_crescent_moon;
var first_quarter_moon;
var moon;
var waxing_gibbous_moon;
var full_moon;
var waning_gibbous_moon;
var last_quarter_moon;
var waning_crescent_moon;
var crescent_moon;
var new_moon_with_face;
var first_quarter_moon_with_face;
var last_quarter_moon_with_face;
var thermometer;
var sunny;
var full_moon_with_face;
var sun_with_face;
var ringed_planet;
var star2;
var stars;
var milky_way;
var cloud;
var cloud_with_lightning_and_rain;
var sun_behind_small_cloud;
var sun_behind_large_cloud;
var sun_behind_rain_cloud;
var cloud_with_rain;
var cloud_with_snow;
var cloud_with_lightning;
var tornado;
var fog;
var wind_face;
var cyclone;
var rainbow;
var closed_umbrella;
var open_umbrella;
var parasol_on_ground;
var snowflake;
var snowman_with_snow;
var comet;
var fire;
var droplet;
var ocean;
var jack_o_lantern;
var christmas_tree;
var fireworks;
var sparkler;
var firecracker;
var balloon;
var tada;
var confetti_ball;
var tanabata_tree;
var bamboo;
var dolls;
var flags;
var wind_chime;
var rice_scene;
var red_envelope;
var ribbon;
var gift;
var reminder_ribbon;
var tickets;
var ticket;
var medal_military;
var trophy;
var medal_sports;
var softball;
var basketball;
var volleyball;
var football;
var rugby_football;
var tennis;
var flying_disc;
var bowling;
var cricket_game;
var field_hockey;
var ice_hockey;
var lacrosse;
var ping_pong;
var badminton;
var boxing_glove;
var martial_arts_uniform;
var goal_net;
var ice_skate;
var fishing_pole_and_fish;
var diving_mask;
var running_shirt_with_sash;
var ski;
var sled;
var curling_stone;
var dart;
var yo_yo;
var kite;
var crystal_ball;
var magic_wand;
var nazar_amulet;
var video_game;
var joystick;
var slot_machine;
var game_die;
var jigsaw;
var teddy_bear;
var pinata;
var nesting_dolls;
var spades;
var hearts;
var diamonds;
var clubs;
var chess_pawn;
var black_joker;
var mahjong;
var flower_playing_cards;
var performing_arts;
var framed_picture;
var art;
var thread;
var sewing_needle;
var yarn;
var knot;
var eyeglasses;
var dark_sunglasses;
var goggles;
var lab_coat;
var safety_vest;
var necktie;
var shirt;
var tshirt;
var jeans;
var scarf;
var gloves;
var coat;
var socks;
var dress;
var kimono;
var sari;
var one_piece_swimsuit;
var swim_brief;
var shorts;
var bikini;
var womans_clothes;
var purse;
var handbag;
var pouch;
var shopping;
var school_satchel;
var thong_sandal;
var mans_shoe;
var shoe;
var athletic_shoe;
var hiking_boot;
var flat_shoe;
var high_heel;
var sandal;
var ballet_shoes;
var boot;
var crown;
var womans_hat;
var tophat;
var mortar_board;
var billed_cap;
var military_helmet;
var rescue_worker_helmet;
var prayer_beads;
var lipstick;
var ring;
var gem;
var mute;
var speaker;
var sound;
var loud_sound;
var loudspeaker;
var mega;
var postal_horn;
var bell;
var no_bell;
var musical_score;
var musical_note;
var notes;
var studio_microphone;
var level_slider;
var control_knobs;
var microphone;
var headphones;
var radio;
var saxophone;
var accordion;
var guitar;
var musical_keyboard;
var trumpet;
var violin;
var banjo;
var drum;
var long_drum;
var iphone;
var calling;
var phone;
var telephone;
var telephone_receiver;
var pager;
var fax;
var battery;
var electric_plug;
var computer;
var desktop_computer;
var printer;
var keyboard;
var computer_mouse;
var trackball;
var minidisc;
var floppy_disk;
var cd;
var dvd;
var abacus;
var movie_camera;
var film_strip;
var film_projector;
var clapper;
var tv;
var camera;
var camera_flash;
var video_camera;
var vhs;
var mag;
var mag_right;
var candle;
var bulb;
var flashlight;
var izakaya_lantern;
var lantern;
var diya_lamp;
var notebook_with_decorative_cover;
var closed_book;
var book;
var open_book;
var green_book;
var blue_book;
var orange_book;
var books;
var notebook;
var ledger;
var page_with_curl;
var scroll;
var page_facing_up;
var newspaper;
var newspaper_roll;
var bookmark_tabs;
var bookmark;
var label$1;
var moneybag;
var coin;
var yen;
var dollar;
var euro;
var pound;
var money_with_wings;
var credit_card;
var receipt;
var chart;
var envelope;
var email;
var incoming_envelope;
var envelope_with_arrow;
var outbox_tray;
var inbox_tray;
var mailbox;
var mailbox_closed;
var mailbox_with_mail;
var mailbox_with_no_mail;
var postbox;
var ballot_box;
var pencil2;
var black_nib;
var fountain_pen;
var pen;
var paintbrush;
var crayon;
var memo;
var pencil;
var briefcase;
var file_folder;
var open_file_folder;
var card_index_dividers;
var date;
var calendar;
var spiral_notepad;
var spiral_calendar;
var card_index;
var chart_with_upwards_trend;
var chart_with_downwards_trend;
var bar_chart;
var clipboard;
var pushpin;
var round_pushpin;
var paperclip;
var paperclips;
var straight_ruler;
var triangular_ruler;
var scissors;
var card_file_box;
var file_cabinet;
var wastebasket;
var lock;
var unlock;
var lock_with_ink_pen;
var closed_lock_with_key;
var key;
var old_key;
var hammer;
var axe;
var pick;
var hammer_and_pick;
var hammer_and_wrench;
var dagger;
var crossed_swords;
var gun;
var boomerang;
var bow_and_arrow;
var shield;
var carpentry_saw;
var wrench;
var screwdriver;
var nut_and_bolt;
var gear;
var clamp;
var balance_scale;
var probing_cane;
var link;
var chains;
var hook;
var toolbox;
var magnet;
var ladder;
var alembic;
var test_tube;
var petri_dish;
var dna;
var microscope;
var telescope;
var satellite;
var syringe;
var drop_of_blood;
var pill;
var adhesive_bandage;
var stethoscope;
var door;
var elevator;
var mirror;
var window$1;
var bed;
var couch_and_lamp;
var chair;
var toilet;
var plunger;
var shower;
var bathtub;
var mouse_trap;
var razor;
var lotion_bottle;
var safety_pin;
var broom;
var basket;
var roll_of_paper;
var bucket;
var soap;
var toothbrush;
var sponge;
var fire_extinguisher;
var shopping_cart;
var smoking;
var coffin;
var headstone;
var funeral_urn;
var moyai;
var placard;
var atm;
var put_litter_in_its_place;
var potable_water;
var mens;
var womens;
var restroom;
var baby_symbol;
var wc;
var passport_control;
var customs;
var baggage_claim;
var left_luggage;
var warning;
var children_crossing;
var no_entry_sign;
var no_bicycles;
var no_smoking;
var do_not_litter;
var no_pedestrians;
var no_mobile_phones;
var underage;
var radioactive;
var biohazard;
var arrow_up;
var arrow_upper_right;
var arrow_right;
var arrow_lower_right;
var arrow_down;
var arrow_lower_left;
var arrow_left;
var arrow_upper_left;
var arrow_up_down;
var left_right_arrow;
var leftwards_arrow_with_hook;
var arrow_right_hook;
var arrow_heading_up;
var arrow_heading_down;
var arrows_clockwise;
var arrows_counterclockwise;
var back;
var end;
var on;
var soon;
var top$1;
var place_of_worship;
var atom_symbol;
var om;
var star_of_david;
var wheel_of_dharma;
var yin_yang;
var latin_cross;
var orthodox_cross;
var star_and_crescent;
var peace_symbol;
var menorah;
var six_pointed_star;
var twisted_rightwards_arrows;
var repeat;
var repeat_one;
var arrow_forward;
var next_track_button;
var play_or_pause_button;
var arrow_backward;
var previous_track_button;
var arrow_up_small;
var arrow_down_small;
var pause_button;
var stop_button;
var record_button;
var eject_button;
var cinema;
var low_brightness;
var high_brightness;
var signal_strength;
var vibration_mode;
var mobile_phone_off;
var female_sign;
var male_sign;
var transgender_symbol;
var heavy_multiplication_x;
var infinity;
var bangbang;
var interrobang;
var wavy_dash;
var currency_exchange;
var heavy_dollar_sign;
var medical_symbol;
var recycle;
var fleur_de_lis;
var trident;
var name_badge;
var beginner;
var ballot_box_with_check;
var heavy_check_mark;
var part_alternation_mark;
var eight_spoked_asterisk;
var eight_pointed_black_star;
var sparkle;
var copyright;
var registered;
var tm;
var hash;
var asterisk;
var zero;
var one;
var two;
var three;
var four;
var five;
var six;
var seven;
var eight;
var nine;
var keycap_ten;
var capital_abcd;
var abcd;
var symbols;
var abc;
var a;
var ab;
var b;
var cl;
var cool;
var free;
var information_source;
var id;
var m;
var ng;
var o2;
var ok;
var parking;
var sos;
var up;
var vs;
var koko;
var sa;
var ideograph_advantage;
var accept;
var congratulations;
var secret;
var u6e80;
var red_circle;
var orange_circle;
var yellow_circle;
var green_circle;
var large_blue_circle;
var purple_circle;
var brown_circle;
var red_square;
var orange_square;
var yellow_square;
var green_square;
var blue_square;
var purple_square;
var brown_square;
var black_medium_square;
var white_medium_square;
var black_small_square;
var white_small_square;
var large_orange_diamond;
var large_blue_diamond;
var small_orange_diamond;
var small_blue_diamond;
var small_red_triangle;
var small_red_triangle_down;
var diamond_shape_with_a_dot_inside;
var radio_button;
var white_square_button;
var black_square_button;
var checkered_flag;
var triangular_flag_on_post;
var crossed_flags;
var black_flag;
var white_flag;
var rainbow_flag;
var transgender_flag;
var pirate_flag;
var ascension_island;
var andorra;
var united_arab_emirates;
var afghanistan;
var antigua_barbuda;
var anguilla;
var albania;
var armenia;
var angola;
var antarctica;
var argentina;
var american_samoa;
var austria;
var australia;
var aruba;
var aland_islands;
var azerbaijan;
var bosnia_herzegovina;
var barbados;
var bangladesh;
var belgium;
var burkina_faso;
var bulgaria;
var bahrain;
var burundi;
var benin;
var st_barthelemy;
var bermuda;
var brunei;
var bolivia;
var caribbean_netherlands;
var brazil;
var bahamas;
var bhutan;
var bouvet_island;
var botswana;
var belarus;
var belize;
var canada;
var cocos_islands;
var congo_kinshasa;
var central_african_republic;
var congo_brazzaville;
var switzerland;
var cote_divoire;
var cook_islands;
var chile;
var cameroon;
var cn;
var colombia;
var clipperton_island;
var costa_rica;
var cuba;
var cape_verde;
var curacao;
var christmas_island;
var cyprus;
var czech_republic;
var de;
var diego_garcia;
var djibouti;
var denmark;
var dominica;
var dominican_republic;
var algeria;
var ceuta_melilla;
var ecuador;
var estonia;
var egypt;
var western_sahara;
var eritrea;
var es;
var ethiopia;
var eu;
var european_union;
var finland;
var fiji;
var falkland_islands;
var micronesia;
var faroe_islands;
var fr;
var gabon;
var gb;
var uk;
var grenada;
var georgia;
var french_guiana;
var guernsey;
var ghana;
var gibraltar;
var greenland;
var gambia;
var guinea;
var guadeloupe;
var equatorial_guinea;
var greece;
var south_georgia_south_sandwich_islands;
var guatemala;
var guam;
var guinea_bissau;
var guyana;
var hong_kong;
var heard_mcdonald_islands;
var honduras;
var croatia;
var haiti;
var hungary;
var canary_islands;
var indonesia;
var ireland;
var israel;
var isle_of_man;
var india;
var british_indian_ocean_territory;
var iraq;
var iran;
var iceland;
var it;
var jersey;
var jamaica;
var jordan;
var jp;
var kenya;
var kyrgyzstan;
var cambodia;
var kiribati;
var comoros;
var st_kitts_nevis;
var north_korea;
var kr;
var kuwait;
var cayman_islands;
var kazakhstan;
var laos;
var lebanon;
var st_lucia;
var liechtenstein;
var sri_lanka;
var liberia;
var lesotho;
var lithuania;
var luxembourg;
var latvia;
var libya;
var morocco;
var monaco;
var moldova;
var montenegro;
var st_martin;
var madagascar;
var marshall_islands;
var macedonia;
var mali;
var myanmar;
var mongolia;
var macau;
var northern_mariana_islands;
var martinique;
var mauritania;
var montserrat;
var malta;
var mauritius;
var maldives;
var malawi;
var mexico;
var malaysia;
var mozambique;
var namibia;
var new_caledonia;
var niger;
var norfolk_island;
var nigeria;
var nicaragua;
var netherlands;
var norway;
var nepal;
var nauru;
var niue;
var new_zealand;
var oman;
var panama;
var peru;
var french_polynesia;
var papua_new_guinea;
var philippines;
var pakistan;
var poland;
var st_pierre_miquelon;
var pitcairn_islands;
var puerto_rico;
var palestinian_territories;
var portugal;
var palau;
var paraguay;
var qatar;
var reunion;
var romania;
var serbia;
var ru;
var rwanda;
var saudi_arabia;
var solomon_islands;
var seychelles;
var sudan;
var sweden;
var singapore;
var st_helena;
var slovenia;
var svalbard_jan_mayen;
var slovakia;
var sierra_leone;
var san_marino;
var senegal;
var somalia;
var suriname;
var south_sudan;
var sao_tome_principe;
var el_salvador;
var sint_maarten;
var syria;
var swaziland;
var tristan_da_cunha;
var turks_caicos_islands;
var chad;
var french_southern_territories;
var togo;
var thailand;
var tajikistan;
var tokelau;
var timor_leste;
var turkmenistan;
var tunisia;
var tonga;
var tr;
var trinidad_tobago;
var tuvalu;
var taiwan;
var tanzania;
var ukraine;
var uganda;
var us_outlying_islands;
var united_nations;
var us;
var uruguay;
var uzbekistan;
var vatican_city;
var st_vincent_grenadines;
var venezuela;
var british_virgin_islands;
var us_virgin_islands;
var vietnam;
var vanuatu;
var wallis_futuna;
var samoa;
var kosovo;
var yemen;
var mayotte;
var south_africa;
var zambia;
var zimbabwe;
var england;
var scotland;
var wales;
var full_default;
var init_full = __esmMin((() => {
  grinning = "😀", smiley = "😃", smile = "😄", grin = "😁", laughing = "😆", satisfied = "😆", sweat_smile = "😅", rofl = "🤣", joy = "😂", slightly_smiling_face = "🙂", upside_down_face = "🙃", wink = "😉", blush = "😊", innocent = "😇", smiling_face_with_three_hearts = "🥰", heart_eyes = "😍", star_struck = "🤩", kissing_heart = "😘", kissing = "😗", relaxed = "☺️", kissing_closed_eyes = "😚", kissing_smiling_eyes = "😙", smiling_face_with_tear = "🥲", yum = "😋", stuck_out_tongue = "😛", stuck_out_tongue_winking_eye = "😜", zany_face = "🤪", stuck_out_tongue_closed_eyes = "😝", money_mouth_face = "🤑", hugs = "🤗", hand_over_mouth = "🤭", shushing_face = "🤫", thinking = "🤔", zipper_mouth_face = "🤐", raised_eyebrow = "🤨", neutral_face = "😐", expressionless = "😑", no_mouth = "😶", smirk = "😏", unamused = "😒", roll_eyes = "🙄", grimacing = "😬", lying_face = "🤥", relieved = "😌", pensive = "😔", sleepy = "😪", drooling_face = "🤤", sleeping = "😴", mask = "😷", face_with_thermometer = "🤒", face_with_head_bandage = "🤕", nauseated_face = "🤢", vomiting_face = "🤮", sneezing_face = "🤧", hot_face = "🥵", cold_face = "🥶", woozy_face = "🥴", dizzy_face = "😵", exploding_head = "🤯", cowboy_hat_face = "🤠", partying_face = "🥳", disguised_face = "🥸", sunglasses = "😎", nerd_face = "🤓", monocle_face = "🧐", confused = "😕", worried = "😟", slightly_frowning_face = "🙁", frowning_face = "☹️", open_mouth = "😮", hushed = "😯", astonished = "😲", flushed = "😳", pleading_face = "🥺", frowning = "😦", anguished = "😧", fearful = "😨", cold_sweat = "😰", disappointed_relieved = "😥", cry = "😢", sob = "😭", scream = "😱", confounded = "😖", persevere = "😣", disappointed = "😞", sweat = "😓", weary = "😩", tired_face = "😫", yawning_face = "🥱", triumph = "😤", rage = "😡", pout = "😡", angry = "😠", cursing_face = "🤬", smiling_imp = "😈", imp = "👿", skull = "💀", skull_and_crossbones = "☠️", hankey = "💩", poop = "💩", shit = "💩", clown_face = "🤡", japanese_ogre = "👹", japanese_goblin = "👺", ghost = "👻", alien = "👽", space_invader = "👾", robot = "🤖", smiley_cat = "😺", smile_cat = "😸", joy_cat = "😹", heart_eyes_cat = "😻", smirk_cat = "😼", kissing_cat = "😽", scream_cat = "🙀", crying_cat_face = "😿", pouting_cat = "😾", see_no_evil = "🙈", hear_no_evil = "🙉", speak_no_evil = "🙊", kiss = "💋", love_letter = "💌", cupid = "💘", gift_heart = "💝", sparkling_heart = "💖", heartpulse = "💗", heartbeat = "💓", revolving_hearts = "💞", two_hearts = "💕", heart_decoration = "💟", heavy_heart_exclamation = "❣️", broken_heart = "💔", heart = "❤️", orange_heart = "🧡", yellow_heart = "💛", green_heart = "💚", blue_heart = "💙", purple_heart = "💜", brown_heart = "🤎", black_heart = "🖤", white_heart = "🤍", anger = "💢", boom = "💥", collision = "💥", dizzy = "💫", sweat_drops = "💦", dash = "💨", hole = "🕳️", bomb = "💣", speech_balloon = "💬", eye_speech_bubble = "👁️‍🗨️", left_speech_bubble = "🗨️", right_anger_bubble = "🗯️", thought_balloon = "💭", zzz = "💤", wave = "👋", raised_back_of_hand = "🤚", raised_hand_with_fingers_splayed = "🖐️", vulcan_salute = "🖖", ok_hand = "👌", pinched_fingers = "🤌", pinching_hand = "🤏", v = "✌️", crossed_fingers = "🤞", love_you_gesture = "🤟", metal = "🤘", call_me_hand = "🤙", point_left = "👈", point_right = "👉", point_up_2 = "👆", middle_finger = "🖕", fu = "🖕", point_down = "👇", point_up = "☝️", thumbsup = "👍", thumbsdown = "👎", fist_oncoming = "👊", facepunch = "👊", punch = "👊", fist_left = "🤛", fist_right = "🤜", clap = "👏", raised_hands = "🙌", open_hands = "👐", palms_up_together = "🤲", handshake = "🤝", pray = "🙏", writing_hand = "✍️", nail_care = "💅", selfie = "🤳", muscle = "💪", mechanical_arm = "🦾", mechanical_leg = "🦿", leg = "🦵", foot = "🦶", ear = "👂", ear_with_hearing_aid = "🦻", nose = "👃", brain = "🧠", anatomical_heart = "🫀", lungs = "🫁", tooth = "🦷", bone = "🦴", eyes = "👀", eye = "👁️", tongue = "👅", lips = "👄", baby = "👶", child = "🧒", boy = "👦", girl = "👧", adult = "🧑", blond_haired_person = "👱", man = "👨", bearded_person = "🧔", red_haired_man = "👨‍🦰", curly_haired_man = "👨‍🦱", white_haired_man = "👨‍🦳", bald_man = "👨‍🦲", woman = "👩", red_haired_woman = "👩‍🦰", person_red_hair = "🧑‍🦰", curly_haired_woman = "👩‍🦱", person_curly_hair = "🧑‍🦱", white_haired_woman = "👩‍🦳", person_white_hair = "🧑‍🦳", bald_woman = "👩‍🦲", person_bald = "🧑‍🦲", blond_haired_woman = "👱‍♀️", blonde_woman = "👱‍♀️", blond_haired_man = "👱‍♂️", older_adult = "🧓", older_man = "👴", older_woman = "👵", frowning_person = "🙍", frowning_man = "🙍‍♂️", frowning_woman = "🙍‍♀️", pouting_face = "🙎", pouting_man = "🙎‍♂️", pouting_woman = "🙎‍♀️", no_good = "🙅", no_good_man = "🙅‍♂️", ng_man = "🙅‍♂️", no_good_woman = "🙅‍♀️", ng_woman = "🙅‍♀️", ok_person = "🙆", ok_man = "🙆‍♂️", ok_woman = "🙆‍♀️", tipping_hand_person = "💁", information_desk_person = "💁", tipping_hand_man = "💁‍♂️", sassy_man = "💁‍♂️", tipping_hand_woman = "💁‍♀️", sassy_woman = "💁‍♀️", raising_hand = "🙋", raising_hand_man = "🙋‍♂️", raising_hand_woman = "🙋‍♀️", deaf_person = "🧏", deaf_man = "🧏‍♂️", deaf_woman = "🧏‍♀️", bow = "🙇", bowing_man = "🙇‍♂️", bowing_woman = "🙇‍♀️", facepalm = "🤦", man_facepalming = "🤦‍♂️", woman_facepalming = "🤦‍♀️", shrug = "🤷", man_shrugging = "🤷‍♂️", woman_shrugging = "🤷‍♀️", health_worker = "🧑‍⚕️", man_health_worker = "👨‍⚕️", woman_health_worker = "👩‍⚕️", student = "🧑‍🎓", man_student = "👨‍🎓", woman_student = "👩‍🎓", teacher = "🧑‍🏫", man_teacher = "👨‍🏫", woman_teacher = "👩‍🏫", judge = "🧑‍⚖️", man_judge = "👨‍⚖️", woman_judge = "👩‍⚖️", farmer = "🧑‍🌾", man_farmer = "👨‍🌾", woman_farmer = "👩‍🌾", cook = "🧑‍🍳", man_cook = "👨‍🍳", woman_cook = "👩‍🍳", mechanic = "🧑‍🔧", man_mechanic = "👨‍🔧", woman_mechanic = "👩‍🔧", factory_worker = "🧑‍🏭", man_factory_worker = "👨‍🏭", woman_factory_worker = "👩‍🏭", office_worker = "🧑‍💼", man_office_worker = "👨‍💼", woman_office_worker = "👩‍💼", scientist = "🧑‍🔬", man_scientist = "👨‍🔬", woman_scientist = "👩‍🔬", technologist = "🧑‍💻", man_technologist = "👨‍💻", woman_technologist = "👩‍💻", singer = "🧑‍🎤", man_singer = "👨‍🎤", woman_singer = "👩‍🎤", artist = "🧑‍🎨", man_artist = "👨‍🎨", woman_artist = "👩‍🎨", pilot = "🧑‍✈️", man_pilot = "👨‍✈️", woman_pilot = "👩‍✈️", astronaut = "🧑‍🚀", man_astronaut = "👨‍🚀", woman_astronaut = "👩‍🚀", firefighter = "🧑‍🚒", man_firefighter = "👨‍🚒", woman_firefighter = "👩‍🚒", police_officer = "👮", cop = "👮", policeman = "👮‍♂️", policewoman = "👮‍♀️", detective = "🕵️", male_detective = "🕵️‍♂️", female_detective = "🕵️‍♀️", guard = "💂", guardsman = "💂‍♂️", guardswoman = "💂‍♀️", ninja = "🥷", construction_worker = "👷", construction_worker_man = "👷‍♂️", construction_worker_woman = "👷‍♀️", prince = "🤴", princess = "👸", person_with_turban = "👳", man_with_turban = "👳‍♂️", woman_with_turban = "👳‍♀️", man_with_gua_pi_mao = "👲", woman_with_headscarf = "🧕", person_in_tuxedo = "🤵", man_in_tuxedo = "🤵‍♂️", woman_in_tuxedo = "🤵‍♀️", person_with_veil = "👰", man_with_veil = "👰‍♂️", woman_with_veil = "👰‍♀️", bride_with_veil = "👰‍♀️", pregnant_woman = "🤰", breast_feeding = "🤱", woman_feeding_baby = "👩‍🍼", man_feeding_baby = "👨‍🍼", person_feeding_baby = "🧑‍🍼", angel = "👼", santa = "🎅", mrs_claus = "🤶", mx_claus = "🧑‍🎄", superhero = "🦸", superhero_man = "🦸‍♂️", superhero_woman = "🦸‍♀️", supervillain = "🦹", supervillain_man = "🦹‍♂️", supervillain_woman = "🦹‍♀️", mage = "🧙", mage_man = "🧙‍♂️", mage_woman = "🧙‍♀️", fairy = "🧚", fairy_man = "🧚‍♂️", fairy_woman = "🧚‍♀️", vampire = "🧛", vampire_man = "🧛‍♂️", vampire_woman = "🧛‍♀️", merperson = "🧜", merman = "🧜‍♂️", mermaid = "🧜‍♀️", elf = "🧝", elf_man = "🧝‍♂️", elf_woman = "🧝‍♀️", genie = "🧞", genie_man = "🧞‍♂️", genie_woman = "🧞‍♀️", zombie = "🧟", zombie_man = "🧟‍♂️", zombie_woman = "🧟‍♀️", massage = "💆", massage_man = "💆‍♂️", massage_woman = "💆‍♀️", haircut = "💇", haircut_man = "💇‍♂️", haircut_woman = "💇‍♀️", walking = "🚶", walking_man = "🚶‍♂️", walking_woman = "🚶‍♀️", standing_person = "🧍", standing_man = "🧍‍♂️", standing_woman = "🧍‍♀️", kneeling_person = "🧎", kneeling_man = "🧎‍♂️", kneeling_woman = "🧎‍♀️", person_with_probing_cane = "🧑‍🦯", man_with_probing_cane = "👨‍🦯", woman_with_probing_cane = "👩‍🦯", person_in_motorized_wheelchair = "🧑‍🦼", man_in_motorized_wheelchair = "👨‍🦼", woman_in_motorized_wheelchair = "👩‍🦼", person_in_manual_wheelchair = "🧑‍🦽", man_in_manual_wheelchair = "👨‍🦽", woman_in_manual_wheelchair = "👩‍🦽", runner = "🏃", running = "🏃", running_man = "🏃‍♂️", running_woman = "🏃‍♀️", woman_dancing = "💃", dancer = "💃", man_dancing = "🕺", business_suit_levitating = "🕴️", dancers = "👯", dancing_men = "👯‍♂️", dancing_women = "👯‍♀️", sauna_person = "🧖", sauna_man = "🧖‍♂️", sauna_woman = "🧖‍♀️", climbing = "🧗", climbing_man = "🧗‍♂️", climbing_woman = "🧗‍♀️", person_fencing = "🤺", horse_racing = "🏇", skier = "⛷️", snowboarder = "🏂", golfing = "🏌️", golfing_man = "🏌️‍♂️", golfing_woman = "🏌️‍♀️", surfer = "🏄", surfing_man = "🏄‍♂️", surfing_woman = "🏄‍♀️", rowboat = "🚣", rowing_man = "🚣‍♂️", rowing_woman = "🚣‍♀️", swimmer = "🏊", swimming_man = "🏊‍♂️", swimming_woman = "🏊‍♀️", bouncing_ball_person = "⛹️", bouncing_ball_man = "⛹️‍♂️", basketball_man = "⛹️‍♂️", bouncing_ball_woman = "⛹️‍♀️", basketball_woman = "⛹️‍♀️", weight_lifting = "🏋️", weight_lifting_man = "🏋️‍♂️", weight_lifting_woman = "🏋️‍♀️", bicyclist = "🚴", biking_man = "🚴‍♂️", biking_woman = "🚴‍♀️", mountain_bicyclist = "🚵", mountain_biking_man = "🚵‍♂️", mountain_biking_woman = "🚵‍♀️", cartwheeling = "🤸", man_cartwheeling = "🤸‍♂️", woman_cartwheeling = "🤸‍♀️", wrestling = "🤼", men_wrestling = "🤼‍♂️", women_wrestling = "🤼‍♀️", water_polo = "🤽", man_playing_water_polo = "🤽‍♂️", woman_playing_water_polo = "🤽‍♀️", handball_person = "🤾", man_playing_handball = "🤾‍♂️", woman_playing_handball = "🤾‍♀️", juggling_person = "🤹", man_juggling = "🤹‍♂️", woman_juggling = "🤹‍♀️", lotus_position = "🧘", lotus_position_man = "🧘‍♂️", lotus_position_woman = "🧘‍♀️", bath = "🛀", sleeping_bed = "🛌", people_holding_hands = "🧑‍🤝‍🧑", two_women_holding_hands = "👭", couple = "👫", two_men_holding_hands = "👬", couplekiss = "💏", couplekiss_man_woman = "👩‍❤️‍💋‍👨", couplekiss_man_man = "👨‍❤️‍💋‍👨", couplekiss_woman_woman = "👩‍❤️‍💋‍👩", couple_with_heart = "💑", couple_with_heart_woman_man = "👩‍❤️‍👨", couple_with_heart_man_man = "👨‍❤️‍👨", couple_with_heart_woman_woman = "👩‍❤️‍👩", family = "👪", family_man_woman_boy = "👨‍👩‍👦", family_man_woman_girl = "👨‍👩‍👧", family_man_woman_girl_boy = "👨‍👩‍👧‍👦", family_man_woman_boy_boy = "👨‍👩‍👦‍👦", family_man_woman_girl_girl = "👨‍👩‍👧‍👧", family_man_man_boy = "👨‍👨‍👦", family_man_man_girl = "👨‍👨‍👧", family_man_man_girl_boy = "👨‍👨‍👧‍👦", family_man_man_boy_boy = "👨‍👨‍👦‍👦", family_man_man_girl_girl = "👨‍👨‍👧‍👧", family_woman_woman_boy = "👩‍👩‍👦", family_woman_woman_girl = "👩‍👩‍👧", family_woman_woman_girl_boy = "👩‍👩‍👧‍👦", family_woman_woman_boy_boy = "👩‍👩‍👦‍👦", family_woman_woman_girl_girl = "👩‍👩‍👧‍👧", family_man_boy = "👨‍👦", family_man_boy_boy = "👨‍👦‍👦", family_man_girl = "👨‍👧", family_man_girl_boy = "👨‍👧‍👦", family_man_girl_girl = "👨‍👧‍👧", family_woman_boy = "👩‍👦", family_woman_boy_boy = "👩‍👦‍👦", family_woman_girl = "👩‍👧", family_woman_girl_boy = "👩‍👧‍👦", family_woman_girl_girl = "👩‍👧‍👧", speaking_head = "🗣️", bust_in_silhouette = "👤", busts_in_silhouette = "👥", people_hugging = "🫂", footprints = "👣", monkey_face = "🐵", monkey = "🐒", gorilla = "🦍", orangutan = "🦧", dog = "🐶", dog2 = "🐕", guide_dog = "🦮", service_dog = "🐕‍🦺", poodle = "🐩", wolf = "🐺", fox_face = "🦊", raccoon = "🦝", cat = "🐱", cat2 = "🐈", black_cat = "🐈‍⬛", lion = "🦁", tiger = "🐯", tiger2 = "🐅", leopard = "🐆", horse = "🐴", racehorse = "🐎", unicorn = "🦄", zebra = "🦓", deer = "🦌", bison = "🦬", cow = "🐮", ox = "🐂", water_buffalo = "🐃", cow2 = "🐄", pig = "🐷", pig2 = "🐖", boar = "🐗", pig_nose = "🐽", ram = "🐏", sheep = "🐑", goat = "🐐", dromedary_camel = "🐪", camel = "🐫", llama = "🦙", giraffe = "🦒", elephant = "🐘", mammoth = "🦣", rhinoceros = "🦏", hippopotamus = "🦛", mouse = "🐭", mouse2 = "🐁", rat = "🐀", hamster = "🐹", rabbit = "🐰", rabbit2 = "🐇", chipmunk = "🐿️", beaver = "🦫", hedgehog = "🦔", bat = "🦇", bear = "🐻", polar_bear = "🐻‍❄️", koala = "🐨", panda_face = "🐼", sloth = "🦥", otter = "🦦", skunk = "🦨", kangaroo = "🦘", badger = "🦡", feet = "🐾", paw_prints = "🐾", turkey = "🦃", chicken = "🐔", rooster = "🐓", hatching_chick = "🐣", baby_chick = "🐤", hatched_chick = "🐥", bird = "🐦", penguin = "🐧", dove = "🕊️", eagle = "🦅", duck = "🦆", swan = "🦢", owl = "🦉", dodo = "🦤", feather = "🪶", flamingo = "🦩", peacock = "🦚", parrot = "🦜", frog = "🐸", crocodile = "🐊", turtle = "🐢", lizard = "🦎", snake = "🐍", dragon_face = "🐲", dragon = "🐉", sauropod = "🦕", whale = "🐳", whale2 = "🐋", dolphin = "🐬", flipper = "🐬", seal = "🦭", fish = "🐟", tropical_fish = "🐠", blowfish = "🐡", shark = "🦈", octopus = "🐙", shell = "🐚", snail = "🐌", butterfly = "🦋", bug = "🐛", ant = "🐜", bee = "🐝", honeybee = "🐝", beetle = "🪲", lady_beetle = "🐞", cricket = "🦗", cockroach = "🪳", spider = "🕷️", spider_web = "🕸️", scorpion = "🦂", mosquito = "🦟", fly = "🪰", worm = "🪱", microbe = "🦠", bouquet = "💐", cherry_blossom = "🌸", white_flower = "💮", rosette = "🏵️", rose = "🌹", wilted_flower = "🥀", hibiscus = "🌺", sunflower = "🌻", blossom = "🌼", tulip = "🌷", seedling = "🌱", potted_plant = "🪴", evergreen_tree = "🌲", deciduous_tree = "🌳", palm_tree = "🌴", cactus = "🌵", ear_of_rice = "🌾", herb = "🌿", shamrock = "☘️", four_leaf_clover = "🍀", maple_leaf = "🍁", fallen_leaf = "🍂", leaves = "🍃", grapes = "🍇", melon = "🍈", watermelon = "🍉", tangerine = "🍊", orange = "🍊", mandarin = "🍊", lemon = "🍋", banana = "🍌", pineapple = "🍍", mango = "🥭", apple = "🍎", green_apple = "🍏", pear = "🍐", peach = "🍑", cherries = "🍒", strawberry = "🍓", blueberries = "🫐", kiwi_fruit = "🥝", tomato = "🍅", olive = "🫒", coconut = "🥥", avocado = "🥑", eggplant = "🍆", potato = "🥔", carrot = "🥕", corn = "🌽", hot_pepper = "🌶️", bell_pepper = "🫑", cucumber = "🥒", leafy_green = "🥬", broccoli = "🥦", garlic = "🧄", onion = "🧅", mushroom = "🍄", peanuts = "🥜", chestnut = "🌰", bread = "🍞", croissant = "🥐", baguette_bread = "🥖", flatbread = "🫓", pretzel = "🥨", bagel = "🥯", pancakes = "🥞", waffle = "🧇", cheese = "🧀", meat_on_bone = "🍖", poultry_leg = "🍗", cut_of_meat = "🥩", bacon = "🥓", hamburger = "🍔", fries = "🍟", pizza = "🍕", hotdog = "🌭", sandwich = "🥪", taco = "🌮", burrito = "🌯", tamale = "🫔", stuffed_flatbread = "🥙", falafel = "🧆", egg = "🥚", fried_egg = "🍳", shallow_pan_of_food = "🥘", stew = "🍲", fondue = "🫕", bowl_with_spoon = "🥣", green_salad = "🥗", popcorn = "🍿", butter = "🧈", salt = "🧂", canned_food = "🥫", bento = "🍱", rice_cracker = "🍘", rice_ball = "🍙", rice = "🍚", curry = "🍛", ramen = "🍜", spaghetti = "🍝", sweet_potato = "🍠", oden = "🍢", sushi = "🍣", fried_shrimp = "🍤", fish_cake = "🍥", moon_cake = "🥮", dango = "🍡", dumpling = "🥟", fortune_cookie = "🥠", takeout_box = "🥡", crab = "🦀", lobster = "🦞", shrimp = "🦐", squid = "🦑", oyster = "🦪", icecream = "🍦", shaved_ice = "🍧", ice_cream = "🍨", doughnut = "🍩", cookie = "🍪", birthday = "🎂", cake = "🍰", cupcake = "🧁", pie = "🥧", chocolate_bar = "🍫", candy = "🍬", lollipop = "🍭", custard = "🍮", honey_pot = "🍯", baby_bottle = "🍼", milk_glass = "🥛", teapot = "🫖", tea = "🍵", sake = "🍶", champagne = "🍾", wine_glass = "🍷", cocktail = "🍸", tropical_drink = "🍹", beer = "🍺", beers = "🍻", clinking_glasses = "🥂", tumbler_glass = "🥃", cup_with_straw = "🥤", bubble_tea = "🧋", beverage_box = "🧃", mate = "🧉", ice_cube = "🧊", chopsticks = "🥢", plate_with_cutlery = "🍽️", fork_and_knife = "🍴", spoon = "🥄", hocho = "🔪", knife = "🔪", amphora = "🏺", earth_africa = "🌍", earth_americas = "🌎", earth_asia = "🌏", globe_with_meridians = "🌐", world_map = "🗺️", japan = "🗾", compass = "🧭", mountain_snow = "🏔️", mountain = "⛰️", volcano = "🌋", mount_fuji = "🗻", camping = "🏕️", beach_umbrella = "🏖️", desert = "🏜️", desert_island = "🏝️", national_park = "🏞️", stadium = "🏟️", classical_building = "🏛️", building_construction = "🏗️", bricks = "🧱", rock = "🪨", wood = "🪵", hut = "🛖", houses = "🏘️", derelict_house = "🏚️", house = "🏠", house_with_garden = "🏡", office = "🏢", post_office = "🏣", european_post_office = "🏤", hospital = "🏥", bank = "🏦", hotel = "🏨", love_hotel = "🏩", convenience_store = "🏪", school = "🏫", department_store = "🏬", factory = "🏭", japanese_castle = "🏯", european_castle = "🏰", wedding = "💒", tokyo_tower = "🗼", statue_of_liberty = "🗽", mosque = "🕌", hindu_temple = "🛕", synagogue = "🕍", shinto_shrine = "⛩️", kaaba = "🕋", foggy = "🌁", night_with_stars = "🌃", cityscape = "🏙️", sunrise_over_mountains = "🌄", sunrise = "🌅", city_sunset = "🌆", city_sunrise = "🌇", bridge_at_night = "🌉", hotsprings = "♨️", carousel_horse = "🎠", ferris_wheel = "🎡", roller_coaster = "🎢", barber = "💈", circus_tent = "🎪", steam_locomotive = "🚂", railway_car = "🚃", bullettrain_side = "🚄", bullettrain_front = "🚅", train2 = "🚆", metro = "🚇", light_rail = "🚈", station = "🚉", tram = "🚊", monorail = "🚝", mountain_railway = "🚞", train = "🚋", bus = "🚌", oncoming_bus = "🚍", trolleybus = "🚎", minibus = "🚐", ambulance = "🚑", fire_engine = "🚒", police_car = "🚓", oncoming_police_car = "🚔", taxi = "🚕", oncoming_taxi = "🚖", car = "🚗", red_car = "🚗", oncoming_automobile = "🚘", blue_car = "🚙", pickup_truck = "🛻", truck = "🚚", articulated_lorry = "🚛", tractor = "🚜", racing_car = "🏎️", motorcycle = "🏍️", motor_scooter = "🛵", manual_wheelchair = "🦽", motorized_wheelchair = "🦼", auto_rickshaw = "🛺", bike = "🚲", kick_scooter = "🛴", skateboard = "🛹", roller_skate = "🛼", busstop = "🚏", motorway = "🛣️", railway_track = "🛤️", oil_drum = "🛢️", rotating_light = "🚨", traffic_light = "🚥", vertical_traffic_light = "🚦", stop_sign = "🛑", construction = "🚧", canoe = "🛶", speedboat = "🚤", passenger_ship = "🛳️", ferry = "⛴️", motor_boat = "🛥️", ship = "🚢", airplane = "✈️", small_airplane = "🛩️", flight_departure = "🛫", flight_arrival = "🛬", parachute = "🪂", seat = "💺", helicopter = "🚁", suspension_railway = "🚟", mountain_cableway = "🚠", aerial_tramway = "🚡", artificial_satellite = "🛰️", rocket = "🚀", flying_saucer = "🛸", bellhop_bell = "🛎️", luggage = "🧳", stopwatch = "⏱️", timer_clock = "⏲️", mantelpiece_clock = "🕰️", clock12 = "🕛", clock1230 = "🕧", clock1 = "🕐", clock130 = "🕜", clock2 = "🕑", clock230 = "🕝", clock3 = "🕒", clock330 = "🕞", clock4 = "🕓", clock430 = "🕟", clock5 = "🕔", clock530 = "🕠", clock6 = "🕕", clock630 = "🕡", clock7 = "🕖", clock730 = "🕢", clock8 = "🕗", clock830 = "🕣", clock9 = "🕘", clock930 = "🕤", clock10 = "🕙", clock1030 = "🕥", clock11 = "🕚", clock1130 = "🕦", new_moon = "🌑", waxing_crescent_moon = "🌒", first_quarter_moon = "🌓", moon = "🌔", waxing_gibbous_moon = "🌔", full_moon = "🌕", waning_gibbous_moon = "🌖", last_quarter_moon = "🌗", waning_crescent_moon = "🌘", crescent_moon = "🌙", new_moon_with_face = "🌚", first_quarter_moon_with_face = "🌛", last_quarter_moon_with_face = "🌜", thermometer = "🌡️", sunny = "☀️", full_moon_with_face = "🌝", sun_with_face = "🌞", ringed_planet = "🪐", star2 = "🌟", stars = "🌠", milky_way = "🌌", cloud = "☁️", cloud_with_lightning_and_rain = "⛈️", sun_behind_small_cloud = "🌤️", sun_behind_large_cloud = "🌥️", sun_behind_rain_cloud = "🌦️", cloud_with_rain = "🌧️", cloud_with_snow = "🌨️", cloud_with_lightning = "🌩️", tornado = "🌪️", fog = "🌫️", wind_face = "🌬️", cyclone = "🌀", rainbow = "🌈", closed_umbrella = "🌂", open_umbrella = "☂️", parasol_on_ground = "⛱️", snowflake = "❄️", snowman_with_snow = "☃️", comet = "☄️", fire = "🔥", droplet = "💧", ocean = "🌊", jack_o_lantern = "🎃", christmas_tree = "🎄", fireworks = "🎆", sparkler = "🎇", firecracker = "🧨", balloon = "🎈", tada = "🎉", confetti_ball = "🎊", tanabata_tree = "🎋", bamboo = "🎍", dolls = "🎎", flags = "🎏", wind_chime = "🎐", rice_scene = "🎑", red_envelope = "🧧", ribbon = "🎀", gift = "🎁", reminder_ribbon = "🎗️", tickets = "🎟️", ticket = "🎫", medal_military = "🎖️", trophy = "🏆", medal_sports = "🏅", softball = "🥎", basketball = "🏀", volleyball = "🏐", football = "🏈", rugby_football = "🏉", tennis = "🎾", flying_disc = "🥏", bowling = "🎳", cricket_game = "🏏", field_hockey = "🏑", ice_hockey = "🏒", lacrosse = "🥍", ping_pong = "🏓", badminton = "🏸", boxing_glove = "🥊", martial_arts_uniform = "🥋", goal_net = "🥅", ice_skate = "⛸️", fishing_pole_and_fish = "🎣", diving_mask = "🤿", running_shirt_with_sash = "🎽", ski = "🎿", sled = "🛷", curling_stone = "🥌", dart = "🎯", yo_yo = "🪀", kite = "🪁", crystal_ball = "🔮", magic_wand = "🪄", nazar_amulet = "🧿", video_game = "🎮", joystick = "🕹️", slot_machine = "🎰", game_die = "🎲", jigsaw = "🧩", teddy_bear = "🧸", pinata = "🪅", nesting_dolls = "🪆", spades = "♠️", hearts = "♥️", diamonds = "♦️", clubs = "♣️", chess_pawn = "♟️", black_joker = "🃏", mahjong = "🀄", flower_playing_cards = "🎴", performing_arts = "🎭", framed_picture = "🖼️", art = "🎨", thread = "🧵", sewing_needle = "🪡", yarn = "🧶", knot = "🪢", eyeglasses = "👓", dark_sunglasses = "🕶️", goggles = "🥽", lab_coat = "🥼", safety_vest = "🦺", necktie = "👔", shirt = "👕", tshirt = "👕", jeans = "👖", scarf = "🧣", gloves = "🧤", coat = "🧥", socks = "🧦", dress = "👗", kimono = "👘", sari = "🥻", one_piece_swimsuit = "🩱", swim_brief = "🩲", shorts = "🩳", bikini = "👙", womans_clothes = "👚", purse = "👛", handbag = "👜", pouch = "👝", shopping = "🛍️", school_satchel = "🎒", thong_sandal = "🩴", mans_shoe = "👞", shoe = "👞", athletic_shoe = "👟", hiking_boot = "🥾", flat_shoe = "🥿", high_heel = "👠", sandal = "👡", ballet_shoes = "🩰", boot = "👢", crown = "👑", womans_hat = "👒", tophat = "🎩", mortar_board = "🎓", billed_cap = "🧢", military_helmet = "🪖", rescue_worker_helmet = "⛑️", prayer_beads = "📿", lipstick = "💄", ring = "💍", gem = "💎", mute = "🔇", speaker = "🔈", sound = "🔉", loud_sound = "🔊", loudspeaker = "📢", mega = "📣", postal_horn = "📯", bell = "🔔", no_bell = "🔕", musical_score = "🎼", musical_note = "🎵", notes = "🎶", studio_microphone = "🎙️", level_slider = "🎚️", control_knobs = "🎛️", microphone = "🎤", headphones = "🎧", radio = "📻", saxophone = "🎷", accordion = "🪗", guitar = "🎸", musical_keyboard = "🎹", trumpet = "🎺", violin = "🎻", banjo = "🪕", drum = "🥁", long_drum = "🪘", iphone = "📱", calling = "📲", phone = "☎️", telephone = "☎️", telephone_receiver = "📞", pager = "📟", fax = "📠", battery = "🔋", electric_plug = "🔌", computer = "💻", desktop_computer = "🖥️", printer = "🖨️", keyboard = "⌨️", computer_mouse = "🖱️", trackball = "🖲️", minidisc = "💽", floppy_disk = "💾", cd = "💿", dvd = "📀", abacus = "🧮", movie_camera = "🎥", film_strip = "🎞️", film_projector = "📽️", clapper = "🎬", tv = "📺", camera = "📷", camera_flash = "📸", video_camera = "📹", vhs = "📼", mag = "🔍", mag_right = "🔎", candle = "🕯️", bulb = "💡", flashlight = "🔦", izakaya_lantern = "🏮", lantern = "🏮", diya_lamp = "🪔", notebook_with_decorative_cover = "📔", closed_book = "📕", book = "📖", open_book = "📖", green_book = "📗", blue_book = "📘", orange_book = "📙", books = "📚", notebook = "📓", ledger = "📒", page_with_curl = "📃", scroll = "📜", page_facing_up = "📄", newspaper = "📰", newspaper_roll = "🗞️", bookmark_tabs = "📑", bookmark = "🔖", label$1 = "🏷️", moneybag = "💰", coin = "🪙", yen = "💴", dollar = "💵", euro = "💶", pound = "💷", money_with_wings = "💸", credit_card = "💳", receipt = "🧾", chart = "💹", envelope = "✉️", email = "📧", incoming_envelope = "📨", envelope_with_arrow = "📩", outbox_tray = "📤", inbox_tray = "📥", mailbox = "📫", mailbox_closed = "📪", mailbox_with_mail = "📬", mailbox_with_no_mail = "📭", postbox = "📮", ballot_box = "🗳️", pencil2 = "✏️", black_nib = "✒️", fountain_pen = "🖋️", pen = "🖊️", paintbrush = "🖌️", crayon = "🖍️", memo = "📝", pencil = "📝", briefcase = "💼", file_folder = "📁", open_file_folder = "📂", card_index_dividers = "🗂️", date = "📅", calendar = "📆", spiral_notepad = "🗒️", spiral_calendar = "🗓️", card_index = "📇", chart_with_upwards_trend = "📈", chart_with_downwards_trend = "📉", bar_chart = "📊", clipboard = "📋", pushpin = "📌", round_pushpin = "📍", paperclip = "📎", paperclips = "🖇️", straight_ruler = "📏", triangular_ruler = "📐", scissors = "✂️", card_file_box = "🗃️", file_cabinet = "🗄️", wastebasket = "🗑️", lock = "🔒", unlock = "🔓", lock_with_ink_pen = "🔏", closed_lock_with_key = "🔐", key = "🔑", old_key = "🗝️", hammer = "🔨", axe = "🪓", pick = "⛏️", hammer_and_pick = "⚒️", hammer_and_wrench = "🛠️", dagger = "🗡️", crossed_swords = "⚔️", gun = "🔫", boomerang = "🪃", bow_and_arrow = "🏹", shield = "🛡️", carpentry_saw = "🪚", wrench = "🔧", screwdriver = "🪛", nut_and_bolt = "🔩", gear = "⚙️", clamp = "🗜️", balance_scale = "⚖️", probing_cane = "🦯", link = "🔗", chains = "⛓️", hook = "🪝", toolbox = "🧰", magnet = "🧲", ladder = "🪜", alembic = "⚗️", test_tube = "🧪", petri_dish = "🧫", dna = "🧬", microscope = "🔬", telescope = "🔭", satellite = "📡", syringe = "💉", drop_of_blood = "🩸", pill = "💊", adhesive_bandage = "🩹", stethoscope = "🩺", door = "🚪", elevator = "🛗", mirror = "🪞", window$1 = "🪟", bed = "🛏️", couch_and_lamp = "🛋️", chair = "🪑", toilet = "🚽", plunger = "🪠", shower = "🚿", bathtub = "🛁", mouse_trap = "🪤", razor = "🪒", lotion_bottle = "🧴", safety_pin = "🧷", broom = "🧹", basket = "🧺", roll_of_paper = "🧻", bucket = "🪣", soap = "🧼", toothbrush = "🪥", sponge = "🧽", fire_extinguisher = "🧯", shopping_cart = "🛒", smoking = "🚬", coffin = "⚰️", headstone = "🪦", funeral_urn = "⚱️", moyai = "🗿", placard = "🪧", atm = "🏧", put_litter_in_its_place = "🚮", potable_water = "🚰", mens = "🚹", womens = "🚺", restroom = "🚻", baby_symbol = "🚼", wc = "🚾", passport_control = "🛂", customs = "🛃", baggage_claim = "🛄", left_luggage = "🛅", warning = "⚠️", children_crossing = "🚸", no_entry_sign = "🚫", no_bicycles = "🚳", no_smoking = "🚭", do_not_litter = "🚯", no_pedestrians = "🚷", no_mobile_phones = "📵", underage = "🔞", radioactive = "☢️", biohazard = "☣️", arrow_up = "⬆️", arrow_upper_right = "↗️", arrow_right = "➡️", arrow_lower_right = "↘️", arrow_down = "⬇️", arrow_lower_left = "↙️", arrow_left = "⬅️", arrow_upper_left = "↖️", arrow_up_down = "↕️", left_right_arrow = "↔️", leftwards_arrow_with_hook = "↩️", arrow_right_hook = "↪️", arrow_heading_up = "⤴️", arrow_heading_down = "⤵️", arrows_clockwise = "🔃", arrows_counterclockwise = "🔄", back = "🔙", end = "🔚", on = "🔛", soon = "🔜", top$1 = "🔝", place_of_worship = "🛐", atom_symbol = "⚛️", om = "🕉️", star_of_david = "✡️", wheel_of_dharma = "☸️", yin_yang = "☯️", latin_cross = "✝️", orthodox_cross = "☦️", star_and_crescent = "☪️", peace_symbol = "☮️", menorah = "🕎", six_pointed_star = "🔯", twisted_rightwards_arrows = "🔀", repeat = "🔁", repeat_one = "🔂", arrow_forward = "▶️", next_track_button = "⏭️", play_or_pause_button = "⏯️", arrow_backward = "◀️", previous_track_button = "⏮️", arrow_up_small = "🔼", arrow_down_small = "🔽", pause_button = "⏸️", stop_button = "⏹️", record_button = "⏺️", eject_button = "⏏️", cinema = "🎦", low_brightness = "🔅", high_brightness = "🔆", signal_strength = "📶", vibration_mode = "📳", mobile_phone_off = "📴", female_sign = "♀️", male_sign = "♂️", transgender_symbol = "⚧️", heavy_multiplication_x = "✖️", infinity = "♾️", bangbang = "‼️", interrobang = "⁉️", wavy_dash = "〰️", currency_exchange = "💱", heavy_dollar_sign = "💲", medical_symbol = "⚕️", recycle = "♻️", fleur_de_lis = "⚜️", trident = "🔱", name_badge = "📛", beginner = "🔰", ballot_box_with_check = "☑️", heavy_check_mark = "✔️", part_alternation_mark = "〽️", eight_spoked_asterisk = "✳️", eight_pointed_black_star = "✴️", sparkle = "❇️", copyright = "©️", registered = "®️", tm = "™️", hash = "#️⃣", asterisk = "*️⃣", zero = "0️⃣", one = "1️⃣", two = "2️⃣", three = "3️⃣", four = "4️⃣", five = "5️⃣", six = "6️⃣", seven = "7️⃣", eight = "8️⃣", nine = "9️⃣", keycap_ten = "🔟", capital_abcd = "🔠", abcd = "🔡", symbols = "🔣", abc = "🔤", a = "🅰️", ab = "🆎", b = "🅱️", cl = "🆑", cool = "🆒", free = "🆓", information_source = "ℹ️", id = "🆔", m = "Ⓜ️", ng = "🆖", o2 = "🅾️", ok = "🆗", parking = "🅿️", sos = "🆘", up = "🆙", vs = "🆚", koko = "🈁", sa = "🈂️", ideograph_advantage = "🉐", accept = "🉑", congratulations = "㊗️", secret = "㊙️", u6e80 = "🈵", red_circle = "🔴", orange_circle = "🟠", yellow_circle = "🟡", green_circle = "🟢", large_blue_circle = "🔵", purple_circle = "🟣", brown_circle = "🟤", red_square = "🟥", orange_square = "🟧", yellow_square = "🟨", green_square = "🟩", blue_square = "🟦", purple_square = "🟪", brown_square = "🟫", black_medium_square = "◼️", white_medium_square = "◻️", black_small_square = "▪️", white_small_square = "▫️", large_orange_diamond = "🔶", large_blue_diamond = "🔷", small_orange_diamond = "🔸", small_blue_diamond = "🔹", small_red_triangle = "🔺", small_red_triangle_down = "🔻", diamond_shape_with_a_dot_inside = "💠", radio_button = "🔘", white_square_button = "🔳", black_square_button = "🔲", checkered_flag = "🏁", triangular_flag_on_post = "🚩", crossed_flags = "🎌", black_flag = "🏴", white_flag = "🏳️", rainbow_flag = "🏳️‍🌈", transgender_flag = "🏳️‍⚧️", pirate_flag = "🏴‍☠️", ascension_island = "🇦🇨", andorra = "🇦🇩", united_arab_emirates = "🇦🇪", afghanistan = "🇦🇫", antigua_barbuda = "🇦🇬", anguilla = "🇦🇮", albania = "🇦🇱", armenia = "🇦🇲", angola = "🇦🇴", antarctica = "🇦🇶", argentina = "🇦🇷", american_samoa = "🇦🇸", austria = "🇦🇹", australia = "🇦🇺", aruba = "🇦🇼", aland_islands = "🇦🇽", azerbaijan = "🇦🇿", bosnia_herzegovina = "🇧🇦", barbados = "🇧🇧", bangladesh = "🇧🇩", belgium = "🇧🇪", burkina_faso = "🇧🇫", bulgaria = "🇧🇬", bahrain = "🇧🇭", burundi = "🇧🇮", benin = "🇧🇯", st_barthelemy = "🇧🇱", bermuda = "🇧🇲", brunei = "🇧🇳", bolivia = "🇧🇴", caribbean_netherlands = "🇧🇶", brazil = "🇧🇷", bahamas = "🇧🇸", bhutan = "🇧🇹", bouvet_island = "🇧🇻", botswana = "🇧🇼", belarus = "🇧🇾", belize = "🇧🇿", canada = "🇨🇦", cocos_islands = "🇨🇨", congo_kinshasa = "🇨🇩", central_african_republic = "🇨🇫", congo_brazzaville = "🇨🇬", switzerland = "🇨🇭", cote_divoire = "🇨🇮", cook_islands = "🇨🇰", chile = "🇨🇱", cameroon = "🇨🇲", cn = "🇨🇳", colombia = "🇨🇴", clipperton_island = "🇨🇵", costa_rica = "🇨🇷", cuba = "🇨🇺", cape_verde = "🇨🇻", curacao = "🇨🇼", christmas_island = "🇨🇽", cyprus = "🇨🇾", czech_republic = "🇨🇿", de = "🇩🇪", diego_garcia = "🇩🇬", djibouti = "🇩🇯", denmark = "🇩🇰", dominica = "🇩🇲", dominican_republic = "🇩🇴", algeria = "🇩🇿", ceuta_melilla = "🇪🇦", ecuador = "🇪🇨", estonia = "🇪🇪", egypt = "🇪🇬", western_sahara = "🇪🇭", eritrea = "🇪🇷", es = "🇪🇸", ethiopia = "🇪🇹", eu = "🇪🇺", european_union = "🇪🇺", finland = "🇫🇮", fiji = "🇫🇯", falkland_islands = "🇫🇰", micronesia = "🇫🇲", faroe_islands = "🇫🇴", fr = "🇫🇷", gabon = "🇬🇦", gb = "🇬🇧", uk = "🇬🇧", grenada = "🇬🇩", georgia = "🇬🇪", french_guiana = "🇬🇫", guernsey = "🇬🇬", ghana = "🇬🇭", gibraltar = "🇬🇮", greenland = "🇬🇱", gambia = "🇬🇲", guinea = "🇬🇳", guadeloupe = "🇬🇵", equatorial_guinea = "🇬🇶", greece = "🇬🇷", south_georgia_south_sandwich_islands = "🇬🇸", guatemala = "🇬🇹", guam = "🇬🇺", guinea_bissau = "🇬🇼", guyana = "🇬🇾", hong_kong = "🇭🇰", heard_mcdonald_islands = "🇭🇲", honduras = "🇭🇳", croatia = "🇭🇷", haiti = "🇭🇹", hungary = "🇭🇺", canary_islands = "🇮🇨", indonesia = "🇮🇩", ireland = "🇮🇪", israel = "🇮🇱", isle_of_man = "🇮🇲", india = "🇮🇳", british_indian_ocean_territory = "🇮🇴", iraq = "🇮🇶", iran = "🇮🇷", iceland = "🇮🇸", it = "🇮🇹", jersey = "🇯🇪", jamaica = "🇯🇲", jordan = "🇯🇴", jp = "🇯🇵", kenya = "🇰🇪", kyrgyzstan = "🇰🇬", cambodia = "🇰🇭", kiribati = "🇰🇮", comoros = "🇰🇲", st_kitts_nevis = "🇰🇳", north_korea = "🇰🇵", kr = "🇰🇷", kuwait = "🇰🇼", cayman_islands = "🇰🇾", kazakhstan = "🇰🇿", laos = "🇱🇦", lebanon = "🇱🇧", st_lucia = "🇱🇨", liechtenstein = "🇱🇮", sri_lanka = "🇱🇰", liberia = "🇱🇷", lesotho = "🇱🇸", lithuania = "🇱🇹", luxembourg = "🇱🇺", latvia = "🇱🇻", libya = "🇱🇾", morocco = "🇲🇦", monaco = "🇲🇨", moldova = "🇲🇩", montenegro = "🇲🇪", st_martin = "🇲🇫", madagascar = "🇲🇬", marshall_islands = "🇲🇭", macedonia = "🇲🇰", mali = "🇲🇱", myanmar = "🇲🇲", mongolia = "🇲🇳", macau = "🇲🇴", northern_mariana_islands = "🇲🇵", martinique = "🇲🇶", mauritania = "🇲🇷", montserrat = "🇲🇸", malta = "🇲🇹", mauritius = "🇲🇺", maldives = "🇲🇻", malawi = "🇲🇼", mexico = "🇲🇽", malaysia = "🇲🇾", mozambique = "🇲🇿", namibia = "🇳🇦", new_caledonia = "🇳🇨", niger = "🇳🇪", norfolk_island = "🇳🇫", nigeria = "🇳🇬", nicaragua = "🇳🇮", netherlands = "🇳🇱", norway = "🇳🇴", nepal = "🇳🇵", nauru = "🇳🇷", niue = "🇳🇺", new_zealand = "🇳🇿", oman = "🇴🇲", panama = "🇵🇦", peru = "🇵🇪", french_polynesia = "🇵🇫", papua_new_guinea = "🇵🇬", philippines = "🇵🇭", pakistan = "🇵🇰", poland = "🇵🇱", st_pierre_miquelon = "🇵🇲", pitcairn_islands = "🇵🇳", puerto_rico = "🇵🇷", palestinian_territories = "🇵🇸", portugal = "🇵🇹", palau = "🇵🇼", paraguay = "🇵🇾", qatar = "🇶🇦", reunion = "🇷🇪", romania = "🇷🇴", serbia = "🇷🇸", ru = "🇷🇺", rwanda = "🇷🇼", saudi_arabia = "🇸🇦", solomon_islands = "🇸🇧", seychelles = "🇸🇨", sudan = "🇸🇩", sweden = "🇸🇪", singapore = "🇸🇬", st_helena = "🇸🇭", slovenia = "🇸🇮", svalbard_jan_mayen = "🇸🇯", slovakia = "🇸🇰", sierra_leone = "🇸🇱", san_marino = "🇸🇲", senegal = "🇸🇳", somalia = "🇸🇴", suriname = "🇸🇷", south_sudan = "🇸🇸", sao_tome_principe = "🇸🇹", el_salvador = "🇸🇻", sint_maarten = "🇸🇽", syria = "🇸🇾", swaziland = "🇸🇿", tristan_da_cunha = "🇹🇦", turks_caicos_islands = "🇹🇨", chad = "🇹🇩", french_southern_territories = "🇹🇫", togo = "🇹🇬", thailand = "🇹🇭", tajikistan = "🇹🇯", tokelau = "🇹🇰", timor_leste = "🇹🇱", turkmenistan = "🇹🇲", tunisia = "🇹🇳", tonga = "🇹🇴", tr = "🇹🇷", trinidad_tobago = "🇹🇹", tuvalu = "🇹🇻", taiwan = "🇹🇼", tanzania = "🇹🇿", ukraine = "🇺🇦", uganda = "🇺🇬", us_outlying_islands = "🇺🇲", united_nations = "🇺🇳", us = "🇺🇸", uruguay = "🇺🇾", uzbekistan = "🇺🇿", vatican_city = "🇻🇦", st_vincent_grenadines = "🇻🇨", venezuela = "🇻🇪", british_virgin_islands = "🇻🇬", us_virgin_islands = "🇻🇮", vietnam = "🇻🇳", vanuatu = "🇻🇺", wallis_futuna = "🇼🇫", samoa = "🇼🇸", kosovo = "🇽🇰", yemen = "🇾🇪", mayotte = "🇾🇹", south_africa = "🇿🇦", zambia = "🇿🇲", zimbabwe = "🇿🇼", england = "🏴󠁧󠁢󠁥󠁮󠁧󠁿", scotland = "🏴󠁧󠁢󠁳󠁣󠁴󠁿", wales = "🏴󠁧󠁢󠁷󠁬󠁳󠁿", full_default = {
    100: "💯",
    1234: "🔢",
    grinning,
    smiley,
    smile,
    grin,
    laughing,
    satisfied,
    sweat_smile,
    rofl,
    joy,
    slightly_smiling_face,
    upside_down_face,
    wink,
    blush,
    innocent,
    smiling_face_with_three_hearts,
    heart_eyes,
    star_struck,
    kissing_heart,
    kissing,
    relaxed,
    kissing_closed_eyes,
    kissing_smiling_eyes,
    smiling_face_with_tear,
    yum,
    stuck_out_tongue,
    stuck_out_tongue_winking_eye,
    zany_face,
    stuck_out_tongue_closed_eyes,
    money_mouth_face,
    hugs,
    hand_over_mouth,
    shushing_face,
    thinking,
    zipper_mouth_face,
    raised_eyebrow,
    neutral_face,
    expressionless,
    no_mouth,
    smirk,
    unamused,
    roll_eyes,
    grimacing,
    lying_face,
    relieved,
    pensive,
    sleepy,
    drooling_face,
    sleeping,
    mask,
    face_with_thermometer,
    face_with_head_bandage,
    nauseated_face,
    vomiting_face,
    sneezing_face,
    hot_face,
    cold_face,
    woozy_face,
    dizzy_face,
    exploding_head,
    cowboy_hat_face,
    partying_face,
    disguised_face,
    sunglasses,
    nerd_face,
    monocle_face,
    confused,
    worried,
    slightly_frowning_face,
    frowning_face,
    open_mouth,
    hushed,
    astonished,
    flushed,
    pleading_face,
    frowning,
    anguished,
    fearful,
    cold_sweat,
    disappointed_relieved,
    cry,
    sob,
    scream,
    confounded,
    persevere,
    disappointed,
    sweat,
    weary,
    tired_face,
    yawning_face,
    triumph,
    rage,
    pout,
    angry,
    cursing_face,
    smiling_imp,
    imp,
    skull,
    skull_and_crossbones,
    hankey,
    poop,
    shit,
    clown_face,
    japanese_ogre,
    japanese_goblin,
    ghost,
    alien,
    space_invader,
    robot,
    smiley_cat,
    smile_cat,
    joy_cat,
    heart_eyes_cat,
    smirk_cat,
    kissing_cat,
    scream_cat,
    crying_cat_face,
    pouting_cat,
    see_no_evil,
    hear_no_evil,
    speak_no_evil,
    kiss,
    love_letter,
    cupid,
    gift_heart,
    sparkling_heart,
    heartpulse,
    heartbeat,
    revolving_hearts,
    two_hearts,
    heart_decoration,
    heavy_heart_exclamation,
    broken_heart,
    heart,
    orange_heart,
    yellow_heart,
    green_heart,
    blue_heart,
    purple_heart,
    brown_heart,
    black_heart,
    white_heart,
    anger,
    boom,
    collision,
    dizzy,
    sweat_drops,
    dash,
    hole,
    bomb,
    speech_balloon,
    eye_speech_bubble,
    left_speech_bubble,
    right_anger_bubble,
    thought_balloon,
    zzz,
    wave,
    raised_back_of_hand,
    raised_hand_with_fingers_splayed,
    hand: "✋",
    raised_hand: "✋",
    vulcan_salute,
    ok_hand,
    pinched_fingers,
    pinching_hand,
    v,
    crossed_fingers,
    love_you_gesture,
    metal,
    call_me_hand,
    point_left,
    point_right,
    point_up_2,
    middle_finger,
    fu,
    point_down,
    point_up,
    "+1": "👍",
    thumbsup,
    "-1": "👎",
    thumbsdown,
    fist_raised: "✊",
    fist: "✊",
    fist_oncoming,
    facepunch,
    punch,
    fist_left,
    fist_right,
    clap,
    raised_hands,
    open_hands,
    palms_up_together,
    handshake,
    pray,
    writing_hand,
    nail_care,
    selfie,
    muscle,
    mechanical_arm,
    mechanical_leg,
    leg,
    foot,
    ear,
    ear_with_hearing_aid,
    nose,
    brain,
    anatomical_heart,
    lungs,
    tooth,
    bone,
    eyes,
    eye,
    tongue,
    lips,
    baby,
    child,
    boy,
    girl,
    adult,
    blond_haired_person,
    man,
    bearded_person,
    red_haired_man,
    curly_haired_man,
    white_haired_man,
    bald_man,
    woman,
    red_haired_woman,
    person_red_hair,
    curly_haired_woman,
    person_curly_hair,
    white_haired_woman,
    person_white_hair,
    bald_woman,
    person_bald,
    blond_haired_woman,
    blonde_woman,
    blond_haired_man,
    older_adult,
    older_man,
    older_woman,
    frowning_person,
    frowning_man,
    frowning_woman,
    pouting_face,
    pouting_man,
    pouting_woman,
    no_good,
    no_good_man,
    ng_man,
    no_good_woman,
    ng_woman,
    ok_person,
    ok_man,
    ok_woman,
    tipping_hand_person,
    information_desk_person,
    tipping_hand_man,
    sassy_man,
    tipping_hand_woman,
    sassy_woman,
    raising_hand,
    raising_hand_man,
    raising_hand_woman,
    deaf_person,
    deaf_man,
    deaf_woman,
    bow,
    bowing_man,
    bowing_woman,
    facepalm,
    man_facepalming,
    woman_facepalming,
    shrug,
    man_shrugging,
    woman_shrugging,
    health_worker,
    man_health_worker,
    woman_health_worker,
    student,
    man_student,
    woman_student,
    teacher,
    man_teacher,
    woman_teacher,
    judge,
    man_judge,
    woman_judge,
    farmer,
    man_farmer,
    woman_farmer,
    cook,
    man_cook,
    woman_cook,
    mechanic,
    man_mechanic,
    woman_mechanic,
    factory_worker,
    man_factory_worker,
    woman_factory_worker,
    office_worker,
    man_office_worker,
    woman_office_worker,
    scientist,
    man_scientist,
    woman_scientist,
    technologist,
    man_technologist,
    woman_technologist,
    singer,
    man_singer,
    woman_singer,
    artist,
    man_artist,
    woman_artist,
    pilot,
    man_pilot,
    woman_pilot,
    astronaut,
    man_astronaut,
    woman_astronaut,
    firefighter,
    man_firefighter,
    woman_firefighter,
    police_officer,
    cop,
    policeman,
    policewoman,
    detective,
    male_detective,
    female_detective,
    guard,
    guardsman,
    guardswoman,
    ninja,
    construction_worker,
    construction_worker_man,
    construction_worker_woman,
    prince,
    princess,
    person_with_turban,
    man_with_turban,
    woman_with_turban,
    man_with_gua_pi_mao,
    woman_with_headscarf,
    person_in_tuxedo,
    man_in_tuxedo,
    woman_in_tuxedo,
    person_with_veil,
    man_with_veil,
    woman_with_veil,
    bride_with_veil,
    pregnant_woman,
    breast_feeding,
    woman_feeding_baby,
    man_feeding_baby,
    person_feeding_baby,
    angel,
    santa,
    mrs_claus,
    mx_claus,
    superhero,
    superhero_man,
    superhero_woman,
    supervillain,
    supervillain_man,
    supervillain_woman,
    mage,
    mage_man,
    mage_woman,
    fairy,
    fairy_man,
    fairy_woman,
    vampire,
    vampire_man,
    vampire_woman,
    merperson,
    merman,
    mermaid,
    elf,
    elf_man,
    elf_woman,
    genie,
    genie_man,
    genie_woman,
    zombie,
    zombie_man,
    zombie_woman,
    massage,
    massage_man,
    massage_woman,
    haircut,
    haircut_man,
    haircut_woman,
    walking,
    walking_man,
    walking_woman,
    standing_person,
    standing_man,
    standing_woman,
    kneeling_person,
    kneeling_man,
    kneeling_woman,
    person_with_probing_cane,
    man_with_probing_cane,
    woman_with_probing_cane,
    person_in_motorized_wheelchair,
    man_in_motorized_wheelchair,
    woman_in_motorized_wheelchair,
    person_in_manual_wheelchair,
    man_in_manual_wheelchair,
    woman_in_manual_wheelchair,
    runner,
    running,
    running_man,
    running_woman,
    woman_dancing,
    dancer,
    man_dancing,
    business_suit_levitating,
    dancers,
    dancing_men,
    dancing_women,
    sauna_person,
    sauna_man,
    sauna_woman,
    climbing,
    climbing_man,
    climbing_woman,
    person_fencing,
    horse_racing,
    skier,
    snowboarder,
    golfing,
    golfing_man,
    golfing_woman,
    surfer,
    surfing_man,
    surfing_woman,
    rowboat,
    rowing_man,
    rowing_woman,
    swimmer,
    swimming_man,
    swimming_woman,
    bouncing_ball_person,
    bouncing_ball_man,
    basketball_man,
    bouncing_ball_woman,
    basketball_woman,
    weight_lifting,
    weight_lifting_man,
    weight_lifting_woman,
    bicyclist,
    biking_man,
    biking_woman,
    mountain_bicyclist,
    mountain_biking_man,
    mountain_biking_woman,
    cartwheeling,
    man_cartwheeling,
    woman_cartwheeling,
    wrestling,
    men_wrestling,
    women_wrestling,
    water_polo,
    man_playing_water_polo,
    woman_playing_water_polo,
    handball_person,
    man_playing_handball,
    woman_playing_handball,
    juggling_person,
    man_juggling,
    woman_juggling,
    lotus_position,
    lotus_position_man,
    lotus_position_woman,
    bath,
    sleeping_bed,
    people_holding_hands,
    two_women_holding_hands,
    couple,
    two_men_holding_hands,
    couplekiss,
    couplekiss_man_woman,
    couplekiss_man_man,
    couplekiss_woman_woman,
    couple_with_heart,
    couple_with_heart_woman_man,
    couple_with_heart_man_man,
    couple_with_heart_woman_woman,
    family,
    family_man_woman_boy,
    family_man_woman_girl,
    family_man_woman_girl_boy,
    family_man_woman_boy_boy,
    family_man_woman_girl_girl,
    family_man_man_boy,
    family_man_man_girl,
    family_man_man_girl_boy,
    family_man_man_boy_boy,
    family_man_man_girl_girl,
    family_woman_woman_boy,
    family_woman_woman_girl,
    family_woman_woman_girl_boy,
    family_woman_woman_boy_boy,
    family_woman_woman_girl_girl,
    family_man_boy,
    family_man_boy_boy,
    family_man_girl,
    family_man_girl_boy,
    family_man_girl_girl,
    family_woman_boy,
    family_woman_boy_boy,
    family_woman_girl,
    family_woman_girl_boy,
    family_woman_girl_girl,
    speaking_head,
    bust_in_silhouette,
    busts_in_silhouette,
    people_hugging,
    footprints,
    monkey_face,
    monkey,
    gorilla,
    orangutan,
    dog,
    dog2,
    guide_dog,
    service_dog,
    poodle,
    wolf,
    fox_face,
    raccoon,
    cat,
    cat2,
    black_cat,
    lion,
    tiger,
    tiger2,
    leopard,
    horse,
    racehorse,
    unicorn,
    zebra,
    deer,
    bison,
    cow,
    ox,
    water_buffalo,
    cow2,
    pig,
    pig2,
    boar,
    pig_nose,
    ram,
    sheep,
    goat,
    dromedary_camel,
    camel,
    llama,
    giraffe,
    elephant,
    mammoth,
    rhinoceros,
    hippopotamus,
    mouse,
    mouse2,
    rat,
    hamster,
    rabbit,
    rabbit2,
    chipmunk,
    beaver,
    hedgehog,
    bat,
    bear,
    polar_bear,
    koala,
    panda_face,
    sloth,
    otter,
    skunk,
    kangaroo,
    badger,
    feet,
    paw_prints,
    turkey,
    chicken,
    rooster,
    hatching_chick,
    baby_chick,
    hatched_chick,
    bird,
    penguin,
    dove,
    eagle,
    duck,
    swan,
    owl,
    dodo,
    feather,
    flamingo,
    peacock,
    parrot,
    frog,
    crocodile,
    turtle,
    lizard,
    snake,
    dragon_face,
    dragon,
    sauropod,
    "t-rex": "🦖",
    whale,
    whale2,
    dolphin,
    flipper,
    seal,
    fish,
    tropical_fish,
    blowfish,
    shark,
    octopus,
    shell,
    snail,
    butterfly,
    bug,
    ant,
    bee,
    honeybee,
    beetle,
    lady_beetle,
    cricket,
    cockroach,
    spider,
    spider_web,
    scorpion,
    mosquito,
    fly,
    worm,
    microbe,
    bouquet,
    cherry_blossom,
    white_flower,
    rosette,
    rose,
    wilted_flower,
    hibiscus,
    sunflower,
    blossom,
    tulip,
    seedling,
    potted_plant,
    evergreen_tree,
    deciduous_tree,
    palm_tree,
    cactus,
    ear_of_rice,
    herb,
    shamrock,
    four_leaf_clover,
    maple_leaf,
    fallen_leaf,
    leaves,
    grapes,
    melon,
    watermelon,
    tangerine,
    orange,
    mandarin,
    lemon,
    banana,
    pineapple,
    mango,
    apple,
    green_apple,
    pear,
    peach,
    cherries,
    strawberry,
    blueberries,
    kiwi_fruit,
    tomato,
    olive,
    coconut,
    avocado,
    eggplant,
    potato,
    carrot,
    corn,
    hot_pepper,
    bell_pepper,
    cucumber,
    leafy_green,
    broccoli,
    garlic,
    onion,
    mushroom,
    peanuts,
    chestnut,
    bread,
    croissant,
    baguette_bread,
    flatbread,
    pretzel,
    bagel,
    pancakes,
    waffle,
    cheese,
    meat_on_bone,
    poultry_leg,
    cut_of_meat,
    bacon,
    hamburger,
    fries,
    pizza,
    hotdog,
    sandwich,
    taco,
    burrito,
    tamale,
    stuffed_flatbread,
    falafel,
    egg,
    fried_egg,
    shallow_pan_of_food,
    stew,
    fondue,
    bowl_with_spoon,
    green_salad,
    popcorn,
    butter,
    salt,
    canned_food,
    bento,
    rice_cracker,
    rice_ball,
    rice,
    curry,
    ramen,
    spaghetti,
    sweet_potato,
    oden,
    sushi,
    fried_shrimp,
    fish_cake,
    moon_cake,
    dango,
    dumpling,
    fortune_cookie,
    takeout_box,
    crab,
    lobster,
    shrimp,
    squid,
    oyster,
    icecream,
    shaved_ice,
    ice_cream,
    doughnut,
    cookie,
    birthday,
    cake,
    cupcake,
    pie,
    chocolate_bar,
    candy,
    lollipop,
    custard,
    honey_pot,
    baby_bottle,
    milk_glass,
    coffee: "☕",
    teapot,
    tea,
    sake,
    champagne,
    wine_glass,
    cocktail,
    tropical_drink,
    beer,
    beers,
    clinking_glasses,
    tumbler_glass,
    cup_with_straw,
    bubble_tea,
    beverage_box,
    mate,
    ice_cube,
    chopsticks,
    plate_with_cutlery,
    fork_and_knife,
    spoon,
    hocho,
    knife,
    amphora,
    earth_africa,
    earth_americas,
    earth_asia,
    globe_with_meridians,
    world_map,
    japan,
    compass,
    mountain_snow,
    mountain,
    volcano,
    mount_fuji,
    camping,
    beach_umbrella,
    desert,
    desert_island,
    national_park,
    stadium,
    classical_building,
    building_construction,
    bricks,
    rock,
    wood,
    hut,
    houses,
    derelict_house,
    house,
    house_with_garden,
    office,
    post_office,
    european_post_office,
    hospital,
    bank,
    hotel,
    love_hotel,
    convenience_store,
    school,
    department_store,
    factory,
    japanese_castle,
    european_castle,
    wedding,
    tokyo_tower,
    statue_of_liberty,
    church: "⛪",
    mosque,
    hindu_temple,
    synagogue,
    shinto_shrine,
    kaaba,
    fountain: "⛲",
    tent: "⛺",
    foggy,
    night_with_stars,
    cityscape,
    sunrise_over_mountains,
    sunrise,
    city_sunset,
    city_sunrise,
    bridge_at_night,
    hotsprings,
    carousel_horse,
    ferris_wheel,
    roller_coaster,
    barber,
    circus_tent,
    steam_locomotive,
    railway_car,
    bullettrain_side,
    bullettrain_front,
    train2,
    metro,
    light_rail,
    station,
    tram,
    monorail,
    mountain_railway,
    train,
    bus,
    oncoming_bus,
    trolleybus,
    minibus,
    ambulance,
    fire_engine,
    police_car,
    oncoming_police_car,
    taxi,
    oncoming_taxi,
    car,
    red_car,
    oncoming_automobile,
    blue_car,
    pickup_truck,
    truck,
    articulated_lorry,
    tractor,
    racing_car,
    motorcycle,
    motor_scooter,
    manual_wheelchair,
    motorized_wheelchair,
    auto_rickshaw,
    bike,
    kick_scooter,
    skateboard,
    roller_skate,
    busstop,
    motorway,
    railway_track,
    oil_drum,
    fuelpump: "⛽",
    rotating_light,
    traffic_light,
    vertical_traffic_light,
    stop_sign,
    construction,
    anchor: "⚓",
    boat: "⛵",
    sailboat: "⛵",
    canoe,
    speedboat,
    passenger_ship,
    ferry,
    motor_boat,
    ship,
    airplane,
    small_airplane,
    flight_departure,
    flight_arrival,
    parachute,
    seat,
    helicopter,
    suspension_railway,
    mountain_cableway,
    aerial_tramway,
    artificial_satellite,
    rocket,
    flying_saucer,
    bellhop_bell,
    luggage,
    hourglass: "⌛",
    hourglass_flowing_sand: "⏳",
    watch: "⌚",
    alarm_clock: "⏰",
    stopwatch,
    timer_clock,
    mantelpiece_clock,
    clock12,
    clock1230,
    clock1,
    clock130,
    clock2,
    clock230,
    clock3,
    clock330,
    clock4,
    clock430,
    clock5,
    clock530,
    clock6,
    clock630,
    clock7,
    clock730,
    clock8,
    clock830,
    clock9,
    clock930,
    clock10,
    clock1030,
    clock11,
    clock1130,
    new_moon,
    waxing_crescent_moon,
    first_quarter_moon,
    moon,
    waxing_gibbous_moon,
    full_moon,
    waning_gibbous_moon,
    last_quarter_moon,
    waning_crescent_moon,
    crescent_moon,
    new_moon_with_face,
    first_quarter_moon_with_face,
    last_quarter_moon_with_face,
    thermometer,
    sunny,
    full_moon_with_face,
    sun_with_face,
    ringed_planet,
    star: "⭐",
    star2,
    stars,
    milky_way,
    cloud,
    partly_sunny: "⛅",
    cloud_with_lightning_and_rain,
    sun_behind_small_cloud,
    sun_behind_large_cloud,
    sun_behind_rain_cloud,
    cloud_with_rain,
    cloud_with_snow,
    cloud_with_lightning,
    tornado,
    fog,
    wind_face,
    cyclone,
    rainbow,
    closed_umbrella,
    open_umbrella,
    umbrella: "☔",
    parasol_on_ground,
    zap: "⚡",
    snowflake,
    snowman_with_snow,
    snowman: "⛄",
    comet,
    fire,
    droplet,
    ocean,
    jack_o_lantern,
    christmas_tree,
    fireworks,
    sparkler,
    firecracker,
    sparkles: "✨",
    balloon,
    tada,
    confetti_ball,
    tanabata_tree,
    bamboo,
    dolls,
    flags,
    wind_chime,
    rice_scene,
    red_envelope,
    ribbon,
    gift,
    reminder_ribbon,
    tickets,
    ticket,
    medal_military,
    trophy,
    medal_sports,
    "1st_place_medal": "🥇",
    "2nd_place_medal": "🥈",
    "3rd_place_medal": "🥉",
    soccer: "⚽",
    baseball: "⚾",
    softball,
    basketball,
    volleyball,
    football,
    rugby_football,
    tennis,
    flying_disc,
    bowling,
    cricket_game,
    field_hockey,
    ice_hockey,
    lacrosse,
    ping_pong,
    badminton,
    boxing_glove,
    martial_arts_uniform,
    goal_net,
    golf: "⛳",
    ice_skate,
    fishing_pole_and_fish,
    diving_mask,
    running_shirt_with_sash,
    ski,
    sled,
    curling_stone,
    dart,
    yo_yo,
    kite,
    "8ball": "🎱",
    crystal_ball,
    magic_wand,
    nazar_amulet,
    video_game,
    joystick,
    slot_machine,
    game_die,
    jigsaw,
    teddy_bear,
    pinata,
    nesting_dolls,
    spades,
    hearts,
    diamonds,
    clubs,
    chess_pawn,
    black_joker,
    mahjong,
    flower_playing_cards,
    performing_arts,
    framed_picture,
    art,
    thread,
    sewing_needle,
    yarn,
    knot,
    eyeglasses,
    dark_sunglasses,
    goggles,
    lab_coat,
    safety_vest,
    necktie,
    shirt,
    tshirt,
    jeans,
    scarf,
    gloves,
    coat,
    socks,
    dress,
    kimono,
    sari,
    one_piece_swimsuit,
    swim_brief,
    shorts,
    bikini,
    womans_clothes,
    purse,
    handbag,
    pouch,
    shopping,
    school_satchel,
    thong_sandal,
    mans_shoe,
    shoe,
    athletic_shoe,
    hiking_boot,
    flat_shoe,
    high_heel,
    sandal,
    ballet_shoes,
    boot,
    crown,
    womans_hat,
    tophat,
    mortar_board,
    billed_cap,
    military_helmet,
    rescue_worker_helmet,
    prayer_beads,
    lipstick,
    ring,
    gem,
    mute,
    speaker,
    sound,
    loud_sound,
    loudspeaker,
    mega,
    postal_horn,
    bell,
    no_bell,
    musical_score,
    musical_note,
    notes,
    studio_microphone,
    level_slider,
    control_knobs,
    microphone,
    headphones,
    radio,
    saxophone,
    accordion,
    guitar,
    musical_keyboard,
    trumpet,
    violin,
    banjo,
    drum,
    long_drum,
    iphone,
    calling,
    phone,
    telephone,
    telephone_receiver,
    pager,
    fax,
    battery,
    electric_plug,
    computer,
    desktop_computer,
    printer,
    keyboard,
    computer_mouse,
    trackball,
    minidisc,
    floppy_disk,
    cd,
    dvd,
    abacus,
    movie_camera,
    film_strip,
    film_projector,
    clapper,
    tv,
    camera,
    camera_flash,
    video_camera,
    vhs,
    mag,
    mag_right,
    candle,
    bulb,
    flashlight,
    izakaya_lantern,
    lantern,
    diya_lamp,
    notebook_with_decorative_cover,
    closed_book,
    book,
    open_book,
    green_book,
    blue_book,
    orange_book,
    books,
    notebook,
    ledger,
    page_with_curl,
    scroll,
    page_facing_up,
    newspaper,
    newspaper_roll,
    bookmark_tabs,
    bookmark,
    label: label$1,
    moneybag,
    coin,
    yen,
    dollar,
    euro,
    pound,
    money_with_wings,
    credit_card,
    receipt,
    chart,
    envelope,
    email,
    "e-mail": "📧",
    incoming_envelope,
    envelope_with_arrow,
    outbox_tray,
    inbox_tray,
    package: "📦",
    mailbox,
    mailbox_closed,
    mailbox_with_mail,
    mailbox_with_no_mail,
    postbox,
    ballot_box,
    pencil2,
    black_nib,
    fountain_pen,
    pen,
    paintbrush,
    crayon,
    memo,
    pencil,
    briefcase,
    file_folder,
    open_file_folder,
    card_index_dividers,
    date,
    calendar,
    spiral_notepad,
    spiral_calendar,
    card_index,
    chart_with_upwards_trend,
    chart_with_downwards_trend,
    bar_chart,
    clipboard,
    pushpin,
    round_pushpin,
    paperclip,
    paperclips,
    straight_ruler,
    triangular_ruler,
    scissors,
    card_file_box,
    file_cabinet,
    wastebasket,
    lock,
    unlock,
    lock_with_ink_pen,
    closed_lock_with_key,
    key,
    old_key,
    hammer,
    axe,
    pick,
    hammer_and_pick,
    hammer_and_wrench,
    dagger,
    crossed_swords,
    gun,
    boomerang,
    bow_and_arrow,
    shield,
    carpentry_saw,
    wrench,
    screwdriver,
    nut_and_bolt,
    gear,
    clamp,
    balance_scale,
    probing_cane,
    link,
    chains,
    hook,
    toolbox,
    magnet,
    ladder,
    alembic,
    test_tube,
    petri_dish,
    dna,
    microscope,
    telescope,
    satellite,
    syringe,
    drop_of_blood,
    pill,
    adhesive_bandage,
    stethoscope,
    door,
    elevator,
    mirror,
    window: window$1,
    bed,
    couch_and_lamp,
    chair,
    toilet,
    plunger,
    shower,
    bathtub,
    mouse_trap,
    razor,
    lotion_bottle,
    safety_pin,
    broom,
    basket,
    roll_of_paper,
    bucket,
    soap,
    toothbrush,
    sponge,
    fire_extinguisher,
    shopping_cart,
    smoking,
    coffin,
    headstone,
    funeral_urn,
    moyai,
    placard,
    atm,
    put_litter_in_its_place,
    potable_water,
    wheelchair: "♿",
    mens,
    womens,
    restroom,
    baby_symbol,
    wc,
    passport_control,
    customs,
    baggage_claim,
    left_luggage,
    warning,
    children_crossing,
    no_entry: "⛔",
    no_entry_sign,
    no_bicycles,
    no_smoking,
    do_not_litter,
    "non-potable_water": "🚱",
    no_pedestrians,
    no_mobile_phones,
    underage,
    radioactive,
    biohazard,
    arrow_up,
    arrow_upper_right,
    arrow_right,
    arrow_lower_right,
    arrow_down,
    arrow_lower_left,
    arrow_left,
    arrow_upper_left,
    arrow_up_down,
    left_right_arrow,
    leftwards_arrow_with_hook,
    arrow_right_hook,
    arrow_heading_up,
    arrow_heading_down,
    arrows_clockwise,
    arrows_counterclockwise,
    back,
    end,
    on,
    soon,
    top: top$1,
    place_of_worship,
    atom_symbol,
    om,
    star_of_david,
    wheel_of_dharma,
    yin_yang,
    latin_cross,
    orthodox_cross,
    star_and_crescent,
    peace_symbol,
    menorah,
    six_pointed_star,
    aries: "♈",
    taurus: "♉",
    gemini: "♊",
    cancer: "♋",
    leo: "♌",
    virgo: "♍",
    libra: "♎",
    scorpius: "♏",
    sagittarius: "♐",
    capricorn: "♑",
    aquarius: "♒",
    pisces: "♓",
    ophiuchus: "⛎",
    twisted_rightwards_arrows,
    repeat,
    repeat_one,
    arrow_forward,
    fast_forward: "⏩",
    next_track_button,
    play_or_pause_button,
    arrow_backward,
    rewind: "⏪",
    previous_track_button,
    arrow_up_small,
    arrow_double_up: "⏫",
    arrow_down_small,
    arrow_double_down: "⏬",
    pause_button,
    stop_button,
    record_button,
    eject_button,
    cinema,
    low_brightness,
    high_brightness,
    signal_strength,
    vibration_mode,
    mobile_phone_off,
    female_sign,
    male_sign,
    transgender_symbol,
    heavy_multiplication_x,
    heavy_plus_sign: "➕",
    heavy_minus_sign: "➖",
    heavy_division_sign: "➗",
    infinity,
    bangbang,
    interrobang,
    question: "❓",
    grey_question: "❔",
    grey_exclamation: "❕",
    exclamation: "❗",
    heavy_exclamation_mark: "❗",
    wavy_dash,
    currency_exchange,
    heavy_dollar_sign,
    medical_symbol,
    recycle,
    fleur_de_lis,
    trident,
    name_badge,
    beginner,
    o: "⭕",
    white_check_mark: "✅",
    ballot_box_with_check,
    heavy_check_mark,
    x: "❌",
    negative_squared_cross_mark: "❎",
    curly_loop: "➰",
    loop: "➿",
    part_alternation_mark,
    eight_spoked_asterisk,
    eight_pointed_black_star,
    sparkle,
    copyright,
    registered,
    tm,
    hash,
    asterisk,
    zero,
    one,
    two,
    three,
    four,
    five,
    six,
    seven,
    eight,
    nine,
    keycap_ten,
    capital_abcd,
    abcd,
    symbols,
    abc,
    a,
    ab,
    b,
    cl,
    cool,
    free,
    information_source,
    id,
    m,
    new: "🆕",
    ng,
    o2,
    ok,
    parking,
    sos,
    up,
    vs,
    koko,
    sa,
    ideograph_advantage,
    accept,
    congratulations,
    secret,
    u6e80,
    red_circle,
    orange_circle,
    yellow_circle,
    green_circle,
    large_blue_circle,
    purple_circle,
    brown_circle,
    black_circle: "⚫",
    white_circle: "⚪",
    red_square,
    orange_square,
    yellow_square,
    green_square,
    blue_square,
    purple_square,
    brown_square,
    black_large_square: "⬛",
    white_large_square: "⬜",
    black_medium_square,
    white_medium_square,
    black_medium_small_square: "◾",
    white_medium_small_square: "◽",
    black_small_square,
    white_small_square,
    large_orange_diamond,
    large_blue_diamond,
    small_orange_diamond,
    small_blue_diamond,
    small_red_triangle,
    small_red_triangle_down,
    diamond_shape_with_a_dot_inside,
    radio_button,
    white_square_button,
    black_square_button,
    checkered_flag,
    triangular_flag_on_post,
    crossed_flags,
    black_flag,
    white_flag,
    rainbow_flag,
    transgender_flag,
    pirate_flag,
    ascension_island,
    andorra,
    united_arab_emirates,
    afghanistan,
    antigua_barbuda,
    anguilla,
    albania,
    armenia,
    angola,
    antarctica,
    argentina,
    american_samoa,
    austria,
    australia,
    aruba,
    aland_islands,
    azerbaijan,
    bosnia_herzegovina,
    barbados,
    bangladesh,
    belgium,
    burkina_faso,
    bulgaria,
    bahrain,
    burundi,
    benin,
    st_barthelemy,
    bermuda,
    brunei,
    bolivia,
    caribbean_netherlands,
    brazil,
    bahamas,
    bhutan,
    bouvet_island,
    botswana,
    belarus,
    belize,
    canada,
    cocos_islands,
    congo_kinshasa,
    central_african_republic,
    congo_brazzaville,
    switzerland,
    cote_divoire,
    cook_islands,
    chile,
    cameroon,
    cn,
    colombia,
    clipperton_island,
    costa_rica,
    cuba,
    cape_verde,
    curacao,
    christmas_island,
    cyprus,
    czech_republic,
    de,
    diego_garcia,
    djibouti,
    denmark,
    dominica,
    dominican_republic,
    algeria,
    ceuta_melilla,
    ecuador,
    estonia,
    egypt,
    western_sahara,
    eritrea,
    es,
    ethiopia,
    eu,
    european_union,
    finland,
    fiji,
    falkland_islands,
    micronesia,
    faroe_islands,
    fr,
    gabon,
    gb,
    uk,
    grenada,
    georgia,
    french_guiana,
    guernsey,
    ghana,
    gibraltar,
    greenland,
    gambia,
    guinea,
    guadeloupe,
    equatorial_guinea,
    greece,
    south_georgia_south_sandwich_islands,
    guatemala,
    guam,
    guinea_bissau,
    guyana,
    hong_kong,
    heard_mcdonald_islands,
    honduras,
    croatia,
    haiti,
    hungary,
    canary_islands,
    indonesia,
    ireland,
    israel,
    isle_of_man,
    india,
    british_indian_ocean_territory,
    iraq,
    iran,
    iceland,
    it,
    jersey,
    jamaica,
    jordan,
    jp,
    kenya,
    kyrgyzstan,
    cambodia,
    kiribati,
    comoros,
    st_kitts_nevis,
    north_korea,
    kr,
    kuwait,
    cayman_islands,
    kazakhstan,
    laos,
    lebanon,
    st_lucia,
    liechtenstein,
    sri_lanka,
    liberia,
    lesotho,
    lithuania,
    luxembourg,
    latvia,
    libya,
    morocco,
    monaco,
    moldova,
    montenegro,
    st_martin,
    madagascar,
    marshall_islands,
    macedonia,
    mali,
    myanmar,
    mongolia,
    macau,
    northern_mariana_islands,
    martinique,
    mauritania,
    montserrat,
    malta,
    mauritius,
    maldives,
    malawi,
    mexico,
    malaysia,
    mozambique,
    namibia,
    new_caledonia,
    niger,
    norfolk_island,
    nigeria,
    nicaragua,
    netherlands,
    norway,
    nepal,
    nauru,
    niue,
    new_zealand,
    oman,
    panama,
    peru,
    french_polynesia,
    papua_new_guinea,
    philippines,
    pakistan,
    poland,
    st_pierre_miquelon,
    pitcairn_islands,
    puerto_rico,
    palestinian_territories,
    portugal,
    palau,
    paraguay,
    qatar,
    reunion,
    romania,
    serbia,
    ru,
    rwanda,
    saudi_arabia,
    solomon_islands,
    seychelles,
    sudan,
    sweden,
    singapore,
    st_helena,
    slovenia,
    svalbard_jan_mayen,
    slovakia,
    sierra_leone,
    san_marino,
    senegal,
    somalia,
    suriname,
    south_sudan,
    sao_tome_principe,
    el_salvador,
    sint_maarten,
    syria,
    swaziland,
    tristan_da_cunha,
    turks_caicos_islands,
    chad,
    french_southern_territories,
    togo,
    thailand,
    tajikistan,
    tokelau,
    timor_leste,
    turkmenistan,
    tunisia,
    tonga,
    tr,
    trinidad_tobago,
    tuvalu,
    taiwan,
    tanzania,
    ukraine,
    uganda,
    us_outlying_islands,
    united_nations,
    us,
    uruguay,
    uzbekistan,
    vatican_city,
    st_vincent_grenadines,
    venezuela,
    british_virgin_islands,
    us_virgin_islands,
    vietnam,
    vanuatu,
    wallis_futuna,
    samoa,
    kosovo,
    yemen,
    mayotte,
    south_africa,
    zambia,
    zimbabwe,
    england,
    scotland,
    wales
  };
}));
var require_shortcuts = __commonJSMin(((e, t) => {
  t.exports = {
    angry: [">:(", ">:-("],
    blush: [':")', ':-")'],
    broken_heart: ["</3", "<\\3"],
    confused: [":/", ":-/"],
    cry: [
      ":'(",
      ":'-(",
      ":,(",
      ":,-("
    ],
    frowning: [":(", ":-("],
    heart: ["<3"],
    imp: ["]:(", "]:-("],
    innocent: [
      "o:)",
      "O:)",
      "o:-)",
      "O:-)",
      "0:)",
      "0:-)"
    ],
    joy: [
      ":')",
      ":'-)",
      ":,)",
      ":,-)",
      ":'D",
      ":'-D",
      ":,D",
      ":,-D"
    ],
    kissing: [":*", ":-*"],
    laughing: ["x-)", "X-)"],
    neutral_face: [":|", ":-|"],
    open_mouth: [
      ":o",
      ":-o",
      ":O",
      ":-O"
    ],
    rage: [":@", ":-@"],
    smile: [":D", ":-D"],
    smiley: [":)", ":-)"],
    smiling_imp: ["]:)", "]:-)"],
    sob: [
      ":,'(",
      ":,'-(",
      ";(",
      ";-("
    ],
    stuck_out_tongue: [":P", ":-P"],
    sunglasses: ["8-)", "B-)"],
    sweat: [",:(", ",:-("],
    sweat_smile: [",:)", ",:-)"],
    unamused: [
      ":s",
      ":-S",
      ":z",
      ":-Z",
      ":$",
      ":-$"
    ],
    wink: [";)", ";-)"]
  };
}));
var require_render = __commonJSMin(((e, t) => {
  t.exports = function(e2, t2) {
    return e2[t2].content;
  };
}));
var require_replace = __commonJSMin(((e, t) => {
  t.exports = function(e2, t2, n, r, i) {
    var o = e2.utils.arrayReplaceAt, s = e2.utils.lib.ucmicro, l = new RegExp([
      s.Z.source,
      s.P.source,
      s.Cc.source
    ].join("|"));
    function d(e3, r2, o3) {
      var s2, d2 = 0, f = [];
      return e3.replace(i, function(r3, i2, p2) {
        var _;
        if (n.hasOwnProperty(r3)) {
          if (_ = n[r3], i2 > 0 && !l.test(p2[i2 - 1]) || i2 + r3.length < p2.length && !l.test(p2[i2 + r3.length])) return;
        } else _ = r3.slice(1, -1);
        i2 > d2 && (s2 = new o3("text", "", 0), s2.content = e3.slice(d2, i2), f.push(s2)), s2 = new o3("emoji", "", 0), s2.markup = _, s2.content = t2[_], f.push(s2), d2 = i2 + r3.length;
      }), d2 < e3.length && (s2 = new o3("text", "", 0), s2.content = e3.slice(d2), f.push(s2)), f;
    }
    return function(e3) {
      var t3, n2, i2, s2, l2, f = e3.tokens, p2 = 0;
      for (n2 = 0, i2 = f.length; n2 < i2; n2++) if (f[n2].type === "inline") for (s2 = f[n2].children, t3 = s2.length - 1; t3 >= 0; t3--) l2 = s2[t3], (l2.type === "link_open" || l2.type === "link_close") && l2.info === "auto" && (p2 -= l2.nesting), l2.type === "text" && p2 === 0 && r.test(l2.content) && (f[n2].children = s2 = o(s2, t3, d(l2.content, l2.level, e3.Token)));
    };
  };
}));
var require_normalize_opts = __commonJSMin(((e, t) => {
  function n(e2) {
    return e2.replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&");
  }
  t.exports = function(e2) {
    var t2 = e2.defs, r;
    e2.enabled.length && (t2 = Object.keys(t2).reduce(function(n2, r2) {
      return e2.enabled.indexOf(r2) >= 0 && (n2[r2] = t2[r2]), n2;
    }, {})), r = Object.keys(e2.shortcuts).reduce(function(n2, r2) {
      return t2[r2] ? Array.isArray(e2.shortcuts[r2]) ? (e2.shortcuts[r2].forEach(function(e3) {
        n2[e3] = r2;
      }), n2) : (n2[e2.shortcuts[r2]] = r2, n2) : n2;
    }, {});
    var i = Object.keys(t2), o = i.length === 0 ? "^$" : i.map(function(e3) {
      return ":" + e3 + ":";
    }).concat(Object.keys(r)).sort().reverse().map(function(e3) {
      return n(e3);
    }).join("|");
    return {
      defs: t2,
      shortcuts: r,
      scanRE: RegExp(o),
      replaceRE: RegExp(o, "g")
    };
  };
}));
var require_bare = __commonJSMin(((e, t) => {
  var n = require_render(), r = require_replace(), i = require_normalize_opts();
  t.exports = function(e2, t2) {
    var o = i(e2.utils.assign({}, {
      defs: {},
      shortcuts: {},
      enabled: []
    }, t2 || {}));
    e2.renderer.rules.emoji = n, e2.core.ruler.after("linkify", "emoji", r(e2, o.defs, o.shortcuts, o.scanRE, o.replaceRE));
  };
}));
var require_markdown_it_emoji = __commonJSMin(((e, t) => {
  var n = (init_full(), __toCommonJS(full_exports).default), r = require_shortcuts(), i = require_bare();
  t.exports = function(e2, t2) {
    var o = {
      defs: n,
      shortcuts: r,
      enabled: []
    };
    i(e2, e2.utils.assign({}, o, t2 || {}));
  };
}));
var require_markdown_it_task_lists = __commonJSMin(((e, t) => {
  var n = true, r = false, i = false;
  t.exports = function(e2, t2) {
    t2 && (n = !t2.enabled, r = !!t2.label, i = !!t2.labelAfter), e2.core.ruler.after("inline", "github-task-lists", function(e3) {
      for (var t3 = e3.tokens, r2 = 2; r2 < t3.length; r2++) l(t3, r2) && (d(t3[r2], e3.Token), o(t3[r2 - 2], "class", "task-list-item" + (n ? "" : " enabled")), o(t3[s(t3, r2 - 2)], "class", "contains-task-list"));
    });
  };
  function o(e2, t2, n2) {
    var r2 = e2.attrIndex(t2), i2 = [t2, n2];
    r2 < 0 ? e2.attrPush(i2) : e2.attrs[r2] = i2;
  }
  function s(e2, t2) {
    for (var n2 = e2[t2].level - 1, r2 = t2 - 1; r2 >= 0; r2--) if (e2[r2].level === n2) return r2;
    return -1;
  }
  function l(e2, t2) {
    return x(e2[t2]) && w(e2[t2 - 1]) && k(e2[t2 - 2]) && $(e2[t2]);
  }
  function d(e2, t2) {
    if (e2.children.unshift(f(e2, t2)), e2.children[1].content = e2.children[1].content.slice(3), e2.content = e2.content.slice(3), r) if (i) {
      e2.children.pop();
      var n2 = "task-item-" + Math.ceil(Math.random() * (1e4 * 1e3) - 1e3);
      e2.children[0].content = e2.children[0].content.slice(0, -1) + ' id="' + n2 + '">', e2.children.push(y(e2.content, n2, t2));
    } else e2.children.unshift(p2(t2)), e2.children.push(_(t2));
  }
  function f(e2, t2) {
    var r2 = new t2("html_inline", "", 0), i2 = n ? ' disabled="" ' : "";
    return e2.content.indexOf("[ ] ") === 0 ? r2.content = '<input class="task-list-item-checkbox"' + i2 + 'type="checkbox">' : (e2.content.indexOf("[x] ") === 0 || e2.content.indexOf("[X] ") === 0) && (r2.content = '<input class="task-list-item-checkbox" checked=""' + i2 + 'type="checkbox">'), r2;
  }
  function p2(e2) {
    var t2 = new e2("html_inline", "", 0);
    return t2.content = "<label>", t2;
  }
  function _(e2) {
    var t2 = new e2("html_inline", "", 0);
    return t2.content = "</label>", t2;
  }
  function y(e2, t2, n2) {
    var r2 = new n2("html_inline", "", 0);
    return r2.content = '<label class="task-list-item-label" for="' + t2 + '">' + e2 + "</label>", r2.attrs = [{ for: t2 }], r2;
  }
  function x(e2) {
    return e2.type === "inline";
  }
  function w(e2) {
    return e2.type === "paragraph_open";
  }
  function k(e2) {
    return e2.type === "list_item_open";
  }
  function $(e2) {
    return e2.content.indexOf("[ ] ") === 0 || e2.content.indexOf("[x] ") === 0 || e2.content.indexOf("[X] ") === 0;
  }
}));
var require_default$1 = __commonJSMin(((e) => {
  function t() {
    var e2 = {};
    return e2["align-content"] = false, e2["align-items"] = false, e2["align-self"] = false, e2["alignment-adjust"] = false, e2["alignment-baseline"] = false, e2.all = false, e2["anchor-point"] = false, e2.animation = false, e2["animation-delay"] = false, e2["animation-direction"] = false, e2["animation-duration"] = false, e2["animation-fill-mode"] = false, e2["animation-iteration-count"] = false, e2["animation-name"] = false, e2["animation-play-state"] = false, e2["animation-timing-function"] = false, e2.azimuth = false, e2["backface-visibility"] = false, e2.background = true, e2["background-attachment"] = true, e2["background-clip"] = true, e2["background-color"] = true, e2["background-image"] = true, e2["background-origin"] = true, e2["background-position"] = true, e2["background-repeat"] = true, e2["background-size"] = true, e2["baseline-shift"] = false, e2.binding = false, e2.bleed = false, e2["bookmark-label"] = false, e2["bookmark-level"] = false, e2["bookmark-state"] = false, e2.border = true, e2["border-bottom"] = true, e2["border-bottom-color"] = true, e2["border-bottom-left-radius"] = true, e2["border-bottom-right-radius"] = true, e2["border-bottom-style"] = true, e2["border-bottom-width"] = true, e2["border-collapse"] = true, e2["border-color"] = true, e2["border-image"] = true, e2["border-image-outset"] = true, e2["border-image-repeat"] = true, e2["border-image-slice"] = true, e2["border-image-source"] = true, e2["border-image-width"] = true, e2["border-left"] = true, e2["border-left-color"] = true, e2["border-left-style"] = true, e2["border-left-width"] = true, e2["border-radius"] = true, e2["border-right"] = true, e2["border-right-color"] = true, e2["border-right-style"] = true, e2["border-right-width"] = true, e2["border-spacing"] = true, e2["border-style"] = true, e2["border-top"] = true, e2["border-top-color"] = true, e2["border-top-left-radius"] = true, e2["border-top-right-radius"] = true, e2["border-top-style"] = true, e2["border-top-width"] = true, e2["border-width"] = true, e2.bottom = false, e2["box-decoration-break"] = true, e2["box-shadow"] = true, e2["box-sizing"] = true, e2["box-snap"] = true, e2["box-suppress"] = true, e2["break-after"] = true, e2["break-before"] = true, e2["break-inside"] = true, e2["caption-side"] = false, e2.chains = false, e2.clear = true, e2.clip = false, e2["clip-path"] = false, e2["clip-rule"] = false, e2.color = true, e2["color-interpolation-filters"] = true, e2["column-count"] = false, e2["column-fill"] = false, e2["column-gap"] = false, e2["column-rule"] = false, e2["column-rule-color"] = false, e2["column-rule-style"] = false, e2["column-rule-width"] = false, e2["column-span"] = false, e2["column-width"] = false, e2.columns = false, e2.contain = false, e2.content = false, e2["counter-increment"] = false, e2["counter-reset"] = false, e2["counter-set"] = false, e2.crop = false, e2.cue = false, e2["cue-after"] = false, e2["cue-before"] = false, e2.cursor = false, e2.direction = false, e2.display = true, e2["display-inside"] = true, e2["display-list"] = true, e2["display-outside"] = true, e2["dominant-baseline"] = false, e2.elevation = false, e2["empty-cells"] = false, e2.filter = false, e2.flex = false, e2["flex-basis"] = false, e2["flex-direction"] = false, e2["flex-flow"] = false, e2["flex-grow"] = false, e2["flex-shrink"] = false, e2["flex-wrap"] = false, e2.float = false, e2["float-offset"] = false, e2["flood-color"] = false, e2["flood-opacity"] = false, e2["flow-from"] = false, e2["flow-into"] = false, e2.font = true, e2["font-family"] = true, e2["font-feature-settings"] = true, e2["font-kerning"] = true, e2["font-language-override"] = true, e2["font-size"] = true, e2["font-size-adjust"] = true, e2["font-stretch"] = true, e2["font-style"] = true, e2["font-synthesis"] = true, e2["font-variant"] = true, e2["font-variant-alternates"] = true, e2["font-variant-caps"] = true, e2["font-variant-east-asian"] = true, e2["font-variant-ligatures"] = true, e2["font-variant-numeric"] = true, e2["font-variant-position"] = true, e2["font-weight"] = true, e2.grid = false, e2["grid-area"] = false, e2["grid-auto-columns"] = false, e2["grid-auto-flow"] = false, e2["grid-auto-rows"] = false, e2["grid-column"] = false, e2["grid-column-end"] = false, e2["grid-column-start"] = false, e2["grid-row"] = false, e2["grid-row-end"] = false, e2["grid-row-start"] = false, e2["grid-template"] = false, e2["grid-template-areas"] = false, e2["grid-template-columns"] = false, e2["grid-template-rows"] = false, e2["hanging-punctuation"] = false, e2.height = true, e2.hyphens = false, e2.icon = false, e2["image-orientation"] = false, e2["image-resolution"] = false, e2["ime-mode"] = false, e2["initial-letters"] = false, e2["inline-box-align"] = false, e2["justify-content"] = false, e2["justify-items"] = false, e2["justify-self"] = false, e2.left = false, e2["letter-spacing"] = true, e2["lighting-color"] = true, e2["line-box-contain"] = false, e2["line-break"] = false, e2["line-grid"] = false, e2["line-height"] = false, e2["line-snap"] = false, e2["line-stacking"] = false, e2["line-stacking-ruby"] = false, e2["line-stacking-shift"] = false, e2["line-stacking-strategy"] = false, e2["list-style"] = true, e2["list-style-image"] = true, e2["list-style-position"] = true, e2["list-style-type"] = true, e2.margin = true, e2["margin-bottom"] = true, e2["margin-left"] = true, e2["margin-right"] = true, e2["margin-top"] = true, e2["marker-offset"] = false, e2["marker-side"] = false, e2.marks = false, e2.mask = false, e2["mask-box"] = false, e2["mask-box-outset"] = false, e2["mask-box-repeat"] = false, e2["mask-box-slice"] = false, e2["mask-box-source"] = false, e2["mask-box-width"] = false, e2["mask-clip"] = false, e2["mask-image"] = false, e2["mask-origin"] = false, e2["mask-position"] = false, e2["mask-repeat"] = false, e2["mask-size"] = false, e2["mask-source-type"] = false, e2["mask-type"] = false, e2["max-height"] = true, e2["max-lines"] = false, e2["max-width"] = true, e2["min-height"] = true, e2["min-width"] = true, e2["move-to"] = false, e2["nav-down"] = false, e2["nav-index"] = false, e2["nav-left"] = false, e2["nav-right"] = false, e2["nav-up"] = false, e2["object-fit"] = false, e2["object-position"] = false, e2.opacity = false, e2.order = false, e2.orphans = false, e2.outline = false, e2["outline-color"] = false, e2["outline-offset"] = false, e2["outline-style"] = false, e2["outline-width"] = false, e2.overflow = false, e2["overflow-wrap"] = false, e2["overflow-x"] = false, e2["overflow-y"] = false, e2.padding = true, e2["padding-bottom"] = true, e2["padding-left"] = true, e2["padding-right"] = true, e2["padding-top"] = true, e2.page = false, e2["page-break-after"] = false, e2["page-break-before"] = false, e2["page-break-inside"] = false, e2["page-policy"] = false, e2.pause = false, e2["pause-after"] = false, e2["pause-before"] = false, e2.perspective = false, e2["perspective-origin"] = false, e2.pitch = false, e2["pitch-range"] = false, e2["play-during"] = false, e2.position = false, e2["presentation-level"] = false, e2.quotes = false, e2["region-fragment"] = false, e2.resize = false, e2.rest = false, e2["rest-after"] = false, e2["rest-before"] = false, e2.richness = false, e2.right = false, e2.rotation = false, e2["rotation-point"] = false, e2["ruby-align"] = false, e2["ruby-merge"] = false, e2["ruby-position"] = false, e2["shape-image-threshold"] = false, e2["shape-outside"] = false, e2["shape-margin"] = false, e2.size = false, e2.speak = false, e2["speak-as"] = false, e2["speak-header"] = false, e2["speak-numeral"] = false, e2["speak-punctuation"] = false, e2["speech-rate"] = false, e2.stress = false, e2["string-set"] = false, e2["tab-size"] = false, e2["table-layout"] = false, e2["text-align"] = true, e2["text-align-last"] = true, e2["text-combine-upright"] = true, e2["text-decoration"] = true, e2["text-decoration-color"] = true, e2["text-decoration-line"] = true, e2["text-decoration-skip"] = true, e2["text-decoration-style"] = true, e2["text-emphasis"] = true, e2["text-emphasis-color"] = true, e2["text-emphasis-position"] = true, e2["text-emphasis-style"] = true, e2["text-height"] = true, e2["text-indent"] = true, e2["text-justify"] = true, e2["text-orientation"] = true, e2["text-overflow"] = true, e2["text-shadow"] = true, e2["text-space-collapse"] = true, e2["text-transform"] = true, e2["text-underline-position"] = true, e2["text-wrap"] = true, e2.top = false, e2.transform = false, e2["transform-origin"] = false, e2["transform-style"] = false, e2.transition = false, e2["transition-delay"] = false, e2["transition-duration"] = false, e2["transition-property"] = false, e2["transition-timing-function"] = false, e2["unicode-bidi"] = false, e2["vertical-align"] = false, e2.visibility = false, e2["voice-balance"] = false, e2["voice-duration"] = false, e2["voice-family"] = false, e2["voice-pitch"] = false, e2["voice-range"] = false, e2["voice-rate"] = false, e2["voice-stress"] = false, e2["voice-volume"] = false, e2.volume = false, e2["white-space"] = false, e2.widows = false, e2.width = true, e2["will-change"] = false, e2["word-break"] = true, e2["word-spacing"] = true, e2["word-wrap"] = true, e2["wrap-flow"] = false, e2["wrap-through"] = false, e2["writing-mode"] = false, e2["z-index"] = false, e2;
  }
  function n(e2, t2, n2) {
  }
  function r(e2, t2, n2) {
  }
  var i = /javascript\s*\:/gim;
  function o(e2, t2) {
    return i.test(t2) ? "" : t2;
  }
  e.whiteList = t(), e.getDefaultWhiteList = t, e.onAttr = n, e.onIgnoreAttr = r, e.safeAttrValue = o;
}));
var require_util$1 = __commonJSMin(((e, t) => {
  t.exports = {
    indexOf: function(e2, t2) {
      var n, r;
      if (Array.prototype.indexOf) return e2.indexOf(t2);
      for (n = 0, r = e2.length; n < r; n++) if (e2[n] === t2) return n;
      return -1;
    },
    forEach: function(e2, t2, n) {
      var r, i;
      if (Array.prototype.forEach) return e2.forEach(t2, n);
      for (r = 0, i = e2.length; r < i; r++) t2.call(n, e2[r], r, e2);
    },
    trim: function(e2) {
      return String.prototype.trim ? e2.trim() : e2.replace(/(^\s*)|(\s*$)/g, "");
    },
    trimRight: function(e2) {
      return String.prototype.trimRight ? e2.trimRight() : e2.replace(/(\s*$)/g, "");
    }
  };
}));
var require_parser$1 = __commonJSMin(((e, t) => {
  var n = require_util$1();
  function r(e2, t2) {
    e2 = n.trimRight(e2), e2[e2.length - 1] !== ";" && (e2 += ";");
    var r2 = e2.length, i = false, o = 0, s = 0, l = "";
    function d() {
      if (!i) {
        var r3 = n.trim(e2.slice(o, s)), d2 = r3.indexOf(":");
        if (d2 !== -1) {
          var f2 = n.trim(r3.slice(0, d2)), p3 = n.trim(r3.slice(d2 + 1));
          if (f2) {
            var _ = t2(o, l.length, f2, p3, r3);
            _ && (l += _ + "; ");
          }
        }
      }
      o = s + 1;
    }
    for (; s < r2; s++) {
      var f = e2[s];
      if (f === "/" && e2[s + 1] === "*") {
        var p2 = e2.indexOf("*/", s + 2);
        if (p2 === -1) break;
        s = p2 + 1, o = s + 1, i = false;
      } else f === "(" ? i = true : f === ")" ? i = false : f === ";" ? i || d() : f === "\n" && d();
    }
    return n.trim(l);
  }
  t.exports = r;
}));
var require_css = __commonJSMin(((e, t) => {
  var n = require_default$1(), r = require_parser$1();
  require_util$1();
  function i(e2) {
    return e2 == null;
  }
  function o(e2) {
    var t2 = {};
    for (var n2 in e2) t2[n2] = e2[n2];
    return t2;
  }
  function s(e2) {
    e2 = o(e2 || {}), e2.whiteList = e2.whiteList || n.whiteList, e2.onAttr = e2.onAttr || n.onAttr, e2.onIgnoreAttr = e2.onIgnoreAttr || n.onIgnoreAttr, e2.safeAttrValue = e2.safeAttrValue || n.safeAttrValue, this.options = e2;
  }
  s.prototype.process = function(e2) {
    if (e2 ||= "", e2 = e2.toString(), !e2) return "";
    var t2 = this.options, n2 = t2.whiteList, o3 = t2.onAttr, s2 = t2.onIgnoreAttr, l = t2.safeAttrValue;
    return r(e2, function(e3, t3, r2, d, f) {
      var p2 = n2[r2], _ = false;
      if (p2 === true ? _ = p2 : typeof p2 == "function" ? _ = p2(d) : p2 instanceof RegExp && (_ = p2.test(d)), _ !== true && (_ = false), d = l(r2, d), d) {
        var y = {
          position: t3,
          sourcePosition: e3,
          source: f,
          isWhite: _
        };
        if (_) {
          var x = o3(r2, d, y);
          return i(x) ? r2 + ":" + d : x;
        } else {
          var x = s2(r2, d, y);
          if (!i(x)) return x;
        }
      }
    });
  }, t.exports = s;
}));
var require_lib$1 = __commonJSMin(((e, t) => {
  var n = require_default$1(), r = require_css();
  function i(e2, t2) {
    return new r(t2).process(e2);
  }
  for (var o in e = t.exports = i, e.FilterCSS = r, n) e[o] = n[o];
  typeof window < "u" && (window.filterCSS = t.exports);
}));
var require_util = __commonJSMin(((e, t) => {
  t.exports = {
    indexOf: function(e2, t2) {
      var n, r;
      if (Array.prototype.indexOf) return e2.indexOf(t2);
      for (n = 0, r = e2.length; n < r; n++) if (e2[n] === t2) return n;
      return -1;
    },
    forEach: function(e2, t2, n) {
      var r, i;
      if (Array.prototype.forEach) return e2.forEach(t2, n);
      for (r = 0, i = e2.length; r < i; r++) t2.call(n, e2[r], r, e2);
    },
    trim: function(e2) {
      return String.prototype.trim ? e2.trim() : e2.replace(/(^\s*)|(\s*$)/g, "");
    },
    spaceIndex: function(e2) {
      var t2 = /\s|\n|\t/.exec(e2);
      return t2 ? t2.index : -1;
    }
  };
}));
var require_default = __commonJSMin(((e) => {
  var t = require_lib$1().FilterCSS, n = require_lib$1().getDefaultWhiteList, r = require_util();
  function i() {
    return {
      a: [
        "target",
        "href",
        "title"
      ],
      abbr: ["title"],
      address: [],
      area: [
        "shape",
        "coords",
        "href",
        "alt"
      ],
      article: [],
      aside: [],
      audio: [
        "autoplay",
        "controls",
        "crossorigin",
        "loop",
        "muted",
        "preload",
        "src"
      ],
      b: [],
      bdi: ["dir"],
      bdo: ["dir"],
      big: [],
      blockquote: ["cite"],
      br: [],
      caption: [],
      center: [],
      cite: [],
      code: [],
      col: [
        "align",
        "valign",
        "span",
        "width"
      ],
      colgroup: [
        "align",
        "valign",
        "span",
        "width"
      ],
      dd: [],
      del: ["datetime"],
      details: ["open"],
      div: [],
      dl: [],
      dt: [],
      em: [],
      figcaption: [],
      figure: [],
      font: [
        "color",
        "size",
        "face"
      ],
      footer: [],
      h1: [],
      h2: [],
      h3: [],
      h4: [],
      h5: [],
      h6: [],
      header: [],
      hr: [],
      i: [],
      img: [
        "src",
        "alt",
        "title",
        "width",
        "height",
        "loading"
      ],
      ins: ["datetime"],
      kbd: [],
      li: [],
      mark: [],
      nav: [],
      ol: [],
      p: [],
      pre: [],
      s: [],
      section: [],
      small: [],
      span: [],
      sub: [],
      summary: [],
      sup: [],
      strong: [],
      strike: [],
      table: [
        "width",
        "border",
        "align",
        "valign"
      ],
      tbody: ["align", "valign"],
      td: [
        "width",
        "rowspan",
        "colspan",
        "align",
        "valign"
      ],
      tfoot: ["align", "valign"],
      th: [
        "width",
        "rowspan",
        "colspan",
        "align",
        "valign"
      ],
      thead: ["align", "valign"],
      tr: [
        "rowspan",
        "align",
        "valign"
      ],
      tt: [],
      u: [],
      ul: [],
      video: [
        "autoplay",
        "controls",
        "crossorigin",
        "loop",
        "muted",
        "playsinline",
        "poster",
        "preload",
        "src",
        "height",
        "width"
      ]
    };
  }
  var o = new t();
  function s(e2, t2, n2) {
  }
  function l(e2, t2, n2) {
  }
  function d(e2, t2, n2) {
  }
  function f(e2, t2, n2) {
  }
  function p2(e2) {
    return e2.replace(y, "&lt;").replace(x, "&gt;");
  }
  function _(e2, t2, n2, i2) {
    if (n2 = B7(n2), t2 === "href" || t2 === "src") {
      if (n2 = r.trim(n2), n2 === "#") return "#";
      if (!(n2.substr(0, 7) === "http://" || n2.substr(0, 8) === "https://" || n2.substr(0, 7) === "mailto:" || n2.substr(0, 4) === "tel:" || n2.substr(0, 11) === "data:image/" || n2.substr(0, 6) === "ftp://" || n2.substr(0, 2) === "./" || n2.substr(0, 3) === "../" || n2[0] === "#" || n2[0] === "/")) return "";
    } else if (t2 === "background") {
      if (M7.lastIndex = 0, M7.test(n2)) return "";
    } else if (t2 === "style") {
      if (N7.lastIndex = 0, N7.test(n2) || (P7.lastIndex = 0, P7.test(n2) && (M7.lastIndex = 0, M7.test(n2)))) return "";
      i2 !== false && (i2 ||= o, n2 = i2.process(n2));
    }
    return n2 = V7(n2), n2;
  }
  var y = /</g, x = />/g, w = /"/g, k = /&quot;/g, $ = /&#([a-zA-Z0-9]*);?/gim, A7 = /&colon;?/gim, j7 = /&newline;?/gim, M7 = /((j\s*a\s*v\s*a|v\s*b|l\s*i\s*v\s*e)\s*s\s*c\s*r\s*i\s*p\s*t\s*|m\s*o\s*c\s*h\s*a):/gi, N7 = /e\s*x\s*p\s*r\s*e\s*s\s*s\s*i\s*o\s*n\s*\(.*/gi, P7 = /u\s*r\s*l\s*\(.*/gi;
  function F7(e2) {
    return e2.replace(w, "&quot;");
  }
  function I7(e2) {
    return e2.replace(k, '"');
  }
  function L7(e2) {
    return e2.replace($, function(e3, t2) {
      return t2[0] === "x" || t2[0] === "X" ? String.fromCharCode(parseInt(t2.substr(1), 16)) : String.fromCharCode(parseInt(t2, 10));
    });
  }
  function R7(e2) {
    return e2.replace(A7, ":").replace(j7, " ");
  }
  function z7(e2) {
    for (var t2 = "", n2 = 0, i2 = e2.length; n2 < i2; n2++) t2 += e2.charCodeAt(n2) < 32 ? " " : e2.charAt(n2);
    return r.trim(t2);
  }
  function B7(e2) {
    return e2 = I7(e2), e2 = L7(e2), e2 = R7(e2), e2 = z7(e2), e2;
  }
  function V7(e2) {
    return e2 = F7(e2), e2 = p2(e2), e2;
  }
  function H7() {
    return "";
  }
  function U7(e2, t2) {
    typeof t2 != "function" && (t2 = function() {
    });
    var n2 = !Array.isArray(e2);
    function i2(t3) {
      return n2 ? true : r.indexOf(e2, t3) !== -1;
    }
    var o3 = [], s2 = false;
    return {
      onIgnoreTag: function(e3, n3, r2) {
        if (i2(e3)) if (r2.isClosing) {
          var l2 = "[/removed]", d2 = r2.position + l2.length;
          return o3.push([s2 === false ? r2.position : s2, d2]), s2 = false, l2;
        } else return s2 ||= r2.position, "[removed]";
        else return t2(e3, n3, r2);
      },
      remove: function(e3) {
        var t3 = "", n3 = 0;
        return r.forEach(o3, function(r2) {
          t3 += e3.slice(n3, r2[0]), n3 = r2[1];
        }), t3 += e3.slice(n3), t3;
      }
    };
  }
  function W7(e2) {
    for (var t2 = "", n2 = 0; n2 < e2.length; ) {
      var r2 = e2.indexOf("<!--", n2);
      if (r2 === -1) {
        t2 += e2.slice(n2);
        break;
      }
      t2 += e2.slice(n2, r2);
      var i2 = e2.indexOf("-->", r2);
      if (i2 === -1) break;
      n2 = i2 + 3;
    }
    return t2;
  }
  function G7(e2) {
    var t2 = e2.split("");
    return t2 = t2.filter(function(e3) {
      var t3 = e3.charCodeAt(0);
      return t3 === 127 ? false : t3 <= 31 ? t3 === 10 || t3 === 13 : true;
    }), t2.join("");
  }
  e.whiteList = i(), e.getDefaultWhiteList = i, e.onTag = s, e.onIgnoreTag = l, e.onTagAttr = d, e.onIgnoreTagAttr = f, e.safeAttrValue = _, e.escapeHtml = p2, e.escapeQuote = F7, e.unescapeQuote = I7, e.escapeHtmlEntities = L7, e.escapeDangerHtml5Entities = R7, e.clearNonPrintableCharacter = z7, e.friendlyAttrValue = B7, e.escapeAttrValue = V7, e.onIgnoreTagStripAll = H7, e.StripTagBody = U7, e.stripCommentTag = W7, e.stripBlankChar = G7, e.attributeWrapSign = '"', e.cssFilter = o, e.getDefaultCSSWhiteList = n;
}));
var require_parser = __commonJSMin(((e) => {
  var t = require_util();
  function n(e2) {
    var n2 = t.spaceIndex(e2), r2 = n2 === -1 ? e2.slice(1, -1) : e2.slice(1, n2 + 1);
    return r2 = t.trim(r2).toLowerCase(), r2.slice(0, 1) === "/" && (r2 = r2.slice(1)), r2.slice(-1) === "/" && (r2 = r2.slice(0, -1)), r2;
  }
  function r(e2) {
    return e2.slice(0, 2) === "</";
  }
  function i(e2, t2, i2) {
    var o3 = "", s2 = 0, l2 = false, d2 = false, f2 = 0, p3 = e2.length, _2 = "", y = "";
    chariterator: for (f2 = 0; f2 < p3; f2++) {
      var x = e2.charAt(f2);
      if (l2 === false) {
        if (x === "<") {
          l2 = f2;
          continue;
        }
      } else if (d2 === false) {
        if (x === "<") {
          o3 += i2(e2.slice(s2, f2)), l2 = f2, s2 = f2;
          continue;
        }
        if (x === ">" || f2 === p3 - 1) {
          o3 += i2(e2.slice(s2, l2)), y = e2.slice(l2, f2 + 1), _2 = n(y), o3 += t2(l2, o3.length, _2, y, r(y)), s2 = f2 + 1, l2 = false;
          continue;
        }
        if (x === '"' || x === "'") for (var w = 1, k = e2.charAt(f2 - w); k.trim() === "" || k === "="; ) {
          if (k === "=") {
            d2 = x;
            continue chariterator;
          }
          k = e2.charAt(f2 - ++w);
        }
      } else if (x === d2) {
        d2 = false;
        continue;
      }
    }
    return s2 < p3 && (o3 += i2(e2.substr(s2))), o3;
  }
  var o = /[^a-zA-Z0-9\\_:.-]/gim;
  function s(e2, n2) {
    var r2 = 0, i2 = 0, s2 = [], p3 = false, y = e2.length;
    function x(e3, r3) {
      if (e3 = t.trim(e3), e3 = e3.replace(o, "").toLowerCase(), !(e3.length < 1)) {
        var i3 = n2(e3, r3 || "");
        i3 && s2.push(i3);
      }
    }
    for (var w = 0; w < y; w++) {
      var k = e2.charAt(w), $, A7;
      if (p3 === false && k === "=") {
        p3 = e2.slice(r2, w), r2 = w + 1, i2 = e2.charAt(r2) === '"' || e2.charAt(r2) === "'" ? r2 : d(e2, w + 1);
        continue;
      }
      if (p3 !== false && w === i2) {
        if (A7 = e2.indexOf(k, w + 1), A7 === -1) break;
        $ = t.trim(e2.slice(i2 + 1, A7)), x(p3, $), p3 = false, w = A7, r2 = w + 1;
        continue;
      }
      if (/\s|\n|\t/.test(k)) if (e2 = e2.replace(/\s|\n|\t/g, " "), p3 === false) if (A7 = l(e2, w), A7 === -1) {
        $ = t.trim(e2.slice(r2, w)), x($), p3 = false, r2 = w + 1;
        continue;
      } else {
        w = A7 - 1;
        continue;
      }
      else if (A7 = f(e2, w - 1), A7 === -1) {
        $ = t.trim(e2.slice(r2, w)), $ = _($), x(p3, $), p3 = false, r2 = w + 1;
        continue;
      } else continue;
    }
    return r2 < e2.length && (p3 === false ? x(e2.slice(r2)) : x(p3, _(t.trim(e2.slice(r2))))), t.trim(s2.join(" "));
  }
  function l(e2, t2) {
    for (; t2 < e2.length; t2++) {
      var n2 = e2[t2];
      if (n2 !== " ") return n2 === "=" ? t2 : -1;
    }
  }
  function d(e2, t2) {
    for (; t2 < e2.length; t2++) {
      var n2 = e2[t2];
      if (n2 !== " ") return n2 === "'" || n2 === '"' ? t2 : -1;
    }
  }
  function f(e2, t2) {
    for (; t2 > 0; t2--) {
      var n2 = e2[t2];
      if (n2 !== " ") return n2 === "=" ? t2 : -1;
    }
  }
  function p2(e2) {
    return e2[0] === '"' && e2[e2.length - 1] === '"' || e2[0] === "'" && e2[e2.length - 1] === "'";
  }
  function _(e2) {
    return p2(e2) ? e2.substr(1, e2.length - 2) : e2;
  }
  e.parseTag = i, e.parseAttr = s;
}));
var require_xss = __commonJSMin(((e, t) => {
  var n = require_lib$1().FilterCSS, r = require_default(), i = require_parser(), o = i.parseTag, s = i.parseAttr, l = require_util();
  function d(e2) {
    return e2 == null;
  }
  function f(e2) {
    var t2 = l.spaceIndex(e2);
    if (t2 === -1) return {
      html: "",
      closing: e2[e2.length - 2] === "/"
    };
    e2 = l.trim(e2.slice(t2 + 1, -1));
    var n2 = e2[e2.length - 1] === "/";
    return n2 && (e2 = l.trim(e2.slice(0, -1))), {
      html: e2,
      closing: n2
    };
  }
  function p2(e2) {
    var t2 = {};
    for (var n2 in e2) t2[n2] = e2[n2];
    return t2;
  }
  function _(e2) {
    var t2 = {};
    for (var n2 in e2) Array.isArray(e2[n2]) ? t2[n2.toLowerCase()] = e2[n2].map(function(e3) {
      return e3.toLowerCase();
    }) : t2[n2.toLowerCase()] = e2[n2];
    return t2;
  }
  function y(e2) {
    e2 = p2(e2 || {}), e2.stripIgnoreTag && (e2.onIgnoreTag && console.error('Notes: cannot use these two options "stripIgnoreTag" and "onIgnoreTag" at the same time'), e2.onIgnoreTag = r.onIgnoreTagStripAll), e2.whiteList || e2.allowList ? e2.whiteList = _(e2.whiteList || e2.allowList) : e2.whiteList = r.whiteList, this.attributeWrapSign = e2.singleQuotedAttributeValue === true ? "'" : r.attributeWrapSign, e2.onTag = e2.onTag || r.onTag, e2.onTagAttr = e2.onTagAttr || r.onTagAttr, e2.onIgnoreTag = e2.onIgnoreTag || r.onIgnoreTag, e2.onIgnoreTagAttr = e2.onIgnoreTagAttr || r.onIgnoreTagAttr, e2.safeAttrValue = e2.safeAttrValue || r.safeAttrValue, e2.escapeHtml = e2.escapeHtml || r.escapeHtml, this.options = e2, e2.css === false ? this.cssFilter = false : (e2.css = e2.css || {}, this.cssFilter = new n(e2.css));
  }
  y.prototype.process = function(e2) {
    if (e2 ||= "", e2 = e2.toString(), !e2) return "";
    var t2 = this, n2 = t2.options, i2 = n2.whiteList, p3 = n2.onTag, _2 = n2.onIgnoreTag, y2 = n2.onTagAttr, x = n2.onIgnoreTagAttr, w = n2.safeAttrValue, k = n2.escapeHtml, $ = t2.attributeWrapSign, A7 = t2.cssFilter;
    n2.stripBlankChar && (e2 = r.stripBlankChar(e2)), n2.allowCommentTag || (e2 = r.stripCommentTag(e2));
    var j7 = false;
    n2.stripIgnoreTagBody && (j7 = r.StripTagBody(n2.stripIgnoreTagBody, _2), _2 = j7.onIgnoreTag);
    var M7 = o(e2, function(e3, t3, n3, r2, o3) {
      var j72 = {
        sourcePosition: e3,
        position: t3,
        isClosing: o3,
        isWhite: Object.prototype.hasOwnProperty.call(i2, n3)
      }, M72 = p3(n3, r2, j72);
      if (!d(M72)) return M72;
      if (j72.isWhite) {
        if (j72.isClosing) return "</" + n3 + ">";
        var N7 = f(r2), P7 = i2[n3], F7 = s(N7.html, function(e4, t4) {
          var r3 = l.indexOf(P7, e4) !== -1, i3 = y2(n3, e4, t4, r3);
          return d(i3) ? r3 ? (t4 = w(n3, e4, t4, A7), t4 ? e4 + "=" + $ + t4 + $ : e4) : (i3 = x(n3, e4, t4, r3), d(i3) ? void 0 : i3) : i3;
        });
        return r2 = "<" + n3, F7 && (r2 += " " + F7), N7.closing && (r2 += " /"), r2 += ">", r2;
      } else return M72 = _2(n3, r2, j72), d(M72) ? k(r2) : M72;
    }, k);
    return j7 && (M7 = j7.remove(M7)), M7;
  }, t.exports = y;
}));
__commonJSMin(((e, t) => {
  var n = require_default(), r = require_parser(), i = require_xss();
  function o(e2, t2) {
    return new i(t2).process(e2);
  }
  e = t.exports = o, e.filterXSS = o, e.FilterXSS = i, (function() {
    for (var t2 in n) e[t2] = n[t2];
    for (var i2 in r) e[i2] = r[i2];
  })(), typeof window < "u" && (window.filterXSS = t.exports);
  function s() {
    return typeof self < "u" && typeof DedicatedWorkerGlobalScope < "u" && self instanceof DedicatedWorkerGlobalScope;
  }
  s() && (self.filterXSS = t.exports);
}))(), require_markdown_it_task_lists(), require_markdown_it_emoji(), require_markdown_it(), require_markdown_it_link_attributes(), Boolean, Boolean, { ...RouterLink.props }, String, Object, { ...popoverProps }, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean;
var require_isArray = __commonJSMin(((e, t) => {
  t.exports = Array.isArray;
}));
var require__freeGlobal = __commonJSMin(((e, t) => {
  t.exports = typeof global == "object" && global && global.Object === Object && global;
}));
var require__root = __commonJSMin(((e, t) => {
  var n = require__freeGlobal(), r = typeof self == "object" && self && self.Object === Object && self;
  t.exports = n || r || Function("return this")();
}));
var require__Symbol = __commonJSMin(((e, t) => {
  t.exports = require__root().Symbol;
}));
var require__getRawTag = __commonJSMin(((e, t) => {
  var n = require__Symbol(), r = Object.prototype, i = r.hasOwnProperty, o = r.toString, s = n ? n.toStringTag : void 0;
  function l(e2) {
    var t2 = i.call(e2, s), n2 = e2[s];
    try {
      e2[s] = void 0;
      var r2 = true;
    } catch {
    }
    var l2 = o.call(e2);
    return r2 && (t2 ? e2[s] = n2 : delete e2[s]), l2;
  }
  t.exports = l;
}));
var require__objectToString = __commonJSMin(((e, t) => {
  var n = Object.prototype.toString;
  function r(e2) {
    return n.call(e2);
  }
  t.exports = r;
}));
var require__baseGetTag = __commonJSMin(((e, t) => {
  var n = require__Symbol(), r = require__getRawTag(), i = require__objectToString(), o = "[object Null]", s = "[object Undefined]", l = n ? n.toStringTag : void 0;
  function d(e2) {
    return e2 == null ? e2 === void 0 ? s : o : l && l in Object(e2) ? r(e2) : i(e2);
  }
  t.exports = d;
}));
var require_isObjectLike = __commonJSMin(((e, t) => {
  function n(e2) {
    return typeof e2 == "object" && !!e2;
  }
  t.exports = n;
}));
var require_isSymbol = __commonJSMin(((e, t) => {
  var n = require__baseGetTag(), r = require_isObjectLike(), i = "[object Symbol]";
  function o(e2) {
    return typeof e2 == "symbol" || r(e2) && n(e2) == i;
  }
  t.exports = o;
}));
var require__isKey = __commonJSMin(((e, t) => {
  var n = require_isArray(), r = require_isSymbol(), i = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, o = /^\w*$/;
  function s(e2, t2) {
    if (n(e2)) return false;
    var s2 = typeof e2;
    return s2 == "number" || s2 == "symbol" || s2 == "boolean" || e2 == null || r(e2) ? true : o.test(e2) || !i.test(e2) || t2 != null && e2 in Object(t2);
  }
  t.exports = s;
}));
var require_isObject = __commonJSMin(((e, t) => {
  function n(e2) {
    var t2 = typeof e2;
    return e2 != null && (t2 == "object" || t2 == "function");
  }
  t.exports = n;
}));
var require_isFunction = __commonJSMin(((e, t) => {
  var n = require__baseGetTag(), r = require_isObject(), i = "[object AsyncFunction]", o = "[object Function]", s = "[object GeneratorFunction]", l = "[object Proxy]";
  function d(e2) {
    if (!r(e2)) return false;
    var t2 = n(e2);
    return t2 == o || t2 == s || t2 == i || t2 == l;
  }
  t.exports = d;
}));
var require__coreJsData = __commonJSMin(((e, t) => {
  t.exports = require__root()["__core-js_shared__"];
}));
var require__isMasked = __commonJSMin(((e, t) => {
  var n = require__coreJsData(), r = (function() {
    var e2 = /[^.]+$/.exec(n && n.keys && n.keys.IE_PROTO || "");
    return e2 ? "Symbol(src)_1." + e2 : "";
  })();
  function i(e2) {
    return !!r && r in e2;
  }
  t.exports = i;
}));
var require__toSource = __commonJSMin(((e, t) => {
  var n = Function.prototype.toString;
  function r(e2) {
    if (e2 != null) {
      try {
        return n.call(e2);
      } catch {
      }
      try {
        return e2 + "";
      } catch {
      }
    }
    return "";
  }
  t.exports = r;
}));
var require__baseIsNative = __commonJSMin(((e, t) => {
  var n = require_isFunction(), r = require__isMasked(), i = require_isObject(), o = require__toSource(), s = /[\\^$.*+?()[\]{}|]/g, l = /^\[object .+?Constructor\]$/, d = Function.prototype, f = Object.prototype, p2 = d.toString, _ = f.hasOwnProperty, y = RegExp("^" + p2.call(_).replace(s, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
  function x(e2) {
    return !i(e2) || r(e2) ? false : (n(e2) ? y : l).test(o(e2));
  }
  t.exports = x;
}));
var require__getValue = __commonJSMin(((e, t) => {
  function n(e2, t2) {
    return e2?.[t2];
  }
  t.exports = n;
}));
var require__getNative = __commonJSMin(((e, t) => {
  var n = require__baseIsNative(), r = require__getValue();
  function i(e2, t2) {
    var i2 = r(e2, t2);
    return n(i2) ? i2 : void 0;
  }
  t.exports = i;
}));
var require__nativeCreate = __commonJSMin(((e, t) => {
  t.exports = require__getNative()(Object, "create");
}));
var require__hashClear = __commonJSMin(((e, t) => {
  var n = require__nativeCreate();
  function r() {
    this.__data__ = n ? n(null) : {}, this.size = 0;
  }
  t.exports = r;
}));
var require__hashDelete = __commonJSMin(((e, t) => {
  function n(e2) {
    var t2 = this.has(e2) && delete this.__data__[e2];
    return this.size -= t2 ? 1 : 0, t2;
  }
  t.exports = n;
}));
var require__hashGet = __commonJSMin(((e, t) => {
  var n = require__nativeCreate(), r = "__lodash_hash_undefined__", i = Object.prototype.hasOwnProperty;
  function o(e2) {
    var t2 = this.__data__;
    if (n) {
      var o3 = t2[e2];
      return o3 === r ? void 0 : o3;
    }
    return i.call(t2, e2) ? t2[e2] : void 0;
  }
  t.exports = o;
}));
var require__hashHas = __commonJSMin(((e, t) => {
  var n = require__nativeCreate(), r = Object.prototype.hasOwnProperty;
  function i(e2) {
    var t2 = this.__data__;
    return n ? t2[e2] !== void 0 : r.call(t2, e2);
  }
  t.exports = i;
}));
var require__hashSet = __commonJSMin(((e, t) => {
  var n = require__nativeCreate(), r = "__lodash_hash_undefined__";
  function i(e2, t2) {
    var i2 = this.__data__;
    return this.size += this.has(e2) ? 0 : 1, i2[e2] = n && t2 === void 0 ? r : t2, this;
  }
  t.exports = i;
}));
var require__Hash = __commonJSMin(((e, t) => {
  var n = require__hashClear(), r = require__hashDelete(), i = require__hashGet(), o = require__hashHas(), s = require__hashSet();
  function l(e2) {
    var t2 = -1, n2 = e2 == null ? 0 : e2.length;
    for (this.clear(); ++t2 < n2; ) {
      var r2 = e2[t2];
      this.set(r2[0], r2[1]);
    }
  }
  l.prototype.clear = n, l.prototype.delete = r, l.prototype.get = i, l.prototype.has = o, l.prototype.set = s, t.exports = l;
}));
var require__listCacheClear = __commonJSMin(((e, t) => {
  function n() {
    this.__data__ = [], this.size = 0;
  }
  t.exports = n;
}));
var require_eq = __commonJSMin(((e, t) => {
  function n(e2, t2) {
    return e2 === t2 || e2 !== e2 && t2 !== t2;
  }
  t.exports = n;
}));
var require__assocIndexOf = __commonJSMin(((e, t) => {
  var n = require_eq();
  function r(e2, t2) {
    for (var r2 = e2.length; r2--; ) if (n(e2[r2][0], t2)) return r2;
    return -1;
  }
  t.exports = r;
}));
var require__listCacheDelete = __commonJSMin(((e, t) => {
  var n = require__assocIndexOf(), r = Array.prototype.splice;
  function i(e2) {
    var t2 = this.__data__, i2 = n(t2, e2);
    return i2 < 0 ? false : (i2 == t2.length - 1 ? t2.pop() : r.call(t2, i2, 1), --this.size, true);
  }
  t.exports = i;
}));
var require__listCacheGet = __commonJSMin(((e, t) => {
  var n = require__assocIndexOf();
  function r(e2) {
    var t2 = this.__data__, r2 = n(t2, e2);
    return r2 < 0 ? void 0 : t2[r2][1];
  }
  t.exports = r;
}));
var require__listCacheHas = __commonJSMin(((e, t) => {
  var n = require__assocIndexOf();
  function r(e2) {
    return n(this.__data__, e2) > -1;
  }
  t.exports = r;
}));
var require__listCacheSet = __commonJSMin(((e, t) => {
  var n = require__assocIndexOf();
  function r(e2, t2) {
    var r2 = this.__data__, i = n(r2, e2);
    return i < 0 ? (++this.size, r2.push([e2, t2])) : r2[i][1] = t2, this;
  }
  t.exports = r;
}));
var require__ListCache = __commonJSMin(((e, t) => {
  var n = require__listCacheClear(), r = require__listCacheDelete(), i = require__listCacheGet(), o = require__listCacheHas(), s = require__listCacheSet();
  function l(e2) {
    var t2 = -1, n2 = e2 == null ? 0 : e2.length;
    for (this.clear(); ++t2 < n2; ) {
      var r2 = e2[t2];
      this.set(r2[0], r2[1]);
    }
  }
  l.prototype.clear = n, l.prototype.delete = r, l.prototype.get = i, l.prototype.has = o, l.prototype.set = s, t.exports = l;
}));
var require__Map = __commonJSMin(((e, t) => {
  t.exports = require__getNative()(require__root(), "Map");
}));
var require__mapCacheClear = __commonJSMin(((e, t) => {
  var n = require__Hash(), r = require__ListCache(), i = require__Map();
  function o() {
    this.size = 0, this.__data__ = {
      hash: new n(),
      map: new (i || r)(),
      string: new n()
    };
  }
  t.exports = o;
}));
var require__isKeyable = __commonJSMin(((e, t) => {
  function n(e2) {
    var t2 = typeof e2;
    return t2 == "string" || t2 == "number" || t2 == "symbol" || t2 == "boolean" ? e2 !== "__proto__" : e2 === null;
  }
  t.exports = n;
}));
var require__getMapData = __commonJSMin(((e, t) => {
  var n = require__isKeyable();
  function r(e2, t2) {
    var r2 = e2.__data__;
    return n(t2) ? r2[typeof t2 == "string" ? "string" : "hash"] : r2.map;
  }
  t.exports = r;
}));
var require__mapCacheDelete = __commonJSMin(((e, t) => {
  var n = require__getMapData();
  function r(e2) {
    var t2 = n(this, e2).delete(e2);
    return this.size -= t2 ? 1 : 0, t2;
  }
  t.exports = r;
}));
var require__mapCacheGet = __commonJSMin(((e, t) => {
  var n = require__getMapData();
  function r(e2) {
    return n(this, e2).get(e2);
  }
  t.exports = r;
}));
var require__mapCacheHas = __commonJSMin(((e, t) => {
  var n = require__getMapData();
  function r(e2) {
    return n(this, e2).has(e2);
  }
  t.exports = r;
}));
var require__mapCacheSet = __commonJSMin(((e, t) => {
  var n = require__getMapData();
  function r(e2, t2) {
    var r2 = n(this, e2), i = r2.size;
    return r2.set(e2, t2), this.size += r2.size == i ? 0 : 1, this;
  }
  t.exports = r;
}));
var require__MapCache = __commonJSMin(((e, t) => {
  var n = require__mapCacheClear(), r = require__mapCacheDelete(), i = require__mapCacheGet(), o = require__mapCacheHas(), s = require__mapCacheSet();
  function l(e2) {
    var t2 = -1, n2 = e2 == null ? 0 : e2.length;
    for (this.clear(); ++t2 < n2; ) {
      var r2 = e2[t2];
      this.set(r2[0], r2[1]);
    }
  }
  l.prototype.clear = n, l.prototype.delete = r, l.prototype.get = i, l.prototype.has = o, l.prototype.set = s, t.exports = l;
}));
var require_memoize = __commonJSMin(((e, t) => {
  var n = require__MapCache(), r = "Expected a function";
  function i(e2, t2) {
    if (typeof e2 != "function" || t2 != null && typeof t2 != "function") throw TypeError(r);
    var o = function() {
      var n2 = arguments, r2 = t2 ? t2.apply(this, n2) : n2[0], i2 = o.cache;
      if (i2.has(r2)) return i2.get(r2);
      var s = e2.apply(this, n2);
      return o.cache = i2.set(r2, s) || i2, s;
    };
    return o.cache = new (i.Cache || n)(), o;
  }
  i.Cache = n, t.exports = i;
}));
var require__memoizeCapped = __commonJSMin(((e, t) => {
  var n = require_memoize(), r = 500;
  function i(e2) {
    var t2 = n(e2, function(e3) {
      return i2.size === r && i2.clear(), e3;
    }), i2 = t2.cache;
    return t2;
  }
  t.exports = i;
}));
var require__stringToPath = __commonJSMin(((e, t) => {
  var n = require__memoizeCapped(), r = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, i = /\\(\\)?/g;
  t.exports = n(function(e2) {
    var t2 = [];
    return e2.charCodeAt(0) === 46 && t2.push(""), e2.replace(r, function(e3, n2, r2, o) {
      t2.push(r2 ? o.replace(i, "$1") : n2 || e3);
    }), t2;
  });
}));
var require__arrayMap = __commonJSMin(((e, t) => {
  function n(e2, t2) {
    for (var n2 = -1, r = e2 == null ? 0 : e2.length, i = Array(r); ++n2 < r; ) i[n2] = t2(e2[n2], n2, e2);
    return i;
  }
  t.exports = n;
}));
var require__baseToString = __commonJSMin(((e, t) => {
  var n = require__Symbol(), r = require__arrayMap(), i = require_isArray(), o = require_isSymbol(), s = Infinity, l = n ? n.prototype : void 0, d = l ? l.toString : void 0;
  function f(e2) {
    if (typeof e2 == "string") return e2;
    if (i(e2)) return r(e2, f) + "";
    if (o(e2)) return d ? d.call(e2) : "";
    var t2 = e2 + "";
    return t2 == "0" && 1 / e2 == -s ? "-0" : t2;
  }
  t.exports = f;
}));
var require_toString = __commonJSMin(((e, t) => {
  var n = require__baseToString();
  function r(e2) {
    return e2 == null ? "" : n(e2);
  }
  t.exports = r;
}));
var require__castPath = __commonJSMin(((e, t) => {
  var n = require_isArray(), r = require__isKey(), i = require__stringToPath(), o = require_toString();
  function s(e2, t2) {
    return n(e2) ? e2 : r(e2, t2) ? [e2] : i(o(e2));
  }
  t.exports = s;
}));
var require__toKey = __commonJSMin(((e, t) => {
  var n = require_isSymbol(), r = Infinity;
  function i(e2) {
    if (typeof e2 == "string" || n(e2)) return e2;
    var t2 = e2 + "";
    return t2 == "0" && 1 / e2 == -r ? "-0" : t2;
  }
  t.exports = i;
}));
var require__baseGet = __commonJSMin(((e, t) => {
  var n = require__castPath(), r = require__toKey();
  function i(e2, t2) {
    t2 = n(t2, e2);
    for (var i2 = 0, o = t2.length; e2 != null && i2 < o; ) e2 = e2[r(t2[i2++])];
    return i2 && i2 == o ? e2 : void 0;
  }
  t.exports = i;
}));
__commonJSMin(((e, t) => {
  var n = require__baseGet();
  function r(e2, t2, r2) {
    var i = e2 == null ? void 0 : n(e2, t2);
    return i === void 0 ? r2 : i;
  }
  t.exports = r;
}))();
function bash(e) {
  let t = e.regex, n = {}, r = {
    begin: /\$\{/,
    end: /\}/,
    contains: ["self", {
      begin: /:-/,
      contains: [n]
    }]
  };
  Object.assign(n, {
    className: "variable",
    variants: [{ begin: t.concat(/\$[\w\d#@][\w\d_]*/, "(?![\\w\\d])(?![$])") }, r]
  });
  let i = {
    className: "subst",
    begin: /\$\(/,
    end: /\)/,
    contains: [e.BACKSLASH_ESCAPE]
  }, o = e.inherit(e.COMMENT(), {
    match: [/(^|\s)/, /#.*$/],
    scope: { 2: "comment" }
  }), s = {
    begin: /<<-?\s*(?=\w+)/,
    starts: { contains: [e.END_SAME_AS_BEGIN({
      begin: /(\w+)/,
      end: /(\w+)/,
      className: "string"
    })] }
  }, l = {
    className: "string",
    begin: /"/,
    end: /"/,
    contains: [
      e.BACKSLASH_ESCAPE,
      n,
      i
    ]
  };
  i.contains.push(l);
  let d = { match: /\\"/ }, f = {
    className: "string",
    begin: /'/,
    end: /'/
  }, p2 = { match: /\\'/ }, _ = {
    begin: /\$?\(\(/,
    end: /\)\)/,
    contains: [
      {
        begin: /\d+#[0-9a-f]+/,
        className: "number"
      },
      e.NUMBER_MODE,
      n
    ]
  }, y = e.SHEBANG({
    binary: `(${[
      "fish",
      "bash",
      "zsh",
      "sh",
      "csh",
      "ksh",
      "tcsh",
      "dash",
      "scsh"
    ].join("|")})`,
    relevance: 10
  }), x = {
    className: "function",
    begin: /\w[\w\d_]*\s*\(\s*\)\s*\{/,
    returnBegin: true,
    contains: [e.inherit(e.TITLE_MODE, { begin: /\w[\w\d_]*/ })],
    relevance: 0
  }, w = [
    "if",
    "then",
    "else",
    "elif",
    "fi",
    "time",
    "for",
    "while",
    "until",
    "in",
    "do",
    "done",
    "case",
    "esac",
    "coproc",
    "function",
    "select"
  ], k = ["true", "false"], $ = { match: /(\/[a-z._-]+)+/ }, A7 = [
    "break",
    "cd",
    "continue",
    "eval",
    "exec",
    "exit",
    "export",
    "getopts",
    "hash",
    "pwd",
    "readonly",
    "return",
    "shift",
    "test",
    "times",
    "trap",
    "umask",
    "unset"
  ], j7 = [
    "alias",
    "bind",
    "builtin",
    "caller",
    "command",
    "declare",
    "echo",
    "enable",
    "help",
    "let",
    "local",
    "logout",
    "mapfile",
    "printf",
    "read",
    "readarray",
    "source",
    "sudo",
    "type",
    "typeset",
    "ulimit",
    "unalias"
  ], M7 = "autoload.bg.bindkey.bye.cap.chdir.clone.comparguments.compcall.compctl.compdescribe.compfiles.compgroups.compquote.comptags.comptry.compvalues.dirs.disable.disown.echotc.echoti.emulate.fc.fg.float.functions.getcap.getln.history.integer.jobs.kill.limit.log.noglob.popd.print.pushd.pushln.rehash.sched.setcap.setopt.stat.suspend.ttyctl.unfunction.unhash.unlimit.unsetopt.vared.wait.whence.where.which.zcompile.zformat.zftp.zle.zmodload.zparseopts.zprof.zpty.zregexparse.zsocket.zstyle.ztcp".split("."), N7 = "chcon.chgrp.chown.chmod.cp.dd.df.dir.dircolors.ln.ls.mkdir.mkfifo.mknod.mktemp.mv.realpath.rm.rmdir.shred.sync.touch.truncate.vdir.b2sum.base32.base64.cat.cksum.comm.csplit.cut.expand.fmt.fold.head.join.md5sum.nl.numfmt.od.paste.ptx.pr.sha1sum.sha224sum.sha256sum.sha384sum.sha512sum.shuf.sort.split.sum.tac.tail.tr.tsort.unexpand.uniq.wc.arch.basename.chroot.date.dirname.du.echo.env.expr.factor.groups.hostid.id.link.logname.nice.nohup.nproc.pathchk.pinky.printenv.printf.pwd.readlink.runcon.seq.sleep.stat.stdbuf.stty.tee.test.timeout.tty.uname.unlink.uptime.users.who.whoami.yes".split(".");
  return {
    name: "Bash",
    aliases: ["sh", "zsh"],
    keywords: {
      $pattern: /\b[a-z][a-z0-9._-]+\b/,
      keyword: w,
      literal: k,
      built_in: [
        ...A7,
        ...j7,
        "set",
        "shopt",
        ...M7,
        ...N7
      ]
    },
    contains: [
      y,
      e.SHEBANG(),
      x,
      _,
      o,
      s,
      $,
      l,
      d,
      f,
      p2,
      n
    ]
  };
}
function python(e) {
  let t = e.regex, n = new RegExp("[\\p{XID_Start}_]\\p{XID_Continue}*", "u"), r = "and.as.assert.async.await.break.case.class.continue.def.del.elif.else.except.finally.for.from.global.if.import.in.is.lambda.match.nonlocal|10.not.or.pass.raise.return.try.while.with.yield".split("."), i = {
    $pattern: /[A-Za-z]\w+|__\w+__/,
    keyword: r,
    built_in: "__import__.abs.all.any.ascii.bin.bool.breakpoint.bytearray.bytes.callable.chr.classmethod.compile.complex.delattr.dict.dir.divmod.enumerate.eval.exec.filter.float.format.frozenset.getattr.globals.hasattr.hash.help.hex.id.input.int.isinstance.issubclass.iter.len.list.locals.map.max.memoryview.min.next.object.oct.open.ord.pow.print.property.range.repr.reversed.round.set.setattr.slice.sorted.staticmethod.str.sum.super.tuple.type.vars.zip".split("."),
    literal: [
      "__debug__",
      "Ellipsis",
      "False",
      "None",
      "NotImplemented",
      "True"
    ],
    type: [
      "Any",
      "Callable",
      "Coroutine",
      "Dict",
      "List",
      "Literal",
      "Generic",
      "Optional",
      "Sequence",
      "Set",
      "Tuple",
      "Type",
      "Union"
    ]
  }, o = {
    className: "meta",
    begin: /^(>>>|\.\.\.) /
  }, s = {
    className: "subst",
    begin: /\{/,
    end: /\}/,
    keywords: i,
    illegal: /#/
  }, l = {
    begin: /\{\{/,
    relevance: 0
  }, d = {
    className: "string",
    contains: [e.BACKSLASH_ESCAPE],
    variants: [
      {
        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/,
        end: /'''/,
        contains: [e.BACKSLASH_ESCAPE, o],
        relevance: 10
      },
      {
        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?"""/,
        end: /"""/,
        contains: [e.BACKSLASH_ESCAPE, o],
        relevance: 10
      },
      {
        begin: /([fF][rR]|[rR][fF]|[fF])'''/,
        end: /'''/,
        contains: [
          e.BACKSLASH_ESCAPE,
          o,
          l,
          s
        ]
      },
      {
        begin: /([fF][rR]|[rR][fF]|[fF])"""/,
        end: /"""/,
        contains: [
          e.BACKSLASH_ESCAPE,
          o,
          l,
          s
        ]
      },
      {
        begin: /([uU]|[rR])'/,
        end: /'/,
        relevance: 10
      },
      {
        begin: /([uU]|[rR])"/,
        end: /"/,
        relevance: 10
      },
      {
        begin: /([bB]|[bB][rR]|[rR][bB])'/,
        end: /'/
      },
      {
        begin: /([bB]|[bB][rR]|[rR][bB])"/,
        end: /"/
      },
      {
        begin: /([fF][rR]|[rR][fF]|[fF])'/,
        end: /'/,
        contains: [
          e.BACKSLASH_ESCAPE,
          l,
          s
        ]
      },
      {
        begin: /([fF][rR]|[rR][fF]|[fF])"/,
        end: /"/,
        contains: [
          e.BACKSLASH_ESCAPE,
          l,
          s
        ]
      },
      e.APOS_STRING_MODE,
      e.QUOTE_STRING_MODE
    ]
  }, f = "[0-9](_?[0-9])*", p2 = `(\\b(${f}))?\\.(${f})|\\b(${f})\\.`, _ = `\\b|${r.join("|")}`, y = {
    className: "number",
    relevance: 0,
    variants: [
      { begin: `(\\b(${f})|(${p2}))[eE][+-]?(${f})[jJ]?(?=${_})` },
      { begin: `(${p2})[jJ]?` },
      { begin: `\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?(?=${_})` },
      { begin: `\\b0[bB](_?[01])+[lL]?(?=${_})` },
      { begin: `\\b0[oO](_?[0-7])+[lL]?(?=${_})` },
      { begin: `\\b0[xX](_?[0-9a-fA-F])+[lL]?(?=${_})` },
      { begin: `\\b(${f})[jJ](?=${_})` }
    ]
  }, x = {
    className: "comment",
    begin: t.lookahead(/# type:/),
    end: /$/,
    keywords: i,
    contains: [{ begin: /# type:/ }, {
      begin: /#/,
      end: /\b\B/,
      endsWithParent: true
    }]
  }, w = {
    className: "params",
    variants: [{
      className: "",
      begin: /\(\s*\)/,
      skip: true
    }, {
      begin: /\(/,
      end: /\)/,
      excludeBegin: true,
      excludeEnd: true,
      keywords: i,
      contains: [
        "self",
        o,
        y,
        d,
        e.HASH_COMMENT_MODE
      ]
    }]
  };
  return s.contains = [
    d,
    y,
    o
  ], {
    name: "Python",
    aliases: [
      "py",
      "gyp",
      "ipython"
    ],
    unicodeRegex: true,
    keywords: i,
    illegal: /(<\/|\?)|=>/,
    contains: [
      o,
      y,
      {
        scope: "variable.language",
        match: /\bself\b/
      },
      {
        beginKeywords: "if",
        relevance: 0
      },
      {
        match: /\bor\b/,
        scope: "keyword"
      },
      d,
      x,
      e.HASH_COMMENT_MODE,
      {
        match: [
          /\bdef/,
          /\s+/,
          n
        ],
        scope: {
          1: "keyword",
          3: "title.function"
        },
        contains: [w]
      },
      {
        variants: [{ match: [
          /\bclass/,
          /\s+/,
          n,
          /\s*/,
          /\(\s*/,
          n,
          /\s*\)/
        ] }, { match: [
          /\bclass/,
          /\s+/,
          n
        ] }],
        scope: {
          1: "keyword",
          3: "title.class",
          6: "title.class.inherited"
        }
      },
      {
        className: "meta",
        begin: /^[\t ]*@/,
        end: /(?=#)|$/,
        contains: [
          y,
          w,
          d
        ]
      }
    ]
  };
}
var IDENT_RE = "[A-Za-z$_][0-9A-Za-z$_]*";
var KEYWORDS = "as.in.of.if.for.while.finally.var.new.function.do.return.void.else.break.catch.instanceof.with.throw.case.default.try.switch.continue.typeof.delete.let.yield.const.class.debugger.async.await.static.import.from.export.extends.using".split(".");
var LITERALS = [
  "true",
  "false",
  "null",
  "undefined",
  "NaN",
  "Infinity"
];
var TYPES = "Object.Function.Boolean.Symbol.Math.Date.Number.BigInt.String.RegExp.Array.Float32Array.Float64Array.Int8Array.Uint8Array.Uint8ClampedArray.Int16Array.Int32Array.Uint16Array.Uint32Array.BigInt64Array.BigUint64Array.Set.Map.WeakSet.WeakMap.ArrayBuffer.SharedArrayBuffer.Atomics.DataView.JSON.Promise.Generator.GeneratorFunction.AsyncFunction.Reflect.Proxy.Intl.WebAssembly".split(".");
var ERROR_TYPES = [
  "Error",
  "EvalError",
  "InternalError",
  "RangeError",
  "ReferenceError",
  "SyntaxError",
  "TypeError",
  "URIError"
];
var BUILT_IN_GLOBALS = [
  "setInterval",
  "setTimeout",
  "clearInterval",
  "clearTimeout",
  "require",
  "exports",
  "eval",
  "isFinite",
  "isNaN",
  "parseFloat",
  "parseInt",
  "decodeURI",
  "decodeURIComponent",
  "encodeURI",
  "encodeURIComponent",
  "escape",
  "unescape"
];
var BUILT_IN_VARIABLES = [
  "arguments",
  "this",
  "super",
  "console",
  "window",
  "document",
  "localStorage",
  "sessionStorage",
  "module",
  "global"
];
var BUILT_INS = [].concat(BUILT_IN_GLOBALS, TYPES, ERROR_TYPES);
function javascript$1(e) {
  let t = e.regex, n = (e2, { after: t2 }) => {
    let n2 = "</" + e2[0].slice(1);
    return e2.input.indexOf(n2, t2) !== -1;
  }, r = IDENT_RE, i = {
    begin: "<>",
    end: "</>"
  }, o = /<[A-Za-z0-9\\._:-]+\s*\/>/, s = {
    begin: /<[A-Za-z0-9\\._:-]+/,
    end: /\/[A-Za-z0-9\\._:-]+>|\/>/,
    isTrulyOpeningTag: (e2, t2) => {
      let r2 = e2[0].length + e2.index, i2 = e2.input[r2];
      if (i2 === "<" || i2 === ",") {
        t2.ignoreMatch();
        return;
      }
      i2 === ">" && (n(e2, { after: r2 }) || t2.ignoreMatch());
      let o3, s2 = e2.input.substring(r2);
      if (o3 = s2.match(/^\s*=/)) {
        t2.ignoreMatch();
        return;
      }
      if ((o3 = s2.match(/^\s+extends\s+/)) && o3.index === 0) {
        t2.ignoreMatch();
        return;
      }
    }
  }, l = {
    $pattern: IDENT_RE,
    keyword: KEYWORDS,
    literal: LITERALS,
    built_in: BUILT_INS,
    "variable.language": BUILT_IN_VARIABLES
  }, d = "[0-9](_?[0-9])*", f = `\\.(${d})`, p2 = "0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*", _ = {
    className: "number",
    variants: [
      { begin: `(\\b(${p2})((${f})|\\.)?|(${f}))[eE][+-]?(${d})\\b` },
      { begin: `\\b(${p2})\\b((${f})\\b|\\.)?|(${f})\\b` },
      { begin: "\\b(0|[1-9](_?[0-9])*)n\\b" },
      { begin: "\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\b" },
      { begin: "\\b0[bB][0-1](_?[0-1])*n?\\b" },
      { begin: "\\b0[oO][0-7](_?[0-7])*n?\\b" },
      { begin: "\\b0[0-7]+n?\\b" }
    ],
    relevance: 0
  }, y = {
    className: "subst",
    begin: "\\$\\{",
    end: "\\}",
    keywords: l,
    contains: []
  }, x = {
    begin: ".?html`",
    end: "",
    starts: {
      end: "`",
      returnEnd: false,
      contains: [e.BACKSLASH_ESCAPE, y],
      subLanguage: "xml"
    }
  }, w = {
    begin: ".?css`",
    end: "",
    starts: {
      end: "`",
      returnEnd: false,
      contains: [e.BACKSLASH_ESCAPE, y],
      subLanguage: "css"
    }
  }, k = {
    begin: ".?gql`",
    end: "",
    starts: {
      end: "`",
      returnEnd: false,
      contains: [e.BACKSLASH_ESCAPE, y],
      subLanguage: "graphql"
    }
  }, $ = {
    className: "string",
    begin: "`",
    end: "`",
    contains: [e.BACKSLASH_ESCAPE, y]
  }, A7 = {
    className: "comment",
    variants: [
      e.COMMENT(/\/\*\*(?!\/)/, "\\*/", {
        relevance: 0,
        contains: [{
          begin: "(?=@[A-Za-z]+)",
          relevance: 0,
          contains: [
            {
              className: "doctag",
              begin: "@[A-Za-z]+"
            },
            {
              className: "type",
              begin: "\\{",
              end: "\\}",
              excludeEnd: true,
              excludeBegin: true,
              relevance: 0
            },
            {
              className: "variable",
              begin: r + "(?=\\s*(-)|$)",
              endsParent: true,
              relevance: 0
            },
            {
              begin: /(?=[^\n])\s/,
              relevance: 0
            }
          ]
        }]
      }),
      e.C_BLOCK_COMMENT_MODE,
      e.C_LINE_COMMENT_MODE
    ]
  }, j7 = [
    e.APOS_STRING_MODE,
    e.QUOTE_STRING_MODE,
    x,
    w,
    k,
    $,
    { match: /\$\d+/ },
    _
  ];
  y.contains = j7.concat({
    begin: /\{/,
    end: /\}/,
    keywords: l,
    contains: ["self"].concat(j7)
  });
  let M7 = [].concat(A7, y.contains), N7 = M7.concat([{
    begin: /(\s*)\(/,
    end: /\)/,
    keywords: l,
    contains: ["self"].concat(M7)
  }]), P7 = {
    className: "params",
    begin: /(\s*)\(/,
    end: /\)/,
    excludeBegin: true,
    excludeEnd: true,
    keywords: l,
    contains: N7
  }, F7 = { variants: [{
    match: [
      /class/,
      /\s+/,
      r,
      /\s+/,
      /extends/,
      /\s+/,
      t.concat(r, "(", t.concat(/\./, r), ")*")
    ],
    scope: {
      1: "keyword",
      3: "title.class",
      5: "keyword",
      7: "title.class.inherited"
    }
  }, {
    match: [
      /class/,
      /\s+/,
      r
    ],
    scope: {
      1: "keyword",
      3: "title.class"
    }
  }] }, I7 = {
    relevance: 0,
    match: t.either(/\bJSON/, /\b[A-Z][a-z]+([A-Z][a-z]*|\d)*/, /\b[A-Z]{2,}([A-Z][a-z]+|\d)+([A-Z][a-z]*)*/, /\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\d)*([A-Z][a-z]*)*/),
    className: "title.class",
    keywords: { _: [...TYPES, ...ERROR_TYPES] }
  }, L7 = {
    label: "use_strict",
    className: "meta",
    relevance: 10,
    begin: /^\s*['"]use (strict|asm)['"]/
  }, R7 = {
    variants: [{ match: [
      /function/,
      /\s+/,
      r,
      /(?=\s*\()/
    ] }, { match: [/function/, /\s*(?=\()/] }],
    className: {
      1: "keyword",
      3: "title.function"
    },
    label: "func.def",
    contains: [P7],
    illegal: /%/
  }, z7 = {
    relevance: 0,
    match: /\b[A-Z][A-Z_0-9]+\b/,
    className: "variable.constant"
  };
  function B7(e2) {
    return t.concat("(?!", e2.join("|"), ")");
  }
  let V7 = {
    match: t.concat(/\b/, B7([
      ...BUILT_IN_GLOBALS,
      "super",
      "import"
    ].map((e2) => `${e2}\\s*\\(`)), r, t.lookahead(/\s*\(/)),
    className: "title.function",
    relevance: 0
  }, H7 = {
    begin: t.concat(/\./, t.lookahead(t.concat(r, /(?![0-9A-Za-z$_(])/))),
    end: r,
    excludeBegin: true,
    keywords: "prototype",
    className: "property",
    relevance: 0
  }, U7 = {
    match: [
      /get|set/,
      /\s+/,
      r,
      /(?=\()/
    ],
    className: {
      1: "keyword",
      3: "title.function"
    },
    contains: [{ begin: /\(\)/ }, P7]
  }, W7 = "(\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)|" + e.UNDERSCORE_IDENT_RE + ")\\s*=>", G7 = {
    match: [
      /const|var|let/,
      /\s+/,
      r,
      /\s*/,
      /=\s*/,
      /(async\s*)?/,
      t.lookahead(W7)
    ],
    keywords: "async",
    className: {
      1: "keyword",
      3: "title.function"
    },
    contains: [P7]
  };
  return {
    name: "JavaScript",
    aliases: [
      "js",
      "jsx",
      "mjs",
      "cjs"
    ],
    keywords: l,
    exports: {
      PARAMS_CONTAINS: N7,
      CLASS_REFERENCE: I7
    },
    illegal: /#(?![$_A-z])/,
    contains: [
      e.SHEBANG({
        label: "shebang",
        binary: "node",
        relevance: 5
      }),
      L7,
      e.APOS_STRING_MODE,
      e.QUOTE_STRING_MODE,
      x,
      w,
      k,
      $,
      A7,
      { match: /\$\d+/ },
      _,
      I7,
      {
        scope: "attr",
        match: r + t.lookahead(":"),
        relevance: 0
      },
      G7,
      {
        begin: "(" + e.RE_STARTERS_RE + "|\\b(case|return|throw)\\b)\\s*",
        keywords: "return throw case",
        relevance: 0,
        contains: [
          A7,
          e.REGEXP_MODE,
          {
            className: "function",
            begin: W7,
            returnBegin: true,
            end: "\\s*=>",
            contains: [{
              className: "params",
              variants: [
                {
                  begin: e.UNDERSCORE_IDENT_RE,
                  relevance: 0
                },
                {
                  className: null,
                  begin: /\(\s*\)/,
                  skip: true
                },
                {
                  begin: /(\s*)\(/,
                  end: /\)/,
                  excludeBegin: true,
                  excludeEnd: true,
                  keywords: l,
                  contains: N7
                }
              ]
            }]
          },
          {
            begin: /,/,
            relevance: 0
          },
          {
            match: /\s+/,
            relevance: 0
          },
          {
            variants: [
              {
                begin: i.begin,
                end: i.end
              },
              { match: o },
              {
                begin: s.begin,
                "on:begin": s.isTrulyOpeningTag,
                end: s.end
              }
            ],
            subLanguage: "xml",
            contains: [{
              begin: s.begin,
              end: s.end,
              skip: true,
              contains: ["self"]
            }]
          }
        ]
      },
      R7,
      { beginKeywords: "while if switch catch for" },
      {
        begin: "\\b(?!function)" + e.UNDERSCORE_IDENT_RE + "\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)\\s*\\{",
        returnBegin: true,
        label: "func.def",
        contains: [P7, e.inherit(e.TITLE_MODE, {
          begin: r,
          className: "title.function"
        })]
      },
      {
        match: /\.\.\./,
        relevance: 0
      },
      H7,
      {
        match: "\\$" + r,
        relevance: 0
      },
      {
        match: [/\bconstructor(?=\s*\()/],
        className: { 1: "title.function" },
        contains: [P7]
      },
      V7,
      z7,
      F7,
      U7,
      { match: /\$[(.]/ }
    ]
  };
}
function typescript(e) {
  let t = e.regex, n = javascript$1(e), r = IDENT_RE, i = [
    "any",
    "void",
    "number",
    "boolean",
    "string",
    "object",
    "never",
    "symbol",
    "bigint",
    "unknown"
  ], o = {
    begin: [
      /namespace/,
      /\s+/,
      e.IDENT_RE
    ],
    beginScope: {
      1: "keyword",
      3: "title.class"
    }
  }, s = {
    beginKeywords: "interface",
    end: /\{/,
    excludeEnd: true,
    keywords: {
      keyword: "interface extends",
      built_in: i
    },
    contains: [n.exports.CLASS_REFERENCE]
  }, l = {
    className: "meta",
    relevance: 10,
    begin: /^\s*['"]use strict['"]/
  }, d = {
    $pattern: IDENT_RE,
    keyword: KEYWORDS.concat([
      "type",
      "interface",
      "public",
      "private",
      "protected",
      "implements",
      "declare",
      "abstract",
      "readonly",
      "enum",
      "override",
      "satisfies"
    ]),
    literal: LITERALS,
    built_in: BUILT_INS.concat(i),
    "variable.language": BUILT_IN_VARIABLES
  }, f = {
    className: "meta",
    begin: "@" + r
  }, p2 = (e2, t2, n2) => {
    let r2 = e2.contains.findIndex((e3) => e3.label === t2);
    if (r2 === -1) throw Error("can not find mode to replace");
    e2.contains.splice(r2, 1, n2);
  };
  Object.assign(n.keywords, d), n.exports.PARAMS_CONTAINS.push(f);
  let _ = n.contains.find((e2) => e2.scope === "attr"), y = Object.assign({}, _, { match: t.concat(r, t.lookahead(/\s*\?:/)) });
  n.exports.PARAMS_CONTAINS.push([
    n.exports.CLASS_REFERENCE,
    _,
    y
  ]), n.contains = n.contains.concat([
    f,
    o,
    s,
    y
  ]), p2(n, "shebang", e.SHEBANG()), p2(n, "use_strict", l);
  let x = n.contains.find((e2) => e2.label === "func.def");
  return x.relevance = 0, Object.assign(n, {
    name: "TypeScript",
    aliases: [
      "ts",
      "tsx",
      "mts",
      "cts"
    ]
  }), n;
}
var import_markdown_it = __toESM(require_markdown_it());
var VueMarkdown_default = defineComponent({
  name: "VueMarkdown",
  props: {
    source: {
      type: String,
      required: true
    },
    options: {
      type: Object,
      required: false
    },
    plugins: {
      type: Array,
      required: false
    }
  },
  setup(e) {
    let t = ref(new import_markdown_it.default(e.options ?? {}));
    for (let n2 of e.plugins ?? []) t.value.use(n2);
    let n = computed2(() => t.value.render(e.source));
    return () => h("div", { innerHTML: n.value });
  }
});
var import_markdown_it_link_attributes = __toESM(require_markdown_it_link_attributes());
var _hoisted_1$5 = {
  key: 0,
  class: "chat-message-actions"
};
var _hoisted_2$3 = {
  key: 2,
  class: "chat-message-files"
};
var Message_default = defineComponent({
  __name: "Message",
  props: { message: {} },
  setup(e, { expose: t }) {
    let r = e;
    core_default.registerLanguage("javascript", javascript), core_default.registerLanguage("typescript", typescript), core_default.registerLanguage("python", python), core_default.registerLanguage("xml", xml), core_default.registerLanguage("bash", bash);
    let { message: i } = toRefs(r), { options: o } = useOptions(), s = ref(null), d = ref({}), y = computed2(() => i.value.text || "&lt;Empty response&gt;"), x = computed2(() => ({
      "chat-message-from-user": i.value.sender === "user",
      "chat-message-from-bot": i.value.sender === "bot",
      "chat-message-transparent": i.value.transparent === true
    })), w = (e2) => {
      e2.use(import_markdown_it_link_attributes.default, { attrs: {
        target: "_blank",
        rel: "noopener"
      } });
    }, k = () => {
      s.value?.scrollIntoView && s.value.scrollIntoView({ block: "start" });
    }, A7 = { highlight(e2, t2) {
      if (t2 && core_default.getLanguage(t2)) try {
        return core_default.highlight(e2, { language: t2 }).value;
      } catch {
      }
      return "";
    } }, j7 = { ...o?.messageComponents ?? {} };
    t({ scrollToView: k });
    let N7 = async (e2) => await new Promise((t2, n) => {
      let r2 = new FileReader();
      r2.onload = () => t2(r2.result), r2.onerror = n, r2.readAsDataURL(e2);
    });
    return onMounted(async () => {
      if (i.value.files) for (let e2 of i.value.files) try {
        let t2 = await N7(e2);
        d.value[e2.name] = t2;
      } catch (e3) {
        console.error("Error reading file:", e3);
      }
    }), (e2, t2) => (openBlock(), createElementBlock("div", {
      ref_key: "messageContainer",
      ref: s,
      class: normalizeClass(["chat-message", x.value])
    }, [e2.$slots.beforeMessage ? (openBlock(), createElementBlock("div", _hoisted_1$5, [renderSlot(e2.$slots, "beforeMessage", normalizeProps(guardReactiveProps({ message: unref(i) })))])) : createCommentVNode("", true), renderSlot(e2.$slots, "default", {}, () => [unref(i).type === "component" && j7[unref(i).key] ? (openBlock(), createBlock(resolveDynamicComponent(j7[unref(i).key]), normalizeProps(mergeProps({ key: 0 }, unref(i).arguments)), null, 16)) : (openBlock(), createBlock(unref(VueMarkdown_default), {
      key: 1,
      class: "chat-message-markdown",
      source: y.value,
      options: A7,
      plugins: [w]
    }, null, 8, ["source", "plugins"])), (unref(i).files ?? []).length > 0 ? (openBlock(), createElementBlock("div", _hoisted_2$3, [(openBlock(true), createElementBlock(Fragment, null, renderList(unref(i).files ?? [], (e3) => (openBlock(), createElementBlock("div", {
      key: e3.name,
      class: "chat-message-file"
    }, [createVNode(ChatFile_default, {
      file: e3,
      "is-removable": false,
      "is-previewable": true
    }, null, 8, ["file"])]))), 128))])) : createCommentVNode("", true)])], 2));
  }
});
var _hoisted_1$4 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render$1(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$4, t[0] ||= [createBaseVNode("path", {
    fill: "currentColor",
    d: "M12 3c5.5 0 10 3.58 10 8s-4.5 8-10 8c-1.24 0-2.43-.18-3.53-.5C5.55 21 2 21 2 21c2.33-2.33 2.7-3.9 2.75-4.5C3.05 15.07 2 13.13 2 11c0-4.42 4.5-8 10-8"
  }, null, -1)]);
}
var chat_default = {
  name: "mdi-chat",
  render: render$1
};
var _hoisted_1$3 = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
};
function render2(e, t) {
  return openBlock(), createElementBlock("svg", _hoisted_1$3, t[0] ||= [createBaseVNode("path", {
    fill: "currentColor",
    d: "M7.41 8.58L12 13.17l4.59-4.59L18 10l-6 6l-6-6z"
  }, null, -1)]);
}
var chevron_down_default = {
  name: "mdi-chevron-down",
  render: render2
};
var _hoisted_1$2 = { class: "chat-window-wrapper" };
var _hoisted_2$2 = { class: "chat-window" };
var ChatWindow_default = defineComponent({
  __name: "ChatWindow",
  setup(e) {
    let t = ref(false);
    function n() {
      t.value = !t.value, t.value && nextTick(() => {
        chatEventBus.emit("scrollToBottom");
      });
    }
    return (e2, r) => (openBlock(), createElementBlock("div", _hoisted_1$2, [createVNode(Transition, { name: "chat-window-transition" }, {
      default: withCtx(() => [withDirectives(createBaseVNode("div", _hoisted_2$2, [createVNode(Chat_default)], 512), [[vShow, t.value]])]),
      _: 1
    }), createBaseVNode("div", {
      class: "chat-window-toggle",
      onClick: n
    }, [createVNode(Transition, {
      name: "chat-window-toggle-transition",
      mode: "out-in"
    }, {
      default: withCtx(() => [t.value ? (openBlock(), createBlock(unref(chevron_down_default), {
        key: 1,
        height: "32",
        width: "32"
      })) : (openBlock(), createBlock(unref(chat_default), {
        key: 0,
        height: "32",
        width: "32"
      }))]),
      _: 1
    })])]));
  }
});
var MessageTyping_default = defineComponent({
  __name: "MessageTyping",
  props: { animation: { default: "bouncing" } },
  setup(e) {
    let t = e, n = {
      id: "typing",
      text: "",
      sender: "bot"
    }, r = ref(), i = computed2(() => ({
      "chat-message-typing": true,
      [`chat-message-typing-animation-${t.animation}`]: true
    }));
    return onMounted(() => {
      r.value?.scrollToView();
    }), (e2, t2) => (openBlock(), createBlock(unref(Message_default), {
      ref_key: "messageContainer",
      ref: r,
      class: normalizeClass(i.value),
      message: n,
      "data-test-id": "chat-message-typing"
    }, {
      default: withCtx(() => t2[0] ||= [createBaseVNode("div", { class: "chat-message-typing-body" }, [
        createBaseVNode("span", { class: "chat-message-typing-circle" }),
        createBaseVNode("span", { class: "chat-message-typing-circle" }),
        createBaseVNode("span", { class: "chat-message-typing-circle" })
      ], -1)]),
      _: 1
    }, 8, ["class"]));
  }
});
var _hoisted_1$1 = {
  key: 0,
  class: "empty-container"
};
var _hoisted_2$1 = {
  class: "empty",
  "data-test-id": "chat-messages-empty"
};
var _hoisted_3$1 = {
  key: 1,
  class: "chat-messages-list"
};
var MessagesList_default = defineComponent({
  __name: "MessagesList",
  props: {
    messages: {},
    emptyText: {}
  },
  setup(e) {
    let t = useChat(), r = ref([]), { initialMessages: i, waitingForResponse: o } = t;
    return watch2(() => r.value.length, () => {
      let e2 = r.value[r.value.length - 1];
      e2 && e2.scrollToView();
    }), (e2, t2) => e2.emptyText && unref(i).length === 0 && e2.messages.length === 0 ? (openBlock(), createElementBlock("div", _hoisted_1$1, [createBaseVNode("div", _hoisted_2$1, [createVNode(unref(N8nIcon_default), {
      icon: "message-circle",
      size: "large",
      class: "emptyIcon"
    }), createVNode(unref(N8nText_default), {
      tag: "p",
      size: "medium",
      color: "text-base"
    }, {
      default: withCtx(() => [createTextVNode(toDisplayString(e2.emptyText), 1)]),
      _: 1
    })])])) : (openBlock(), createElementBlock("div", _hoisted_3$1, [
      (openBlock(true), createElementBlock(Fragment, null, renderList(unref(i), (e3) => (openBlock(), createBlock(Message_default, {
        key: e3.id,
        message: e3
      }, null, 8, ["message"]))), 128)),
      (openBlock(true), createElementBlock(Fragment, null, renderList(e2.messages, (t3) => (openBlock(), createBlock(Message_default, {
        key: t3.id,
        ref_for: true,
        ref_key: "messageComponents",
        ref: r,
        message: t3
      }, {
        beforeMessage: withCtx(({ message: t4 }) => [renderSlot(e2.$slots, "beforeMessage", mergeProps({ ref_for: true }, { message: t4 }))]),
        _: 2
      }, 1032, ["message"]))), 128)),
      unref(o) ? (openBlock(), createBlock(MessageTyping_default, { key: 0 })) : createCommentVNode("", true)
    ]));
  }
});
var _hoisted_1 = { class: "chat-heading" };
var _hoisted_2 = ["title"];
var _hoisted_3 = { key: 0 };
var Chat_default = defineComponent({
  __name: "Chat",
  setup(e) {
    let { t } = useI18n(), n = useChat(), { messages: r, currentSessionId: i } = n, { options: o } = useOptions(), s = computed2(() => o.mode === "window" && o.showWindowCloseButton);
    async function d() {
      n.startNewSession && (n.startNewSession(), nextTick(() => {
        chatEventBus.emit("scrollToBottom");
      }));
    }
    async function x() {
      n.loadPreviousSession && (await n.loadPreviousSession(), nextTick(() => {
        chatEventBus.emit("scrollToBottom");
      }));
    }
    function w() {
      chatEventBus.emit("close");
    }
    return onMounted(async () => {
      await x(), !o.showWelcomeScreen && !i.value && await d();
    }), (e2, n2) => (openBlock(), createBlock(Layout_default, { class: "chat-wrapper" }, {
      header: withCtx(() => [createBaseVNode("div", _hoisted_1, [createBaseVNode("h1", null, toDisplayString(unref(t)("title")), 1), s.value ? (openBlock(), createElementBlock("button", {
        key: 0,
        class: "chat-close-button",
        title: unref(t)("closeButtonTooltip"),
        onClick: w
      }, [createVNode(unref(close_default), {
        height: "18",
        width: "18"
      })], 8, _hoisted_2)) : createCommentVNode("", true)]), unref(t)("subtitle") ? (openBlock(), createElementBlock("p", _hoisted_3, toDisplayString(unref(t)("subtitle")), 1)) : createCommentVNode("", true)]),
      footer: withCtx(() => [unref(i) ? (openBlock(), createBlock(Input_default, { key: 0 })) : (openBlock(), createBlock(GetStartedFooter_default, { key: 1 }))]),
      default: withCtx(() => [!unref(i) && unref(o).showWelcomeScreen ? (openBlock(), createBlock(GetStarted_default, {
        key: 0,
        "onClick:button": d
      })) : (openBlock(), createBlock(MessagesList_default, {
        key: 1,
        messages: unref(r)
      }, null, 8, ["messages"]))]),
      _: 1
    }));
  }
});
var App_default = defineComponent({
  __name: "App",
  props: {},
  setup(e) {
    let { options: t } = useOptions(), n = computed2(() => t.mode === "fullscreen");
    return onMounted(() => {
      core_default.registerLanguage("xml", xml), core_default.registerLanguage("javascript", javascript);
    }), (e2, t2) => n.value ? (openBlock(), createBlock(Chat_default, {
      key: 0,
      class: "n8n-chat"
    })) : (openBlock(), createBlock(ChatWindow_default, {
      key: 1,
      class: "n8n-chat"
    }));
  }
});
function createChat(e) {
  let t = {
    ...defaultOptions,
    ...e,
    webhookConfig: {
      ...defaultOptions.webhookConfig,
      ...e?.webhookConfig
    },
    i18n: {
      ...defaultOptions.i18n,
      ...e?.i18n,
      en: {
        ...defaultOptions.i18n?.en,
        ...e?.i18n?.en
      }
    },
    theme: {
      ...defaultOptions.theme,
      ...e?.theme
    }
  }, n = t.target ?? "#n8n-chat";
  typeof n == "string" && createDefaultMountingTarget(n);
  let r = createApp(App_default);
  return r.use(ChatPlugin, t), r.mount(n), r;
}
export {
  createChat
};
/*! Bundled license information:

@vue/shared/dist/shared.esm-bundler.js:
  (**
  * @vue/shared v3.5.22
  * (c) 2018-present Yuxi (Evan) You and Vue contributors
  * @license MIT
  **)

@vue/reactivity/dist/reactivity.esm-bundler.js:
  (**
  * @vue/reactivity v3.5.22
  * (c) 2018-present Yuxi (Evan) You and Vue contributors
  * @license MIT
  **)

@vue/runtime-core/dist/runtime-core.esm-bundler.js:
  (**
  * @vue/runtime-core v3.5.22
  * (c) 2018-present Yuxi (Evan) You and Vue contributors
  * @license MIT
  **)

@vue/runtime-dom/dist/runtime-dom.esm-bundler.js:
  (**
  * @vue/runtime-dom v3.5.22
  * (c) 2018-present Yuxi (Evan) You and Vue contributors
  * @license MIT
  **)

vue/dist/vue.runtime.esm-bundler.js:
  (**
  * vue v3.5.22
  * (c) 2018-present Yuxi (Evan) You and Vue contributors
  * @license MIT
  **)

@n8n/chat/dist/chat.es.js:
  (*! Package version @n8n/chat@0.62.0 *)
*/
//# sourceMappingURL=@n8n_chat.js.map
